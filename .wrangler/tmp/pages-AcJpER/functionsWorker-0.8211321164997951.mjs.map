{
  "version": 3,
  "sources": ["../bundle-J26DRA/strip-cf-connecting-ip-header.js", "../../../node_modules/@libsql/core/lib-esm/api.js", "../../../node_modules/@libsql/core/lib-esm/uri.js", "../../../node_modules/js-base64/base64.mjs", "../../../node_modules/@libsql/core/lib-esm/util.js", "../../../node_modules/@libsql/core/lib-esm/config.js", "../../../node_modules/@libsql/isomorphic-ws/web.mjs", "../../../node_modules/@libsql/hrana-client/lib-esm/client.js", "../../../node_modules/@libsql/hrana-client/lib-esm/errors.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/json/decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/json/encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/util.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/encoding/index.js", "../../../node_modules/@libsql/hrana-client/lib-esm/id_alloc.js", "../../../node_modules/@libsql/hrana-client/lib-esm/util.js", "../../../node_modules/@libsql/hrana-client/lib-esm/value.js", "../../../node_modules/@libsql/hrana-client/lib-esm/result.js", "../../../node_modules/@libsql/hrana-client/lib-esm/sql.js", "../../../node_modules/@libsql/hrana-client/lib-esm/queue.js", "../../../node_modules/@libsql/hrana-client/lib-esm/stmt.js", "../../../node_modules/@libsql/hrana-client/lib-esm/batch.js", "../../../node_modules/@libsql/hrana-client/lib-esm/describe.js", "../../../node_modules/@libsql/hrana-client/lib-esm/stream.js", "../../../node_modules/@libsql/hrana-client/lib-esm/cursor.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/cursor.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/stream.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/json_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/json_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/json_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/json_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/ws/client.js", "../../../node_modules/@libsql/isomorphic-fetch/web.js", "../../../node_modules/@libsql/hrana-client/lib-esm/queue_microtask.js", "../../../node_modules/@libsql/hrana-client/lib-esm/byte_queue.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/json_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/protobuf_decode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/cursor.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/json_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/protobuf_encode.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/stream.js", "../../../node_modules/@libsql/hrana-client/lib-esm/http/client.js", "../../../node_modules/@libsql/hrana-client/lib-esm/libsql_url.js", "../../../node_modules/@libsql/hrana-client/lib-esm/index.js", "../../../node_modules/@libsql/client/lib-esm/hrana.js", "../../../node_modules/@libsql/client/lib-esm/sql_cache.js", "../../../node_modules/promise-limit/index.js", "../../../node_modules/@libsql/client/lib-esm/ws.js", "../../../node_modules/@libsql/client/lib-esm/http.js", "../../../node_modules/@libsql/client/lib-esm/web.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/core/lib-esm/api.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/core/lib-esm/uri.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/core/lib-esm/util.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/core/lib-esm/config.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/client.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/errors.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/encoding/json/decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/encoding/json/encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/util.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/encoding/protobuf/encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/encoding/index.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/id_alloc.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/util.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/value.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/result.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/sql.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/queue.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/stmt.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/batch.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/describe.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/stream.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/cursor.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/cursor.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/stream.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/shared/json_encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/json_encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/shared/json_decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/json_decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/shared/protobuf_decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/protobuf_decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/ws/client.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/node_modules/@libsql/isomorphic-fetch/web.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/queue_microtask.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/byte_queue.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/json_decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/protobuf_decode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/cursor.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/json_encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/protobuf_encode.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/stream.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/http/client.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/libsql_url.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/node_modules/@libsql/hrana-client/lib-esm/index.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/lib-esm/hrana.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/lib-esm/sql_cache.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/lib-esm/ws.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/lib-esm/http.js", "../../../node_modules/@libsql/kysely-libsql/node_modules/@libsql/client/lib-esm/web.js", "../../../node_modules/kysely/dist/esm/util/object-utils.js", "../../../node_modules/kysely/dist/esm/operation-node/alter-table-node.js", "../../../node_modules/kysely/dist/esm/operation-node/identifier-node.js", "../../../node_modules/kysely/dist/esm/operation-node/create-index-node.js", "../../../node_modules/kysely/dist/esm/operation-node/create-schema-node.js", "../../../node_modules/kysely/dist/esm/operation-node/create-table-node.js", "../../../node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-index-node.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-schema-node.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-table-node.js", "../../../node_modules/kysely/dist/esm/operation-node/alias-node.js", "../../../node_modules/kysely/dist/esm/operation-node/table-node.js", "../../../node_modules/kysely/dist/esm/operation-node/operation-node-source.js", "../../../node_modules/kysely/dist/esm/expression/expression.js", "../../../node_modules/kysely/dist/esm/operation-node/select-modifier-node.js", "../../../node_modules/kysely/dist/esm/operation-node/and-node.js", "../../../node_modules/kysely/dist/esm/operation-node/or-node.js", "../../../node_modules/kysely/dist/esm/operation-node/on-node.js", "../../../node_modules/kysely/dist/esm/operation-node/join-node.js", "../../../node_modules/kysely/dist/esm/operation-node/binary-operation-node.js", "../../../node_modules/kysely/dist/esm/operation-node/operator-node.js", "../../../node_modules/kysely/dist/esm/operation-node/column-node.js", "../../../node_modules/kysely/dist/esm/operation-node/select-all-node.js", "../../../node_modules/kysely/dist/esm/operation-node/reference-node.js", "../../../node_modules/kysely/dist/esm/dynamic/dynamic-reference-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/order-by-item-node.js", "../../../node_modules/kysely/dist/esm/operation-node/raw-node.js", "../../../node_modules/kysely/dist/esm/operation-node/collate-node.js", "../../../node_modules/kysely/dist/esm/query-builder/order-by-item-builder.js", "../../../node_modules/kysely/dist/esm/util/log-once.js", "../../../node_modules/kysely/dist/esm/parser/order-by-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/json-reference-node.js", "../../../node_modules/kysely/dist/esm/operation-node/json-operator-chain-node.js", "../../../node_modules/kysely/dist/esm/operation-node/json-path-node.js", "../../../node_modules/kysely/dist/esm/parser/reference-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/primitive-value-list-node.js", "../../../node_modules/kysely/dist/esm/operation-node/value-list-node.js", "../../../node_modules/kysely/dist/esm/operation-node/value-node.js", "../../../node_modules/kysely/dist/esm/parser/value-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/parens-node.js", "../../../node_modules/kysely/dist/esm/parser/binary-operation-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/order-by-node.js", "../../../node_modules/kysely/dist/esm/operation-node/partition-by-node.js", "../../../node_modules/kysely/dist/esm/operation-node/over-node.js", "../../../node_modules/kysely/dist/esm/operation-node/from-node.js", "../../../node_modules/kysely/dist/esm/operation-node/group-by-node.js", "../../../node_modules/kysely/dist/esm/operation-node/having-node.js", "../../../node_modules/kysely/dist/esm/operation-node/insert-query-node.js", "../../../node_modules/kysely/dist/esm/operation-node/list-node.js", "../../../node_modules/kysely/dist/esm/operation-node/update-query-node.js", "../../../node_modules/kysely/dist/esm/operation-node/using-node.js", "../../../node_modules/kysely/dist/esm/operation-node/delete-query-node.js", "../../../node_modules/kysely/dist/esm/operation-node/where-node.js", "../../../node_modules/kysely/dist/esm/operation-node/returning-node.js", "../../../node_modules/kysely/dist/esm/operation-node/explain-node.js", "../../../node_modules/kysely/dist/esm/operation-node/when-node.js", "../../../node_modules/kysely/dist/esm/operation-node/merge-query-node.js", "../../../node_modules/kysely/dist/esm/operation-node/output-node.js", "../../../node_modules/kysely/dist/esm/operation-node/query-node.js", "../../../node_modules/kysely/dist/esm/operation-node/select-query-node.js", "../../../node_modules/kysely/dist/esm/query-builder/join-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/partition-by-item-node.js", "../../../node_modules/kysely/dist/esm/parser/partition-by-parser.js", "../../../node_modules/kysely/dist/esm/query-builder/over-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/selection-node.js", "../../../node_modules/kysely/dist/esm/parser/select-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/values-node.js", "../../../node_modules/kysely/dist/esm/operation-node/default-insert-value-node.js", "../../../node_modules/kysely/dist/esm/parser/insert-values-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/column-update-node.js", "../../../node_modules/kysely/dist/esm/parser/update-set-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/on-duplicate-key-node.js", "../../../node_modules/kysely/dist/esm/query-builder/insert-result.js", "../../../node_modules/kysely/dist/esm/query-builder/no-result-error.js", "../../../node_modules/kysely/dist/esm/operation-node/on-conflict-node.js", "../../../node_modules/kysely/dist/esm/query-builder/on-conflict-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/top-node.js", "../../../node_modules/kysely/dist/esm/parser/top-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/or-action-node.js", "../../../node_modules/kysely/dist/esm/query-builder/insert-query-builder.js", "../../../node_modules/kysely/dist/esm/query-builder/delete-result.js", "../../../node_modules/kysely/dist/esm/operation-node/limit-node.js", "../../../node_modules/kysely/dist/esm/query-builder/delete-query-builder.js", "../../../node_modules/kysely/dist/esm/query-builder/update-result.js", "../../../node_modules/kysely/dist/esm/query-builder/update-query-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/common-table-expression-name-node.js", "../../../node_modules/kysely/dist/esm/operation-node/common-table-expression-node.js", "../../../node_modules/kysely/dist/esm/query-builder/cte-builder.js", "../../../node_modules/kysely/dist/esm/parser/with-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/with-node.js", "../../../node_modules/kysely/dist/esm/util/random-string.js", "../../../node_modules/kysely/dist/esm/util/query-id.js", "../../../node_modules/kysely/dist/esm/util/require-all-props.js", "../../../node_modules/kysely/dist/esm/operation-node/operation-node-transformer.js", "../../../node_modules/kysely/dist/esm/plugin/with-schema/with-schema-transformer.js", "../../../node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js", "../../../node_modules/kysely/dist/esm/operation-node/matched-node.js", "../../../node_modules/kysely/dist/esm/parser/merge-parser.js", "../../../node_modules/kysely/dist/esm/util/deferred.js", "../../../node_modules/kysely/dist/esm/util/provide-controlled-connection.js", "../../../node_modules/kysely/dist/esm/query-executor/query-executor-base.js", "../../../node_modules/kysely/dist/esm/query-executor/noop-query-executor.js", "../../../node_modules/kysely/dist/esm/query-builder/merge-result.js", "../../../node_modules/kysely/dist/esm/query-builder/merge-query-builder.js", "../../../node_modules/kysely/dist/esm/query-creator.js", "../../../node_modules/kysely/dist/esm/parser/parse-utils.js", "../../../node_modules/kysely/dist/esm/parser/join-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/offset-node.js", "../../../node_modules/kysely/dist/esm/operation-node/group-by-item-node.js", "../../../node_modules/kysely/dist/esm/parser/group-by-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/set-operation-node.js", "../../../node_modules/kysely/dist/esm/parser/set-operation-parser.js", "../../../node_modules/kysely/dist/esm/expression/expression-wrapper.js", "../../../node_modules/kysely/dist/esm/operation-node/fetch-node.js", "../../../node_modules/kysely/dist/esm/parser/fetch-parser.js", "../../../node_modules/kysely/dist/esm/query-builder/select-query-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/aggregate-function-node.js", "../../../node_modules/kysely/dist/esm/operation-node/function-node.js", "../../../node_modules/kysely/dist/esm/query-builder/aggregate-function-builder.js", "../../../node_modules/kysely/dist/esm/query-builder/function-module.js", "../../../node_modules/kysely/dist/esm/operation-node/unary-operation-node.js", "../../../node_modules/kysely/dist/esm/parser/unary-operation-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/case-node.js", "../../../node_modules/kysely/dist/esm/query-builder/case-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/json-path-leg-node.js", "../../../node_modules/kysely/dist/esm/query-builder/json-path-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/tuple-node.js", "../../../node_modules/kysely/dist/esm/operation-node/data-type-node.js", "../../../node_modules/kysely/dist/esm/parser/data-type-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/cast-node.js", "../../../node_modules/kysely/dist/esm/expression/expression-builder.js", "../../../node_modules/kysely/dist/esm/parser/expression-parser.js", "../../../node_modules/kysely/dist/esm/dynamic/dynamic-table-builder.js", "../../../node_modules/kysely/dist/esm/parser/table-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/add-column-node.js", "../../../node_modules/kysely/dist/esm/operation-node/column-definition-node.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-column-node.js", "../../../node_modules/kysely/dist/esm/operation-node/rename-column-node.js", "../../../node_modules/kysely/dist/esm/operation-node/check-constraint-node.js", "../../../node_modules/kysely/dist/esm/operation-node/references-node.js", "../../../node_modules/kysely/dist/esm/parser/default-value-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/generated-node.js", "../../../node_modules/kysely/dist/esm/operation-node/default-value-node.js", "../../../node_modules/kysely/dist/esm/parser/on-modify-action-parser.js", "../../../node_modules/kysely/dist/esm/schema/column-definition-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/modify-column-node.js", "../../../node_modules/kysely/dist/esm/operation-node/foreign-key-constraint-node.js", "../../../node_modules/kysely/dist/esm/schema/foreign-key-constraint-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/add-constraint-node.js", "../../../node_modules/kysely/dist/esm/operation-node/unique-constraint-node.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-constraint-node.js", "../../../node_modules/kysely/dist/esm/operation-node/alter-column-node.js", "../../../node_modules/kysely/dist/esm/schema/alter-column-builder.js", "../../../node_modules/kysely/dist/esm/schema/alter-table-executor.js", "../../../node_modules/kysely/dist/esm/schema/alter-table-add-foreign-key-constraint-builder.js", "../../../node_modules/kysely/dist/esm/schema/alter-table-drop-constraint-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/primary-key-constraint-node.js", "../../../node_modules/kysely/dist/esm/operation-node/add-index-node.js", "../../../node_modules/kysely/dist/esm/schema/alter-table-add-index-builder.js", "../../../node_modules/kysely/dist/esm/schema/unique-constraint-builder.js", "../../../node_modules/kysely/dist/esm/schema/primary-key-constraint-builder.js", "../../../node_modules/kysely/dist/esm/schema/check-constraint-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/rename-constraint-node.js", "../../../node_modules/kysely/dist/esm/schema/alter-table-builder.js", "../../../node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-transformer.js", "../../../node_modules/kysely/dist/esm/schema/create-index-builder.js", "../../../node_modules/kysely/dist/esm/schema/create-schema-builder.js", "../../../node_modules/kysely/dist/esm/parser/on-commit-action-parse.js", "../../../node_modules/kysely/dist/esm/schema/create-table-builder.js", "../../../node_modules/kysely/dist/esm/schema/drop-index-builder.js", "../../../node_modules/kysely/dist/esm/schema/drop-schema-builder.js", "../../../node_modules/kysely/dist/esm/schema/drop-table-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/create-view-node.js", "../../../node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-plugin.js", "../../../node_modules/kysely/dist/esm/schema/create-view-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-view-node.js", "../../../node_modules/kysely/dist/esm/schema/drop-view-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/create-type-node.js", "../../../node_modules/kysely/dist/esm/schema/create-type-builder.js", "../../../node_modules/kysely/dist/esm/operation-node/drop-type-node.js", "../../../node_modules/kysely/dist/esm/schema/drop-type-builder.js", "../../../node_modules/kysely/dist/esm/parser/identifier-parser.js", "../../../node_modules/kysely/dist/esm/operation-node/refresh-materialized-view-node.js", "../../../node_modules/kysely/dist/esm/schema/refresh-materialized-view-builder.js", "../../../node_modules/kysely/dist/esm/schema/schema.js", "../../../node_modules/kysely/dist/esm/dynamic/dynamic.js", "../../../node_modules/kysely/dist/esm/driver/default-connection-provider.js", "../../../node_modules/kysely/dist/esm/query-executor/default-query-executor.js", "../../../node_modules/kysely/dist/esm/util/performance-now.js", "../../../node_modules/kysely/dist/esm/driver/runtime-driver.js", "../../../node_modules/kysely/dist/esm/driver/single-connection-provider.js", "../../../node_modules/kysely/dist/esm/driver/driver.js", "../../../node_modules/kysely/dist/esm/util/log.js", "../../../node_modules/kysely/dist/esm/util/compilable.js", "../../../node_modules/kysely/dist/esm/kysely.js", "../../../node_modules/kysely/dist/esm/query-builder/where-interface.js", "../../../node_modules/kysely/dist/esm/query-builder/returning-interface.js", "../../../node_modules/kysely/dist/esm/query-builder/output-interface.js", "../../../node_modules/kysely/dist/esm/query-builder/having-interface.js", "../../../node_modules/kysely/dist/esm/query-builder/order-by-interface.js", "../../../node_modules/kysely/dist/esm/raw-builder/raw-builder.js", "../../../node_modules/kysely/dist/esm/raw-builder/sql.js", "../../../node_modules/kysely/dist/esm/query-executor/query-executor.js", "../../../node_modules/kysely/dist/esm/query-executor/query-executor-provider.js", "../../../node_modules/kysely/dist/esm/operation-node/operation-node-visitor.js", "../../../node_modules/kysely/dist/esm/query-compiler/default-query-compiler.js", "../../../node_modules/kysely/dist/esm/query-compiler/compiled-query.js", "../../../node_modules/kysely/dist/esm/driver/database-connection.js", "../../../node_modules/kysely/dist/esm/driver/connection-provider.js", "../../../node_modules/kysely/dist/esm/driver/dummy-driver.js", "../../../node_modules/kysely/dist/esm/dialect/dialect.js", "../../../node_modules/kysely/dist/esm/dialect/dialect-adapter.js", "../../../node_modules/kysely/dist/esm/dialect/dialect-adapter-base.js", "../../../node_modules/kysely/dist/esm/dialect/database-introspector.js", "../../../node_modules/kysely/dist/esm/parser/savepoint-parser.js", "../../../node_modules/kysely/dist/esm/dialect/sqlite/sqlite-driver.js", "../../../node_modules/kysely/dist/esm/dialect/sqlite/sqlite-query-compiler.js", "../../../node_modules/kysely/dist/esm/migration/migrator.js", "../../../node_modules/kysely/dist/esm/dialect/sqlite/sqlite-introspector.js", "../../../node_modules/kysely/dist/esm/dialect/sqlite/sqlite-adapter.js", "../../../node_modules/kysely/dist/esm/dialect/sqlite/sqlite-dialect.js", "../../../node_modules/kysely/dist/esm/dialect/sqlite/sqlite-dialect-config.js", "../../../node_modules/kysely/dist/esm/dialect/postgres/postgres-query-compiler.js", "../../../node_modules/kysely/dist/esm/dialect/postgres/postgres-introspector.js", "../../../node_modules/kysely/dist/esm/dialect/postgres/postgres-adapter.js", "../../../node_modules/kysely/dist/esm/util/stack-trace-utils.js", "../../../node_modules/kysely/dist/esm/dialect/mysql/mysql-driver.js", "../../../node_modules/kysely/dist/esm/dialect/mysql/mysql-query-compiler.js", "../../../node_modules/kysely/dist/esm/dialect/mysql/mysql-introspector.js", "../../../node_modules/kysely/dist/esm/dialect/mysql/mysql-adapter.js", "../../../node_modules/kysely/dist/esm/dialect/mysql/mysql-dialect.js", "../../../node_modules/kysely/dist/esm/dialect/mysql/mysql-dialect-config.js", "../../../node_modules/kysely/dist/esm/dialect/postgres/postgres-driver.js", "../../../node_modules/kysely/dist/esm/dialect/postgres/postgres-dialect-config.js", "../../../node_modules/kysely/dist/esm/dialect/postgres/postgres-dialect.js", "../../../node_modules/kysely/dist/esm/dialect/mssql/mssql-adapter.js", "../../../node_modules/kysely/dist/esm/dialect/mssql/mssql-dialect-config.js", "../../../node_modules/kysely/dist/esm/dialect/mssql/mssql-driver.js", "../../../node_modules/kysely/dist/esm/dialect/mssql/mssql-introspector.js", "../../../node_modules/kysely/dist/esm/dialect/mssql/mssql-query-compiler.js", "../../../node_modules/kysely/dist/esm/dialect/mssql/mssql-dialect.js", "../../../node_modules/kysely/dist/esm/query-compiler/query-compiler.js", "../../../node_modules/kysely/dist/esm/migration/file-migration-provider.js", "../../../node_modules/kysely/dist/esm/plugin/kysely-plugin.js", "../../../node_modules/kysely/dist/esm/plugin/camel-case/camel-case-plugin.js", "../../../node_modules/kysely/dist/esm/plugin/deduplicate-joins/deduplicate-joins-plugin.js", "../../../node_modules/kysely/dist/esm/plugin/parse-json-results/parse-json-results-plugin.js", "../../../node_modules/kysely/dist/esm/plugin/handle-empty-in-lists/handle-empty-in-lists-plugin.js", "../../../node_modules/kysely/dist/esm/plugin/handle-empty-in-lists/handle-empty-in-lists.js", "../../../node_modules/kysely/dist/esm/operation-node/constraint-node.js", "../../../node_modules/kysely/dist/esm/operation-node/operation-node.js", "../../../node_modules/kysely/dist/esm/operation-node/simple-reference-expression-node.js", "../../../node_modules/kysely/dist/esm/util/column-type.js", "../../../node_modules/kysely/dist/esm/util/explainable.js", "../../../node_modules/kysely/dist/esm/util/streamable.js", "../../../node_modules/kysely/dist/esm/util/infer-result.js", "../../../node_modules/kysely/dist/esm/index.js", "../../../node_modules/@libsql/kysely-libsql/lib-esm/index.js", "../../../node_modules/uncrypto/dist/crypto.web.mjs", "../../../node_modules/rou3/dist/index.mjs", "../../../node_modules/better-call/src/error.ts", "../../../node_modules/better-call/src/utils.ts", "../../../node_modules/better-call/src/to-response.ts", "../../../node_modules/better-call/src/validator.ts", "../../../node_modules/better-call/src/crypto.ts", "../../../node_modules/better-call/src/cookies.ts", "../../../node_modules/better-call/src/context.ts", "../../../node_modules/better-call/src/middleware.ts", "../../../node_modules/better-call/src/endpoint.ts", "../../../node_modules/better-call/src/router.ts", "../../../node_modules/better-call/node_modules/.pnpm/zod@3.24.1/node_modules/zod/lib/index.mjs", "../../../node_modules/better-call/src/openapi.ts", "../../../node_modules/zod/dist/esm/v3/helpers/util.js", "../../../node_modules/zod/dist/esm/v3/ZodError.js", "../../../node_modules/zod/dist/esm/v3/locales/en.js", "../../../node_modules/zod/dist/esm/v3/errors.js", "../../../node_modules/zod/dist/esm/v3/helpers/parseUtil.js", "../../../node_modules/zod/dist/esm/v3/helpers/typeAliases.js", "../../../node_modules/zod/dist/esm/v3/helpers/errorUtil.js", "../../../node_modules/zod/dist/esm/v3/types.js", "../../../node_modules/zod/dist/esm/v3/external.js", "../../../node_modules/zod/dist/esm/v3/index.js", "../../../node_modules/zod/dist/esm/index.js", "../../../node_modules/better-auth/dist/shared/better-auth.DdzSJf-n.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.CW6D9eSx.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.8zoxzg-F.mjs", "../../../node_modules/@better-auth/utils/dist/base64.mjs", "../../../node_modules/@better-auth/utils/dist/hex.mjs", "../../../node_modules/@better-auth/utils/dist/hmac.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.tB5eU6EY.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.VTXNLFMT.mjs", "../../../node_modules/better-auth/dist/cookies/index.mjs", "../../../node_modules/@better-fetch/fetch/src/error.ts", "../../../node_modules/@better-fetch/fetch/src/plugins.ts", "../../../node_modules/@better-fetch/fetch/src/retry.ts", "../../../node_modules/@better-fetch/fetch/src/auth.ts", "../../../node_modules/@better-fetch/fetch/src/utils.ts", "../../../node_modules/@better-fetch/fetch/src/create-fetch/schema.ts", "../../../node_modules/@better-fetch/fetch/src/create-fetch/index.ts", "../../../node_modules/@better-fetch/fetch/src/url.ts", "../../../node_modules/@better-fetch/fetch/src/fetch.ts", "../../../node_modules/jose/dist/browser/runtime/webcrypto.js", "../../../node_modules/jose/dist/browser/lib/buffer_utils.js", "../../../node_modules/jose/dist/browser/runtime/base64url.js", "../../../node_modules/jose/dist/browser/util/errors.js", "../../../node_modules/jose/dist/browser/lib/crypto_key.js", "../../../node_modules/jose/dist/browser/lib/invalid_key_input.js", "../../../node_modules/jose/dist/browser/runtime/is_key_like.js", "../../../node_modules/jose/dist/browser/lib/is_disjoint.js", "../../../node_modules/jose/dist/browser/lib/is_object.js", "../../../node_modules/jose/dist/browser/runtime/check_key_length.js", "../../../node_modules/jose/dist/browser/lib/is_jwk.js", "../../../node_modules/jose/dist/browser/runtime/jwk_to_key.js", "../../../node_modules/jose/dist/browser/runtime/normalize_key.js", "../../../node_modules/jose/dist/browser/key/import.js", "../../../node_modules/jose/dist/browser/lib/check_key_type.js", "../../../node_modules/jose/dist/browser/lib/validate_crit.js", "../../../node_modules/jose/dist/browser/lib/validate_algorithms.js", "../../../node_modules/jose/dist/browser/runtime/subtle_dsa.js", "../../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js", "../../../node_modules/jose/dist/browser/runtime/verify.js", "../../../node_modules/jose/dist/browser/jws/flattened/verify.js", "../../../node_modules/jose/dist/browser/jws/compact/verify.js", "../../../node_modules/jose/dist/browser/lib/epoch.js", "../../../node_modules/jose/dist/browser/lib/secs.js", "../../../node_modules/jose/dist/browser/lib/jwt_claims_set.js", "../../../node_modules/jose/dist/browser/jwt/verify.js", "../../../node_modules/jose/dist/browser/runtime/sign.js", "../../../node_modules/jose/dist/browser/jws/flattened/sign.js", "../../../node_modules/jose/dist/browser/jws/compact/sign.js", "../../../node_modules/jose/dist/browser/jwt/produce.js", "../../../node_modules/jose/dist/browser/jwt/sign.js", "../../../node_modules/jose/dist/browser/jwks/local.js", "../../../node_modules/jose/dist/browser/runtime/fetch_jwks.js", "../../../node_modules/jose/dist/browser/jwks/remote.js", "../../../node_modules/jose/dist/browser/util/base64url.js", "../../../node_modules/jose/dist/browser/util/decode_protected_header.js", "../../../node_modules/jose/dist/browser/util/decode_jwt.js", "../../../node_modules/jose/dist/browser/index.js", "../../../node_modules/@better-auth/utils/dist/hash.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.DufyW0qf.mjs", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/hmac.ts", "../../../node_modules/@noble/hashes/src/pbkdf2.ts", "../../../node_modules/@noble/hashes/src/_md.ts", "../../../node_modules/@noble/hashes/src/sha2.ts", "../../../node_modules/@noble/hashes/src/scrypt.ts", "../../../node_modules/@better-auth/utils/dist/index.mjs", "../../../node_modules/@better-auth/utils/dist/random.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.B4Qoxdgc.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.Cqykj82J.mjs", "../../../node_modules/better-auth/dist/social-providers/index.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.dn8_oqOu.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.BUPPRXfK.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.Cc72UxUH.mjs", "../../../node_modules/defu/dist/defu.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.DDEbWX-S.mjs", "../../../node_modules/@better-auth/utils/dist/binary.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.Dvh-YFwT.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.iKoUsdFE.mjs", "../../../node_modules/better-auth/dist/api/index.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.OT3XFeFk.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.DORkW_Ge.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.0TC26uRi.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.Dpv9J4ny.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.Ia_Tf4f9.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.Bdaq9Lqn.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.XjdOGtZf.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.YwDQhoPc.mjs", "../../../node_modules/better-auth/dist/shared/better-auth.D-2CmEwz.mjs", "../../../node_modules/better-auth/dist/index.mjs", "../../../node_modules/@noble/hashes/src/_u64.ts", "../../../node_modules/@noble/hashes/src/crypto.ts", "../../../node_modules/@noble/hashes/src/utils.ts", "../../../node_modules/@noble/hashes/src/sha3.ts", "../../../node_modules/@paralleldrive/cuid2/src/index.js", "../../../node_modules/@paralleldrive/cuid2/index.js", "../../../functions/api/utils/db.ts", "../../../functions/api/utils/auth.ts", "../../../functions/api/utils/event-validation.ts", "../../../functions/api/utils/response.ts", "../../../functions/api/events/%5Bid%5D/update.ts", "../../../functions/api/auth/session.ts", "../../../functions/api/auth/sign-in.ts", "../../../functions/api/auth/sign-out.ts", "../../../functions/api/auth/sign-up.ts", "../../../functions/api/events/create.ts", "../../../functions/api/utils/data.ts", "../../../functions/api/events/%5Bid%5D.ts", "../../../functions/api/events.ts", "functionsRoutes-0.5053382813195089.mjs", "../bundle-J26DRA/middleware-loader.entry.ts", "../bundle-J26DRA/middleware-insertion-facade.js", "../../../../../../../../private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/pages-template-worker.ts", "../../../../../../../../private/tmp/bunx-501-wrangler@latest/node_modules/path-to-regexp/src/index.ts", "../../../../../../../../private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../../private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../../../../../../private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/.wrangler/tmp/pages-AcJpER/functionsWorker-0.8211321164997951.mjs",
  "sourcesContent": ["function stripCfConnectingIPHeader(input, init) {\n\tconst request = new Request(input, init);\n\trequest.headers.delete(\"CF-Connecting-IP\");\n\treturn request;\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\treturn Reflect.apply(target, thisArg, [\n\t\t\tstripCfConnectingIPHeader.apply(null, argArray),\n\t\t]);\n\t},\n});\n", "/** Error thrown by the client. */\nexport class LibsqlError extends Error {\n    /** Machine-readable error code. */\n    code;\n    /** Raw numeric error code */\n    rawCode;\n    constructor(message, code, rawCode, cause) {\n        if (code !== undefined) {\n            message = `${code}: ${message}`;\n        }\n        super(message, { cause });\n        this.code = code;\n        this.rawCode = rawCode;\n        this.name = \"LibsqlError\";\n    }\n}\n", "// URI parser based on RFC 3986\n// We can't use the standard `URL` object, because we want to support relative `file:` URLs like\n// `file:relative/path/database.db`, which are not correct according to RFC 8089, which standardizes the\n// `file` scheme.\nimport { LibsqlError } from \"./api.js\";\nexport function parseUri(text) {\n    const match = URI_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(`The URL '${text}' is not in a valid format`, \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const scheme = groups[\"scheme\"];\n    const authority = groups[\"authority\"] !== undefined\n        ? parseAuthority(groups[\"authority\"])\n        : undefined;\n    const path = percentDecode(groups[\"path\"]);\n    const query = groups[\"query\"] !== undefined ? parseQuery(groups[\"query\"]) : undefined;\n    const fragment = groups[\"fragment\"] !== undefined\n        ? percentDecode(groups[\"fragment\"])\n        : undefined;\n    return { scheme, authority, path, query, fragment };\n}\nconst URI_RE = (() => {\n    const SCHEME = \"(?<scheme>[A-Za-z][A-Za-z.+-]*)\";\n    const AUTHORITY = \"(?<authority>[^/?#]*)\";\n    const PATH = \"(?<path>[^?#]*)\";\n    const QUERY = \"(?<query>[^#]*)\";\n    const FRAGMENT = \"(?<fragment>.*)\";\n    return new RegExp(`^${SCHEME}:(//${AUTHORITY})?${PATH}(\\\\?${QUERY})?(#${FRAGMENT})?$`, \"su\");\n})();\nfunction parseAuthority(text) {\n    const match = AUTHORITY_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(\"The authority part of the URL is not in a valid format\", \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const host = percentDecode(groups[\"host_br\"] ?? groups[\"host\"]);\n    const port = groups[\"port\"] ? parseInt(groups[\"port\"], 10) : undefined;\n    const userinfo = groups[\"username\"] !== undefined\n        ? {\n            username: percentDecode(groups[\"username\"]),\n            password: groups[\"password\"] !== undefined\n                ? percentDecode(groups[\"password\"])\n                : undefined,\n        }\n        : undefined;\n    return { host, port, userinfo };\n}\nconst AUTHORITY_RE = (() => {\n    return new RegExp(`^((?<username>[^:]*)(:(?<password>.*))?@)?((?<host>[^:\\\\[\\\\]]*)|(\\\\[(?<host_br>[^\\\\[\\\\]]*)\\\\]))(:(?<port>[0-9]*))?$`, \"su\");\n})();\n// Query string is parsed as application/x-www-form-urlencoded according to the Web URL standard:\n// https://url.spec.whatwg.org/#urlencoded-parsing\nfunction parseQuery(text) {\n    const sequences = text.split(\"&\");\n    const pairs = [];\n    for (const sequence of sequences) {\n        if (sequence === \"\") {\n            continue;\n        }\n        let key;\n        let value;\n        const splitIdx = sequence.indexOf(\"=\");\n        if (splitIdx < 0) {\n            key = sequence;\n            value = \"\";\n        }\n        else {\n            key = sequence.substring(0, splitIdx);\n            value = sequence.substring(splitIdx + 1);\n        }\n        pairs.push({\n            key: percentDecode(key.replaceAll(\"+\", \" \")),\n            value: percentDecode(value.replaceAll(\"+\", \" \")),\n        });\n    }\n    return { pairs };\n}\nfunction percentDecode(text) {\n    try {\n        return decodeURIComponent(text);\n    }\n    catch (e) {\n        if (e instanceof URIError) {\n            throw new LibsqlError(`URL component has invalid percent encoding: ${e}`, \"URL_INVALID\", undefined, e);\n        }\n        throw e;\n    }\n}\nexport function encodeBaseUrl(scheme, authority, path) {\n    if (authority === undefined) {\n        throw new LibsqlError(`URL with scheme ${JSON.stringify(scheme + \":\")} requires authority (the \"//\" part)`, \"URL_INVALID\");\n    }\n    const schemeText = `${scheme}:`;\n    const hostText = encodeHost(authority.host);\n    const portText = encodePort(authority.port);\n    const userinfoText = encodeUserinfo(authority.userinfo);\n    const authorityText = `//${userinfoText}${hostText}${portText}`;\n    let pathText = path.split(\"/\").map(encodeURIComponent).join(\"/\");\n    if (pathText !== \"\" && !pathText.startsWith(\"/\")) {\n        pathText = \"/\" + pathText;\n    }\n    return new URL(`${schemeText}${authorityText}${pathText}`);\n}\nfunction encodeHost(host) {\n    return host.includes(\":\") ? `[${encodeURI(host)}]` : encodeURI(host);\n}\nfunction encodePort(port) {\n    return port !== undefined ? `:${port}` : \"\";\n}\nfunction encodeUserinfo(userinfo) {\n    if (userinfo === undefined) {\n        return \"\";\n    }\n    const usernameText = encodeURIComponent(userinfo.username);\n    const passwordText = userinfo.password !== undefined\n        ? `:${encodeURIComponent(userinfo.password)}`\n        : \"\";\n    return `${usernameText}${passwordText}@`;\n}\n", "/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n", "import { Base64 } from \"js-base64\";\nexport const supportedUrlLink = \"https://github.com/libsql/libsql-client-ts#supported-urls\";\nexport function transactionModeToBegin(mode) {\n    if (mode === \"write\") {\n        return \"BEGIN IMMEDIATE\";\n    }\n    else if (mode === \"read\") {\n        return \"BEGIN TRANSACTION READONLY\";\n    }\n    else if (mode === \"deferred\") {\n        return \"BEGIN DEFERRED\";\n    }\n    else {\n        throw RangeError('Unknown transaction mode, supported values are \"write\", \"read\" and \"deferred\"');\n    }\n}\nexport class ResultSetImpl {\n    columns;\n    columnTypes;\n    rows;\n    rowsAffected;\n    lastInsertRowid;\n    constructor(columns, columnTypes, rows, rowsAffected, lastInsertRowid) {\n        this.columns = columns;\n        this.columnTypes = columnTypes;\n        this.rows = rows;\n        this.rowsAffected = rowsAffected;\n        this.lastInsertRowid = lastInsertRowid;\n    }\n    toJSON() {\n        return {\n            columns: this.columns,\n            columnTypes: this.columnTypes,\n            rows: this.rows.map(rowToJson),\n            rowsAffected: this.rowsAffected,\n            lastInsertRowid: this.lastInsertRowid !== undefined\n                ? \"\" + this.lastInsertRowid\n                : null,\n        };\n    }\n}\nfunction rowToJson(row) {\n    return Array.prototype.map.call(row, valueToJson);\n}\nfunction valueToJson(value) {\n    if (typeof value === \"bigint\") {\n        return \"\" + value;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return Base64.fromUint8Array(new Uint8Array(value));\n    }\n    else {\n        return value;\n    }\n}\n", "import { LibsqlError } from \"./api.js\";\nimport { parseUri } from \"./uri.js\";\nimport { supportedUrlLink } from \"./util.js\";\nconst inMemoryMode = \":memory:\";\nexport function isInMemoryConfig(config) {\n    return (config.scheme === \"file\" &&\n        (config.path === \":memory:\" || config.path.startsWith(\":memory:?\")));\n}\nexport function expandConfig(config, preferHttp) {\n    if (typeof config !== \"object\") {\n        // produce a reasonable error message in the common case where users type\n        // `createClient(\"libsql://...\")` instead of `createClient({url: \"libsql://...\"})`\n        throw new TypeError(`Expected client configuration as object, got ${typeof config}`);\n    }\n    let { url, authToken, tls, intMode, concurrency } = config;\n    // fill simple defaults right here\n    concurrency = Math.max(0, concurrency || 20);\n    intMode ??= \"number\";\n    let connectionQueryParams = []; // recognized query parameters which we sanitize through white list of valid key-value pairs\n    // convert plain :memory: url to URI format to make logic more uniform\n    if (url === inMemoryMode) {\n        url = \"file::memory:\";\n    }\n    // parse url parameters first and override config with update values\n    const uri = parseUri(url);\n    const originalUriScheme = uri.scheme.toLowerCase();\n    const isInMemoryMode = originalUriScheme === \"file\" &&\n        uri.path === inMemoryMode &&\n        uri.authority === undefined;\n    let queryParamsDef;\n    if (isInMemoryMode) {\n        queryParamsDef = {\n            cache: {\n                values: [\"shared\", \"private\"],\n                update: (key, value) => connectionQueryParams.push(`${key}=${value}`),\n            },\n        };\n    }\n    else {\n        queryParamsDef = {\n            tls: {\n                values: [\"0\", \"1\"],\n                update: (_, value) => (tls = value === \"1\"),\n            },\n            authToken: {\n                update: (_, value) => (authToken = value),\n            },\n        };\n    }\n    for (const { key, value } of uri.query?.pairs ?? []) {\n        if (!Object.hasOwn(queryParamsDef, key)) {\n            throw new LibsqlError(`Unsupported URL query parameter ${JSON.stringify(key)}`, \"URL_PARAM_NOT_SUPPORTED\");\n        }\n        const queryParamDef = queryParamsDef[key];\n        if (queryParamDef.values !== undefined &&\n            !queryParamDef.values.includes(value)) {\n            throw new LibsqlError(`Unknown value for the \"${key}\" query argument: ${JSON.stringify(value)}. Supported values are: [${queryParamDef.values.map((x) => '\"' + x + '\"').join(\", \")}]`, \"URL_INVALID\");\n        }\n        if (queryParamDef.update !== undefined) {\n            queryParamDef?.update(key, value);\n        }\n    }\n    // fill complex defaults & validate config\n    const connectionQueryParamsString = connectionQueryParams.length === 0\n        ? \"\"\n        : `?${connectionQueryParams.join(\"&\")}`;\n    const path = uri.path + connectionQueryParamsString;\n    let scheme;\n    if (originalUriScheme === \"libsql\") {\n        if (tls === false) {\n            if (uri.authority?.port === undefined) {\n                throw new LibsqlError('A \"libsql:\" URL with ?tls=0 must specify an explicit port', \"URL_INVALID\");\n            }\n            scheme = preferHttp ? \"http\" : \"ws\";\n        }\n        else {\n            scheme = preferHttp ? \"https\" : \"wss\";\n        }\n    }\n    else {\n        scheme = originalUriScheme;\n    }\n    if (scheme === \"http\" || scheme === \"ws\") {\n        tls ??= false;\n    }\n    else {\n        tls ??= true;\n    }\n    if (scheme !== \"http\" &&\n        scheme !== \"ws\" &&\n        scheme !== \"https\" &&\n        scheme !== \"wss\" &&\n        scheme !== \"file\") {\n        throw new LibsqlError('The client supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\", \"http:\" and \"file:\" URLs, ' +\n            `got ${JSON.stringify(uri.scheme + \":\")}. ` +\n            `For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (intMode !== \"number\" && intMode !== \"bigint\" && intMode !== \"string\") {\n        throw new TypeError(`Invalid value for intMode, expected \"number\", \"bigint\" or \"string\", got ${JSON.stringify(intMode)}`);\n    }\n    if (uri.fragment !== undefined) {\n        throw new LibsqlError(`URL fragments are not supported: ${JSON.stringify(\"#\" + uri.fragment)}`, \"URL_INVALID\");\n    }\n    if (isInMemoryMode) {\n        return {\n            scheme: \"file\",\n            tls: false,\n            path,\n            intMode,\n            concurrency,\n            syncUrl: config.syncUrl,\n            syncInterval: config.syncInterval,\n            readYourWrites: config.readYourWrites,\n            offline: config.offline,\n            fetch: config.fetch,\n            authToken: undefined,\n            encryptionKey: undefined,\n            authority: undefined,\n        };\n    }\n    return {\n        scheme,\n        tls,\n        authority: uri.authority,\n        path,\n        authToken,\n        intMode,\n        concurrency,\n        encryptionKey: config.encryptionKey,\n        syncUrl: config.syncUrl,\n        syncInterval: config.syncInterval,\n        readYourWrites: config.readYourWrites,\n        offline: config.offline,\n        fetch: config.fetch,\n    };\n}\n", "let _WebSocket;\nif (typeof WebSocket !== \"undefined\") {\n    _WebSocket = WebSocket;\n} else if (typeof global !== \"undefined\") {\n    _WebSocket = global.WebSocket;\n} else if (typeof window !== \"undefined\") {\n    _WebSocket = window.WebSocket;\n} else if (typeof self !== \"undefined\") {\n    _WebSocket = self.WebSocket;\n}\nexport { _WebSocket as WebSocket };\n", "/** A client for the Hrana protocol (a \"database connection pool\"). */\nexport class Client {\n    /** @private */\n    constructor() {\n        this.intMode = \"number\";\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value is inherited by {@link Stream} objects created with {@link openStream}, but you can\n     * override the integer mode for every stream by setting {@link Stream.intMode} on the stream.\n     */\n    intMode;\n}\n", "/** Generic error produced by the Hrana client. */\nexport class ClientError extends Error {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ClientError\";\n    }\n}\n/** Error thrown when the server violates the protocol. */\nexport class ProtoError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtoError\";\n    }\n}\n/** Error thrown when the server returns an error response. */\nexport class ResponseError extends ClientError {\n    code;\n    /** @internal */\n    proto;\n    /** @private */\n    constructor(message, protoError) {\n        super(message);\n        this.name = \"ResponseError\";\n        this.code = protoError.code;\n        this.proto = protoError;\n        this.stack = undefined;\n    }\n}\n/** Error thrown when the client or stream is closed. */\nexport class ClosedError extends ClientError {\n    /** @private */\n    constructor(message, cause) {\n        if (cause !== undefined) {\n            super(`${message}: ${cause}`);\n            this.cause = cause;\n        }\n        else {\n            super(message);\n        }\n        this.name = \"ClosedError\";\n    }\n}\n/** Error thrown when the environment does not seem to support WebSockets. */\nexport class WebSocketUnsupportedError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketUnsupportedError\";\n    }\n}\n/** Error thrown when we encounter a WebSocket error. */\nexport class WebSocketError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketError\";\n    }\n}\n/** Error thrown when the HTTP server returns an error response. */\nexport class HttpServerError extends ClientError {\n    status;\n    /** @private */\n    constructor(message, status) {\n        super(message);\n        this.status = status;\n        this.name = \"HttpServerError\";\n    }\n}\n/** Error thrown when a libsql URL is not valid. */\nexport class LibsqlUrlParseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"LibsqlUrlParseError\";\n    }\n}\n/** Error thrown when the protocol version is too low to support a feature. */\nexport class ProtocolVersionError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtocolVersionError\";\n    }\n}\n/** Error thrown when an internal client error happens. */\nexport class InternalError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n    }\n}\n/** Error thrown when the API is misused. */\nexport class MisuseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"MisuseError\";\n    }\n}\n", "import { ProtoError } from \"../../errors.js\";\nexport function string(value) {\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string\");\n}\nexport function stringOpt(value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string or null\");\n}\nexport function number(value) {\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw typeError(value, \"number\");\n}\nexport function boolean(value) {\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw typeError(value, \"boolean\");\n}\nexport function array(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"array\");\n}\nexport function object(value) {\n    if (value !== null && typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"object\");\n}\nexport function arrayObjectsMap(value, fun) {\n    return array(value).map((elemValue) => fun(object(elemValue)));\n}\nfunction typeError(value, expected) {\n    if (value === undefined) {\n        return new ProtoError(`Expected ${expected}, but the property was missing`);\n    }\n    let received = typeof value;\n    if (value === null) {\n        received = \"null\";\n    }\n    else if (Array.isArray(value)) {\n        received = \"array\";\n    }\n    return new ProtoError(`Expected ${expected}, received ${received}`);\n}\nexport function readJsonObject(value, fun) {\n    return fun(object(value));\n}\n", "export class ObjectWriter {\n    #output;\n    #isFirst;\n    constructor(output) {\n        this.#output = output;\n        this.#isFirst = false;\n    }\n    begin() {\n        this.#output.push('{');\n        this.#isFirst = true;\n    }\n    end() {\n        this.#output.push('}');\n        this.#isFirst = false;\n    }\n    #key(name) {\n        if (this.#isFirst) {\n            this.#output.push('\"');\n            this.#isFirst = false;\n        }\n        else {\n            this.#output.push(',\"');\n        }\n        this.#output.push(name);\n        this.#output.push('\":');\n    }\n    string(name, value) {\n        this.#key(name);\n        this.#output.push(JSON.stringify(value));\n    }\n    stringRaw(name, value) {\n        this.#key(name);\n        this.#output.push('\"');\n        this.#output.push(value);\n        this.#output.push('\"');\n    }\n    number(name, value) {\n        this.#key(name);\n        this.#output.push(\"\" + value);\n    }\n    boolean(name, value) {\n        this.#key(name);\n        this.#output.push(value ? \"true\" : \"false\");\n    }\n    object(name, value, valueFun) {\n        this.#key(name);\n        this.begin();\n        valueFun(this, value);\n        this.end();\n    }\n    arrayObjects(name, values, valueFun) {\n        this.#key(name);\n        this.#output.push('[');\n        for (let i = 0; i < values.length; ++i) {\n            if (i !== 0) {\n                this.#output.push(',');\n            }\n            this.begin();\n            valueFun(this, values[i]);\n            this.end();\n        }\n        this.#output.push(']');\n    }\n}\nexport function writeJsonObject(value, fun) {\n    const output = [];\n    const writer = new ObjectWriter(output);\n    writer.begin();\n    fun(writer, value);\n    writer.end();\n    return output.join(\"\");\n}\n", "export const VARINT = 0;\nexport const FIXED_64 = 1;\nexport const LENGTH_DELIMITED = 2;\nexport const GROUP_START = 3;\nexport const GROUP_END = 4;\nexport const FIXED_32 = 5;\n", "import { ProtoError } from \"../../errors.js\";\nimport { VARINT, FIXED_64, LENGTH_DELIMITED, FIXED_32 } from \"./util.js\";\nclass MessageReader {\n    #array;\n    #view;\n    #pos;\n    constructor(array) {\n        this.#array = array;\n        this.#view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n        this.#pos = 0;\n    }\n    varint() {\n        let value = 0;\n        for (let shift = 0;; shift += 7) {\n            const byte = this.#array[this.#pos++];\n            value |= (byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    varintBig() {\n        let value = 0n;\n        for (let shift = 0n;; shift += 7n) {\n            const byte = this.#array[this.#pos++];\n            value |= BigInt(byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    bytes(length) {\n        const array = new Uint8Array(this.#array.buffer, this.#array.byteOffset + this.#pos, length);\n        this.#pos += length;\n        return array;\n    }\n    double() {\n        const value = this.#view.getFloat64(this.#pos, true);\n        this.#pos += 8;\n        return value;\n    }\n    skipVarint() {\n        for (;;) {\n            const byte = this.#array[this.#pos++];\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n    }\n    skip(count) {\n        this.#pos += count;\n    }\n    eof() {\n        return this.#pos >= this.#array.byteLength;\n    }\n}\nexport class FieldReader {\n    #reader;\n    #wireType;\n    constructor(reader) {\n        this.#reader = reader;\n        this.#wireType = -1;\n    }\n    setup(wireType) {\n        this.#wireType = wireType;\n    }\n    #expect(expectedWireType) {\n        if (this.#wireType !== expectedWireType) {\n            throw new ProtoError(`Expected wire type ${expectedWireType}, got ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n    bytes() {\n        this.#expect(LENGTH_DELIMITED);\n        const length = this.#reader.varint();\n        return this.#reader.bytes(length);\n    }\n    string() {\n        return new TextDecoder().decode(this.bytes());\n    }\n    message(def) {\n        return readProtobufMessage(this.bytes(), def);\n    }\n    int32() {\n        this.#expect(VARINT);\n        return this.#reader.varint();\n    }\n    uint32() {\n        return this.int32();\n    }\n    bool() {\n        return this.int32() !== 0;\n    }\n    uint64() {\n        this.#expect(VARINT);\n        return this.#reader.varintBig();\n    }\n    sint64() {\n        const value = this.uint64();\n        return (value >> 1n) ^ (-(value & 1n));\n    }\n    double() {\n        this.#expect(FIXED_64);\n        return this.#reader.double();\n    }\n    maybeSkip() {\n        if (this.#wireType < 0) {\n            return;\n        }\n        else if (this.#wireType === VARINT) {\n            this.#reader.skipVarint();\n        }\n        else if (this.#wireType === FIXED_64) {\n            this.#reader.skip(8);\n        }\n        else if (this.#wireType === LENGTH_DELIMITED) {\n            const length = this.#reader.varint();\n            this.#reader.skip(length);\n        }\n        else if (this.#wireType === FIXED_32) {\n            this.#reader.skip(4);\n        }\n        else {\n            throw new ProtoError(`Unexpected wire type ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n}\nexport function readProtobufMessage(data, def) {\n    const msgReader = new MessageReader(data);\n    const fieldReader = new FieldReader(msgReader);\n    let value = def.default();\n    while (!msgReader.eof()) {\n        const key = msgReader.varint();\n        const tag = key >> 3;\n        const wireType = key & 0x7;\n        fieldReader.setup(wireType);\n        const tagFun = def[tag];\n        if (tagFun !== undefined) {\n            const returnedValue = tagFun(fieldReader, value);\n            if (returnedValue !== undefined) {\n                value = returnedValue;\n            }\n        }\n        fieldReader.maybeSkip();\n    }\n    return value;\n}\n", "import { VARINT, FIXED_64, LENGTH_DELIMITED } from \"./util.js\";\nexport class MessageWriter {\n    #buf;\n    #array;\n    #view;\n    #pos;\n    constructor() {\n        this.#buf = new ArrayBuffer(256);\n        this.#array = new Uint8Array(this.#buf);\n        this.#view = new DataView(this.#buf);\n        this.#pos = 0;\n    }\n    #ensure(extra) {\n        if (this.#pos + extra <= this.#buf.byteLength) {\n            return;\n        }\n        let newCap = this.#buf.byteLength;\n        while (newCap < this.#pos + extra) {\n            newCap *= 2;\n        }\n        const newBuf = new ArrayBuffer(newCap);\n        const newArray = new Uint8Array(newBuf);\n        const newView = new DataView(newBuf);\n        newArray.set(new Uint8Array(this.#buf, 0, this.#pos));\n        this.#buf = newBuf;\n        this.#array = newArray;\n        this.#view = newView;\n    }\n    #varint(value) {\n        this.#ensure(5);\n        value = 0 | value;\n        do {\n            let byte = value & 0x7f;\n            value >>>= 7;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #varintBig(value) {\n        this.#ensure(10);\n        value = value & 0xffffffffffffffffn;\n        do {\n            let byte = Number(value & 0x7fn);\n            value >>= 7n;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #tag(tag, wireType) {\n        this.#varint((tag << 3) | wireType);\n    }\n    bytes(tag, value) {\n        this.#tag(tag, LENGTH_DELIMITED);\n        this.#varint(value.byteLength);\n        this.#ensure(value.byteLength);\n        this.#array.set(value, this.#pos);\n        this.#pos += value.byteLength;\n    }\n    string(tag, value) {\n        this.bytes(tag, new TextEncoder().encode(value));\n    }\n    message(tag, value, fun) {\n        const writer = new MessageWriter();\n        fun(writer, value);\n        this.bytes(tag, writer.data());\n    }\n    int32(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varint(value);\n    }\n    uint32(tag, value) {\n        this.int32(tag, value);\n    }\n    bool(tag, value) {\n        this.int32(tag, value ? 1 : 0);\n    }\n    sint64(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varintBig((value << 1n) ^ (value >> 63n));\n    }\n    double(tag, value) {\n        this.#tag(tag, FIXED_64);\n        this.#ensure(8);\n        this.#view.setFloat64(this.#pos, value, true);\n        this.#pos += 8;\n    }\n    data() {\n        return new Uint8Array(this.#buf, 0, this.#pos);\n    }\n}\nexport function writeProtobufMessage(value, fun) {\n    const w = new MessageWriter();\n    fun(w, value);\n    return w.data();\n}\n", "export { readJsonObject } from \"./json/decode.js\";\nexport { writeJsonObject } from \"./json/encode.js\";\nexport { readProtobufMessage } from \"./protobuf/decode.js\";\nexport { writeProtobufMessage } from \"./protobuf/encode.js\";\n", "import { InternalError } from \"./errors.js\";\n// An allocator of non-negative integer ids.\n//\n// This clever data structure has these \"ideal\" properties:\n// - It consumes memory proportional to the number of used ids (which is optimal).\n// - All operations are O(1) time.\n// - The allocated ids are small (with a slight modification, we could always provide the smallest possible\n// id).\nexport class IdAlloc {\n    // Set of all allocated ids\n    #usedIds;\n    // Set of all free ids lower than `#usedIds.size`\n    #freeIds;\n    constructor() {\n        this.#usedIds = new Set();\n        this.#freeIds = new Set();\n    }\n    // Returns an id that was free, and marks it as used.\n    alloc() {\n        // this \"loop\" is just a way to pick an arbitrary element from the `#freeIds` set\n        for (const freeId of this.#freeIds) {\n            this.#freeIds.delete(freeId);\n            this.#usedIds.add(freeId);\n            // maintain the invariant of `#freeIds`\n            if (!this.#usedIds.has(this.#usedIds.size - 1)) {\n                this.#freeIds.add(this.#usedIds.size - 1);\n            }\n            return freeId;\n        }\n        // the `#freeIds` set is empty, so there are no free ids lower than `#usedIds.size`\n        // this means that `#usedIds` is a set that contains all numbers from 0 to `#usedIds.size - 1`,\n        // so `#usedIds.size` is free\n        const freeId = this.#usedIds.size;\n        this.#usedIds.add(freeId);\n        return freeId;\n    }\n    free(id) {\n        if (!this.#usedIds.delete(id)) {\n            throw new InternalError(\"Freeing an id that is not allocated\");\n        }\n        // maintain the invariant of `#freeIds`\n        this.#freeIds.delete(this.#usedIds.size);\n        if (id < this.#usedIds.size) {\n            this.#freeIds.add(id);\n        }\n    }\n}\n", "import { InternalError } from \"./errors.js\";\nexport function impossible(value, message) {\n    throw new InternalError(message);\n}\n", "import { ProtoError, MisuseError } from \"./errors.js\";\nimport { impossible } from \"./util.js\";\nexport function valueToProto(value) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"number\") {\n        if (!Number.isFinite(value)) {\n            throw new RangeError(\"Only finite numbers (not Infinity or NaN) can be passed as arguments\");\n        }\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (value < minInteger || value > maxInteger) {\n            throw new RangeError(\"This bigint value is too large to be represented as a 64-bit integer and passed as argument\");\n        }\n        return value;\n    }\n    else if (typeof value === \"boolean\") {\n        return value ? 1n : 0n;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return new Uint8Array(value);\n    }\n    else if (value instanceof Uint8Array) {\n        return value;\n    }\n    else if (value instanceof Date) {\n        return +value.valueOf();\n    }\n    else if (typeof value === \"object\") {\n        return \"\" + value.toString();\n    }\n    else {\n        throw new TypeError(\"Unsupported type of value\");\n    }\n}\nconst minInteger = -9223372036854775808n;\nconst maxInteger = 9223372036854775807n;\nexport function valueFromProto(value, intMode) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"number\") {\n        return value;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (intMode === \"number\") {\n            const num = Number(value);\n            if (!Number.isSafeInteger(num)) {\n                throw new RangeError(\"Received integer which is too large to be safely represented as a JavaScript number\");\n            }\n            return num;\n        }\n        else if (intMode === \"bigint\") {\n            return value;\n        }\n        else if (intMode === \"string\") {\n            return \"\" + value;\n        }\n        else {\n            throw new MisuseError(\"Invalid value for IntMode\");\n        }\n    }\n    else if (value instanceof Uint8Array) {\n        // TODO: we need to copy data from `Uint8Array` to return an `ArrayBuffer`. Perhaps we should add a\n        // `blobMode` parameter, similar to `intMode`, which would allow the user to choose between receiving\n        // `ArrayBuffer` (default, convenient) and `Uint8Array` (zero copy)?\n        return value.slice().buffer;\n    }\n    else if (value === undefined) {\n        throw new ProtoError(\"Received unrecognized type of Value\");\n    }\n    else {\n        throw impossible(value, \"Impossible type of Value\");\n    }\n}\n", "import { ResponseError } from \"./errors.js\";\nimport { valueFromProto } from \"./value.js\";\nexport function stmtResultFromProto(result) {\n    return {\n        affectedRowCount: result.affectedRowCount,\n        lastInsertRowid: result.lastInsertRowid,\n        columnNames: result.cols.map(col => col.name),\n        columnDecltypes: result.cols.map(col => col.decltype),\n    };\n}\nexport function rowsResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    const rows = result.rows.map(row => rowFromProto(stmtResult.columnNames, row, intMode));\n    return { ...stmtResult, rows };\n}\nexport function rowResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let row;\n    if (result.rows.length > 0) {\n        row = rowFromProto(stmtResult.columnNames, result.rows[0], intMode);\n    }\n    return { ...stmtResult, row };\n}\nexport function valueResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let value;\n    if (result.rows.length > 0 && stmtResult.columnNames.length > 0) {\n        value = valueFromProto(result.rows[0][0], intMode);\n    }\n    return { ...stmtResult, value };\n}\nfunction rowFromProto(colNames, values, intMode) {\n    const row = {};\n    // make sure that the \"length\" property is not enumerable\n    Object.defineProperty(row, \"length\", { value: values.length });\n    for (let i = 0; i < values.length; ++i) {\n        const value = valueFromProto(values[i], intMode);\n        Object.defineProperty(row, i, { value });\n        const colName = colNames[i];\n        if (colName !== undefined && !Object.hasOwn(row, colName)) {\n            Object.defineProperty(row, colName, { value, enumerable: true, configurable: true, writable: true });\n        }\n    }\n    return row;\n}\nexport function errorFromProto(error) {\n    return new ResponseError(error.message, error);\n}\n", "import { ClientError, ClosedError, MisuseError } from \"./errors.js\";\n/** Text of an SQL statement cached on the server. */\nexport class Sql {\n    #owner;\n    #sqlId;\n    #closed;\n    /** @private */\n    constructor(owner, sqlId) {\n        this.#owner = owner;\n        this.#sqlId = sqlId;\n        this.#closed = undefined;\n    }\n    /** @private */\n    _getSqlId(owner) {\n        if (this.#owner !== owner) {\n            throw new MisuseError(\"Attempted to use SQL text opened with other object\");\n        }\n        else if (this.#closed !== undefined) {\n            throw new ClosedError(\"SQL text is closed\", this.#closed);\n        }\n        return this.#sqlId;\n    }\n    /** Remove the SQL text from the server, releasing resouces. */\n    close() {\n        this._setClosed(new ClientError(\"SQL text was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed === undefined) {\n            this.#closed = error;\n            this.#owner._closeSql(this.#sqlId);\n        }\n    }\n    /** True if the SQL text is closed (removed from the server). */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\nexport function sqlToProto(owner, sql) {\n    if (sql instanceof Sql) {\n        return { sqlId: sql._getSqlId(owner) };\n    }\n    else {\n        return { sql: \"\" + sql };\n    }\n}\n", "export class Queue {\n    #pushStack;\n    #shiftStack;\n    constructor() {\n        this.#pushStack = [];\n        this.#shiftStack = [];\n    }\n    get length() {\n        return this.#pushStack.length + this.#shiftStack.length;\n    }\n    push(elem) {\n        this.#pushStack.push(elem);\n    }\n    shift() {\n        if (this.#shiftStack.length === 0 && this.#pushStack.length > 0) {\n            this.#shiftStack = this.#pushStack.reverse();\n            this.#pushStack = [];\n        }\n        return this.#shiftStack.pop();\n    }\n    first() {\n        return this.#shiftStack.length !== 0\n            ? this.#shiftStack[this.#shiftStack.length - 1]\n            : this.#pushStack[0];\n    }\n}\n", "import { sqlToProto } from \"./sql.js\";\nimport { valueToProto } from \"./value.js\";\n/** A statement that can be evaluated by the database. Besides the SQL text, it also contains the positional\n * and named arguments. */\nexport class Stmt {\n    /** The SQL statement text. */\n    sql;\n    /** @private */\n    _args;\n    /** @private */\n    _namedArgs;\n    /** Initialize the statement with given SQL text. */\n    constructor(sql) {\n        this.sql = sql;\n        this._args = [];\n        this._namedArgs = new Map();\n    }\n    /** Binds positional parameters from the given `values`. All previous positional bindings are cleared. */\n    bindIndexes(values) {\n        this._args.length = 0;\n        for (const value of values) {\n            this._args.push(valueToProto(value));\n        }\n        return this;\n    }\n    /** Binds a parameter by a 1-based index. */\n    bindIndex(index, value) {\n        if (index !== (index | 0) || index <= 0) {\n            throw new RangeError(\"Index of a positional argument must be positive integer\");\n        }\n        while (this._args.length < index) {\n            this._args.push(null);\n        }\n        this._args[index - 1] = valueToProto(value);\n        return this;\n    }\n    /** Binds a parameter by name. */\n    bindName(name, value) {\n        this._namedArgs.set(name, valueToProto(value));\n        return this;\n    }\n    /** Clears all bindings. */\n    unbindAll() {\n        this._args.length = 0;\n        this._namedArgs.clear();\n        return this;\n    }\n}\nexport function stmtToProto(sqlOwner, stmt, wantRows) {\n    let inSql;\n    let args = [];\n    let namedArgs = [];\n    if (stmt instanceof Stmt) {\n        inSql = stmt.sql;\n        args = stmt._args;\n        for (const [name, value] of stmt._namedArgs.entries()) {\n            namedArgs.push({ name, value });\n        }\n    }\n    else if (Array.isArray(stmt)) {\n        inSql = stmt[0];\n        if (Array.isArray(stmt[1])) {\n            args = stmt[1].map((arg) => valueToProto(arg));\n        }\n        else {\n            namedArgs = Object.entries(stmt[1]).map(([name, value]) => {\n                return { name, value: valueToProto(value) };\n            });\n        }\n    }\n    else {\n        inSql = stmt;\n    }\n    const { sql, sqlId } = sqlToProto(sqlOwner, inSql);\n    return { sql, sqlId, args, namedArgs, wantRows };\n}\n", "import { ProtoError, MisuseError } from \"./errors.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, errorFromProto, } from \"./result.js\";\nimport { stmtToProto } from \"./stmt.js\";\nimport { impossible } from \"./util.js\";\n/** A builder for creating a batch and executing it on the server. */\nexport class Batch {\n    /** @private */\n    _stream;\n    #useCursor;\n    /** @private */\n    _steps;\n    #executed;\n    /** @private */\n    constructor(stream, useCursor) {\n        this._stream = stream;\n        this.#useCursor = useCursor;\n        this._steps = [];\n        this.#executed = false;\n    }\n    /** Return a builder for adding a step to the batch. */\n    step() {\n        return new BatchStep(this);\n    }\n    /** Execute the batch. */\n    execute() {\n        if (this.#executed) {\n            throw new MisuseError(\"This batch has already been executed\");\n        }\n        this.#executed = true;\n        const batch = {\n            steps: this._steps.map((step) => step.proto),\n        };\n        if (this.#useCursor) {\n            return executeCursor(this._stream, this._steps, batch);\n        }\n        else {\n            return executeRegular(this._stream, this._steps, batch);\n        }\n    }\n}\nfunction executeRegular(stream, steps, batch) {\n    return stream._batch(batch).then((result) => {\n        for (let step = 0; step < steps.length; ++step) {\n            const stepResult = result.stepResults.get(step);\n            const stepError = result.stepErrors.get(step);\n            steps[step].callback(stepResult, stepError);\n        }\n    });\n}\nasync function executeCursor(stream, steps, batch) {\n    const cursor = await stream._openCursor(batch);\n    try {\n        let nextStep = 0;\n        let beginEntry = undefined;\n        let rows = [];\n        for (;;) {\n            const entry = await cursor.next();\n            if (entry === undefined) {\n                break;\n            }\n            if (entry.type === \"step_begin\") {\n                if (entry.step < nextStep || entry.step >= steps.length) {\n                    throw new ProtoError(\"Server produced StepBeginEntry for unexpected step\");\n                }\n                else if (beginEntry !== undefined) {\n                    throw new ProtoError(\"Server produced StepBeginEntry before terminating previous step\");\n                }\n                for (let step = nextStep; step < entry.step; ++step) {\n                    steps[step].callback(undefined, undefined);\n                }\n                nextStep = entry.step + 1;\n                beginEntry = entry;\n                rows = [];\n            }\n            else if (entry.type === \"step_end\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced StepEndEntry but no step is active\");\n                }\n                const stmtResult = {\n                    cols: beginEntry.cols,\n                    rows,\n                    affectedRowCount: entry.affectedRowCount,\n                    lastInsertRowid: entry.lastInsertRowid,\n                };\n                steps[beginEntry.step].callback(stmtResult, undefined);\n                beginEntry = undefined;\n                rows = [];\n            }\n            else if (entry.type === \"step_error\") {\n                if (beginEntry === undefined) {\n                    if (entry.step >= steps.length) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    for (let step = nextStep; step < entry.step; ++step) {\n                        steps[step].callback(undefined, undefined);\n                    }\n                }\n                else {\n                    if (entry.step !== beginEntry.step) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    beginEntry = undefined;\n                    rows = [];\n                }\n                steps[entry.step].callback(undefined, entry.error);\n                nextStep = entry.step + 1;\n            }\n            else if (entry.type === \"row\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced RowEntry but no step is active\");\n                }\n                rows.push(entry.row);\n            }\n            else if (entry.type === \"error\") {\n                throw errorFromProto(entry.error);\n            }\n            else if (entry.type === \"none\") {\n                throw new ProtoError(\"Server produced unrecognized CursorEntry\");\n            }\n            else {\n                throw impossible(entry, \"Impossible CursorEntry\");\n            }\n        }\n        if (beginEntry !== undefined) {\n            throw new ProtoError(\"Server closed Cursor before terminating active step\");\n        }\n        for (let step = nextStep; step < steps.length; ++step) {\n            steps[step].callback(undefined, undefined);\n        }\n    }\n    finally {\n        cursor.close();\n    }\n}\n/** A builder for adding a step to the batch. */\nexport class BatchStep {\n    /** @private */\n    _batch;\n    #conds;\n    /** @private */\n    _index;\n    /** @private */\n    constructor(batch) {\n        this._batch = batch;\n        this.#conds = [];\n        this._index = undefined;\n    }\n    /** Add the condition that needs to be satisfied to execute the statement. If you use this method multiple\n     * times, we join the conditions with a logical AND. */\n    condition(cond) {\n        this.#conds.push(cond._proto);\n        return this;\n    }\n    /** Add a statement that returns rows. */\n    query(stmt) {\n        return this.#add(stmt, true, rowsResultFromProto);\n    }\n    /** Add a statement that returns at most a single row. */\n    queryRow(stmt) {\n        return this.#add(stmt, true, rowResultFromProto);\n    }\n    /** Add a statement that returns at most a single value. */\n    queryValue(stmt) {\n        return this.#add(stmt, true, valueResultFromProto);\n    }\n    /** Add a statement without returning rows. */\n    run(stmt) {\n        return this.#add(stmt, false, stmtResultFromProto);\n    }\n    #add(inStmt, wantRows, fromProto) {\n        if (this._index !== undefined) {\n            throw new MisuseError(\"This BatchStep has already been added to the batch\");\n        }\n        const stmt = stmtToProto(this._batch._stream._sqlOwner(), inStmt, wantRows);\n        let condition;\n        if (this.#conds.length === 0) {\n            condition = undefined;\n        }\n        else if (this.#conds.length === 1) {\n            condition = this.#conds[0];\n        }\n        else {\n            condition = { type: \"and\", conds: this.#conds.slice() };\n        }\n        const proto = { stmt, condition };\n        return new Promise((outputCallback, errorCallback) => {\n            const callback = (stepResult, stepError) => {\n                if (stepResult !== undefined && stepError !== undefined) {\n                    errorCallback(new ProtoError(\"Server returned both result and error\"));\n                }\n                else if (stepError !== undefined) {\n                    errorCallback(errorFromProto(stepError));\n                }\n                else if (stepResult !== undefined) {\n                    outputCallback(fromProto(stepResult, this._batch._stream.intMode));\n                }\n                else {\n                    outputCallback(undefined);\n                }\n            };\n            this._index = this._batch._steps.length;\n            this._batch._steps.push({ proto, callback });\n        });\n    }\n}\nexport class BatchCond {\n    /** @private */\n    _batch;\n    /** @private */\n    _proto;\n    /** @private */\n    constructor(batch, proto) {\n        this._batch = batch;\n        this._proto = proto;\n    }\n    /** Create a condition that evaluates to true when the given step executes successfully.\n     *\n     * If the given step fails error or is skipped because its condition evaluated to false, this\n     * condition evaluates to false.\n     */\n    static ok(step) {\n        return new BatchCond(step._batch, { type: \"ok\", step: stepIndex(step) });\n    }\n    /** Create a condition that evaluates to true when the given step fails.\n     *\n     * If the given step succeeds or is skipped because its condition evaluated to false, this condition\n     * evaluates to false.\n     */\n    static error(step) {\n        return new BatchCond(step._batch, { type: \"error\", step: stepIndex(step) });\n    }\n    /** Create a condition that is a logical negation of another condition.\n     */\n    static not(cond) {\n        return new BatchCond(cond._batch, { type: \"not\", cond: cond._proto });\n    }\n    /** Create a condition that is a logical AND of other conditions.\n     */\n    static and(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"and\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that is a logical OR of other conditions.\n     */\n    static or(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"or\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that evaluates to true when the SQL connection is in autocommit mode (not inside an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    static isAutocommit(batch) {\n        batch._stream.client()._ensureVersion(3, \"BatchCond.isAutocommit()\");\n        return new BatchCond(batch, { type: \"is_autocommit\" });\n    }\n}\nfunction stepIndex(step) {\n    if (step._index === undefined) {\n        throw new MisuseError(\"Cannot add a condition referencing a step that has not been added to the batch\");\n    }\n    return step._index;\n}\nfunction checkCondBatch(expectedBatch, cond) {\n    if (cond._batch !== expectedBatch) {\n        throw new MisuseError(\"Cannot mix BatchCond objects for different Batch objects\");\n    }\n}\n", "export function describeResultFromProto(result) {\n    return {\n        paramNames: result.params.map((p) => p.name),\n        columns: result.cols,\n        isExplain: result.isExplain,\n        isReadonly: result.isReadonly,\n    };\n}\n", "import { Batch } from \"./batch.js\";\nimport { describeResultFromProto } from \"./describe.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, } from \"./result.js\";\nimport { sqlToProto } from \"./sql.js\";\nimport { stmtToProto } from \"./stmt.js\";\n/** A stream for executing SQL statements (a \"database connection\"). */\nexport class Stream {\n    /** @private */\n    constructor(intMode) {\n        this.intMode = intMode;\n    }\n    /** Execute a statement and return rows. */\n    query(stmt) {\n        return this.#execute(stmt, true, rowsResultFromProto);\n    }\n    /** Execute a statement and return at most a single row. */\n    queryRow(stmt) {\n        return this.#execute(stmt, true, rowResultFromProto);\n    }\n    /** Execute a statement and return at most a single value. */\n    queryValue(stmt) {\n        return this.#execute(stmt, true, valueResultFromProto);\n    }\n    /** Execute a statement without returning rows. */\n    run(stmt) {\n        return this.#execute(stmt, false, stmtResultFromProto);\n    }\n    #execute(inStmt, wantRows, fromProto) {\n        const stmt = stmtToProto(this._sqlOwner(), inStmt, wantRows);\n        return this._execute(stmt).then((r) => fromProto(r, this.intMode));\n    }\n    /** Return a builder for creating and executing a batch.\n     *\n     * If `useCursor` is true, the batch will be executed using a Hrana cursor, which will stream results from\n     * the server to the client, which consumes less memory on the server. This requires protocol version 3 or\n     * higher.\n     */\n    batch(useCursor = false) {\n        return new Batch(this, useCursor);\n    }\n    /** Parse and analyze a statement. This requires protocol version 2 or higher. */\n    describe(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._describe(protoSql).then(describeResultFromProto);\n    }\n    /** Execute a sequence of statements separated by semicolons. This requires protocol version 2 or higher.\n     * */\n    sequence(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._sequence(protoSql);\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value affects the results of all operations on this stream.\n     */\n    intMode;\n}\n", "export class Cursor {\n}\n", "import { ClientError, ClosedError } from \"../errors.js\";\nimport { Cursor } from \"../cursor.js\";\nimport { Queue } from \"../queue.js\";\nconst fetchChunkSize = 1000;\nconst fetchQueueSize = 10;\nexport class WsCursor extends Cursor {\n    #client;\n    #stream;\n    #cursorId;\n    #entryQueue;\n    #fetchQueue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(client, stream, cursorId) {\n        super();\n        this.#client = client;\n        this.#stream = stream;\n        this.#cursorId = cursorId;\n        this.#entryQueue = new Queue();\n        this.#fetchQueue = new Queue();\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    /** Fetch the next entry from the cursor. */\n    async next() {\n        for (;;) {\n            if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            while (!this.#done && this.#fetchQueue.length < fetchQueueSize) {\n                this.#fetchQueue.push(this.#fetch());\n            }\n            const entry = this.#entryQueue.shift();\n            if (this.#done || entry !== undefined) {\n                return entry;\n            }\n            // we assume that `Cursor.next()` is never called concurrently\n            await this.#fetchQueue.shift().then((response) => {\n                if (response === undefined) {\n                    return;\n                }\n                for (const entry of response.entries) {\n                    this.#entryQueue.push(entry);\n                }\n                this.#done ||= response.done;\n            });\n        }\n    }\n    #fetch() {\n        return this.#stream._sendCursorRequest(this, {\n            type: \"fetch_cursor\",\n            cursorId: this.#cursorId,\n            maxCount: fetchChunkSize,\n        }).then((resp) => resp, (error) => {\n            this._setClosed(error);\n            return undefined;\n        });\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._sendCursorRequest(this, {\n            type: \"close_cursor\",\n            cursorId: this.#cursorId,\n        }).catch(() => undefined);\n        this.#stream._cursorClosed(this);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n", "import { ClientError, ClosedError, InternalError } from \"../errors.js\";\nimport { Queue } from \"../queue.js\";\nimport { Stream } from \"../stream.js\";\nimport { WsCursor } from \"./cursor.js\";\nexport class WsStream extends Stream {\n    #client;\n    #streamId;\n    #queue;\n    #cursor;\n    #closing;\n    #closed;\n    /** @private */\n    static open(client) {\n        const streamId = client._streamIdAlloc.alloc();\n        const stream = new WsStream(client, streamId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => stream.#setClosed(e);\n        const request = { type: \"open_stream\", streamId };\n        client._sendRequest(request, { responseCallback, errorCallback });\n        return stream;\n    }\n    /** @private */\n    constructor(client, streamId) {\n        super(client.intMode);\n        this.#client = client;\n        this.#streamId = streamId;\n        this.#queue = new Queue();\n        this.#cursor = undefined;\n        this.#closing = false;\n        this.#closed = undefined;\n    }\n    /** Get the {@link WsClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this.#client;\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({\n            type: \"execute\",\n            streamId: this.#streamId,\n            stmt,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({\n            type: \"batch\",\n            streamId: this.#streamId,\n            batch,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        this.#client._ensureVersion(2, \"describe()\");\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        this.#client._ensureVersion(2, \"sequence()\");\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n            streamId: this.#streamId,\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"request\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        this.#client._ensureVersion(3, \"cursor\");\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _sendCursorRequest(cursor, request) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor not associated with the stream attempted to execute a request\");\n        }\n        return new Promise((responseCallback, errorCallback) => {\n            if (this.#closed !== undefined) {\n                errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n            }\n            else {\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        this.#flushQueue();\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            entry.errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n        }\n        else if (this.#closing) {\n            entry.errorCallback(new ClosedError(\"Stream is closing\", undefined));\n        }\n        else {\n            this.#queue.push(entry);\n            this.#flushQueue();\n        }\n    }\n    #flushQueue() {\n        for (;;) {\n            const entry = this.#queue.first();\n            if (entry === undefined && this.#cursor === undefined && this.#closing) {\n                this.#setClosed(new ClientError(\"Stream was gracefully closed\"));\n                break;\n            }\n            else if (entry?.type === \"request\" && this.#cursor === undefined) {\n                const { request, responseCallback, errorCallback } = entry;\n                this.#queue.shift();\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n            else if (entry?.type === \"cursor\" && this.#cursor === undefined) {\n                const { batch, cursorCallback } = entry;\n                this.#queue.shift();\n                const cursorId = this.#client._cursorIdAlloc.alloc();\n                const cursor = new WsCursor(this.#client, this, cursorId);\n                const request = {\n                    type: \"open_cursor\",\n                    streamId: this.#streamId,\n                    cursorId,\n                    batch,\n                };\n                const responseCallback = () => undefined;\n                const errorCallback = (e) => cursor._setClosed(e);\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n                this.#cursor = cursor;\n                cursorCallback(cursor);\n            }\n            else {\n                break;\n            }\n        }\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        const request = { type: \"close_stream\", streamId: this.#streamId };\n        const responseCallback = () => this.#client._streamIdAlloc.free(this.#streamId);\n        const errorCallback = () => undefined;\n        this.#client._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Immediately close the stream. */\n    close() {\n        this.#setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        this.#flushQueue();\n    }\n    /** True if the stream is closed or closing. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n}\n", "import { Base64 } from \"js-base64\";\nimport { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(\"sql\", msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    w.arrayObjects(\"args\", msg.args, Value);\n    w.arrayObjects(\"named_args\", msg.namedArgs, NamedArg);\n    w.boolean(\"want_rows\", msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(\"name\", msg.name);\n    w.object(\"value\", msg.value, Value);\n}\nexport function Batch(w, msg) {\n    w.arrayObjects(\"steps\", msg.steps, BatchStep);\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.object(\"condition\", msg.condition, BatchCond);\n    }\n    w.object(\"stmt\", msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"ok\" || msg.type === \"error\") {\n        w.number(\"step\", msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.object(\"cond\", msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\" || msg.type === \"or\") {\n        w.arrayObjects(\"conds\", msg.conds, BatchCond);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.stringRaw(\"type\", \"null\");\n    }\n    else if (typeof msg === \"bigint\") {\n        w.stringRaw(\"type\", \"integer\");\n        w.stringRaw(\"value\", \"\" + msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.stringRaw(\"type\", \"float\");\n        w.number(\"value\", msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.stringRaw(\"type\", \"text\");\n        w.string(\"value\", msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.stringRaw(\"type\", \"blob\");\n        w.stringRaw(\"base64\", Base64.fromUint8Array(msg));\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\n", "import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"hello\") {\n        if (msg.jwt !== undefined) {\n            w.string(\"jwt\", msg.jwt);\n        }\n    }\n    else if (msg.type === \"request\") {\n        w.number(\"request_id\", msg.requestId);\n        w.object(\"request\", msg.request, Request);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction Request(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"open_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"close_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"execute\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"open_cursor\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.number(\"cursor_id\", msg.cursorId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"close_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n    }\n    else if (msg.type === \"fetch_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n        w.number(\"max_count\", msg.maxCount);\n    }\n    else if (msg.type === \"sequence\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Request\");\n    }\n}\n", "import { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n    for (const arg of msg.args) {\n        w.message(3, arg, Value);\n    }\n    for (const arg of msg.namedArgs) {\n        w.message(4, arg, NamedArg);\n    }\n    w.bool(5, msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(1, msg.name);\n    w.message(2, msg.value, Value);\n}\nexport function Batch(w, msg) {\n    for (const step of msg.steps) {\n        w.message(1, step, BatchStep);\n    }\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.message(1, msg.condition, BatchCond);\n    }\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    if (msg.type === \"ok\") {\n        w.uint32(1, msg.step);\n    }\n    else if (msg.type === \"error\") {\n        w.uint32(2, msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.message(3, msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\") {\n        w.message(4, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"or\") {\n        w.message(5, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        w.message(6, undefined, Empty);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction BatchCondList(w, msg) {\n    for (const cond of msg) {\n        w.message(1, cond, BatchCond);\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.message(1, undefined, Empty);\n    }\n    else if (typeof msg === \"bigint\") {\n        w.sint64(2, msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.double(3, msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.string(4, msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.bytes(5, msg);\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\nfunction Empty(_w, _msg) {\n    // do nothing\n}\n", "import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    if (msg.type === \"hello\") {\n        w.message(1, msg, HelloMsg);\n    }\n    else if (msg.type === \"request\") {\n        w.message(2, msg, RequestMsg);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction HelloMsg(w, msg) {\n    if (msg.jwt !== undefined) {\n        w.string(1, msg.jwt);\n    }\n}\nfunction RequestMsg(w, msg) {\n    w.int32(1, msg.requestId);\n    const request = msg.request;\n    if (request.type === \"open_stream\") {\n        w.message(2, request, OpenStreamReq);\n    }\n    else if (request.type === \"close_stream\") {\n        w.message(3, request, CloseStreamReq);\n    }\n    else if (request.type === \"execute\") {\n        w.message(4, request, ExecuteReq);\n    }\n    else if (request.type === \"batch\") {\n        w.message(5, request, BatchReq);\n    }\n    else if (request.type === \"open_cursor\") {\n        w.message(6, request, OpenCursorReq);\n    }\n    else if (request.type === \"close_cursor\") {\n        w.message(7, request, CloseCursorReq);\n    }\n    else if (request.type === \"fetch_cursor\") {\n        w.message(8, request, FetchCursorReq);\n    }\n    else if (request.type === \"sequence\") {\n        w.message(9, request, SequenceReq);\n    }\n    else if (request.type === \"describe\") {\n        w.message(10, request, DescribeReq);\n    }\n    else if (request.type === \"store_sql\") {\n        w.message(11, request, StoreSqlReq);\n    }\n    else if (request.type === \"close_sql\") {\n        w.message(12, request, CloseSqlReq);\n    }\n    else if (request.type === \"get_autocommit\") {\n        w.message(13, request, GetAutocommitReq);\n    }\n    else {\n        throw impossible(request, \"Impossible type of Request\");\n    }\n}\nfunction OpenStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction CloseStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction ExecuteReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.batch, Batch);\n}\nfunction OpenCursorReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.int32(2, msg.cursorId);\n    w.message(3, msg.batch, Batch);\n}\nfunction CloseCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n}\nfunction FetchCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n    w.uint32(2, msg.maxCount);\n}\nfunction SequenceReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction DescribeReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction StoreSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\n", "import { Base64 } from \"js-base64\";\nimport { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nexport function Error(obj) {\n    const message = d.string(obj[\"message\"]);\n    const code = d.stringOpt(obj[\"code\"]);\n    return { message, code };\n}\nexport function StmtResult(obj) {\n    const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n    const rows = d.array(obj[\"rows\"]).map((rowObj) => d.arrayObjectsMap(rowObj, Value));\n    const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n    const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n    const lastInsertRowid = lastInsertRowidStr !== undefined\n        ? BigInt(lastInsertRowidStr) : undefined;\n    return { cols, rows, affectedRowCount, lastInsertRowid };\n}\nfunction Col(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function BatchResult(obj) {\n    const stepResults = new Map();\n    d.array(obj[\"step_results\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepResults.set(i, StmtResult(d.object(value)));\n        }\n    });\n    const stepErrors = new Map();\n    d.array(obj[\"step_errors\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepErrors.set(i, Error(d.object(value)));\n        }\n    });\n    return { stepResults, stepErrors };\n}\nexport function CursorEntry(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"step_begin\") {\n        const step = d.number(obj[\"step\"]);\n        const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n        return { type: \"step_begin\", step, cols };\n    }\n    else if (type === \"step_end\") {\n        const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n        const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n        const lastInsertRowid = lastInsertRowidStr !== undefined\n            ? BigInt(lastInsertRowidStr) : undefined;\n        return { type: \"step_end\", affectedRowCount, lastInsertRowid };\n    }\n    else if (type === \"step_error\") {\n        const step = d.number(obj[\"step\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"step_error\", step, error };\n    }\n    else if (type === \"row\") {\n        const row = d.arrayObjectsMap(obj[\"row\"], Value);\n        return { type: \"row\", row };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of CursorEntry\");\n    }\n}\nexport function DescribeResult(obj) {\n    const params = d.arrayObjectsMap(obj[\"params\"], DescribeParam);\n    const cols = d.arrayObjectsMap(obj[\"cols\"], DescribeCol);\n    const isExplain = d.boolean(obj[\"is_explain\"]);\n    const isReadonly = d.boolean(obj[\"is_readonly\"]);\n    return { params, cols, isExplain, isReadonly };\n}\nfunction DescribeParam(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    return { name };\n}\nfunction DescribeCol(obj) {\n    const name = d.string(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function Value(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"null\") {\n        return null;\n    }\n    else if (type === \"integer\") {\n        const value = d.string(obj[\"value\"]);\n        return BigInt(value);\n    }\n    else if (type === \"float\") {\n        return d.number(obj[\"value\"]);\n    }\n    else if (type === \"text\") {\n        return d.string(obj[\"value\"]);\n    }\n    else if (type === \"blob\") {\n        return Base64.toUint8Array(d.string(obj[\"base64\"]));\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Value\");\n    }\n}\n", "import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/json_decode.js\";\nexport function ServerMsg(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"hello_ok\") {\n        return { type: \"hello_ok\" };\n    }\n    else if (type === \"hello_error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"hello_error\", error };\n    }\n    else if (type === \"response_ok\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const response = Response(d.object(obj[\"response\"]));\n        return { type: \"response_ok\", requestId, response };\n    }\n    else if (type === \"response_error\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"response_error\", requestId, error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of ServerMsg\");\n    }\n}\nfunction Response(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"open_stream\") {\n        return { type: \"open_stream\" };\n    }\n    else if (type === \"close_stream\") {\n        return { type: \"close_stream\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"open_cursor\") {\n        return { type: \"open_cursor\" };\n    }\n    else if (type === \"close_cursor\") {\n        return { type: \"close_cursor\" };\n    }\n    else if (type === \"fetch_cursor\") {\n        const entries = d.arrayObjectsMap(obj[\"entries\"], CursorEntry);\n        const done = d.boolean(obj[\"done\"]);\n        return { type: \"fetch_cursor\", entries, done };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Response\");\n    }\n}\n", "export const Error = {\n    default() { return { message: \"\", code: undefined }; },\n    1(r, msg) { msg.message = r.string(); },\n    2(r, msg) { msg.code = r.string(); },\n};\nexport const StmtResult = {\n    default() {\n        return {\n            cols: [],\n            rows: [],\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.cols.push(r.message(Col)); },\n    2(r, msg) { msg.rows.push(r.message(Row)); },\n    3(r, msg) { msg.affectedRowCount = Number(r.uint64()); },\n    4(r, msg) { msg.lastInsertRowid = r.sint64(); },\n};\nconst Col = {\n    default() { return { name: undefined, decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Row = {\n    default() { return []; },\n    1(r, msg) { msg.push(r.message(Value)); },\n};\nexport const BatchResult = {\n    default() { return { stepResults: new Map(), stepErrors: new Map() }; },\n    1(r, msg) {\n        const [key, value] = r.message(BatchResultStepResult);\n        msg.stepResults.set(key, value);\n    },\n    2(r, msg) {\n        const [key, value] = r.message(BatchResultStepError);\n        msg.stepErrors.set(key, value);\n    },\n};\nconst BatchResultStepResult = {\n    default() { return [0, StmtResult.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(StmtResult); },\n};\nconst BatchResultStepError = {\n    default() { return [0, Error.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(Error); },\n};\nexport const CursorEntry = {\n    default() { return { type: \"none\" }; },\n    1(r) { return r.message(StepBeginEntry); },\n    2(r) { return r.message(StepEndEntry); },\n    3(r) { return r.message(StepErrorEntry); },\n    4(r) { return { type: \"row\", row: r.message(Row) }; },\n    5(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StepBeginEntry = {\n    default() { return { type: \"step_begin\", step: 0, cols: [] }; },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.cols.push(r.message(Col)); },\n};\nconst StepEndEntry = {\n    default() {\n        return {\n            type: \"step_end\",\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.affectedRowCount = r.uint32(); },\n    2(r, msg) { msg.lastInsertRowid = r.uint64(); },\n};\nconst StepErrorEntry = {\n    default() {\n        return {\n            type: \"step_error\",\n            step: 0,\n            error: Error.default(),\n        };\n    },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nexport const DescribeResult = {\n    default() {\n        return {\n            params: [],\n            cols: [],\n            isExplain: false,\n            isReadonly: false,\n        };\n    },\n    1(r, msg) { msg.params.push(r.message(DescribeParam)); },\n    2(r, msg) { msg.cols.push(r.message(DescribeCol)); },\n    3(r, msg) { msg.isExplain = r.bool(); },\n    4(r, msg) { msg.isReadonly = r.bool(); },\n};\nconst DescribeParam = {\n    default() { return { name: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n};\nconst DescribeCol = {\n    default() { return { name: \"\", decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Value = {\n    default() { return undefined; },\n    1(r) { return null; },\n    2(r) { return r.sint64(); },\n    3(r) { return r.double(); },\n    4(r) { return r.string(); },\n    5(r) { return r.bytes(); },\n};\n", "import { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const ServerMsg = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"hello_ok\" }; },\n    2(r) { return r.message(HelloErrorMsg); },\n    3(r) { return r.message(ResponseOkMsg); },\n    4(r) { return r.message(ResponseErrorMsg); },\n};\nconst HelloErrorMsg = {\n    default() { return { type: \"hello_error\", error: Error.default() }; },\n    1(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseErrorMsg = {\n    default() { return { type: \"response_error\", requestId: 0, error: Error.default() }; },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseOkMsg = {\n    default() {\n        return {\n            type: \"response_ok\",\n            requestId: 0,\n            response: { type: \"none\" },\n        };\n    },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.response = { type: \"open_stream\" }; },\n    3(r, msg) { msg.response = { type: \"close_stream\" }; },\n    4(r, msg) { msg.response = r.message(ExecuteResp); },\n    5(r, msg) { msg.response = r.message(BatchResp); },\n    6(r, msg) { msg.response = { type: \"open_cursor\" }; },\n    7(r, msg) { msg.response = { type: \"close_cursor\" }; },\n    8(r, msg) { msg.response = r.message(FetchCursorResp); },\n    9(r, msg) { msg.response = { type: \"sequence\" }; },\n    10(r, msg) { msg.response = r.message(DescribeResp); },\n    11(r, msg) { msg.response = { type: \"store_sql\" }; },\n    12(r, msg) { msg.response = { type: \"close_sql\" }; },\n    13(r, msg) { msg.response = r.message(GetAutocommitResp); },\n};\nconst ExecuteResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst FetchCursorResp = {\n    default() { return { type: \"fetch_cursor\", entries: [], done: false }; },\n    1(r, msg) { msg.entries.push(r.message(CursorEntry)); },\n    2(r, msg) { msg.done = r.bool(); },\n};\nconst DescribeResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\n", "import { Client } from \"../client.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { ClientError, ProtoError, ClosedError, WebSocketError, ProtocolVersionError, InternalError, } from \"../errors.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { impossible } from \"../util.js\";\nimport { WsStream } from \"./stream.js\";\nimport { ClientMsg as json_ClientMsg } from \"./json_encode.js\";\nimport { ClientMsg as protobuf_ClientMsg } from \"./protobuf_encode.js\";\nimport { ServerMsg as json_ServerMsg } from \"./json_decode.js\";\nimport { ServerMsg as protobuf_ServerMsg } from \"./protobuf_decode.js\";\nexport const subprotocolsV2 = new Map([\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\nexport const subprotocolsV3 = new Map([\n    [\"hrana3-protobuf\", { version: 3, encoding: \"protobuf\" }],\n    [\"hrana3\", { version: 3, encoding: \"json\" }],\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\n/** A client for the Hrana protocol over a WebSocket. */\nexport class WsClient extends Client {\n    #socket;\n    // List of callbacks that we queue until the socket transitions from the CONNECTING to the OPEN state.\n    #openCallbacks;\n    // Have we already transitioned from CONNECTING to OPEN and fired the callbacks in #openCallbacks?\n    #opened;\n    // Stores the error that caused us to close the client (and the socket). If we are not closed, this is\n    // `undefined`.\n    #closed;\n    // Have we received a response to our \"hello\" from the server?\n    #recvdHello;\n    // Subprotocol negotiated with the server. It is only available after the socket transitions to the OPEN\n    // state.\n    #subprotocol;\n    // Has the `getVersion()` function been called? This is only used to validate that the API is used\n    // correctly.\n    #getVersionCalled;\n    // A map from request id to the responses that we expect to receive from the server.\n    #responseMap;\n    // An allocator of request ids.\n    #requestIdAlloc;\n    // An allocator of stream ids.\n    /** @private */\n    _streamIdAlloc;\n    // An allocator of cursor ids.\n    /** @private */\n    _cursorIdAlloc;\n    // An allocator of SQL text ids.\n    #sqlIdAlloc;\n    /** @private */\n    constructor(socket, jwt) {\n        super();\n        this.#socket = socket;\n        this.#openCallbacks = [];\n        this.#opened = false;\n        this.#closed = undefined;\n        this.#recvdHello = false;\n        this.#subprotocol = undefined;\n        this.#getVersionCalled = false;\n        this.#responseMap = new Map();\n        this.#requestIdAlloc = new IdAlloc();\n        this._streamIdAlloc = new IdAlloc();\n        this._cursorIdAlloc = new IdAlloc();\n        this.#sqlIdAlloc = new IdAlloc();\n        this.#socket.binaryType = \"arraybuffer\";\n        this.#socket.addEventListener(\"open\", () => this.#onSocketOpen());\n        this.#socket.addEventListener(\"close\", (event) => this.#onSocketClose(event));\n        this.#socket.addEventListener(\"error\", (event) => this.#onSocketError(event));\n        this.#socket.addEventListener(\"message\", (event) => this.#onSocketMessage(event));\n        this.#send({ type: \"hello\", jwt });\n    }\n    // Send (or enqueue to send) a message to the server.\n    #send(msg) {\n        if (this.#closed !== undefined) {\n            throw new InternalError(\"Trying to send a message on a closed client\");\n        }\n        if (this.#opened) {\n            this.#sendToSocket(msg);\n        }\n        else {\n            const openCallback = () => this.#sendToSocket(msg);\n            const errorCallback = () => undefined;\n            this.#openCallbacks.push({ openCallback, errorCallback });\n        }\n    }\n    // The socket transitioned from CONNECTING to OPEN\n    #onSocketOpen() {\n        const protocol = this.#socket.protocol;\n        if (protocol === undefined) {\n            this.#setClosed(new ClientError(\"The `WebSocket.protocol` property is undefined. This most likely means that the WebSocket \" +\n                \"implementation provided by the environment is broken. If you are using Miniflare 2, \" +\n                \"please update to Miniflare 3, which fixes this problem.\"));\n            return;\n        }\n        else if (protocol === \"\") {\n            this.#subprotocol = { version: 1, encoding: \"json\" };\n        }\n        else {\n            this.#subprotocol = subprotocolsV3.get(protocol);\n            if (this.#subprotocol === undefined) {\n                this.#setClosed(new ProtoError(`Unrecognized WebSocket subprotocol: ${JSON.stringify(protocol)}`));\n                return;\n            }\n        }\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.openCallback();\n        }\n        this.#openCallbacks.length = 0;\n        this.#opened = true;\n    }\n    #sendToSocket(msg) {\n        const encoding = this.#subprotocol.encoding;\n        if (encoding === \"json\") {\n            const jsonMsg = writeJsonObject(msg, json_ClientMsg);\n            this.#socket.send(jsonMsg);\n        }\n        else if (encoding === \"protobuf\") {\n            const protobufMsg = writeProtobufMessage(msg, protobuf_ClientMsg);\n            this.#socket.send(protobufMsg);\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n    }\n    /** Get the protocol version negotiated with the server, possibly waiting until the socket is open. */\n    getVersion() {\n        return new Promise((versionCallback, errorCallback) => {\n            this.#getVersionCalled = true;\n            if (this.#closed !== undefined) {\n                errorCallback(this.#closed);\n            }\n            else if (!this.#opened) {\n                const openCallback = () => versionCallback(this.#subprotocol.version);\n                this.#openCallbacks.push({ openCallback, errorCallback });\n            }\n            else {\n                versionCallback(this.#subprotocol.version);\n            }\n        });\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (this.#subprotocol === undefined || !this.#getVersionCalled) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the WebSocket server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this.#subprotocol.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported on protocol version ${minVersion} and higher, ` +\n                `but the WebSocket server only supports version ${this.#subprotocol.version}`);\n        }\n    }\n    // Send a request to the server and invoke a callback when we get the response.\n    /** @private */\n    _sendRequest(request, callbacks) {\n        if (this.#closed !== undefined) {\n            callbacks.errorCallback(new ClosedError(\"Client is closed\", this.#closed));\n            return;\n        }\n        const requestId = this.#requestIdAlloc.alloc();\n        this.#responseMap.set(requestId, { ...callbacks, type: request.type });\n        this.#send({ type: \"request\", requestId, request });\n    }\n    // The socket encountered an error.\n    #onSocketError(event) {\n        const eventMessage = event.message;\n        const message = eventMessage ?? \"WebSocket was closed due to an error\";\n        this.#setClosed(new WebSocketError(message));\n    }\n    // The socket was closed.\n    #onSocketClose(event) {\n        let message = `WebSocket was closed with code ${event.code}`;\n        if (event.reason) {\n            message += `: ${event.reason}`;\n        }\n        this.#setClosed(new WebSocketError(message));\n    }\n    // Close the client with the given error.\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.errorCallback(error);\n        }\n        this.#openCallbacks.length = 0;\n        for (const [requestId, responseState] of this.#responseMap.entries()) {\n            responseState.errorCallback(error);\n            this.#requestIdAlloc.free(requestId);\n        }\n        this.#responseMap.clear();\n        this.#socket.close();\n    }\n    // We received a message from the socket.\n    #onSocketMessage(event) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        try {\n            let msg;\n            const encoding = this.#subprotocol.encoding;\n            if (encoding === \"json\") {\n                if (typeof event.data !== \"string\") {\n                    this.#socket.close(3003, \"Only text messages are accepted with JSON encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-text message from server with JSON encoding\"));\n                    return;\n                }\n                msg = readJsonObject(JSON.parse(event.data), json_ServerMsg);\n            }\n            else if (encoding === \"protobuf\") {\n                if (!(event.data instanceof ArrayBuffer)) {\n                    this.#socket.close(3003, \"Only binary messages are accepted with Protobuf encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-binary message from server with Protobuf encoding\"));\n                    return;\n                }\n                msg = readProtobufMessage(new Uint8Array(event.data), protobuf_ServerMsg);\n            }\n            else {\n                throw impossible(encoding, \"Impossible encoding\");\n            }\n            this.#handleMsg(msg);\n        }\n        catch (e) {\n            this.#socket.close(3007, \"Could not handle message\");\n            this.#setClosed(e);\n        }\n    }\n    // Handle a message from the server.\n    #handleMsg(msg) {\n        if (msg.type === \"none\") {\n            throw new ProtoError(\"Received an unrecognized ServerMsg\");\n        }\n        else if (msg.type === \"hello_ok\" || msg.type === \"hello_error\") {\n            if (this.#recvdHello) {\n                throw new ProtoError(\"Received a duplicated hello response\");\n            }\n            this.#recvdHello = true;\n            if (msg.type === \"hello_error\") {\n                throw errorFromProto(msg.error);\n            }\n            return;\n        }\n        else if (!this.#recvdHello) {\n            throw new ProtoError(\"Received a non-hello message before a hello response\");\n        }\n        if (msg.type === \"response_ok\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected OK response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            try {\n                if (responseState.type !== msg.response.type) {\n                    console.dir({ responseState, msg });\n                    throw new ProtoError(\"Received unexpected type of response\");\n                }\n                responseState.responseCallback(msg.response);\n            }\n            catch (e) {\n                responseState.errorCallback(e);\n                throw e;\n            }\n        }\n        else if (msg.type === \"response_error\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected error response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            responseState.errorCallback(errorFromProto(msg.error));\n        }\n        else {\n            throw impossible(msg, \"Impossible ServerMsg type\");\n        }\n    }\n    /** Open a {@link WsStream}, a stream for executing SQL statements. */\n    openStream() {\n        return WsStream.open(this);\n    }\n    /** Cache a SQL text on the server. This requires protocol version 2 or higher. */\n    storeSql(sql) {\n        this._ensureVersion(2, \"storeSql()\");\n        const sqlId = this.#sqlIdAlloc.alloc();\n        const sqlObj = new Sql(this, sqlId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => sqlObj._setClosed(e);\n        const request = { type: \"store_sql\", sqlId, sql };\n        this._sendRequest(request, { responseCallback, errorCallback });\n        return sqlObj;\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        const responseCallback = () => this.#sqlIdAlloc.free(sqlId);\n        const errorCallback = (e) => this.#setClosed(e);\n        const request = { type: \"close_sql\", sqlId };\n        this._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Close the client and the WebSocket. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n", "const _fetch = fetch;\nconst _Request = Request;\nconst _Headers = Headers;\nexport {\n    _fetch as fetch,\n    _Request as Request,\n    _Headers as Headers,\n};\n", "// queueMicrotask() ponyfill\n// https://github.com/libsql/libsql-client-ts/issues/47\nlet _queueMicrotask;\nif (typeof queueMicrotask !== \"undefined\") {\n    _queueMicrotask = queueMicrotask;\n}\nelse {\n    const resolved = Promise.resolve();\n    _queueMicrotask = (callback) => {\n        resolved.then(callback);\n    };\n}\nexport { _queueMicrotask as queueMicrotask };\n", "export class ByteQueue {\n    #array;\n    #shiftPos;\n    #pushPos;\n    constructor(initialCap) {\n        this.#array = new Uint8Array(new ArrayBuffer(initialCap));\n        this.#shiftPos = 0;\n        this.#pushPos = 0;\n    }\n    get length() {\n        return this.#pushPos - this.#shiftPos;\n    }\n    data() {\n        return this.#array.slice(this.#shiftPos, this.#pushPos);\n    }\n    push(chunk) {\n        this.#ensurePush(chunk.byteLength);\n        this.#array.set(chunk, this.#pushPos);\n        this.#pushPos += chunk.byteLength;\n    }\n    #ensurePush(pushLength) {\n        if (this.#pushPos + pushLength <= this.#array.byteLength) {\n            return;\n        }\n        const filledLength = this.#pushPos - this.#shiftPos;\n        if (filledLength + pushLength <= this.#array.byteLength &&\n            2 * this.#pushPos >= this.#array.byteLength) {\n            this.#array.copyWithin(0, this.#shiftPos, this.#pushPos);\n        }\n        else {\n            let newCap = this.#array.byteLength;\n            do {\n                newCap *= 2;\n            } while (filledLength + pushLength > newCap);\n            const newArray = new Uint8Array(new ArrayBuffer(newCap));\n            newArray.set(this.#array.slice(this.#shiftPos, this.#pushPos), 0);\n            this.#array = newArray;\n        }\n        this.#pushPos = filledLength;\n        this.#shiftPos = 0;\n    }\n    shift(length) {\n        this.#shiftPos += length;\n    }\n}\n", "import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/json_decode.js\";\nexport function PipelineRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    const results = d.arrayObjectsMap(obj[\"results\"], StreamResult);\n    return { baton, baseUrl, results };\n}\nfunction StreamResult(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"ok\") {\n        const response = StreamResponse(d.object(obj[\"response\"]));\n        return { type: \"ok\", response };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResult\");\n    }\n}\nfunction StreamResponse(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"close\") {\n        return { type: \"close\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResponse\");\n    }\n}\nexport function CursorRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    return { baton, baseUrl };\n}\n", "import { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const PipelineRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined, results: [] }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n    3(r, msg) { msg.results.push(r.message(StreamResult)); },\n};\nconst StreamResult = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"ok\", response: r.message(StreamResponse) }; },\n    2(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StreamResponse = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"close\" }; },\n    2(r) { return r.message(ExecuteStreamResp); },\n    3(r) { return r.message(BatchStreamResp); },\n    4(r) { return { type: \"sequence\" }; },\n    5(r) { return r.message(DescribeStreamResp); },\n    6(r) { return { type: \"store_sql\" }; },\n    7(r) { return { type: \"close_sql\" }; },\n    8(r) { return r.message(GetAutocommitStreamResp); },\n};\nconst ExecuteStreamResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchStreamResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst DescribeStreamResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitStreamResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\nexport const CursorRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n};\n", "import { ByteQueue } from \"../byte_queue.js\";\nimport { Cursor } from \"../cursor.js\";\nimport * as jsond from \"../encoding/json/decode.js\";\nimport * as protobufd from \"../encoding/protobuf/decode.js\";\nimport { ClientError, ClosedError, ProtoError, InternalError } from \"../errors.js\";\nimport { impossible } from \"../util.js\";\nimport { CursorRespBody as json_CursorRespBody } from \"./json_decode.js\";\nimport { CursorRespBody as protobuf_CursorRespBody } from \"./protobuf_decode.js\";\nimport { CursorEntry as json_CursorEntry } from \"../shared/json_decode.js\";\nimport { CursorEntry as protobuf_CursorEntry } from \"../shared/protobuf_decode.js\";\nexport class HttpCursor extends Cursor {\n    #stream;\n    #encoding;\n    #reader;\n    #queue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(stream, encoding) {\n        super();\n        this.#stream = stream;\n        this.#encoding = encoding;\n        this.#reader = undefined;\n        this.#queue = new ByteQueue(16 * 1024);\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    async open(response) {\n        if (response.body === null) {\n            throw new ProtoError(\"No response body for cursor request\");\n        }\n        this.#reader = response.body.getReader();\n        const respBody = await this.#nextItem(json_CursorRespBody, protobuf_CursorRespBody);\n        if (respBody === undefined) {\n            throw new ProtoError(\"Empty response to cursor request\");\n        }\n        return respBody;\n    }\n    /** Fetch the next entry from the cursor. */\n    next() {\n        return this.#nextItem(json_CursorEntry, protobuf_CursorEntry);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._cursorClosed(this);\n        if (this.#reader !== undefined) {\n            this.#reader.cancel();\n        }\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    async #nextItem(jsonFun, protobufDef) {\n        for (;;) {\n            if (this.#done) {\n                return undefined;\n            }\n            else if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            if (this.#encoding === \"json\") {\n                const jsonData = this.#parseItemJson();\n                if (jsonData !== undefined) {\n                    const jsonText = new TextDecoder().decode(jsonData);\n                    const jsonValue = JSON.parse(jsonText);\n                    return jsond.readJsonObject(jsonValue, jsonFun);\n                }\n            }\n            else if (this.#encoding === \"protobuf\") {\n                const protobufData = this.#parseItemProtobuf();\n                if (protobufData !== undefined) {\n                    return protobufd.readProtobufMessage(protobufData, protobufDef);\n                }\n            }\n            else {\n                throw impossible(this.#encoding, \"Impossible encoding\");\n            }\n            if (this.#reader === undefined) {\n                throw new InternalError(\"Attempted to read from HTTP cursor before it was opened\");\n            }\n            const { value, done } = await this.#reader.read();\n            if (done && this.#queue.length === 0) {\n                this.#done = true;\n            }\n            else if (done) {\n                throw new ProtoError(\"Unexpected end of cursor stream\");\n            }\n            else {\n                this.#queue.push(value);\n            }\n        }\n    }\n    #parseItemJson() {\n        const data = this.#queue.data();\n        const newlineByte = 10;\n        const newlinePos = data.indexOf(newlineByte);\n        if (newlinePos < 0) {\n            return undefined;\n        }\n        const jsonData = data.slice(0, newlinePos);\n        this.#queue.shift(newlinePos + 1);\n        return jsonData;\n    }\n    #parseItemProtobuf() {\n        const data = this.#queue.data();\n        let varintValue = 0;\n        let varintLength = 0;\n        for (;;) {\n            if (varintLength >= data.byteLength) {\n                return undefined;\n            }\n            const byte = data[varintLength];\n            varintValue |= (byte & 0x7f) << (7 * varintLength);\n            varintLength += 1;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        if (data.byteLength < varintLength + varintValue) {\n            return undefined;\n        }\n        const protobufData = data.slice(varintLength, varintLength + varintValue);\n        this.#queue.shift(varintLength + varintValue);\n        return protobufData;\n    }\n}\n", "import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.arrayObjects(\"requests\", msg.requests, StreamRequest);\n}\nfunction StreamRequest(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"close\") {\n        // do nothing\n    }\n    else if (msg.type === \"execute\") {\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"sequence\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.object(\"batch\", msg.batch, Batch);\n}\n", "import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    for (const req of msg.requests) {\n        w.message(2, req, StreamRequest);\n    }\n}\nfunction StreamRequest(w, msg) {\n    if (msg.type === \"close\") {\n        w.message(1, msg, CloseStreamReq);\n    }\n    else if (msg.type === \"execute\") {\n        w.message(2, msg, ExecuteStreamReq);\n    }\n    else if (msg.type === \"batch\") {\n        w.message(3, msg, BatchStreamReq);\n    }\n    else if (msg.type === \"sequence\") {\n        w.message(4, msg, SequenceStreamReq);\n    }\n    else if (msg.type === \"describe\") {\n        w.message(5, msg, DescribeStreamReq);\n    }\n    else if (msg.type === \"store_sql\") {\n        w.message(6, msg, StoreSqlStreamReq);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.message(7, msg, CloseSqlStreamReq);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.message(8, msg, GetAutocommitStreamReq);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nfunction CloseStreamReq(_w, _msg) {\n}\nfunction ExecuteStreamReq(w, msg) {\n    w.message(1, msg.stmt, Stmt);\n}\nfunction BatchStreamReq(w, msg) {\n    w.message(1, msg.batch, Batch);\n}\nfunction SequenceStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction DescribeStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction StoreSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitStreamReq(_w, _msg) {\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    w.message(2, msg.batch, Batch);\n}\n", "import { Request, Headers } from \"@libsql/isomorphic-fetch\";\nimport { ClientError, HttpServerError, ProtocolVersionError, ProtoError, ClosedError, InternalError, } from \"../errors.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { Queue } from \"../queue.js\";\nimport { queueMicrotask } from \"../queue_microtask.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { Stream } from \"../stream.js\";\nimport { impossible } from \"../util.js\";\nimport { HttpCursor } from \"./cursor.js\";\nimport { PipelineReqBody as json_PipelineReqBody } from \"./json_encode.js\";\nimport { PipelineReqBody as protobuf_PipelineReqBody } from \"./protobuf_encode.js\";\nimport { CursorReqBody as json_CursorReqBody } from \"./json_encode.js\";\nimport { CursorReqBody as protobuf_CursorReqBody } from \"./protobuf_encode.js\";\nimport { PipelineRespBody as json_PipelineRespBody } from \"./json_decode.js\";\nimport { PipelineRespBody as protobuf_PipelineRespBody } from \"./protobuf_decode.js\";\nexport class HttpStream extends Stream {\n    #client;\n    #baseUrl;\n    #jwt;\n    #fetch;\n    #baton;\n    #queue;\n    #flushing;\n    #cursor;\n    #closing;\n    #closeQueued;\n    #closed;\n    #sqlIdAlloc;\n    /** @private */\n    constructor(client, baseUrl, jwt, customFetch) {\n        super(client.intMode);\n        this.#client = client;\n        this.#baseUrl = baseUrl.toString();\n        this.#jwt = jwt;\n        this.#fetch = customFetch;\n        this.#baton = undefined;\n        this.#queue = new Queue();\n        this.#flushing = false;\n        this.#closing = false;\n        this.#closeQueued = false;\n        this.#closed = undefined;\n        this.#sqlIdAlloc = new IdAlloc();\n    }\n    /** Get the {@link HttpClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this;\n    }\n    /** Cache a SQL text on the server. */\n    storeSql(sql) {\n        const sqlId = this.#sqlIdAlloc.alloc();\n        this.#sendStreamRequest({ type: \"store_sql\", sqlId, sql }).then(() => undefined, (error) => this._setClosed(error));\n        return new Sql(this, sqlId);\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#sendStreamRequest({ type: \"close_sql\", sqlId }).then(() => this.#sqlIdAlloc.free(sqlId), (error) => this._setClosed(error));\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({ type: \"execute\", stmt }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({ type: \"batch\", batch }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"pipeline\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** Immediately close the stream. */\n    close() {\n        this._setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** True if the stream is closed. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        this.#client._streamClosed(this);\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        if ((this.#baton !== undefined || this.#flushing) && !this.#closeQueued) {\n            this.#queue.push({\n                type: \"pipeline\",\n                request: { type: \"close\" },\n                responseCallback: () => undefined,\n                errorCallback: () => undefined,\n            });\n            this.#closeQueued = true;\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Stream is closed\", this.#closed);\n        }\n        else if (this.#closing) {\n            throw new ClosedError(\"Stream is closing\", undefined);\n        }\n        else {\n            this.#queue.push(entry);\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #flushQueue() {\n        if (this.#flushing || this.#cursor !== undefined) {\n            return;\n        }\n        if (this.#closing && this.#queue.length === 0) {\n            this._setClosed(new ClientError(\"Stream was gracefully closed\"));\n            return;\n        }\n        const endpoint = this.#client._endpoint;\n        if (endpoint === undefined) {\n            this.#client._endpointPromise.then(() => this.#flushQueue(), (error) => this._setClosed(error));\n            return;\n        }\n        const firstEntry = this.#queue.shift();\n        if (firstEntry === undefined) {\n            return;\n        }\n        else if (firstEntry.type === \"pipeline\") {\n            const pipeline = [firstEntry];\n            for (;;) {\n                const entry = this.#queue.first();\n                if (entry !== undefined && entry.type === \"pipeline\") {\n                    pipeline.push(entry);\n                    this.#queue.shift();\n                }\n                else if (entry === undefined && this.#closing && !this.#closeQueued) {\n                    pipeline.push({\n                        type: \"pipeline\",\n                        request: { type: \"close\" },\n                        responseCallback: () => undefined,\n                        errorCallback: () => undefined,\n                    });\n                    this.#closeQueued = true;\n                    break;\n                }\n                else {\n                    break;\n                }\n            }\n            this.#flushPipeline(endpoint, pipeline);\n        }\n        else if (firstEntry.type === \"cursor\") {\n            this.#flushCursor(endpoint, firstEntry);\n        }\n        else {\n            throw impossible(firstEntry, \"Impossible type of QueueEntry\");\n        }\n    }\n    #flushPipeline(endpoint, pipeline) {\n        this.#flush(() => this.#createPipelineRequest(pipeline, endpoint), (resp) => decodePipelineResponse(resp, endpoint.encoding), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (respBody) => handlePipelineResponse(pipeline, respBody), (error) => pipeline.forEach((entry) => entry.errorCallback(error)));\n    }\n    #flushCursor(endpoint, entry) {\n        const cursor = new HttpCursor(this, endpoint.encoding);\n        this.#cursor = cursor;\n        this.#flush(() => this.#createCursorRequest(entry, endpoint), (resp) => cursor.open(resp), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (_respBody) => entry.cursorCallback(cursor), (error) => entry.errorCallback(error));\n    }\n    #flush(createRequest, decodeResponse, getBaton, getBaseUrl, handleResponse, handleError) {\n        let promise;\n        try {\n            const request = createRequest();\n            const fetch = this.#fetch;\n            promise = fetch(request);\n        }\n        catch (error) {\n            promise = Promise.reject(error);\n        }\n        this.#flushing = true;\n        promise.then((resp) => {\n            if (!resp.ok) {\n                return errorFromResponse(resp).then((error) => {\n                    throw error;\n                });\n            }\n            return decodeResponse(resp);\n        }).then((r) => {\n            this.#baton = getBaton(r);\n            this.#baseUrl = getBaseUrl(r) ?? this.#baseUrl;\n            handleResponse(r);\n        }).catch((error) => {\n            this._setClosed(error);\n            handleError(error);\n        }).finally(() => {\n            this.#flushing = false;\n            this.#flushQueue();\n        });\n    }\n    #createPipelineRequest(pipeline, endpoint) {\n        return this.#createRequest(new URL(endpoint.pipelinePath, this.#baseUrl), {\n            baton: this.#baton,\n            requests: pipeline.map((entry) => entry.request),\n        }, endpoint.encoding, json_PipelineReqBody, protobuf_PipelineReqBody);\n    }\n    #createCursorRequest(entry, endpoint) {\n        if (endpoint.cursorPath === undefined) {\n            throw new ProtocolVersionError(\"Cursors are supported only on protocol version 3 and higher, \" +\n                `but the HTTP server only supports version ${endpoint.version}.`);\n        }\n        return this.#createRequest(new URL(endpoint.cursorPath, this.#baseUrl), {\n            baton: this.#baton,\n            batch: entry.batch,\n        }, endpoint.encoding, json_CursorReqBody, protobuf_CursorReqBody);\n    }\n    #createRequest(url, reqBody, encoding, jsonFun, protobufFun) {\n        let bodyData;\n        let contentType;\n        if (encoding === \"json\") {\n            bodyData = writeJsonObject(reqBody, jsonFun);\n            contentType = \"application/json\";\n        }\n        else if (encoding === \"protobuf\") {\n            bodyData = writeProtobufMessage(reqBody, protobufFun);\n            contentType = \"application/x-protobuf\";\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n        const headers = new Headers();\n        headers.set(\"content-type\", contentType);\n        if (this.#jwt !== undefined) {\n            headers.set(\"authorization\", `Bearer ${this.#jwt}`);\n        }\n        return new Request(url.toString(), { method: \"POST\", headers, body: bodyData });\n    }\n}\nfunction handlePipelineResponse(pipeline, respBody) {\n    if (respBody.results.length !== pipeline.length) {\n        throw new ProtoError(\"Server returned unexpected number of pipeline results\");\n    }\n    for (let i = 0; i < pipeline.length; ++i) {\n        const result = respBody.results[i];\n        const entry = pipeline[i];\n        if (result.type === \"ok\") {\n            if (result.response.type !== entry.request.type) {\n                throw new ProtoError(\"Received unexpected type of response\");\n            }\n            entry.responseCallback(result.response);\n        }\n        else if (result.type === \"error\") {\n            entry.errorCallback(errorFromProto(result.error));\n        }\n        else if (result.type === \"none\") {\n            throw new ProtoError(\"Received unrecognized type of StreamResult\");\n        }\n        else {\n            throw impossible(result, \"Received impossible type of StreamResult\");\n        }\n    }\n}\nasync function decodePipelineResponse(resp, encoding) {\n    if (encoding === \"json\") {\n        const respJson = await resp.json();\n        return readJsonObject(respJson, json_PipelineRespBody);\n    }\n    if (encoding === \"protobuf\") {\n        const respData = await resp.arrayBuffer();\n        return readProtobufMessage(new Uint8Array(respData), protobuf_PipelineRespBody);\n    }\n    await resp.body?.cancel();\n    throw impossible(encoding, \"Impossible encoding\");\n}\nasync function errorFromResponse(resp) {\n    const respType = resp.headers.get(\"content-type\") ?? \"text/plain\";\n    let message = `Server returned HTTP status ${resp.status}`;\n    if (respType === \"application/json\") {\n        const respBody = await resp.json();\n        if (\"message\" in respBody) {\n            return errorFromProto(respBody);\n        }\n        return new HttpServerError(message, resp.status);\n    }\n    if (respType === \"text/plain\") {\n        const respBody = (await resp.text()).trim();\n        if (respBody !== \"\") {\n            message += `: ${respBody}`;\n        }\n        return new HttpServerError(message, resp.status);\n    }\n    await resp.body?.cancel();\n    return new HttpServerError(message, resp.status);\n}\n", "import { fetch, Request } from \"@libsql/isomorphic-fetch\";\nimport { Client } from \"../client.js\";\nimport { ClientError, ClosedError, ProtocolVersionError } from \"../errors.js\";\nimport { HttpStream } from \"./stream.js\";\nexport const checkEndpoints = [\n    {\n        versionPath: \"v3-protobuf\",\n        pipelinePath: \"v3-protobuf/pipeline\",\n        cursorPath: \"v3-protobuf/cursor\",\n        version: 3,\n        encoding: \"protobuf\",\n    },\n    /*\n    {\n        versionPath: \"v3\",\n        pipelinePath: \"v3/pipeline\",\n        cursorPath: \"v3/cursor\",\n        version: 3,\n        encoding: \"json\",\n    },\n    */\n];\nconst fallbackEndpoint = {\n    versionPath: \"v2\",\n    pipelinePath: \"v2/pipeline\",\n    cursorPath: undefined,\n    version: 2,\n    encoding: \"json\",\n};\n/** A client for the Hrana protocol over HTTP. */\nexport class HttpClient extends Client {\n    #url;\n    #jwt;\n    #fetch;\n    #closed;\n    #streams;\n    /** @private */\n    _endpointPromise;\n    /** @private */\n    _endpoint;\n    /** @private */\n    constructor(url, jwt, customFetch, protocolVersion = 2) {\n        super();\n        this.#url = url;\n        this.#jwt = jwt;\n        this.#fetch = customFetch ?? fetch;\n        this.#closed = undefined;\n        this.#streams = new Set();\n        if (protocolVersion == 3) {\n            this._endpointPromise = findEndpoint(this.#fetch, this.#url);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n        else {\n            this._endpointPromise = Promise.resolve(fallbackEndpoint);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n    }\n    /** Get the protocol version supported by the server. */\n    async getVersion() {\n        if (this._endpoint !== undefined) {\n            return this._endpoint.version;\n        }\n        return (await this._endpointPromise).version;\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (minVersion <= fallbackEndpoint.version) {\n            return;\n        }\n        else if (this._endpoint === undefined) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the HTTP server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this._endpoint.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                `but the HTTP server only supports version ${this._endpoint.version}.`);\n        }\n    }\n    /** Open a {@link HttpStream}, a stream for executing SQL statements. */\n    openStream() {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Client is closed\", this.#closed);\n        }\n        const stream = new HttpStream(this, this.#url, this.#jwt, this.#fetch);\n        this.#streams.add(stream);\n        return stream;\n    }\n    /** @private */\n    _streamClosed(stream) {\n        this.#streams.delete(stream);\n    }\n    /** Close the client and all its streams. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const stream of Array.from(this.#streams)) {\n            stream._setClosed(new ClosedError(\"Client was closed\", error));\n        }\n    }\n}\nasync function findEndpoint(customFetch, clientUrl) {\n    const fetch = customFetch;\n    for (const endpoint of checkEndpoints) {\n        const url = new URL(endpoint.versionPath, clientUrl);\n        const request = new Request(url.toString(), { method: \"GET\" });\n        const response = await fetch(request);\n        await response.arrayBuffer();\n        if (response.ok) {\n            return endpoint;\n        }\n    }\n    return fallbackEndpoint;\n}\n", "import { LibsqlUrlParseError } from \"./errors.js\";\n;\n/** Parses a URL compatible with the libsql client (`@libsql/client`). This URL may have the \"libsql:\" scheme\n * and may contain query parameters. */\nexport function parseLibsqlUrl(urlStr) {\n    const url = new URL(urlStr);\n    let authToken = undefined;\n    let tls = undefined;\n    for (const [key, value] of url.searchParams.entries()) {\n        if (key === \"authToken\") {\n            authToken = value;\n        }\n        else if (key === \"tls\") {\n            if (value === \"0\") {\n                tls = false;\n            }\n            else if (value === \"1\") {\n                tls = true;\n            }\n            else {\n                throw new LibsqlUrlParseError(`Unknown value for the \"tls\" query argument: ${JSON.stringify(value)}`);\n            }\n        }\n        else {\n            throw new LibsqlUrlParseError(`Unknown URL query argument ${JSON.stringify(key)}`);\n        }\n    }\n    let hranaWsScheme;\n    let hranaHttpScheme;\n    if ((url.protocol === \"http:\" || url.protocol === \"ws:\") && (tls === true)) {\n        throw new LibsqlUrlParseError(`A ${JSON.stringify(url.protocol)} URL cannot opt into TLS using ?tls=1`);\n    }\n    else if ((url.protocol === \"https:\" || url.protocol === \"wss:\") && (tls === false)) {\n        throw new LibsqlUrlParseError(`A ${JSON.stringify(url.protocol)} URL cannot opt out of TLS using ?tls=0`);\n    }\n    if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n        hranaHttpScheme = url.protocol;\n    }\n    else if (url.protocol === \"ws:\" || url.protocol === \"wss:\") {\n        hranaWsScheme = url.protocol;\n    }\n    else if (url.protocol === \"libsql:\") {\n        if (tls === false) {\n            if (!url.port) {\n                throw new LibsqlUrlParseError(`A \"libsql:\" URL with ?tls=0 must specify an explicit port`);\n            }\n            hranaHttpScheme = \"http:\";\n            hranaWsScheme = \"ws:\";\n        }\n        else {\n            hranaHttpScheme = \"https:\";\n            hranaWsScheme = \"wss:\";\n        }\n    }\n    else {\n        throw new LibsqlUrlParseError(`This client does not support ${JSON.stringify(url.protocol)} URLs. ` +\n            'Please use a \"libsql:\", \"ws:\", \"wss:\", \"http:\" or \"https:\" URL instead.');\n    }\n    if (url.username || url.password) {\n        throw new LibsqlUrlParseError(\"This client does not support HTTP Basic authentication with a username and password. \" +\n            'You can authenticate using a token passed in the \"authToken\" URL query parameter.');\n    }\n    if (url.hash) {\n        throw new LibsqlUrlParseError(\"URL fragments are not supported\");\n    }\n    let hranaPath = url.pathname;\n    if (hranaPath === \"/\") {\n        hranaPath = \"\";\n    }\n    const hranaWsUrl = hranaWsScheme !== undefined\n        ? `${hranaWsScheme}//${url.host}${hranaPath}` : undefined;\n    const hranaHttpUrl = hranaHttpScheme !== undefined\n        ? `${hranaHttpScheme}//${url.host}${hranaPath}` : undefined;\n    return { hranaWsUrl, hranaHttpUrl, authToken };\n}\n", "import { WebSocket } from \"@libsql/isomorphic-ws\";\nimport { subprotocolsV2, subprotocolsV3 } from \"./ws/client.js\";\nimport { WebSocketUnsupportedError } from \"./errors.js\";\nimport { HttpClient } from \"./http/client.js\";\nimport { WsClient } from \"./ws/client.js\";\nexport { WebSocket } from \"@libsql/isomorphic-ws\";\nexport { fetch, Request, Headers } from \"@libsql/isomorphic-fetch\";\nexport { Client } from \"./client.js\";\nexport * from \"./errors.js\";\nexport { Batch, BatchStep, BatchCond } from \"./batch.js\";\nexport { parseLibsqlUrl } from \"./libsql_url.js\";\nexport { Sql } from \"./sql.js\";\nexport { Stmt } from \"./stmt.js\";\nexport { Stream } from \"./stream.js\";\nexport { HttpClient } from \"./http/client.js\";\nexport { HttpStream } from \"./http/stream.js\";\nexport { WsClient } from \"./ws/client.js\";\nexport { WsStream } from \"./ws/stream.js\";\n/** Open a Hrana client over WebSocket connected to the given `url`. */\nexport function openWs(url, jwt, protocolVersion = 2) {\n    if (typeof WebSocket === \"undefined\") {\n        throw new WebSocketUnsupportedError(\"WebSockets are not supported in this environment\");\n    }\n    var subprotocols = undefined;\n    if (protocolVersion == 3) {\n        subprotocols = Array.from(subprotocolsV3.keys());\n    }\n    else {\n        subprotocols = Array.from(subprotocolsV2.keys());\n    }\n    const socket = new WebSocket(url, subprotocols);\n    return new WsClient(socket, jwt);\n}\n/** Open a Hrana client over HTTP connected to the given `url`.\n *\n * If the `customFetch` argument is passed and not `undefined`, it is used in place of the `fetch` function\n * from `@libsql/isomorphic-fetch`. This function is always called with a `Request` object from\n * `@libsql/isomorphic-fetch`.\n */\nexport function openHttp(url, jwt, customFetch, protocolVersion = 2) {\n    return new HttpClient(url instanceof URL ? url : new URL(url), jwt, customFetch, protocolVersion);\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { transactionModeToBegin, ResultSetImpl } from \"@libsql/core/util\";\nexport class HranaTransaction {\n    #mode;\n    #version;\n    // Promise that is resolved when the BEGIN statement completes, or `undefined` if we haven't executed the\n    // BEGIN statement yet.\n    #started;\n    /** @private */\n    constructor(mode, version) {\n        this.#mode = mode;\n        this.#version = version;\n        this.#started = undefined;\n    }\n    execute(stmt) {\n        return this.batch([stmt]).then((results) => results[0]);\n    }\n    async batch(stmts) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            const hranaStmts = stmts.map(stmtToHrana);\n            let rowsPromises;\n            if (this.#started === undefined) {\n                // The transaction hasn't started yet, so we need to send the BEGIN statement in a batch with\n                // `hranaStmts`.\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                const beginStep = batch.step();\n                const beginPromise = beginStep.run(transactionModeToBegin(this.#mode));\n                // Execute the `hranaStmts` only if the BEGIN succeeded, to make sure that we don't execute it\n                // outside of a transaction.\n                let lastStep = beginStep;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch\n                        .step()\n                        .condition(hrana.BatchCond.ok(lastStep));\n                    if (this.#version >= 3) {\n                        // If the Hrana version supports it, make sure that we are still in a transaction\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                // `this.#started` is resolved successfully only if the batch and the BEGIN statement inside\n                // of the batch are both successful.\n                this.#started = batch\n                    .execute()\n                    .then(() => beginPromise)\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    // If the BEGIN failed, the transaction is unusable and we must close it. However, if the\n                    // BEGIN suceeds and `hranaStmts` fail, the transaction is _not_ closed.\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                if (this.#version < 3) {\n                    // The transaction has started, so we must wait until the BEGIN statement completed to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction.\n                    await this.#started;\n                }\n                else {\n                    // The transaction has started, but we will use `hrana.BatchCond.isAutocommit()` to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction, so we don't have to\n                    // wait for `this.#started`\n                }\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                let lastStep = undefined;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch.step();\n                    if (lastStep !== undefined) {\n                        stmtStep.condition(hrana.BatchCond.ok(lastStep));\n                    }\n                    if (this.#version >= 3) {\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                await batch.execute();\n            }\n            const resultSets = [];\n            for (const rowsPromise of rowsPromises) {\n                const rows = await rowsPromise;\n                if (rows === undefined) {\n                    throw new LibsqlError(\"Statement in a transaction was not executed, \" +\n                        \"probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n                }\n                resultSets.push(resultSetFromHrana(rows));\n            }\n            return resultSets;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async executeMultiple(sql) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            if (this.#started === undefined) {\n                // If the transaction hasn't started yet, start it now\n                this.#started = stream\n                    .run(transactionModeToBegin(this.#mode))\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                // Wait until the transaction has started\n                await this.#started;\n            }\n            await stream.sequence(sql);\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async rollback() {\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                return;\n            }\n            if (this.#started !== undefined) {\n                // We don't have to wait for the BEGIN statement to complete. If the BEGIN fails, we will\n                // execute a ROLLBACK outside of an active transaction, which should be harmless.\n            }\n            else {\n                // We did nothing in the transaction, so there is nothing to rollback.\n                return;\n            }\n            // Pipeline the ROLLBACK statement and the stream close.\n            const promise = stream.run(\"ROLLBACK\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            // `this.close()` may close the `hrana.Client`, which aborts all pending stream requests, so we\n            // must call it _after_ we receive the ROLLBACK response.\n            // Also note that the current stream should already be closed, but we need to call `this.close()`\n            // anyway, because it may need to do more cleanup.\n            this.close();\n        }\n    }\n    async commit() {\n        // (this method is analogous to `rollback()`)\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                throw new LibsqlError(\"Cannot commit the transaction because it is already closed\", \"TRANSACTION_CLOSED\");\n            }\n            if (this.#started !== undefined) {\n                // Make sure to execute the COMMIT only if the BEGIN was successful.\n                await this.#started;\n            }\n            else {\n                return;\n            }\n            const promise = stream.run(\"COMMIT\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            this.close();\n        }\n    }\n}\nexport async function executeHranaBatch(mode, version, batch, hranaStmts, disableForeignKeys = false) {\n    if (disableForeignKeys) {\n        batch.step().run(\"PRAGMA foreign_keys=off\");\n    }\n    const beginStep = batch.step();\n    const beginPromise = beginStep.run(transactionModeToBegin(mode));\n    let lastStep = beginStep;\n    const stmtPromises = hranaStmts.map((hranaStmt) => {\n        const stmtStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n        if (version >= 3) {\n            stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n        }\n        const stmtPromise = stmtStep.query(hranaStmt);\n        lastStep = stmtStep;\n        return stmtPromise;\n    });\n    const commitStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n    if (version >= 3) {\n        commitStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n    }\n    const commitPromise = commitStep.run(\"COMMIT\");\n    const rollbackStep = batch\n        .step()\n        .condition(hrana.BatchCond.not(hrana.BatchCond.ok(commitStep)));\n    rollbackStep.run(\"ROLLBACK\").catch((_) => undefined);\n    if (disableForeignKeys) {\n        batch.step().run(\"PRAGMA foreign_keys=on\");\n    }\n    await batch.execute();\n    const resultSets = [];\n    await beginPromise;\n    for (const stmtPromise of stmtPromises) {\n        const hranaRows = await stmtPromise;\n        if (hranaRows === undefined) {\n            throw new LibsqlError(\"Statement in a batch was not executed, probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n        }\n        resultSets.push(resultSetFromHrana(hranaRows));\n    }\n    await commitPromise;\n    return resultSets;\n}\nexport function stmtToHrana(stmt) {\n    let sql;\n    let args;\n    if (Array.isArray(stmt)) {\n        [sql, args] = stmt;\n    }\n    else if (typeof stmt === \"string\") {\n        sql = stmt;\n    }\n    else {\n        sql = stmt.sql;\n        args = stmt.args;\n    }\n    const hranaStmt = new hrana.Stmt(sql);\n    if (args) {\n        if (Array.isArray(args)) {\n            hranaStmt.bindIndexes(args);\n        }\n        else {\n            for (const [key, value] of Object.entries(args)) {\n                hranaStmt.bindName(key, value);\n            }\n        }\n    }\n    return hranaStmt;\n}\nexport function resultSetFromHrana(hranaRows) {\n    const columns = hranaRows.columnNames.map((c) => c ?? \"\");\n    const columnTypes = hranaRows.columnDecltypes.map((c) => c ?? \"\");\n    const rows = hranaRows.rows;\n    const rowsAffected = hranaRows.affectedRowCount;\n    const lastInsertRowid = hranaRows.lastInsertRowid !== undefined\n        ? hranaRows.lastInsertRowid\n        : undefined;\n    return new ResultSetImpl(columns, columnTypes, rows, rowsAffected, lastInsertRowid);\n}\nexport function mapHranaError(e) {\n    if (e instanceof hrana.ClientError) {\n        const code = mapHranaErrorCode(e);\n        return new LibsqlError(e.message, code, undefined, e);\n    }\n    return e;\n}\nfunction mapHranaErrorCode(e) {\n    if (e instanceof hrana.ResponseError && e.code !== undefined) {\n        return e.code;\n    }\n    else if (e instanceof hrana.ProtoError) {\n        return \"HRANA_PROTO_ERROR\";\n    }\n    else if (e instanceof hrana.ClosedError) {\n        return e.cause instanceof hrana.ClientError\n            ? mapHranaErrorCode(e.cause)\n            : \"HRANA_CLOSED_ERROR\";\n    }\n    else if (e instanceof hrana.WebSocketError) {\n        return \"HRANA_WEBSOCKET_ERROR\";\n    }\n    else if (e instanceof hrana.HttpServerError) {\n        return \"SERVER_ERROR\";\n    }\n    else if (e instanceof hrana.ProtocolVersionError) {\n        return \"PROTOCOL_VERSION_ERROR\";\n    }\n    else if (e instanceof hrana.InternalError) {\n        return \"INTERNAL_ERROR\";\n    }\n    else {\n        return \"UNKNOWN\";\n    }\n}\n", "export class SqlCache {\n    #owner;\n    #sqls;\n    capacity;\n    constructor(owner, capacity) {\n        this.#owner = owner;\n        this.#sqls = new Lru();\n        this.capacity = capacity;\n    }\n    // Replaces SQL strings with cached `hrana.Sql` objects in the statements in `hranaStmts`. After this\n    // function returns, we guarantee that all `hranaStmts` refer to valid (not closed) `hrana.Sql` objects,\n    // but _we may invalidate any other `hrana.Sql` objects_ (by closing them, thus removing them from the\n    // server).\n    //\n    // In practice, this means that after calling this function, you can use the statements only up to the\n    // first `await`, because concurrent code may also use the cache and invalidate those statements.\n    apply(hranaStmts) {\n        if (this.capacity <= 0) {\n            return;\n        }\n        const usedSqlObjs = new Set();\n        for (const hranaStmt of hranaStmts) {\n            if (typeof hranaStmt.sql !== \"string\") {\n                continue;\n            }\n            const sqlText = hranaStmt.sql;\n            // Stored SQL cannot exceed 5kb.\n            // https://github.com/tursodatabase/libsql/blob/e9d637e051685f92b0da43849507b5ef4232fbeb/libsql-server/src/hrana/http/request.rs#L10\n            if (sqlText.length >= 5000) {\n                continue;\n            }\n            let sqlObj = this.#sqls.get(sqlText);\n            if (sqlObj === undefined) {\n                while (this.#sqls.size + 1 > this.capacity) {\n                    const [evictSqlText, evictSqlObj] = this.#sqls.peekLru();\n                    if (usedSqlObjs.has(evictSqlObj)) {\n                        // The SQL object that we are trying to evict is already in use in this batch, so we\n                        // must not evict and close it.\n                        break;\n                    }\n                    evictSqlObj.close();\n                    this.#sqls.delete(evictSqlText);\n                }\n                if (this.#sqls.size + 1 <= this.capacity) {\n                    sqlObj = this.#owner.storeSql(sqlText);\n                    this.#sqls.set(sqlText, sqlObj);\n                }\n            }\n            if (sqlObj !== undefined) {\n                hranaStmt.sql = sqlObj;\n                usedSqlObjs.add(sqlObj);\n            }\n        }\n    }\n}\nclass Lru {\n    // This maps keys to the cache values. The entries are ordered by their last use (entires that were used\n    // most recently are at the end).\n    #cache;\n    constructor() {\n        this.#cache = new Map();\n    }\n    get(key) {\n        const value = this.#cache.get(key);\n        if (value !== undefined) {\n            // move the entry to the back of the Map\n            this.#cache.delete(key);\n            this.#cache.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        this.#cache.set(key, value);\n    }\n    peekLru() {\n        for (const entry of this.#cache.entries()) {\n            return entry;\n        }\n        return undefined;\n    }\n    delete(key) {\n        this.#cache.delete(key);\n    }\n    get size() {\n        return this.#cache.size;\n    }\n}\n", "function limiter (count) {\n  var outstanding = 0\n  var jobs = []\n\n  function remove () {\n    outstanding--\n\n    if (outstanding < count) {\n      dequeue()\n    }\n  }\n\n  function dequeue () {\n    var job = jobs.shift()\n    semaphore.queue = jobs.length\n\n    if (job) {\n      run(job.fn).then(job.resolve).catch(job.reject)\n    }\n  }\n\n  function queue (fn) {\n    return new Promise(function (resolve, reject) {\n      jobs.push({fn: fn, resolve: resolve, reject: reject})\n      semaphore.queue = jobs.length\n    })\n  }\n\n  function run (fn) {\n    outstanding++\n    try {\n      return Promise.resolve(fn()).then(function (result) {\n        remove()\n        return result\n      }, function (error) {\n        remove()\n        throw error\n      })\n    } catch (err) {\n      remove()\n      return Promise.reject(err)\n    }\n  }\n\n  var semaphore = function (fn) {\n    if (outstanding >= count) {\n      return queue(fn)\n    } else {\n      return run(fn)\n    }\n  }\n\n  return semaphore\n}\n\nfunction map (items, mapper) {\n  var failed = false\n\n  var limit = this\n\n  return Promise.all(items.map(function () {\n    var args = arguments\n    return limit(function () {\n      if (!failed) {\n        return mapper.apply(undefined, args).catch(function (e) {\n          failed = true\n          throw e\n        })\n      }\n    })\n  }))\n}\n\nfunction addExtras (fn) {\n  fn.queue = 0\n  fn.map = map\n  return fn\n}\n\nmodule.exports = function (count) {\n  if (count) {\n    return addExtras(limiter(count))\n  } else {\n    return addExtras(function (fn) {\n      return fn()\n    })\n  }\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, false));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"wss\" && config.scheme !== \"ws\") {\n        throw new LibsqlError('The WebSocket client supports only \"libsql:\", \"wss:\" and \"ws:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"ws\" && config.tls) {\n        throw new LibsqlError(`A \"ws:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"wss\" && !config.tls) {\n        throw new LibsqlError(`A \"wss:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    let client;\n    try {\n        client = hrana.openWs(url, config.authToken);\n    }\n    catch (e) {\n        if (e instanceof hrana.WebSocketUnsupportedError) {\n            const suggestedScheme = config.scheme === \"wss\" ? \"https\" : \"http\";\n            const suggestedUrl = encodeBaseUrl(suggestedScheme, config.authority, config.path);\n            throw new LibsqlError(\"This environment does not support WebSockets, please switch to the HTTP client by using \" +\n                `a \"${suggestedScheme}:\" URL (${JSON.stringify(suggestedUrl)}). ` +\n                `For more information, please read ${supportedUrlLink}`, \"WEBSOCKETS_NOT_SUPPORTED\");\n        }\n        throw mapHranaError(e);\n    }\n    return new WsClient(client, url, config.authToken, config.intMode, config.concurrency);\n}\nconst maxConnAgeMillis = 60 * 1000;\nconst sqlCacheCapacity = 100;\nexport class WsClient {\n    #url;\n    #authToken;\n    #intMode;\n    // State of the current connection. The `hrana.WsClient` inside may be closed at any moment due to an\n    // asynchronous error.\n    #connState;\n    // If defined, this is a connection that will be used in the future, once it is ready.\n    #futureConnState;\n    closed;\n    protocol;\n    #isSchemaDatabase;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(client, url, authToken, intMode, concurrency) {\n        this.#url = url;\n        this.#authToken = authToken;\n        this.#intMode = intMode;\n        this.#connState = this.#openConn(client);\n        this.#futureConnState = undefined;\n        this.closed = false;\n        this.protocol = \"ws\";\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply([hranaStmt]);\n                const hranaRowsPromise = streamState.stream.query(hranaStmt);\n                streamState.stream.closeGracefully();\n                const hranaRowsResult = await hranaRowsPromise;\n                return resultSetFromHrana(hranaRowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const normalizedStmts = stmts.map((stmt) => {\n                    if (Array.isArray(stmt)) {\n                        return {\n                            sql: stmt[0],\n                            args: stmt[1] || [],\n                        };\n                    }\n                    return stmt;\n                });\n                const hranaStmts = normalizedStmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply(hranaStmts);\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async migrate(stmts) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(\"deferred\", version, batch, hranaStmts, true);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const version = await streamState.conn.client.getVersion();\n                // the BEGIN statement will be batched with the first statement on the transaction to save a\n                // network roundtrip\n                return new WsTransaction(this, streamState, mode, version);\n            }\n            catch (e) {\n                this._closeStream(streamState);\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const promise = streamState.stream.sequence(sql);\n                streamState.stream.closeGracefully();\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in ws mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    async #openStream() {\n        if (this.closed) {\n            throw new LibsqlError(\"The client is closed\", \"CLIENT_CLOSED\");\n        }\n        const now = new Date();\n        const ageMillis = now.valueOf() - this.#connState.openTime.valueOf();\n        if (ageMillis > maxConnAgeMillis &&\n            this.#futureConnState === undefined) {\n            // The existing connection is too old, let's open a new one.\n            const futureConnState = this.#openConn();\n            this.#futureConnState = futureConnState;\n            // However, if we used `futureConnState` immediately, we would introduce additional latency,\n            // because we would have to wait for the WebSocket handshake to complete, even though we may a\n            // have perfectly good existing connection in `this.#connState`!\n            //\n            // So we wait until the `hrana.Client.getVersion()` operation completes (which happens when the\n            // WebSocket hanshake completes), and only then we replace `this.#connState` with\n            // `futureConnState`, which is stored in `this.#futureConnState` in the meantime.\n            futureConnState.client.getVersion().then((_version) => {\n                if (this.#connState !== futureConnState) {\n                    // We need to close `this.#connState` before we replace it. However, it is possible\n                    // that `this.#connState` has already been replaced: see the code below.\n                    if (this.#connState.streamStates.size === 0) {\n                        this.#connState.client.close();\n                    }\n                    else {\n                        // If there are existing streams on the connection, we must not close it, because\n                        // these streams would be broken. The last stream to be closed will also close the\n                        // connection in `_closeStream()`.\n                    }\n                }\n                this.#connState = futureConnState;\n                this.#futureConnState = undefined;\n            }, (_e) => {\n                // If the new connection could not be established, let's just ignore the error and keep\n                // using the existing connection.\n                this.#futureConnState = undefined;\n            });\n        }\n        if (this.#connState.client.closed) {\n            // An error happened on this connection and it has been closed. Let's try to seamlessly reconnect.\n            try {\n                if (this.#futureConnState !== undefined) {\n                    // We are already in the process of opening a new connection, so let's just use it\n                    // immediately.\n                    this.#connState = this.#futureConnState;\n                }\n                else {\n                    this.#connState = this.#openConn();\n                }\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        }\n        const connState = this.#connState;\n        try {\n            // Now we wait for the WebSocket handshake to complete (if it hasn't completed yet). Note that\n            // this does not increase latency, because any messages that we would send on the WebSocket before\n            // the handshake would be queued until the handshake is completed anyway.\n            if (connState.useSqlCache === undefined) {\n                connState.useSqlCache =\n                    (await connState.client.getVersion()) >= 2;\n                if (connState.useSqlCache) {\n                    connState.sqlCache.capacity = sqlCacheCapacity;\n                }\n            }\n            const stream = connState.client.openStream();\n            stream.intMode = this.#intMode;\n            const streamState = { conn: connState, stream };\n            connState.streamStates.add(streamState);\n            return streamState;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    #openConn(client) {\n        try {\n            client ??= hrana.openWs(this.#url, this.#authToken);\n            return {\n                client,\n                useSqlCache: undefined,\n                sqlCache: new SqlCache(client, 0),\n                openTime: new Date(),\n                streamStates: new Set(),\n            };\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    _closeStream(streamState) {\n        streamState.stream.close();\n        const connState = streamState.conn;\n        connState.streamStates.delete(streamState);\n        if (connState.streamStates.size === 0 &&\n            connState !== this.#connState) {\n            // We are not using this connection anymore and this is the last stream that was using it, so we\n            // must close it now.\n            connState.client.close();\n        }\n    }\n    close() {\n        this.#connState.client.close();\n        this.closed = true;\n    }\n}\nexport class WsTransaction extends HranaTransaction {\n    #client;\n    #streamState;\n    /** @private */\n    constructor(client, state, mode, version) {\n        super(mode, version);\n        this.#client = client;\n        this.#streamState = state;\n    }\n    /** @private */\n    _getStream() {\n        return this.#streamState.stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#streamState.conn.sqlCache;\n    }\n    close() {\n        this.#client._closeStream(this.#streamState);\n    }\n    get closed() {\n        return this.#streamState.stream.closed;\n    }\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"https\" && config.scheme !== \"http\") {\n        throw new LibsqlError('The HTTP client supports only \"libsql:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"http\" && config.tls) {\n        throw new LibsqlError(`A \"http:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"https\" && !config.tls) {\n        throw new LibsqlError(`A \"https:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    return new HttpClient(url, config.authToken, config.intMode, config.fetch, config.concurrency);\n}\nconst sqlCacheCapacity = 30;\nexport class HttpClient {\n    #client;\n    protocol;\n    #authToken;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(url, authToken, intMode, customFetch, concurrency) {\n        this.#client = hrana.openHttp(url, authToken, customFetch);\n        this.#client.intMode = intMode;\n        this.protocol = \"http\";\n        this.#authToken = authToken;\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === \"string\") {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || [],\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the statement and\n                // close the stream in a single HTTP request.\n                let rowsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    rowsPromise = stream.query(hranaStmt);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const rowsResult = await rowsPromise;\n                return resultSetFromHrana(rowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            try {\n                const normalizedStmts = stmts.map((stmt) => {\n                    if (Array.isArray(stmt)) {\n                        return {\n                            sql: stmt[0],\n                            args: stmt[1] || [],\n                        };\n                    }\n                    return stmt;\n                });\n                const hranaStmts = normalizedStmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    // It makes sense to use a SQL cache even for a single batch, because it may contain the same\n                    // statement repeated multiple times.\n                    const sqlCache = new SqlCache(stream, sqlCacheCapacity);\n                    sqlCache.apply(hranaStmts);\n                    // TODO: we do not use a cursor here, because it would cause three roundtrips:\n                    // 1. pipeline request to store SQL texts\n                    // 2. cursor request\n                    // 3. pipeline request to close the stream\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async migrate(stmts) {\n        return this.limit(async () => {\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(\"deferred\", version, batch, hranaStmts, true);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            try {\n                const version = await this.#client.getVersion();\n                return new HttpTransaction(this.#client.openStream(), mode, version);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            try {\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the sequence and\n                // close the stream in a single HTTP request.\n                let promise;\n                const stream = this.#client.openStream();\n                try {\n                    promise = stream.sequence(sql);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in http mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    close() {\n        this.#client.close();\n    }\n    get closed() {\n        return this.#client.closed;\n    }\n}\nexport class HttpTransaction extends HranaTransaction {\n    #stream;\n    #sqlCache;\n    /** @private */\n    constructor(stream, mode, version) {\n        super(mode, version);\n        this.#stream = stream;\n        this.#sqlCache = new SqlCache(stream, sqlCacheCapacity);\n    }\n    /** @private */\n    _getStream() {\n        return this.#stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#sqlCache;\n    }\n    close() {\n        this.#stream.close();\n    }\n    get closed() {\n        return this.#stream.closed;\n    }\n}\n", "import { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport { _createClient as _createWsClient } from \"./ws.js\";\nimport { _createClient as _createHttpClient } from \"./http.js\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme === \"ws\" || config.scheme === \"wss\") {\n        return _createWsClient(config);\n    }\n    else if (config.scheme === \"http\" || config.scheme === \"https\") {\n        return _createHttpClient(config);\n    }\n    else {\n        throw new LibsqlError('The client that uses Web standard APIs supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n}\n", "/** Error thrown by the client. */\nexport class LibsqlError extends Error {\n    /** Machine-readable error code. */\n    code;\n    /** Raw numeric error code */\n    rawCode;\n    constructor(message, code, rawCode, cause) {\n        if (code !== undefined) {\n            message = `${code}: ${message}`;\n        }\n        super(message, { cause });\n        this.code = code;\n        this.rawCode = rawCode;\n        this.name = \"LibsqlError\";\n    }\n}\n", "// URI parser based on RFC 3986\n// We can't use the standard `URL` object, because we want to support relative `file:` URLs like\n// `file:relative/path/database.db`, which are not correct according to RFC 8089, which standardizes the\n// `file` scheme.\nimport { LibsqlError } from \"./api.js\";\nexport function parseUri(text) {\n    const match = URI_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(`The URL '${text}' is not in a valid format`, \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const scheme = groups[\"scheme\"];\n    const authority = groups[\"authority\"] !== undefined\n        ? parseAuthority(groups[\"authority\"])\n        : undefined;\n    const path = percentDecode(groups[\"path\"]);\n    const query = groups[\"query\"] !== undefined ? parseQuery(groups[\"query\"]) : undefined;\n    const fragment = groups[\"fragment\"] !== undefined\n        ? percentDecode(groups[\"fragment\"])\n        : undefined;\n    return { scheme, authority, path, query, fragment };\n}\nconst URI_RE = (() => {\n    const SCHEME = \"(?<scheme>[A-Za-z][A-Za-z.+-]*)\";\n    const AUTHORITY = \"(?<authority>[^/?#]*)\";\n    const PATH = \"(?<path>[^?#]*)\";\n    const QUERY = \"(?<query>[^#]*)\";\n    const FRAGMENT = \"(?<fragment>.*)\";\n    return new RegExp(`^${SCHEME}:(//${AUTHORITY})?${PATH}(\\\\?${QUERY})?(#${FRAGMENT})?$`, \"su\");\n})();\nfunction parseAuthority(text) {\n    const match = AUTHORITY_RE.exec(text);\n    if (match === null) {\n        throw new LibsqlError(\"The authority part of the URL is not in a valid format\", \"URL_INVALID\");\n    }\n    const groups = match.groups;\n    const host = percentDecode(groups[\"host_br\"] ?? groups[\"host\"]);\n    const port = groups[\"port\"] ? parseInt(groups[\"port\"], 10) : undefined;\n    const userinfo = groups[\"username\"] !== undefined\n        ? {\n            username: percentDecode(groups[\"username\"]),\n            password: groups[\"password\"] !== undefined\n                ? percentDecode(groups[\"password\"])\n                : undefined,\n        }\n        : undefined;\n    return { host, port, userinfo };\n}\nconst AUTHORITY_RE = (() => {\n    return new RegExp(`^((?<username>[^:]*)(:(?<password>.*))?@)?((?<host>[^:\\\\[\\\\]]*)|(\\\\[(?<host_br>[^\\\\[\\\\]]*)\\\\]))(:(?<port>[0-9]*))?$`, \"su\");\n})();\n// Query string is parsed as application/x-www-form-urlencoded according to the Web URL standard:\n// https://url.spec.whatwg.org/#urlencoded-parsing\nfunction parseQuery(text) {\n    const sequences = text.split(\"&\");\n    const pairs = [];\n    for (const sequence of sequences) {\n        if (sequence === \"\") {\n            continue;\n        }\n        let key;\n        let value;\n        const splitIdx = sequence.indexOf(\"=\");\n        if (splitIdx < 0) {\n            key = sequence;\n            value = \"\";\n        }\n        else {\n            key = sequence.substring(0, splitIdx);\n            value = sequence.substring(splitIdx + 1);\n        }\n        pairs.push({\n            key: percentDecode(key.replaceAll(\"+\", \" \")),\n            value: percentDecode(value.replaceAll(\"+\", \" \")),\n        });\n    }\n    return { pairs };\n}\nfunction percentDecode(text) {\n    try {\n        return decodeURIComponent(text);\n    }\n    catch (e) {\n        if (e instanceof URIError) {\n            throw new LibsqlError(`URL component has invalid percent encoding: ${e}`, \"URL_INVALID\", undefined, e);\n        }\n        throw e;\n    }\n}\nexport function encodeBaseUrl(scheme, authority, path) {\n    if (authority === undefined) {\n        throw new LibsqlError(`URL with scheme ${JSON.stringify(scheme + \":\")} requires authority (the \"//\" part)`, \"URL_INVALID\");\n    }\n    const schemeText = `${scheme}:`;\n    const hostText = encodeHost(authority.host);\n    const portText = encodePort(authority.port);\n    const userinfoText = encodeUserinfo(authority.userinfo);\n    const authorityText = `//${userinfoText}${hostText}${portText}`;\n    let pathText = path.split(\"/\").map(encodeURIComponent).join(\"/\");\n    if (pathText !== \"\" && !pathText.startsWith(\"/\")) {\n        pathText = \"/\" + pathText;\n    }\n    return new URL(`${schemeText}${authorityText}${pathText}`);\n}\nfunction encodeHost(host) {\n    return host.includes(\":\") ? `[${encodeURI(host)}]` : encodeURI(host);\n}\nfunction encodePort(port) {\n    return port !== undefined ? `:${port}` : \"\";\n}\nfunction encodeUserinfo(userinfo) {\n    if (userinfo === undefined) {\n        return \"\";\n    }\n    const usernameText = encodeURIComponent(userinfo.username);\n    const passwordText = userinfo.password !== undefined\n        ? `:${encodeURIComponent(userinfo.password)}`\n        : \"\";\n    return `${usernameText}${passwordText}@`;\n}\n", "import { Base64 } from \"js-base64\";\nexport const supportedUrlLink = \"https://github.com/libsql/libsql-client-ts#supported-urls\";\nexport function transactionModeToBegin(mode) {\n    if (mode === \"write\") {\n        return \"BEGIN IMMEDIATE\";\n    }\n    else if (mode === \"read\") {\n        return \"BEGIN TRANSACTION READONLY\";\n    }\n    else if (mode === \"deferred\") {\n        return \"BEGIN DEFERRED\";\n    }\n    else {\n        throw RangeError('Unknown transaction mode, supported values are \"write\", \"read\" and \"deferred\"');\n    }\n}\nexport class ResultSetImpl {\n    columns;\n    columnTypes;\n    rows;\n    rowsAffected;\n    lastInsertRowid;\n    constructor(columns, columnTypes, rows, rowsAffected, lastInsertRowid) {\n        this.columns = columns;\n        this.columnTypes = columnTypes;\n        this.rows = rows;\n        this.rowsAffected = rowsAffected;\n        this.lastInsertRowid = lastInsertRowid;\n    }\n    toJSON() {\n        return {\n            columns: this.columns,\n            columnTypes: this.columnTypes,\n            rows: this.rows.map(rowToJson),\n            rowsAffected: this.rowsAffected,\n            lastInsertRowid: this.lastInsertRowid !== undefined\n                ? \"\" + this.lastInsertRowid\n                : null,\n        };\n    }\n}\nfunction rowToJson(row) {\n    return Array.prototype.map.call(row, valueToJson);\n}\nfunction valueToJson(value) {\n    if (typeof value === \"bigint\") {\n        return \"\" + value;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return Base64.fromUint8Array(new Uint8Array(value));\n    }\n    else {\n        return value;\n    }\n}\n", "import { LibsqlError } from \"./api.js\";\nimport { parseUri } from \"./uri.js\";\nimport { supportedUrlLink } from \"./util.js\";\nconst inMemoryMode = \":memory:\";\nexport function isInMemoryConfig(config) {\n    return (config.scheme === \"file\" &&\n        (config.path === \":memory:\" || config.path.startsWith(\":memory:?\")));\n}\nexport function expandConfig(config, preferHttp) {\n    if (typeof config !== \"object\") {\n        // produce a reasonable error message in the common case where users type\n        // `createClient(\"libsql://...\")` instead of `createClient({url: \"libsql://...\"})`\n        throw new TypeError(`Expected client configuration as object, got ${typeof config}`);\n    }\n    let { url, authToken, tls, intMode, concurrency } = config;\n    // fill simple defaults right here\n    concurrency = Math.max(0, concurrency || 20);\n    intMode ??= \"number\";\n    let connectionQueryParams = []; // recognized query parameters which we sanitize through white list of valid key-value pairs\n    // convert plain :memory: url to URI format to make logic more uniform\n    if (url === inMemoryMode) {\n        url = \"file::memory:\";\n    }\n    // parse url parameters first and override config with update values\n    const uri = parseUri(url);\n    const originalUriScheme = uri.scheme.toLowerCase();\n    const isInMemoryMode = originalUriScheme === \"file\" &&\n        uri.path === inMemoryMode &&\n        uri.authority === undefined;\n    let queryParamsDef;\n    if (isInMemoryMode) {\n        queryParamsDef = {\n            cache: {\n                values: [\"shared\", \"private\"],\n                update: (key, value) => connectionQueryParams.push(`${key}=${value}`),\n            },\n        };\n    }\n    else {\n        queryParamsDef = {\n            tls: {\n                values: [\"0\", \"1\"],\n                update: (_, value) => (tls = value === \"1\"),\n            },\n            authToken: {\n                update: (_, value) => (authToken = value),\n            },\n        };\n    }\n    for (const { key, value } of uri.query?.pairs ?? []) {\n        if (!Object.hasOwn(queryParamsDef, key)) {\n            throw new LibsqlError(`Unsupported URL query parameter ${JSON.stringify(key)}`, \"URL_PARAM_NOT_SUPPORTED\");\n        }\n        const queryParamDef = queryParamsDef[key];\n        if (queryParamDef.values !== undefined &&\n            !queryParamDef.values.includes(value)) {\n            throw new LibsqlError(`Unknown value for the \"${key}\" query argument: ${JSON.stringify(value)}. Supported values are: [${queryParamDef.values.map((x) => '\"' + x + '\"').join(\", \")}]`, \"URL_INVALID\");\n        }\n        if (queryParamDef.update !== undefined) {\n            queryParamDef?.update(key, value);\n        }\n    }\n    // fill complex defaults & validate config\n    const connectionQueryParamsString = connectionQueryParams.length === 0\n        ? \"\"\n        : `?${connectionQueryParams.join(\"&\")}`;\n    const path = uri.path + connectionQueryParamsString;\n    let scheme;\n    if (originalUriScheme === \"libsql\") {\n        if (tls === false) {\n            if (uri.authority?.port === undefined) {\n                throw new LibsqlError('A \"libsql:\" URL with ?tls=0 must specify an explicit port', \"URL_INVALID\");\n            }\n            scheme = preferHttp ? \"http\" : \"ws\";\n        }\n        else {\n            scheme = preferHttp ? \"https\" : \"wss\";\n        }\n    }\n    else {\n        scheme = originalUriScheme;\n    }\n    if (scheme === \"http\" || scheme === \"ws\") {\n        tls ??= false;\n    }\n    else {\n        tls ??= true;\n    }\n    if (scheme !== \"http\" &&\n        scheme !== \"ws\" &&\n        scheme !== \"https\" &&\n        scheme !== \"wss\" &&\n        scheme !== \"file\") {\n        throw new LibsqlError('The client supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\", \"http:\" and \"file:\" URLs, ' +\n            `got ${JSON.stringify(uri.scheme + \":\")}. ` +\n            `For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (intMode !== \"number\" && intMode !== \"bigint\" && intMode !== \"string\") {\n        throw new TypeError(`Invalid value for intMode, expected \"number\", \"bigint\" or \"string\", got ${JSON.stringify(intMode)}`);\n    }\n    if (uri.fragment !== undefined) {\n        throw new LibsqlError(`URL fragments are not supported: ${JSON.stringify(\"#\" + uri.fragment)}`, \"URL_INVALID\");\n    }\n    if (isInMemoryMode) {\n        return {\n            scheme: \"file\",\n            tls: false,\n            path,\n            intMode,\n            concurrency,\n            syncUrl: config.syncUrl,\n            syncInterval: config.syncInterval,\n            fetch: config.fetch,\n            authToken: undefined,\n            encryptionKey: undefined,\n            authority: undefined,\n        };\n    }\n    return {\n        scheme,\n        tls,\n        authority: uri.authority,\n        path,\n        authToken,\n        intMode,\n        concurrency,\n        encryptionKey: config.encryptionKey,\n        syncUrl: config.syncUrl,\n        syncInterval: config.syncInterval,\n        fetch: config.fetch,\n    };\n}\n", "/** A client for the Hrana protocol (a \"database connection pool\"). */\nexport class Client {\n    /** @private */\n    constructor() {\n        this.intMode = \"number\";\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value is inherited by {@link Stream} objects created with {@link openStream}, but you can\n     * override the integer mode for every stream by setting {@link Stream.intMode} on the stream.\n     */\n    intMode;\n}\n", "/** Generic error produced by the Hrana client. */\nexport class ClientError extends Error {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ClientError\";\n    }\n}\n/** Error thrown when the server violates the protocol. */\nexport class ProtoError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtoError\";\n    }\n}\n/** Error thrown when the server returns an error response. */\nexport class ResponseError extends ClientError {\n    code;\n    /** @internal */\n    proto;\n    /** @private */\n    constructor(message, protoError) {\n        super(message);\n        this.name = \"ResponseError\";\n        this.code = protoError.code;\n        this.proto = protoError;\n        this.stack = undefined;\n    }\n}\n/** Error thrown when the client or stream is closed. */\nexport class ClosedError extends ClientError {\n    /** @private */\n    constructor(message, cause) {\n        if (cause !== undefined) {\n            super(`${message}: ${cause}`);\n            this.cause = cause;\n        }\n        else {\n            super(message);\n        }\n        this.name = \"ClosedError\";\n    }\n}\n/** Error thrown when the environment does not seem to support WebSockets. */\nexport class WebSocketUnsupportedError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketUnsupportedError\";\n    }\n}\n/** Error thrown when we encounter a WebSocket error. */\nexport class WebSocketError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"WebSocketError\";\n    }\n}\n/** Error thrown when the HTTP server returns an error response. */\nexport class HttpServerError extends ClientError {\n    status;\n    /** @private */\n    constructor(message, status) {\n        super(message);\n        this.status = status;\n        this.name = \"HttpServerError\";\n    }\n}\n/** Error thrown when a libsql URL is not valid. */\nexport class LibsqlUrlParseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"LibsqlUrlParseError\";\n    }\n}\n/** Error thrown when the protocol version is too low to support a feature. */\nexport class ProtocolVersionError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"ProtocolVersionError\";\n    }\n}\n/** Error thrown when an internal client error happens. */\nexport class InternalError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"InternalError\";\n    }\n}\n/** Error thrown when the API is misused. */\nexport class MisuseError extends ClientError {\n    /** @private */\n    constructor(message) {\n        super(message);\n        this.name = \"MisuseError\";\n    }\n}\n", "import { ProtoError } from \"../../errors.js\";\nexport function string(value) {\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string\");\n}\nexport function stringOpt(value) {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    throw typeError(value, \"string or null\");\n}\nexport function number(value) {\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw typeError(value, \"number\");\n}\nexport function boolean(value) {\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw typeError(value, \"boolean\");\n}\nexport function array(value) {\n    if (Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"array\");\n}\nexport function object(value) {\n    if (value !== null && typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw typeError(value, \"object\");\n}\nexport function arrayObjectsMap(value, fun) {\n    return array(value).map((elemValue) => fun(object(elemValue)));\n}\nfunction typeError(value, expected) {\n    if (value === undefined) {\n        return new ProtoError(`Expected ${expected}, but the property was missing`);\n    }\n    let received = typeof value;\n    if (value === null) {\n        received = \"null\";\n    }\n    else if (Array.isArray(value)) {\n        received = \"array\";\n    }\n    return new ProtoError(`Expected ${expected}, received ${received}`);\n}\nexport function readJsonObject(value, fun) {\n    return fun(object(value));\n}\n", "export class ObjectWriter {\n    #output;\n    #isFirst;\n    constructor(output) {\n        this.#output = output;\n        this.#isFirst = false;\n    }\n    begin() {\n        this.#output.push('{');\n        this.#isFirst = true;\n    }\n    end() {\n        this.#output.push('}');\n        this.#isFirst = false;\n    }\n    #key(name) {\n        if (this.#isFirst) {\n            this.#output.push('\"');\n            this.#isFirst = false;\n        }\n        else {\n            this.#output.push(',\"');\n        }\n        this.#output.push(name);\n        this.#output.push('\":');\n    }\n    string(name, value) {\n        this.#key(name);\n        this.#output.push(JSON.stringify(value));\n    }\n    stringRaw(name, value) {\n        this.#key(name);\n        this.#output.push('\"');\n        this.#output.push(value);\n        this.#output.push('\"');\n    }\n    number(name, value) {\n        this.#key(name);\n        this.#output.push(\"\" + value);\n    }\n    boolean(name, value) {\n        this.#key(name);\n        this.#output.push(value ? \"true\" : \"false\");\n    }\n    object(name, value, valueFun) {\n        this.#key(name);\n        this.begin();\n        valueFun(this, value);\n        this.end();\n    }\n    arrayObjects(name, values, valueFun) {\n        this.#key(name);\n        this.#output.push('[');\n        for (let i = 0; i < values.length; ++i) {\n            if (i !== 0) {\n                this.#output.push(',');\n            }\n            this.begin();\n            valueFun(this, values[i]);\n            this.end();\n        }\n        this.#output.push(']');\n    }\n}\nexport function writeJsonObject(value, fun) {\n    const output = [];\n    const writer = new ObjectWriter(output);\n    writer.begin();\n    fun(writer, value);\n    writer.end();\n    return output.join(\"\");\n}\n", "export const VARINT = 0;\nexport const FIXED_64 = 1;\nexport const LENGTH_DELIMITED = 2;\nexport const GROUP_START = 3;\nexport const GROUP_END = 4;\nexport const FIXED_32 = 5;\n", "import { ProtoError } from \"../../errors.js\";\nimport { VARINT, FIXED_64, LENGTH_DELIMITED, FIXED_32 } from \"./util.js\";\nclass MessageReader {\n    #array;\n    #view;\n    #pos;\n    constructor(array) {\n        this.#array = array;\n        this.#view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n        this.#pos = 0;\n    }\n    varint() {\n        let value = 0;\n        for (let shift = 0;; shift += 7) {\n            const byte = this.#array[this.#pos++];\n            value |= (byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    varintBig() {\n        let value = 0n;\n        for (let shift = 0n;; shift += 7n) {\n            const byte = this.#array[this.#pos++];\n            value |= BigInt(byte & 0x7f) << shift;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        return value;\n    }\n    bytes(length) {\n        const array = new Uint8Array(this.#array.buffer, this.#array.byteOffset + this.#pos, length);\n        this.#pos += length;\n        return array;\n    }\n    double() {\n        const value = this.#view.getFloat64(this.#pos, true);\n        this.#pos += 8;\n        return value;\n    }\n    skipVarint() {\n        for (;;) {\n            const byte = this.#array[this.#pos++];\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n    }\n    skip(count) {\n        this.#pos += count;\n    }\n    eof() {\n        return this.#pos >= this.#array.byteLength;\n    }\n}\nexport class FieldReader {\n    #reader;\n    #wireType;\n    constructor(reader) {\n        this.#reader = reader;\n        this.#wireType = -1;\n    }\n    setup(wireType) {\n        this.#wireType = wireType;\n    }\n    #expect(expectedWireType) {\n        if (this.#wireType !== expectedWireType) {\n            throw new ProtoError(`Expected wire type ${expectedWireType}, got ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n    bytes() {\n        this.#expect(LENGTH_DELIMITED);\n        const length = this.#reader.varint();\n        return this.#reader.bytes(length);\n    }\n    string() {\n        return new TextDecoder().decode(this.bytes());\n    }\n    message(def) {\n        return readProtobufMessage(this.bytes(), def);\n    }\n    int32() {\n        this.#expect(VARINT);\n        return this.#reader.varint();\n    }\n    uint32() {\n        return this.int32();\n    }\n    bool() {\n        return this.int32() !== 0;\n    }\n    uint64() {\n        this.#expect(VARINT);\n        return this.#reader.varintBig();\n    }\n    sint64() {\n        const value = this.uint64();\n        return (value >> 1n) ^ (-(value & 1n));\n    }\n    double() {\n        this.#expect(FIXED_64);\n        return this.#reader.double();\n    }\n    maybeSkip() {\n        if (this.#wireType < 0) {\n            return;\n        }\n        else if (this.#wireType === VARINT) {\n            this.#reader.skipVarint();\n        }\n        else if (this.#wireType === FIXED_64) {\n            this.#reader.skip(8);\n        }\n        else if (this.#wireType === LENGTH_DELIMITED) {\n            const length = this.#reader.varint();\n            this.#reader.skip(length);\n        }\n        else if (this.#wireType === FIXED_32) {\n            this.#reader.skip(4);\n        }\n        else {\n            throw new ProtoError(`Unexpected wire type ${this.#wireType}`);\n        }\n        this.#wireType = -1;\n    }\n}\nexport function readProtobufMessage(data, def) {\n    const msgReader = new MessageReader(data);\n    const fieldReader = new FieldReader(msgReader);\n    let value = def.default();\n    while (!msgReader.eof()) {\n        const key = msgReader.varint();\n        const tag = key >> 3;\n        const wireType = key & 0x7;\n        fieldReader.setup(wireType);\n        const tagFun = def[tag];\n        if (tagFun !== undefined) {\n            const returnedValue = tagFun(fieldReader, value);\n            if (returnedValue !== undefined) {\n                value = returnedValue;\n            }\n        }\n        fieldReader.maybeSkip();\n    }\n    return value;\n}\n", "import { VARINT, FIXED_64, LENGTH_DELIMITED } from \"./util.js\";\nexport class MessageWriter {\n    #buf;\n    #array;\n    #view;\n    #pos;\n    constructor() {\n        this.#buf = new ArrayBuffer(256);\n        this.#array = new Uint8Array(this.#buf);\n        this.#view = new DataView(this.#buf);\n        this.#pos = 0;\n    }\n    #ensure(extra) {\n        if (this.#pos + extra <= this.#buf.byteLength) {\n            return;\n        }\n        let newCap = this.#buf.byteLength;\n        while (newCap < this.#pos + extra) {\n            newCap *= 2;\n        }\n        const newBuf = new ArrayBuffer(newCap);\n        const newArray = new Uint8Array(newBuf);\n        const newView = new DataView(newBuf);\n        newArray.set(new Uint8Array(this.#buf, 0, this.#pos));\n        this.#buf = newBuf;\n        this.#array = newArray;\n        this.#view = newView;\n    }\n    #varint(value) {\n        this.#ensure(5);\n        value = 0 | value;\n        do {\n            let byte = value & 0x7f;\n            value >>>= 7;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #varintBig(value) {\n        this.#ensure(10);\n        value = value & 0xffffffffffffffffn;\n        do {\n            let byte = Number(value & 0x7fn);\n            value >>= 7n;\n            byte |= (value ? 0x80 : 0);\n            this.#array[this.#pos++] = byte;\n        } while (value);\n    }\n    #tag(tag, wireType) {\n        this.#varint((tag << 3) | wireType);\n    }\n    bytes(tag, value) {\n        this.#tag(tag, LENGTH_DELIMITED);\n        this.#varint(value.byteLength);\n        this.#ensure(value.byteLength);\n        this.#array.set(value, this.#pos);\n        this.#pos += value.byteLength;\n    }\n    string(tag, value) {\n        this.bytes(tag, new TextEncoder().encode(value));\n    }\n    message(tag, value, fun) {\n        const writer = new MessageWriter();\n        fun(writer, value);\n        this.bytes(tag, writer.data());\n    }\n    int32(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varint(value);\n    }\n    uint32(tag, value) {\n        this.int32(tag, value);\n    }\n    bool(tag, value) {\n        this.int32(tag, value ? 1 : 0);\n    }\n    sint64(tag, value) {\n        this.#tag(tag, VARINT);\n        this.#varintBig((value << 1n) ^ (value >> 63n));\n    }\n    double(tag, value) {\n        this.#tag(tag, FIXED_64);\n        this.#ensure(8);\n        this.#view.setFloat64(this.#pos, value, true);\n        this.#pos += 8;\n    }\n    data() {\n        return new Uint8Array(this.#buf, 0, this.#pos);\n    }\n}\nexport function writeProtobufMessage(value, fun) {\n    const w = new MessageWriter();\n    fun(w, value);\n    return w.data();\n}\n", "export { readJsonObject } from \"./json/decode.js\";\nexport { writeJsonObject } from \"./json/encode.js\";\nexport { readProtobufMessage } from \"./protobuf/decode.js\";\nexport { writeProtobufMessage } from \"./protobuf/encode.js\";\n", "import { InternalError } from \"./errors.js\";\n// An allocator of non-negative integer ids.\n//\n// This clever data structure has these \"ideal\" properties:\n// - It consumes memory proportional to the number of used ids (which is optimal).\n// - All operations are O(1) time.\n// - The allocated ids are small (with a slight modification, we could always provide the smallest possible\n// id).\nexport class IdAlloc {\n    // Set of all allocated ids\n    #usedIds;\n    // Set of all free ids lower than `#usedIds.size`\n    #freeIds;\n    constructor() {\n        this.#usedIds = new Set();\n        this.#freeIds = new Set();\n    }\n    // Returns an id that was free, and marks it as used.\n    alloc() {\n        // this \"loop\" is just a way to pick an arbitrary element from the `#freeIds` set\n        for (const freeId of this.#freeIds) {\n            this.#freeIds.delete(freeId);\n            this.#usedIds.add(freeId);\n            // maintain the invariant of `#freeIds`\n            if (!this.#usedIds.has(this.#usedIds.size - 1)) {\n                this.#freeIds.add(this.#usedIds.size - 1);\n            }\n            return freeId;\n        }\n        // the `#freeIds` set is empty, so there are no free ids lower than `#usedIds.size`\n        // this means that `#usedIds` is a set that contains all numbers from 0 to `#usedIds.size - 1`,\n        // so `#usedIds.size` is free\n        const freeId = this.#usedIds.size;\n        this.#usedIds.add(freeId);\n        return freeId;\n    }\n    free(id) {\n        if (!this.#usedIds.delete(id)) {\n            throw new InternalError(\"Freeing an id that is not allocated\");\n        }\n        // maintain the invariant of `#freeIds`\n        this.#freeIds.delete(this.#usedIds.size);\n        if (id < this.#usedIds.size) {\n            this.#freeIds.add(id);\n        }\n    }\n}\n", "import { InternalError } from \"./errors.js\";\nexport function impossible(value, message) {\n    throw new InternalError(message);\n}\n", "import { ProtoError, MisuseError } from \"./errors.js\";\nimport { impossible } from \"./util.js\";\nexport function valueToProto(value) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"number\") {\n        if (!Number.isFinite(value)) {\n            throw new RangeError(\"Only finite numbers (not Infinity or NaN) can be passed as arguments\");\n        }\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (value < minInteger || value > maxInteger) {\n            throw new RangeError(\"This bigint value is too large to be represented as a 64-bit integer and passed as argument\");\n        }\n        return value;\n    }\n    else if (typeof value === \"boolean\") {\n        return value ? 1n : 0n;\n    }\n    else if (value instanceof ArrayBuffer) {\n        return new Uint8Array(value);\n    }\n    else if (value instanceof Uint8Array) {\n        return value;\n    }\n    else if (value instanceof Date) {\n        return +value.valueOf();\n    }\n    else if (typeof value === \"object\") {\n        return \"\" + value.toString();\n    }\n    else {\n        throw new TypeError(\"Unsupported type of value\");\n    }\n}\nconst minInteger = -9223372036854775808n;\nconst maxInteger = 9223372036854775807n;\nexport function valueFromProto(value, intMode) {\n    if (value === null) {\n        return null;\n    }\n    else if (typeof value === \"number\") {\n        return value;\n    }\n    else if (typeof value === \"string\") {\n        return value;\n    }\n    else if (typeof value === \"bigint\") {\n        if (intMode === \"number\") {\n            const num = Number(value);\n            if (!Number.isSafeInteger(num)) {\n                throw new RangeError(\"Received integer which is too large to be safely represented as a JavaScript number\");\n            }\n            return num;\n        }\n        else if (intMode === \"bigint\") {\n            return value;\n        }\n        else if (intMode === \"string\") {\n            return \"\" + value;\n        }\n        else {\n            throw new MisuseError(\"Invalid value for IntMode\");\n        }\n    }\n    else if (value instanceof Uint8Array) {\n        // TODO: we need to copy data from `Uint8Array` to return an `ArrayBuffer`. Perhaps we should add a\n        // `blobMode` parameter, similar to `intMode`, which would allow the user to choose between receiving\n        // `ArrayBuffer` (default, convenient) and `Uint8Array` (zero copy)?\n        return value.slice().buffer;\n    }\n    else if (value === undefined) {\n        throw new ProtoError(\"Received unrecognized type of Value\");\n    }\n    else {\n        throw impossible(value, \"Impossible type of Value\");\n    }\n}\n", "import { ResponseError } from \"./errors.js\";\nimport { valueFromProto } from \"./value.js\";\nexport function stmtResultFromProto(result) {\n    return {\n        affectedRowCount: result.affectedRowCount,\n        lastInsertRowid: result.lastInsertRowid,\n        columnNames: result.cols.map(col => col.name),\n        columnDecltypes: result.cols.map(col => col.decltype),\n    };\n}\nexport function rowsResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    const rows = result.rows.map(row => rowFromProto(stmtResult.columnNames, row, intMode));\n    return { ...stmtResult, rows };\n}\nexport function rowResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let row;\n    if (result.rows.length > 0) {\n        row = rowFromProto(stmtResult.columnNames, result.rows[0], intMode);\n    }\n    return { ...stmtResult, row };\n}\nexport function valueResultFromProto(result, intMode) {\n    const stmtResult = stmtResultFromProto(result);\n    let value;\n    if (result.rows.length > 0 && stmtResult.columnNames.length > 0) {\n        value = valueFromProto(result.rows[0][0], intMode);\n    }\n    return { ...stmtResult, value };\n}\nfunction rowFromProto(colNames, values, intMode) {\n    const row = {};\n    // make sure that the \"length\" property is not enumerable\n    Object.defineProperty(row, \"length\", { value: values.length });\n    for (let i = 0; i < values.length; ++i) {\n        const value = valueFromProto(values[i], intMode);\n        Object.defineProperty(row, i, { value });\n        const colName = colNames[i];\n        if (colName !== undefined && !Object.hasOwn(row, colName)) {\n            Object.defineProperty(row, colName, { value, enumerable: true, configurable: true, writable: true });\n        }\n    }\n    return row;\n}\nexport function errorFromProto(error) {\n    return new ResponseError(error.message, error);\n}\n", "import { ClientError, ClosedError, MisuseError } from \"./errors.js\";\n/** Text of an SQL statement cached on the server. */\nexport class Sql {\n    #owner;\n    #sqlId;\n    #closed;\n    /** @private */\n    constructor(owner, sqlId) {\n        this.#owner = owner;\n        this.#sqlId = sqlId;\n        this.#closed = undefined;\n    }\n    /** @private */\n    _getSqlId(owner) {\n        if (this.#owner !== owner) {\n            throw new MisuseError(\"Attempted to use SQL text opened with other object\");\n        }\n        else if (this.#closed !== undefined) {\n            throw new ClosedError(\"SQL text is closed\", this.#closed);\n        }\n        return this.#sqlId;\n    }\n    /** Remove the SQL text from the server, releasing resouces. */\n    close() {\n        this._setClosed(new ClientError(\"SQL text was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed === undefined) {\n            this.#closed = error;\n            this.#owner._closeSql(this.#sqlId);\n        }\n    }\n    /** True if the SQL text is closed (removed from the server). */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\nexport function sqlToProto(owner, sql) {\n    if (sql instanceof Sql) {\n        return { sqlId: sql._getSqlId(owner) };\n    }\n    else {\n        return { sql: \"\" + sql };\n    }\n}\n", "export class Queue {\n    #pushStack;\n    #shiftStack;\n    constructor() {\n        this.#pushStack = [];\n        this.#shiftStack = [];\n    }\n    get length() {\n        return this.#pushStack.length + this.#shiftStack.length;\n    }\n    push(elem) {\n        this.#pushStack.push(elem);\n    }\n    shift() {\n        if (this.#shiftStack.length === 0 && this.#pushStack.length > 0) {\n            this.#shiftStack = this.#pushStack.reverse();\n            this.#pushStack = [];\n        }\n        return this.#shiftStack.pop();\n    }\n    first() {\n        return this.#shiftStack.length !== 0\n            ? this.#shiftStack[this.#shiftStack.length - 1]\n            : this.#pushStack[0];\n    }\n}\n", "import { sqlToProto } from \"./sql.js\";\nimport { valueToProto } from \"./value.js\";\n/** A statement that can be evaluated by the database. Besides the SQL text, it also contains the positional\n * and named arguments. */\nexport class Stmt {\n    /** The SQL statement text. */\n    sql;\n    /** @private */\n    _args;\n    /** @private */\n    _namedArgs;\n    /** Initialize the statement with given SQL text. */\n    constructor(sql) {\n        this.sql = sql;\n        this._args = [];\n        this._namedArgs = new Map();\n    }\n    /** Binds positional parameters from the given `values`. All previous positional bindings are cleared. */\n    bindIndexes(values) {\n        this._args.length = 0;\n        for (const value of values) {\n            this._args.push(valueToProto(value));\n        }\n        return this;\n    }\n    /** Binds a parameter by a 1-based index. */\n    bindIndex(index, value) {\n        if (index !== (index | 0) || index <= 0) {\n            throw new RangeError(\"Index of a positional argument must be positive integer\");\n        }\n        while (this._args.length < index) {\n            this._args.push(null);\n        }\n        this._args[index - 1] = valueToProto(value);\n        return this;\n    }\n    /** Binds a parameter by name. */\n    bindName(name, value) {\n        this._namedArgs.set(name, valueToProto(value));\n        return this;\n    }\n    /** Clears all bindings. */\n    unbindAll() {\n        this._args.length = 0;\n        this._namedArgs.clear();\n        return this;\n    }\n}\nexport function stmtToProto(sqlOwner, stmt, wantRows) {\n    let inSql;\n    let args = [];\n    let namedArgs = [];\n    if (stmt instanceof Stmt) {\n        inSql = stmt.sql;\n        args = stmt._args;\n        for (const [name, value] of stmt._namedArgs.entries()) {\n            namedArgs.push({ name, value });\n        }\n    }\n    else if (Array.isArray(stmt)) {\n        inSql = stmt[0];\n        if (Array.isArray(stmt[1])) {\n            args = stmt[1].map((arg) => valueToProto(arg));\n        }\n        else {\n            namedArgs = Object.entries(stmt[1]).map(([name, value]) => {\n                return { name, value: valueToProto(value) };\n            });\n        }\n    }\n    else {\n        inSql = stmt;\n    }\n    const { sql, sqlId } = sqlToProto(sqlOwner, inSql);\n    return { sql, sqlId, args, namedArgs, wantRows };\n}\n", "import { ProtoError, MisuseError } from \"./errors.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, errorFromProto, } from \"./result.js\";\nimport { stmtToProto } from \"./stmt.js\";\nimport { impossible } from \"./util.js\";\n/** A builder for creating a batch and executing it on the server. */\nexport class Batch {\n    /** @private */\n    _stream;\n    #useCursor;\n    /** @private */\n    _steps;\n    #executed;\n    /** @private */\n    constructor(stream, useCursor) {\n        this._stream = stream;\n        this.#useCursor = useCursor;\n        this._steps = [];\n        this.#executed = false;\n    }\n    /** Return a builder for adding a step to the batch. */\n    step() {\n        return new BatchStep(this);\n    }\n    /** Execute the batch. */\n    execute() {\n        if (this.#executed) {\n            throw new MisuseError(\"This batch has already been executed\");\n        }\n        this.#executed = true;\n        const batch = {\n            steps: this._steps.map((step) => step.proto),\n        };\n        if (this.#useCursor) {\n            return executeCursor(this._stream, this._steps, batch);\n        }\n        else {\n            return executeRegular(this._stream, this._steps, batch);\n        }\n    }\n}\nfunction executeRegular(stream, steps, batch) {\n    return stream._batch(batch).then((result) => {\n        for (let step = 0; step < steps.length; ++step) {\n            const stepResult = result.stepResults.get(step);\n            const stepError = result.stepErrors.get(step);\n            steps[step].callback(stepResult, stepError);\n        }\n    });\n}\nasync function executeCursor(stream, steps, batch) {\n    const cursor = await stream._openCursor(batch);\n    try {\n        let nextStep = 0;\n        let beginEntry = undefined;\n        let rows = [];\n        for (;;) {\n            const entry = await cursor.next();\n            if (entry === undefined) {\n                break;\n            }\n            if (entry.type === \"step_begin\") {\n                if (entry.step < nextStep || entry.step >= steps.length) {\n                    throw new ProtoError(\"Server produced StepBeginEntry for unexpected step\");\n                }\n                else if (beginEntry !== undefined) {\n                    throw new ProtoError(\"Server produced StepBeginEntry before terminating previous step\");\n                }\n                for (let step = nextStep; step < entry.step; ++step) {\n                    steps[step].callback(undefined, undefined);\n                }\n                nextStep = entry.step + 1;\n                beginEntry = entry;\n                rows = [];\n            }\n            else if (entry.type === \"step_end\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced StepEndEntry but no step is active\");\n                }\n                const stmtResult = {\n                    cols: beginEntry.cols,\n                    rows,\n                    affectedRowCount: entry.affectedRowCount,\n                    lastInsertRowid: entry.lastInsertRowid,\n                };\n                steps[beginEntry.step].callback(stmtResult, undefined);\n                beginEntry = undefined;\n                rows = [];\n            }\n            else if (entry.type === \"step_error\") {\n                if (beginEntry === undefined) {\n                    if (entry.step >= steps.length) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    for (let step = nextStep; step < entry.step; ++step) {\n                        steps[step].callback(undefined, undefined);\n                    }\n                }\n                else {\n                    if (entry.step !== beginEntry.step) {\n                        throw new ProtoError(\"Server produced StepErrorEntry for unexpected step\");\n                    }\n                    beginEntry = undefined;\n                    rows = [];\n                }\n                steps[entry.step].callback(undefined, entry.error);\n                nextStep = entry.step + 1;\n            }\n            else if (entry.type === \"row\") {\n                if (beginEntry === undefined) {\n                    throw new ProtoError(\"Server produced RowEntry but no step is active\");\n                }\n                rows.push(entry.row);\n            }\n            else if (entry.type === \"error\") {\n                throw errorFromProto(entry.error);\n            }\n            else if (entry.type === \"none\") {\n                throw new ProtoError(\"Server produced unrecognized CursorEntry\");\n            }\n            else {\n                throw impossible(entry, \"Impossible CursorEntry\");\n            }\n        }\n        if (beginEntry !== undefined) {\n            throw new ProtoError(\"Server closed Cursor before terminating active step\");\n        }\n        for (let step = nextStep; step < steps.length; ++step) {\n            steps[step].callback(undefined, undefined);\n        }\n    }\n    finally {\n        cursor.close();\n    }\n}\n/** A builder for adding a step to the batch. */\nexport class BatchStep {\n    /** @private */\n    _batch;\n    #conds;\n    /** @private */\n    _index;\n    /** @private */\n    constructor(batch) {\n        this._batch = batch;\n        this.#conds = [];\n        this._index = undefined;\n    }\n    /** Add the condition that needs to be satisfied to execute the statement. If you use this method multiple\n     * times, we join the conditions with a logical AND. */\n    condition(cond) {\n        this.#conds.push(cond._proto);\n        return this;\n    }\n    /** Add a statement that returns rows. */\n    query(stmt) {\n        return this.#add(stmt, true, rowsResultFromProto);\n    }\n    /** Add a statement that returns at most a single row. */\n    queryRow(stmt) {\n        return this.#add(stmt, true, rowResultFromProto);\n    }\n    /** Add a statement that returns at most a single value. */\n    queryValue(stmt) {\n        return this.#add(stmt, true, valueResultFromProto);\n    }\n    /** Add a statement without returning rows. */\n    run(stmt) {\n        return this.#add(stmt, false, stmtResultFromProto);\n    }\n    #add(inStmt, wantRows, fromProto) {\n        if (this._index !== undefined) {\n            throw new MisuseError(\"This BatchStep has already been added to the batch\");\n        }\n        const stmt = stmtToProto(this._batch._stream._sqlOwner(), inStmt, wantRows);\n        let condition;\n        if (this.#conds.length === 0) {\n            condition = undefined;\n        }\n        else if (this.#conds.length === 1) {\n            condition = this.#conds[0];\n        }\n        else {\n            condition = { type: \"and\", conds: this.#conds.slice() };\n        }\n        const proto = { stmt, condition };\n        return new Promise((outputCallback, errorCallback) => {\n            const callback = (stepResult, stepError) => {\n                if (stepResult !== undefined && stepError !== undefined) {\n                    errorCallback(new ProtoError(\"Server returned both result and error\"));\n                }\n                else if (stepError !== undefined) {\n                    errorCallback(errorFromProto(stepError));\n                }\n                else if (stepResult !== undefined) {\n                    outputCallback(fromProto(stepResult, this._batch._stream.intMode));\n                }\n                else {\n                    outputCallback(undefined);\n                }\n            };\n            this._index = this._batch._steps.length;\n            this._batch._steps.push({ proto, callback });\n        });\n    }\n}\nexport class BatchCond {\n    /** @private */\n    _batch;\n    /** @private */\n    _proto;\n    /** @private */\n    constructor(batch, proto) {\n        this._batch = batch;\n        this._proto = proto;\n    }\n    /** Create a condition that evaluates to true when the given step executes successfully.\n     *\n     * If the given step fails error or is skipped because its condition evaluated to false, this\n     * condition evaluates to false.\n     */\n    static ok(step) {\n        return new BatchCond(step._batch, { type: \"ok\", step: stepIndex(step) });\n    }\n    /** Create a condition that evaluates to true when the given step fails.\n     *\n     * If the given step succeeds or is skipped because its condition evaluated to false, this condition\n     * evaluates to false.\n     */\n    static error(step) {\n        return new BatchCond(step._batch, { type: \"error\", step: stepIndex(step) });\n    }\n    /** Create a condition that is a logical negation of another condition.\n     */\n    static not(cond) {\n        return new BatchCond(cond._batch, { type: \"not\", cond: cond._proto });\n    }\n    /** Create a condition that is a logical AND of other conditions.\n     */\n    static and(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"and\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that is a logical OR of other conditions.\n     */\n    static or(batch, conds) {\n        for (const cond of conds) {\n            checkCondBatch(batch, cond);\n        }\n        return new BatchCond(batch, { type: \"or\", conds: conds.map(e => e._proto) });\n    }\n    /** Create a condition that evaluates to true when the SQL connection is in autocommit mode (not inside an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    static isAutocommit(batch) {\n        batch._stream.client()._ensureVersion(3, \"BatchCond.isAutocommit()\");\n        return new BatchCond(batch, { type: \"is_autocommit\" });\n    }\n}\nfunction stepIndex(step) {\n    if (step._index === undefined) {\n        throw new MisuseError(\"Cannot add a condition referencing a step that has not been added to the batch\");\n    }\n    return step._index;\n}\nfunction checkCondBatch(expectedBatch, cond) {\n    if (cond._batch !== expectedBatch) {\n        throw new MisuseError(\"Cannot mix BatchCond objects for different Batch objects\");\n    }\n}\n", "export function describeResultFromProto(result) {\n    return {\n        paramNames: result.params.map((p) => p.name),\n        columns: result.cols,\n        isExplain: result.isExplain,\n        isReadonly: result.isReadonly,\n    };\n}\n", "import { Batch } from \"./batch.js\";\nimport { describeResultFromProto } from \"./describe.js\";\nimport { stmtResultFromProto, rowsResultFromProto, rowResultFromProto, valueResultFromProto, } from \"./result.js\";\nimport { sqlToProto } from \"./sql.js\";\nimport { stmtToProto } from \"./stmt.js\";\n/** A stream for executing SQL statements (a \"database connection\"). */\nexport class Stream {\n    /** @private */\n    constructor(intMode) {\n        this.intMode = intMode;\n    }\n    /** Execute a statement and return rows. */\n    query(stmt) {\n        return this.#execute(stmt, true, rowsResultFromProto);\n    }\n    /** Execute a statement and return at most a single row. */\n    queryRow(stmt) {\n        return this.#execute(stmt, true, rowResultFromProto);\n    }\n    /** Execute a statement and return at most a single value. */\n    queryValue(stmt) {\n        return this.#execute(stmt, true, valueResultFromProto);\n    }\n    /** Execute a statement without returning rows. */\n    run(stmt) {\n        return this.#execute(stmt, false, stmtResultFromProto);\n    }\n    #execute(inStmt, wantRows, fromProto) {\n        const stmt = stmtToProto(this._sqlOwner(), inStmt, wantRows);\n        return this._execute(stmt).then((r) => fromProto(r, this.intMode));\n    }\n    /** Return a builder for creating and executing a batch.\n     *\n     * If `useCursor` is true, the batch will be executed using a Hrana cursor, which will stream results from\n     * the server to the client, which consumes less memory on the server. This requires protocol version 3 or\n     * higher.\n     */\n    batch(useCursor = false) {\n        return new Batch(this, useCursor);\n    }\n    /** Parse and analyze a statement. This requires protocol version 2 or higher. */\n    describe(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._describe(protoSql).then(describeResultFromProto);\n    }\n    /** Execute a sequence of statements separated by semicolons. This requires protocol version 2 or higher.\n     * */\n    sequence(inSql) {\n        const protoSql = sqlToProto(this._sqlOwner(), inSql);\n        return this._sequence(protoSql);\n    }\n    /** Representation of integers returned from the database. See {@link IntMode}.\n     *\n     * This value affects the results of all operations on this stream.\n     */\n    intMode;\n}\n", "export class Cursor {\n}\n", "import { ClientError, ClosedError } from \"../errors.js\";\nimport { Cursor } from \"../cursor.js\";\nimport { Queue } from \"../queue.js\";\nconst fetchChunkSize = 1000;\nconst fetchQueueSize = 10;\nexport class WsCursor extends Cursor {\n    #client;\n    #stream;\n    #cursorId;\n    #entryQueue;\n    #fetchQueue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(client, stream, cursorId) {\n        super();\n        this.#client = client;\n        this.#stream = stream;\n        this.#cursorId = cursorId;\n        this.#entryQueue = new Queue();\n        this.#fetchQueue = new Queue();\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    /** Fetch the next entry from the cursor. */\n    async next() {\n        for (;;) {\n            if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            while (!this.#done && this.#fetchQueue.length < fetchQueueSize) {\n                this.#fetchQueue.push(this.#fetch());\n            }\n            const entry = this.#entryQueue.shift();\n            if (this.#done || entry !== undefined) {\n                return entry;\n            }\n            // we assume that `Cursor.next()` is never called concurrently\n            await this.#fetchQueue.shift().then((response) => {\n                if (response === undefined) {\n                    return;\n                }\n                for (const entry of response.entries) {\n                    this.#entryQueue.push(entry);\n                }\n                this.#done ||= response.done;\n            });\n        }\n    }\n    #fetch() {\n        return this.#stream._sendCursorRequest(this, {\n            type: \"fetch_cursor\",\n            cursorId: this.#cursorId,\n            maxCount: fetchChunkSize,\n        }).then((resp) => resp, (error) => {\n            this._setClosed(error);\n            return undefined;\n        });\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._sendCursorRequest(this, {\n            type: \"close_cursor\",\n            cursorId: this.#cursorId,\n        }).catch(() => undefined);\n        this.#stream._cursorClosed(this);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n", "import { ClientError, ClosedError, InternalError } from \"../errors.js\";\nimport { Queue } from \"../queue.js\";\nimport { Stream } from \"../stream.js\";\nimport { WsCursor } from \"./cursor.js\";\nexport class WsStream extends Stream {\n    #client;\n    #streamId;\n    #queue;\n    #cursor;\n    #closing;\n    #closed;\n    /** @private */\n    static open(client) {\n        const streamId = client._streamIdAlloc.alloc();\n        const stream = new WsStream(client, streamId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => stream.#setClosed(e);\n        const request = { type: \"open_stream\", streamId };\n        client._sendRequest(request, { responseCallback, errorCallback });\n        return stream;\n    }\n    /** @private */\n    constructor(client, streamId) {\n        super(client.intMode);\n        this.#client = client;\n        this.#streamId = streamId;\n        this.#queue = new Queue();\n        this.#cursor = undefined;\n        this.#closing = false;\n        this.#closed = undefined;\n    }\n    /** Get the {@link WsClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this.#client;\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({\n            type: \"execute\",\n            streamId: this.#streamId,\n            stmt,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({\n            type: \"batch\",\n            streamId: this.#streamId,\n            batch,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        this.#client._ensureVersion(2, \"describe()\");\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        this.#client._ensureVersion(2, \"sequence()\");\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            streamId: this.#streamId,\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n            streamId: this.#streamId,\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"request\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        this.#client._ensureVersion(3, \"cursor\");\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _sendCursorRequest(cursor, request) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor not associated with the stream attempted to execute a request\");\n        }\n        return new Promise((responseCallback, errorCallback) => {\n            if (this.#closed !== undefined) {\n                errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n            }\n            else {\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        this.#flushQueue();\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            entry.errorCallback(new ClosedError(\"Stream is closed\", this.#closed));\n        }\n        else if (this.#closing) {\n            entry.errorCallback(new ClosedError(\"Stream is closing\", undefined));\n        }\n        else {\n            this.#queue.push(entry);\n            this.#flushQueue();\n        }\n    }\n    #flushQueue() {\n        for (;;) {\n            const entry = this.#queue.first();\n            if (entry === undefined && this.#cursor === undefined && this.#closing) {\n                this.#setClosed(new ClientError(\"Stream was gracefully closed\"));\n                break;\n            }\n            else if (entry?.type === \"request\" && this.#cursor === undefined) {\n                const { request, responseCallback, errorCallback } = entry;\n                this.#queue.shift();\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n            }\n            else if (entry?.type === \"cursor\" && this.#cursor === undefined) {\n                const { batch, cursorCallback } = entry;\n                this.#queue.shift();\n                const cursorId = this.#client._cursorIdAlloc.alloc();\n                const cursor = new WsCursor(this.#client, this, cursorId);\n                const request = {\n                    type: \"open_cursor\",\n                    streamId: this.#streamId,\n                    cursorId,\n                    batch,\n                };\n                const responseCallback = () => undefined;\n                const errorCallback = (e) => cursor._setClosed(e);\n                this.#client._sendRequest(request, { responseCallback, errorCallback });\n                this.#cursor = cursor;\n                cursorCallback(cursor);\n            }\n            else {\n                break;\n            }\n        }\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        const request = { type: \"close_stream\", streamId: this.#streamId };\n        const responseCallback = () => this.#client._streamIdAlloc.free(this.#streamId);\n        const errorCallback = () => undefined;\n        this.#client._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Immediately close the stream. */\n    close() {\n        this.#setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        this.#flushQueue();\n    }\n    /** True if the stream is closed or closing. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n}\n", "import { Base64 } from \"js-base64\";\nimport { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(\"sql\", msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    w.arrayObjects(\"args\", msg.args, Value);\n    w.arrayObjects(\"named_args\", msg.namedArgs, NamedArg);\n    w.boolean(\"want_rows\", msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(\"name\", msg.name);\n    w.object(\"value\", msg.value, Value);\n}\nexport function Batch(w, msg) {\n    w.arrayObjects(\"steps\", msg.steps, BatchStep);\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.object(\"condition\", msg.condition, BatchCond);\n    }\n    w.object(\"stmt\", msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"ok\" || msg.type === \"error\") {\n        w.number(\"step\", msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.object(\"cond\", msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\" || msg.type === \"or\") {\n        w.arrayObjects(\"conds\", msg.conds, BatchCond);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.stringRaw(\"type\", \"null\");\n    }\n    else if (typeof msg === \"bigint\") {\n        w.stringRaw(\"type\", \"integer\");\n        w.stringRaw(\"value\", \"\" + msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.stringRaw(\"type\", \"float\");\n        w.number(\"value\", msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.stringRaw(\"type\", \"text\");\n        w.string(\"value\", msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.stringRaw(\"type\", \"blob\");\n        w.stringRaw(\"base64\", Base64.fromUint8Array(msg));\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\n", "import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"hello\") {\n        if (msg.jwt !== undefined) {\n            w.string(\"jwt\", msg.jwt);\n        }\n    }\n    else if (msg.type === \"request\") {\n        w.number(\"request_id\", msg.requestId);\n        w.object(\"request\", msg.request, Request);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction Request(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"open_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"close_stream\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else if (msg.type === \"execute\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"open_cursor\") {\n        w.number(\"stream_id\", msg.streamId);\n        w.number(\"cursor_id\", msg.cursorId);\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"close_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n    }\n    else if (msg.type === \"fetch_cursor\") {\n        w.number(\"cursor_id\", msg.cursorId);\n        w.number(\"max_count\", msg.maxCount);\n    }\n    else if (msg.type === \"sequence\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        w.number(\"stream_id\", msg.streamId);\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.number(\"stream_id\", msg.streamId);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Request\");\n    }\n}\n", "import { impossible } from \"../util.js\";\nexport function Stmt(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n    for (const arg of msg.args) {\n        w.message(3, arg, Value);\n    }\n    for (const arg of msg.namedArgs) {\n        w.message(4, arg, NamedArg);\n    }\n    w.bool(5, msg.wantRows);\n}\nfunction NamedArg(w, msg) {\n    w.string(1, msg.name);\n    w.message(2, msg.value, Value);\n}\nexport function Batch(w, msg) {\n    for (const step of msg.steps) {\n        w.message(1, step, BatchStep);\n    }\n}\nfunction BatchStep(w, msg) {\n    if (msg.condition !== undefined) {\n        w.message(1, msg.condition, BatchCond);\n    }\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchCond(w, msg) {\n    if (msg.type === \"ok\") {\n        w.uint32(1, msg.step);\n    }\n    else if (msg.type === \"error\") {\n        w.uint32(2, msg.step);\n    }\n    else if (msg.type === \"not\") {\n        w.message(3, msg.cond, BatchCond);\n    }\n    else if (msg.type === \"and\") {\n        w.message(4, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"or\") {\n        w.message(5, msg.conds, BatchCondList);\n    }\n    else if (msg.type === \"is_autocommit\") {\n        w.message(6, undefined, Empty);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of BatchCond\");\n    }\n}\nfunction BatchCondList(w, msg) {\n    for (const cond of msg) {\n        w.message(1, cond, BatchCond);\n    }\n}\nfunction Value(w, msg) {\n    if (msg === null) {\n        w.message(1, undefined, Empty);\n    }\n    else if (typeof msg === \"bigint\") {\n        w.sint64(2, msg);\n    }\n    else if (typeof msg === \"number\") {\n        w.double(3, msg);\n    }\n    else if (typeof msg === \"string\") {\n        w.string(4, msg);\n    }\n    else if (msg instanceof Uint8Array) {\n        w.bytes(5, msg);\n    }\n    else if (msg === undefined) {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of Value\");\n    }\n}\nfunction Empty(_w, _msg) {\n    // do nothing\n}\n", "import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function ClientMsg(w, msg) {\n    if (msg.type === \"hello\") {\n        w.message(1, msg, HelloMsg);\n    }\n    else if (msg.type === \"request\") {\n        w.message(2, msg, RequestMsg);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of ClientMsg\");\n    }\n}\nfunction HelloMsg(w, msg) {\n    if (msg.jwt !== undefined) {\n        w.string(1, msg.jwt);\n    }\n}\nfunction RequestMsg(w, msg) {\n    w.int32(1, msg.requestId);\n    const request = msg.request;\n    if (request.type === \"open_stream\") {\n        w.message(2, request, OpenStreamReq);\n    }\n    else if (request.type === \"close_stream\") {\n        w.message(3, request, CloseStreamReq);\n    }\n    else if (request.type === \"execute\") {\n        w.message(4, request, ExecuteReq);\n    }\n    else if (request.type === \"batch\") {\n        w.message(5, request, BatchReq);\n    }\n    else if (request.type === \"open_cursor\") {\n        w.message(6, request, OpenCursorReq);\n    }\n    else if (request.type === \"close_cursor\") {\n        w.message(7, request, CloseCursorReq);\n    }\n    else if (request.type === \"fetch_cursor\") {\n        w.message(8, request, FetchCursorReq);\n    }\n    else if (request.type === \"sequence\") {\n        w.message(9, request, SequenceReq);\n    }\n    else if (request.type === \"describe\") {\n        w.message(10, request, DescribeReq);\n    }\n    else if (request.type === \"store_sql\") {\n        w.message(11, request, StoreSqlReq);\n    }\n    else if (request.type === \"close_sql\") {\n        w.message(12, request, CloseSqlReq);\n    }\n    else if (request.type === \"get_autocommit\") {\n        w.message(13, request, GetAutocommitReq);\n    }\n    else {\n        throw impossible(request, \"Impossible type of Request\");\n    }\n}\nfunction OpenStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction CloseStreamReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\nfunction ExecuteReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.stmt, Stmt);\n}\nfunction BatchReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.message(2, msg.batch, Batch);\n}\nfunction OpenCursorReq(w, msg) {\n    w.int32(1, msg.streamId);\n    w.int32(2, msg.cursorId);\n    w.message(3, msg.batch, Batch);\n}\nfunction CloseCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n}\nfunction FetchCursorReq(w, msg) {\n    w.int32(1, msg.cursorId);\n    w.uint32(2, msg.maxCount);\n}\nfunction SequenceReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction DescribeReq(w, msg) {\n    w.int32(1, msg.streamId);\n    if (msg.sql !== undefined) {\n        w.string(2, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(3, msg.sqlId);\n    }\n}\nfunction StoreSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitReq(w, msg) {\n    w.int32(1, msg.streamId);\n}\n", "import { Base64 } from \"js-base64\";\nimport { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nexport function Error(obj) {\n    const message = d.string(obj[\"message\"]);\n    const code = d.stringOpt(obj[\"code\"]);\n    return { message, code };\n}\nexport function StmtResult(obj) {\n    const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n    const rows = d.array(obj[\"rows\"]).map((rowObj) => d.arrayObjectsMap(rowObj, Value));\n    const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n    const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n    const lastInsertRowid = lastInsertRowidStr !== undefined\n        ? BigInt(lastInsertRowidStr) : undefined;\n    return { cols, rows, affectedRowCount, lastInsertRowid };\n}\nfunction Col(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function BatchResult(obj) {\n    const stepResults = new Map();\n    d.array(obj[\"step_results\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepResults.set(i, StmtResult(d.object(value)));\n        }\n    });\n    const stepErrors = new Map();\n    d.array(obj[\"step_errors\"]).forEach((value, i) => {\n        if (value !== null) {\n            stepErrors.set(i, Error(d.object(value)));\n        }\n    });\n    return { stepResults, stepErrors };\n}\nexport function CursorEntry(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"step_begin\") {\n        const step = d.number(obj[\"step\"]);\n        const cols = d.arrayObjectsMap(obj[\"cols\"], Col);\n        return { type: \"step_begin\", step, cols };\n    }\n    else if (type === \"step_end\") {\n        const affectedRowCount = d.number(obj[\"affected_row_count\"]);\n        const lastInsertRowidStr = d.stringOpt(obj[\"last_insert_rowid\"]);\n        const lastInsertRowid = lastInsertRowidStr !== undefined\n            ? BigInt(lastInsertRowidStr) : undefined;\n        return { type: \"step_end\", affectedRowCount, lastInsertRowid };\n    }\n    else if (type === \"step_error\") {\n        const step = d.number(obj[\"step\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"step_error\", step, error };\n    }\n    else if (type === \"row\") {\n        const row = d.arrayObjectsMap(obj[\"row\"], Value);\n        return { type: \"row\", row };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of CursorEntry\");\n    }\n}\nexport function DescribeResult(obj) {\n    const params = d.arrayObjectsMap(obj[\"params\"], DescribeParam);\n    const cols = d.arrayObjectsMap(obj[\"cols\"], DescribeCol);\n    const isExplain = d.boolean(obj[\"is_explain\"]);\n    const isReadonly = d.boolean(obj[\"is_readonly\"]);\n    return { params, cols, isExplain, isReadonly };\n}\nfunction DescribeParam(obj) {\n    const name = d.stringOpt(obj[\"name\"]);\n    return { name };\n}\nfunction DescribeCol(obj) {\n    const name = d.string(obj[\"name\"]);\n    const decltype = d.stringOpt(obj[\"decltype\"]);\n    return { name, decltype };\n}\nexport function Value(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"null\") {\n        return null;\n    }\n    else if (type === \"integer\") {\n        const value = d.string(obj[\"value\"]);\n        return BigInt(value);\n    }\n    else if (type === \"float\") {\n        return d.number(obj[\"value\"]);\n    }\n    else if (type === \"text\") {\n        return d.string(obj[\"value\"]);\n    }\n    else if (type === \"blob\") {\n        return Base64.toUint8Array(d.string(obj[\"base64\"]));\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Value\");\n    }\n}\n", "import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/json_decode.js\";\nexport function ServerMsg(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"hello_ok\") {\n        return { type: \"hello_ok\" };\n    }\n    else if (type === \"hello_error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"hello_error\", error };\n    }\n    else if (type === \"response_ok\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const response = Response(d.object(obj[\"response\"]));\n        return { type: \"response_ok\", requestId, response };\n    }\n    else if (type === \"response_error\") {\n        const requestId = d.number(obj[\"request_id\"]);\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"response_error\", requestId, error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of ServerMsg\");\n    }\n}\nfunction Response(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"open_stream\") {\n        return { type: \"open_stream\" };\n    }\n    else if (type === \"close_stream\") {\n        return { type: \"close_stream\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"open_cursor\") {\n        return { type: \"open_cursor\" };\n    }\n    else if (type === \"close_cursor\") {\n        return { type: \"close_cursor\" };\n    }\n    else if (type === \"fetch_cursor\") {\n        const entries = d.arrayObjectsMap(obj[\"entries\"], CursorEntry);\n        const done = d.boolean(obj[\"done\"]);\n        return { type: \"fetch_cursor\", entries, done };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of Response\");\n    }\n}\n", "export const Error = {\n    default() { return { message: \"\", code: undefined }; },\n    1(r, msg) { msg.message = r.string(); },\n    2(r, msg) { msg.code = r.string(); },\n};\nexport const StmtResult = {\n    default() {\n        return {\n            cols: [],\n            rows: [],\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.cols.push(r.message(Col)); },\n    2(r, msg) { msg.rows.push(r.message(Row)); },\n    3(r, msg) { msg.affectedRowCount = Number(r.uint64()); },\n    4(r, msg) { msg.lastInsertRowid = r.sint64(); },\n};\nconst Col = {\n    default() { return { name: undefined, decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Row = {\n    default() { return []; },\n    1(r, msg) { msg.push(r.message(Value)); },\n};\nexport const BatchResult = {\n    default() { return { stepResults: new Map(), stepErrors: new Map() }; },\n    1(r, msg) {\n        const [key, value] = r.message(BatchResultStepResult);\n        msg.stepResults.set(key, value);\n    },\n    2(r, msg) {\n        const [key, value] = r.message(BatchResultStepError);\n        msg.stepErrors.set(key, value);\n    },\n};\nconst BatchResultStepResult = {\n    default() { return [0, StmtResult.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(StmtResult); },\n};\nconst BatchResultStepError = {\n    default() { return [0, Error.default()]; },\n    1(r, msg) { msg[0] = r.uint32(); },\n    2(r, msg) { msg[1] = r.message(Error); },\n};\nexport const CursorEntry = {\n    default() { return { type: \"none\" }; },\n    1(r) { return r.message(StepBeginEntry); },\n    2(r) { return r.message(StepEndEntry); },\n    3(r) { return r.message(StepErrorEntry); },\n    4(r) { return { type: \"row\", row: r.message(Row) }; },\n    5(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StepBeginEntry = {\n    default() { return { type: \"step_begin\", step: 0, cols: [] }; },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.cols.push(r.message(Col)); },\n};\nconst StepEndEntry = {\n    default() {\n        return {\n            type: \"step_end\",\n            affectedRowCount: 0,\n            lastInsertRowid: undefined,\n        };\n    },\n    1(r, msg) { msg.affectedRowCount = r.uint32(); },\n    2(r, msg) { msg.lastInsertRowid = r.uint64(); },\n};\nconst StepErrorEntry = {\n    default() {\n        return {\n            type: \"step_error\",\n            step: 0,\n            error: Error.default(),\n        };\n    },\n    1(r, msg) { msg.step = r.uint32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nexport const DescribeResult = {\n    default() {\n        return {\n            params: [],\n            cols: [],\n            isExplain: false,\n            isReadonly: false,\n        };\n    },\n    1(r, msg) { msg.params.push(r.message(DescribeParam)); },\n    2(r, msg) { msg.cols.push(r.message(DescribeCol)); },\n    3(r, msg) { msg.isExplain = r.bool(); },\n    4(r, msg) { msg.isReadonly = r.bool(); },\n};\nconst DescribeParam = {\n    default() { return { name: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n};\nconst DescribeCol = {\n    default() { return { name: \"\", decltype: undefined }; },\n    1(r, msg) { msg.name = r.string(); },\n    2(r, msg) { msg.decltype = r.string(); },\n};\nconst Value = {\n    default() { return undefined; },\n    1(r) { return null; },\n    2(r) { return r.sint64(); },\n    3(r) { return r.double(); },\n    4(r) { return r.string(); },\n    5(r) { return r.bytes(); },\n};\n", "import { Error, StmtResult, BatchResult, CursorEntry, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const ServerMsg = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"hello_ok\" }; },\n    2(r) { return r.message(HelloErrorMsg); },\n    3(r) { return r.message(ResponseOkMsg); },\n    4(r) { return r.message(ResponseErrorMsg); },\n};\nconst HelloErrorMsg = {\n    default() { return { type: \"hello_error\", error: Error.default() }; },\n    1(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseErrorMsg = {\n    default() { return { type: \"response_error\", requestId: 0, error: Error.default() }; },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.error = r.message(Error); },\n};\nconst ResponseOkMsg = {\n    default() {\n        return {\n            type: \"response_ok\",\n            requestId: 0,\n            response: { type: \"none\" },\n        };\n    },\n    1(r, msg) { msg.requestId = r.int32(); },\n    2(r, msg) { msg.response = { type: \"open_stream\" }; },\n    3(r, msg) { msg.response = { type: \"close_stream\" }; },\n    4(r, msg) { msg.response = r.message(ExecuteResp); },\n    5(r, msg) { msg.response = r.message(BatchResp); },\n    6(r, msg) { msg.response = { type: \"open_cursor\" }; },\n    7(r, msg) { msg.response = { type: \"close_cursor\" }; },\n    8(r, msg) { msg.response = r.message(FetchCursorResp); },\n    9(r, msg) { msg.response = { type: \"sequence\" }; },\n    10(r, msg) { msg.response = r.message(DescribeResp); },\n    11(r, msg) { msg.response = { type: \"store_sql\" }; },\n    12(r, msg) { msg.response = { type: \"close_sql\" }; },\n    13(r, msg) { msg.response = r.message(GetAutocommitResp); },\n};\nconst ExecuteResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst FetchCursorResp = {\n    default() { return { type: \"fetch_cursor\", entries: [], done: false }; },\n    1(r, msg) { msg.entries.push(r.message(CursorEntry)); },\n    2(r, msg) { msg.done = r.bool(); },\n};\nconst DescribeResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\n", "import { Client } from \"../client.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { ClientError, ProtoError, ClosedError, WebSocketError, ProtocolVersionError, InternalError, } from \"../errors.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { impossible } from \"../util.js\";\nimport { WsStream } from \"./stream.js\";\nimport { ClientMsg as json_ClientMsg } from \"./json_encode.js\";\nimport { ClientMsg as protobuf_ClientMsg } from \"./protobuf_encode.js\";\nimport { ServerMsg as json_ServerMsg } from \"./json_decode.js\";\nimport { ServerMsg as protobuf_ServerMsg } from \"./protobuf_decode.js\";\nexport const subprotocolsV2 = new Map([\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\nexport const subprotocolsV3 = new Map([\n    [\"hrana3-protobuf\", { version: 3, encoding: \"protobuf\" }],\n    [\"hrana3\", { version: 3, encoding: \"json\" }],\n    [\"hrana2\", { version: 2, encoding: \"json\" }],\n    [\"hrana1\", { version: 1, encoding: \"json\" }],\n]);\n/** A client for the Hrana protocol over a WebSocket. */\nexport class WsClient extends Client {\n    #socket;\n    // List of callbacks that we queue until the socket transitions from the CONNECTING to the OPEN state.\n    #openCallbacks;\n    // Have we already transitioned from CONNECTING to OPEN and fired the callbacks in #openCallbacks?\n    #opened;\n    // Stores the error that caused us to close the client (and the socket). If we are not closed, this is\n    // `undefined`.\n    #closed;\n    // Have we received a response to our \"hello\" from the server?\n    #recvdHello;\n    // Subprotocol negotiated with the server. It is only available after the socket transitions to the OPEN\n    // state.\n    #subprotocol;\n    // Has the `getVersion()` function been called? This is only used to validate that the API is used\n    // correctly.\n    #getVersionCalled;\n    // A map from request id to the responses that we expect to receive from the server.\n    #responseMap;\n    // An allocator of request ids.\n    #requestIdAlloc;\n    // An allocator of stream ids.\n    /** @private */\n    _streamIdAlloc;\n    // An allocator of cursor ids.\n    /** @private */\n    _cursorIdAlloc;\n    // An allocator of SQL text ids.\n    #sqlIdAlloc;\n    /** @private */\n    constructor(socket, jwt) {\n        super();\n        this.#socket = socket;\n        this.#openCallbacks = [];\n        this.#opened = false;\n        this.#closed = undefined;\n        this.#recvdHello = false;\n        this.#subprotocol = undefined;\n        this.#getVersionCalled = false;\n        this.#responseMap = new Map();\n        this.#requestIdAlloc = new IdAlloc();\n        this._streamIdAlloc = new IdAlloc();\n        this._cursorIdAlloc = new IdAlloc();\n        this.#sqlIdAlloc = new IdAlloc();\n        this.#socket.binaryType = \"arraybuffer\";\n        this.#socket.addEventListener(\"open\", () => this.#onSocketOpen());\n        this.#socket.addEventListener(\"close\", (event) => this.#onSocketClose(event));\n        this.#socket.addEventListener(\"error\", (event) => this.#onSocketError(event));\n        this.#socket.addEventListener(\"message\", (event) => this.#onSocketMessage(event));\n        this.#send({ type: \"hello\", jwt });\n    }\n    // Send (or enqueue to send) a message to the server.\n    #send(msg) {\n        if (this.#closed !== undefined) {\n            throw new InternalError(\"Trying to send a message on a closed client\");\n        }\n        if (this.#opened) {\n            this.#sendToSocket(msg);\n        }\n        else {\n            const openCallback = () => this.#sendToSocket(msg);\n            const errorCallback = () => undefined;\n            this.#openCallbacks.push({ openCallback, errorCallback });\n        }\n    }\n    // The socket transitioned from CONNECTING to OPEN\n    #onSocketOpen() {\n        const protocol = this.#socket.protocol;\n        if (protocol === undefined) {\n            this.#setClosed(new ClientError(\"The `WebSocket.protocol` property is undefined. This most likely means that the WebSocket \" +\n                \"implementation provided by the environment is broken. If you are using Miniflare 2, \" +\n                \"please update to Miniflare 3, which fixes this problem.\"));\n            return;\n        }\n        else if (protocol === \"\") {\n            this.#subprotocol = { version: 1, encoding: \"json\" };\n        }\n        else {\n            this.#subprotocol = subprotocolsV3.get(protocol);\n            if (this.#subprotocol === undefined) {\n                this.#setClosed(new ProtoError(`Unrecognized WebSocket subprotocol: ${JSON.stringify(protocol)}`));\n                return;\n            }\n        }\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.openCallback();\n        }\n        this.#openCallbacks.length = 0;\n        this.#opened = true;\n    }\n    #sendToSocket(msg) {\n        const encoding = this.#subprotocol.encoding;\n        if (encoding === \"json\") {\n            const jsonMsg = writeJsonObject(msg, json_ClientMsg);\n            this.#socket.send(jsonMsg);\n        }\n        else if (encoding === \"protobuf\") {\n            const protobufMsg = writeProtobufMessage(msg, protobuf_ClientMsg);\n            this.#socket.send(protobufMsg);\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n    }\n    /** Get the protocol version negotiated with the server, possibly waiting until the socket is open. */\n    getVersion() {\n        return new Promise((versionCallback, errorCallback) => {\n            this.#getVersionCalled = true;\n            if (this.#closed !== undefined) {\n                errorCallback(this.#closed);\n            }\n            else if (!this.#opened) {\n                const openCallback = () => versionCallback(this.#subprotocol.version);\n                this.#openCallbacks.push({ openCallback, errorCallback });\n            }\n            else {\n                versionCallback(this.#subprotocol.version);\n            }\n        });\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (this.#subprotocol === undefined || !this.#getVersionCalled) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the WebSocket server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this.#subprotocol.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported on protocol version ${minVersion} and higher, ` +\n                `but the WebSocket server only supports version ${this.#subprotocol.version}`);\n        }\n    }\n    // Send a request to the server and invoke a callback when we get the response.\n    /** @private */\n    _sendRequest(request, callbacks) {\n        if (this.#closed !== undefined) {\n            callbacks.errorCallback(new ClosedError(\"Client is closed\", this.#closed));\n            return;\n        }\n        const requestId = this.#requestIdAlloc.alloc();\n        this.#responseMap.set(requestId, { ...callbacks, type: request.type });\n        this.#send({ type: \"request\", requestId, request });\n    }\n    // The socket encountered an error.\n    #onSocketError(event) {\n        const eventMessage = event.message;\n        const message = eventMessage ?? \"WebSocket was closed due to an error\";\n        this.#setClosed(new WebSocketError(message));\n    }\n    // The socket was closed.\n    #onSocketClose(event) {\n        let message = `WebSocket was closed with code ${event.code}`;\n        if (event.reason) {\n            message += `: ${event.reason}`;\n        }\n        this.#setClosed(new WebSocketError(message));\n    }\n    // Close the client with the given error.\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const callbacks of this.#openCallbacks) {\n            callbacks.errorCallback(error);\n        }\n        this.#openCallbacks.length = 0;\n        for (const [requestId, responseState] of this.#responseMap.entries()) {\n            responseState.errorCallback(error);\n            this.#requestIdAlloc.free(requestId);\n        }\n        this.#responseMap.clear();\n        this.#socket.close();\n    }\n    // We received a message from the socket.\n    #onSocketMessage(event) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        try {\n            let msg;\n            const encoding = this.#subprotocol.encoding;\n            if (encoding === \"json\") {\n                if (typeof event.data !== \"string\") {\n                    this.#socket.close(3003, \"Only text messages are accepted with JSON encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-text message from server with JSON encoding\"));\n                    return;\n                }\n                msg = readJsonObject(JSON.parse(event.data), json_ServerMsg);\n            }\n            else if (encoding === \"protobuf\") {\n                if (!(event.data instanceof ArrayBuffer)) {\n                    this.#socket.close(3003, \"Only binary messages are accepted with Protobuf encoding\");\n                    this.#setClosed(new ProtoError(\"Received non-binary message from server with Protobuf encoding\"));\n                    return;\n                }\n                msg = readProtobufMessage(new Uint8Array(event.data), protobuf_ServerMsg);\n            }\n            else {\n                throw impossible(encoding, \"Impossible encoding\");\n            }\n            this.#handleMsg(msg);\n        }\n        catch (e) {\n            this.#socket.close(3007, \"Could not handle message\");\n            this.#setClosed(e);\n        }\n    }\n    // Handle a message from the server.\n    #handleMsg(msg) {\n        if (msg.type === \"none\") {\n            throw new ProtoError(\"Received an unrecognized ServerMsg\");\n        }\n        else if (msg.type === \"hello_ok\" || msg.type === \"hello_error\") {\n            if (this.#recvdHello) {\n                throw new ProtoError(\"Received a duplicated hello response\");\n            }\n            this.#recvdHello = true;\n            if (msg.type === \"hello_error\") {\n                throw errorFromProto(msg.error);\n            }\n            return;\n        }\n        else if (!this.#recvdHello) {\n            throw new ProtoError(\"Received a non-hello message before a hello response\");\n        }\n        if (msg.type === \"response_ok\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected OK response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            try {\n                if (responseState.type !== msg.response.type) {\n                    console.dir({ responseState, msg });\n                    throw new ProtoError(\"Received unexpected type of response\");\n                }\n                responseState.responseCallback(msg.response);\n            }\n            catch (e) {\n                responseState.errorCallback(e);\n                throw e;\n            }\n        }\n        else if (msg.type === \"response_error\") {\n            const requestId = msg.requestId;\n            const responseState = this.#responseMap.get(requestId);\n            this.#responseMap.delete(requestId);\n            if (responseState === undefined) {\n                throw new ProtoError(\"Received unexpected error response\");\n            }\n            this.#requestIdAlloc.free(requestId);\n            responseState.errorCallback(errorFromProto(msg.error));\n        }\n        else {\n            throw impossible(msg, \"Impossible ServerMsg type\");\n        }\n    }\n    /** Open a {@link WsStream}, a stream for executing SQL statements. */\n    openStream() {\n        return WsStream.open(this);\n    }\n    /** Cache a SQL text on the server. This requires protocol version 2 or higher. */\n    storeSql(sql) {\n        this._ensureVersion(2, \"storeSql()\");\n        const sqlId = this.#sqlIdAlloc.alloc();\n        const sqlObj = new Sql(this, sqlId);\n        const responseCallback = () => undefined;\n        const errorCallback = (e) => sqlObj._setClosed(e);\n        const request = { type: \"store_sql\", sqlId, sql };\n        this._sendRequest(request, { responseCallback, errorCallback });\n        return sqlObj;\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        const responseCallback = () => this.#sqlIdAlloc.free(sqlId);\n        const errorCallback = (e) => this.#setClosed(e);\n        const request = { type: \"close_sql\", sqlId };\n        this._sendRequest(request, { responseCallback, errorCallback });\n    }\n    /** Close the client and the WebSocket. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n}\n", "const _fetch = fetch;\nconst _Request = Request;\nconst _Headers = Headers;\nexport {\n    _fetch as fetch,\n    _Request as Request,\n    _Headers as Headers,\n};\n", "// queueMicrotask() ponyfill\n// https://github.com/libsql/libsql-client-ts/issues/47\nlet _queueMicrotask;\nif (typeof queueMicrotask !== \"undefined\") {\n    _queueMicrotask = queueMicrotask;\n}\nelse {\n    const resolved = Promise.resolve();\n    _queueMicrotask = (callback) => {\n        resolved.then(callback);\n    };\n}\nexport { _queueMicrotask as queueMicrotask };\n", "export class ByteQueue {\n    #array;\n    #shiftPos;\n    #pushPos;\n    constructor(initialCap) {\n        this.#array = new Uint8Array(new ArrayBuffer(initialCap));\n        this.#shiftPos = 0;\n        this.#pushPos = 0;\n    }\n    get length() {\n        return this.#pushPos - this.#shiftPos;\n    }\n    data() {\n        return this.#array.slice(this.#shiftPos, this.#pushPos);\n    }\n    push(chunk) {\n        this.#ensurePush(chunk.byteLength);\n        this.#array.set(chunk, this.#pushPos);\n        this.#pushPos += chunk.byteLength;\n    }\n    #ensurePush(pushLength) {\n        if (this.#pushPos + pushLength <= this.#array.byteLength) {\n            return;\n        }\n        const filledLength = this.#pushPos - this.#shiftPos;\n        if (filledLength + pushLength <= this.#array.byteLength &&\n            2 * this.#pushPos >= this.#array.byteLength) {\n            this.#array.copyWithin(0, this.#shiftPos, this.#pushPos);\n        }\n        else {\n            let newCap = this.#array.byteLength;\n            do {\n                newCap *= 2;\n            } while (filledLength + pushLength > newCap);\n            const newArray = new Uint8Array(new ArrayBuffer(newCap));\n            newArray.set(this.#array.slice(this.#shiftPos, this.#pushPos), 0);\n            this.#array = newArray;\n        }\n        this.#pushPos = filledLength;\n        this.#shiftPos = 0;\n    }\n    shift(length) {\n        this.#shiftPos += length;\n    }\n}\n", "import { ProtoError } from \"../errors.js\";\nimport * as d from \"../encoding/json/decode.js\";\nimport { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/json_decode.js\";\nexport function PipelineRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    const results = d.arrayObjectsMap(obj[\"results\"], StreamResult);\n    return { baton, baseUrl, results };\n}\nfunction StreamResult(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"ok\") {\n        const response = StreamResponse(d.object(obj[\"response\"]));\n        return { type: \"ok\", response };\n    }\n    else if (type === \"error\") {\n        const error = Error(d.object(obj[\"error\"]));\n        return { type: \"error\", error };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResult\");\n    }\n}\nfunction StreamResponse(obj) {\n    const type = d.string(obj[\"type\"]);\n    if (type === \"close\") {\n        return { type: \"close\" };\n    }\n    else if (type === \"execute\") {\n        const result = StmtResult(d.object(obj[\"result\"]));\n        return { type: \"execute\", result };\n    }\n    else if (type === \"batch\") {\n        const result = BatchResult(d.object(obj[\"result\"]));\n        return { type: \"batch\", result };\n    }\n    else if (type === \"sequence\") {\n        return { type: \"sequence\" };\n    }\n    else if (type === \"describe\") {\n        const result = DescribeResult(d.object(obj[\"result\"]));\n        return { type: \"describe\", result };\n    }\n    else if (type === \"store_sql\") {\n        return { type: \"store_sql\" };\n    }\n    else if (type === \"close_sql\") {\n        return { type: \"close_sql\" };\n    }\n    else if (type === \"get_autocommit\") {\n        const isAutocommit = d.boolean(obj[\"is_autocommit\"]);\n        return { type: \"get_autocommit\", isAutocommit };\n    }\n    else {\n        throw new ProtoError(\"Unexpected type of StreamResponse\");\n    }\n}\nexport function CursorRespBody(obj) {\n    const baton = d.stringOpt(obj[\"baton\"]);\n    const baseUrl = d.stringOpt(obj[\"base_url\"]);\n    return { baton, baseUrl };\n}\n", "import { Error, StmtResult, BatchResult, DescribeResult } from \"../shared/protobuf_decode.js\";\nexport const PipelineRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined, results: [] }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n    3(r, msg) { msg.results.push(r.message(StreamResult)); },\n};\nconst StreamResult = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"ok\", response: r.message(StreamResponse) }; },\n    2(r) { return { type: \"error\", error: r.message(Error) }; },\n};\nconst StreamResponse = {\n    default() { return { type: \"none\" }; },\n    1(r) { return { type: \"close\" }; },\n    2(r) { return r.message(ExecuteStreamResp); },\n    3(r) { return r.message(BatchStreamResp); },\n    4(r) { return { type: \"sequence\" }; },\n    5(r) { return r.message(DescribeStreamResp); },\n    6(r) { return { type: \"store_sql\" }; },\n    7(r) { return { type: \"close_sql\" }; },\n    8(r) { return r.message(GetAutocommitStreamResp); },\n};\nconst ExecuteStreamResp = {\n    default() { return { type: \"execute\", result: StmtResult.default() }; },\n    1(r, msg) { msg.result = r.message(StmtResult); },\n};\nconst BatchStreamResp = {\n    default() { return { type: \"batch\", result: BatchResult.default() }; },\n    1(r, msg) { msg.result = r.message(BatchResult); },\n};\nconst DescribeStreamResp = {\n    default() { return { type: \"describe\", result: DescribeResult.default() }; },\n    1(r, msg) { msg.result = r.message(DescribeResult); },\n};\nconst GetAutocommitStreamResp = {\n    default() { return { type: \"get_autocommit\", isAutocommit: false }; },\n    1(r, msg) { msg.isAutocommit = r.bool(); },\n};\nexport const CursorRespBody = {\n    default() { return { baton: undefined, baseUrl: undefined }; },\n    1(r, msg) { msg.baton = r.string(); },\n    2(r, msg) { msg.baseUrl = r.string(); },\n};\n", "import { ByteQueue } from \"../byte_queue.js\";\nimport { Cursor } from \"../cursor.js\";\nimport * as jsond from \"../encoding/json/decode.js\";\nimport * as protobufd from \"../encoding/protobuf/decode.js\";\nimport { ClientError, ClosedError, ProtoError, InternalError } from \"../errors.js\";\nimport { impossible } from \"../util.js\";\nimport { CursorRespBody as json_CursorRespBody } from \"./json_decode.js\";\nimport { CursorRespBody as protobuf_CursorRespBody } from \"./protobuf_decode.js\";\nimport { CursorEntry as json_CursorEntry } from \"../shared/json_decode.js\";\nimport { CursorEntry as protobuf_CursorEntry } from \"../shared/protobuf_decode.js\";\nexport class HttpCursor extends Cursor {\n    #stream;\n    #encoding;\n    #reader;\n    #queue;\n    #closed;\n    #done;\n    /** @private */\n    constructor(stream, encoding) {\n        super();\n        this.#stream = stream;\n        this.#encoding = encoding;\n        this.#reader = undefined;\n        this.#queue = new ByteQueue(16 * 1024);\n        this.#closed = undefined;\n        this.#done = false;\n    }\n    async open(response) {\n        if (response.body === null) {\n            throw new ProtoError(\"No response body for cursor request\");\n        }\n        this.#reader = response.body.getReader();\n        const respBody = await this.#nextItem(json_CursorRespBody, protobuf_CursorRespBody);\n        if (respBody === undefined) {\n            throw new ProtoError(\"Empty response to cursor request\");\n        }\n        return respBody;\n    }\n    /** Fetch the next entry from the cursor. */\n    next() {\n        return this.#nextItem(json_CursorEntry, protobuf_CursorEntry);\n    }\n    /** Close the cursor. */\n    close() {\n        this._setClosed(new ClientError(\"Cursor was manually closed\"));\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        this.#stream._cursorClosed(this);\n        if (this.#reader !== undefined) {\n            this.#reader.cancel();\n        }\n    }\n    /** True if the cursor is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    async #nextItem(jsonFun, protobufDef) {\n        for (;;) {\n            if (this.#done) {\n                return undefined;\n            }\n            else if (this.#closed !== undefined) {\n                throw new ClosedError(\"Cursor is closed\", this.#closed);\n            }\n            if (this.#encoding === \"json\") {\n                const jsonData = this.#parseItemJson();\n                if (jsonData !== undefined) {\n                    const jsonText = new TextDecoder().decode(jsonData);\n                    const jsonValue = JSON.parse(jsonText);\n                    return jsond.readJsonObject(jsonValue, jsonFun);\n                }\n            }\n            else if (this.#encoding === \"protobuf\") {\n                const protobufData = this.#parseItemProtobuf();\n                if (protobufData !== undefined) {\n                    return protobufd.readProtobufMessage(protobufData, protobufDef);\n                }\n            }\n            else {\n                throw impossible(this.#encoding, \"Impossible encoding\");\n            }\n            if (this.#reader === undefined) {\n                throw new InternalError(\"Attempted to read from HTTP cursor before it was opened\");\n            }\n            const { value, done } = await this.#reader.read();\n            if (done && this.#queue.length === 0) {\n                this.#done = true;\n            }\n            else if (done) {\n                throw new ProtoError(\"Unexpected end of cursor stream\");\n            }\n            else {\n                this.#queue.push(value);\n            }\n        }\n    }\n    #parseItemJson() {\n        const data = this.#queue.data();\n        const newlineByte = 10;\n        const newlinePos = data.indexOf(newlineByte);\n        if (newlinePos < 0) {\n            return undefined;\n        }\n        const jsonData = data.slice(0, newlinePos);\n        this.#queue.shift(newlinePos + 1);\n        return jsonData;\n    }\n    #parseItemProtobuf() {\n        const data = this.#queue.data();\n        let varintValue = 0;\n        let varintLength = 0;\n        for (;;) {\n            if (varintLength >= data.byteLength) {\n                return undefined;\n            }\n            const byte = data[varintLength];\n            varintValue |= (byte & 0x7f) << (7 * varintLength);\n            varintLength += 1;\n            if (!(byte & 0x80)) {\n                break;\n            }\n        }\n        if (data.byteLength < varintLength + varintValue) {\n            return undefined;\n        }\n        const protobufData = data.slice(varintLength, varintLength + varintValue);\n        this.#queue.shift(varintLength + varintValue);\n        return protobufData;\n    }\n}\n", "import { Stmt, Batch } from \"../shared/json_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.arrayObjects(\"requests\", msg.requests, StreamRequest);\n}\nfunction StreamRequest(w, msg) {\n    w.stringRaw(\"type\", msg.type);\n    if (msg.type === \"close\") {\n        // do nothing\n    }\n    else if (msg.type === \"execute\") {\n        w.object(\"stmt\", msg.stmt, Stmt);\n    }\n    else if (msg.type === \"batch\") {\n        w.object(\"batch\", msg.batch, Batch);\n    }\n    else if (msg.type === \"sequence\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"describe\") {\n        if (msg.sql !== undefined) {\n            w.string(\"sql\", msg.sql);\n        }\n        if (msg.sqlId !== undefined) {\n            w.number(\"sql_id\", msg.sqlId);\n        }\n    }\n    else if (msg.type === \"store_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n        w.string(\"sql\", msg.sql);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.number(\"sql_id\", msg.sqlId);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        // do nothing\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(\"baton\", msg.baton);\n    }\n    w.object(\"batch\", msg.batch, Batch);\n}\n", "import { Stmt, Batch } from \"../shared/protobuf_encode.js\";\nimport { impossible } from \"../util.js\";\nexport function PipelineReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    for (const req of msg.requests) {\n        w.message(2, req, StreamRequest);\n    }\n}\nfunction StreamRequest(w, msg) {\n    if (msg.type === \"close\") {\n        w.message(1, msg, CloseStreamReq);\n    }\n    else if (msg.type === \"execute\") {\n        w.message(2, msg, ExecuteStreamReq);\n    }\n    else if (msg.type === \"batch\") {\n        w.message(3, msg, BatchStreamReq);\n    }\n    else if (msg.type === \"sequence\") {\n        w.message(4, msg, SequenceStreamReq);\n    }\n    else if (msg.type === \"describe\") {\n        w.message(5, msg, DescribeStreamReq);\n    }\n    else if (msg.type === \"store_sql\") {\n        w.message(6, msg, StoreSqlStreamReq);\n    }\n    else if (msg.type === \"close_sql\") {\n        w.message(7, msg, CloseSqlStreamReq);\n    }\n    else if (msg.type === \"get_autocommit\") {\n        w.message(8, msg, GetAutocommitStreamReq);\n    }\n    else {\n        throw impossible(msg, \"Impossible type of StreamRequest\");\n    }\n}\nfunction CloseStreamReq(_w, _msg) {\n}\nfunction ExecuteStreamReq(w, msg) {\n    w.message(1, msg.stmt, Stmt);\n}\nfunction BatchStreamReq(w, msg) {\n    w.message(1, msg.batch, Batch);\n}\nfunction SequenceStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction DescribeStreamReq(w, msg) {\n    if (msg.sql !== undefined) {\n        w.string(1, msg.sql);\n    }\n    if (msg.sqlId !== undefined) {\n        w.int32(2, msg.sqlId);\n    }\n}\nfunction StoreSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n    w.string(2, msg.sql);\n}\nfunction CloseSqlStreamReq(w, msg) {\n    w.int32(1, msg.sqlId);\n}\nfunction GetAutocommitStreamReq(_w, _msg) {\n}\nexport function CursorReqBody(w, msg) {\n    if (msg.baton !== undefined) {\n        w.string(1, msg.baton);\n    }\n    w.message(2, msg.batch, Batch);\n}\n", "import { Request, Headers } from \"@libsql/isomorphic-fetch\";\nimport { ClientError, HttpServerError, ProtocolVersionError, ProtoError, ClosedError, InternalError, } from \"../errors.js\";\nimport { readJsonObject, writeJsonObject, readProtobufMessage, writeProtobufMessage, } from \"../encoding/index.js\";\nimport { IdAlloc } from \"../id_alloc.js\";\nimport { Queue } from \"../queue.js\";\nimport { queueMicrotask } from \"../queue_microtask.js\";\nimport { errorFromProto } from \"../result.js\";\nimport { Sql } from \"../sql.js\";\nimport { Stream } from \"../stream.js\";\nimport { impossible } from \"../util.js\";\nimport { HttpCursor } from \"./cursor.js\";\nimport { PipelineReqBody as json_PipelineReqBody } from \"./json_encode.js\";\nimport { PipelineReqBody as protobuf_PipelineReqBody } from \"./protobuf_encode.js\";\nimport { CursorReqBody as json_CursorReqBody } from \"./json_encode.js\";\nimport { CursorReqBody as protobuf_CursorReqBody } from \"./protobuf_encode.js\";\nimport { PipelineRespBody as json_PipelineRespBody } from \"./json_decode.js\";\nimport { PipelineRespBody as protobuf_PipelineRespBody } from \"./protobuf_decode.js\";\nexport class HttpStream extends Stream {\n    #client;\n    #baseUrl;\n    #jwt;\n    #fetch;\n    #baton;\n    #queue;\n    #flushing;\n    #cursor;\n    #closing;\n    #closeQueued;\n    #closed;\n    #sqlIdAlloc;\n    /** @private */\n    constructor(client, baseUrl, jwt, customFetch) {\n        super(client.intMode);\n        this.#client = client;\n        this.#baseUrl = baseUrl.toString();\n        this.#jwt = jwt;\n        this.#fetch = customFetch;\n        this.#baton = undefined;\n        this.#queue = new Queue();\n        this.#flushing = false;\n        this.#closing = false;\n        this.#closeQueued = false;\n        this.#closed = undefined;\n        this.#sqlIdAlloc = new IdAlloc();\n    }\n    /** Get the {@link HttpClient} object that this stream belongs to. */\n    client() {\n        return this.#client;\n    }\n    /** @private */\n    _sqlOwner() {\n        return this;\n    }\n    /** Cache a SQL text on the server. */\n    storeSql(sql) {\n        const sqlId = this.#sqlIdAlloc.alloc();\n        this.#sendStreamRequest({ type: \"store_sql\", sqlId, sql }).then(() => undefined, (error) => this._setClosed(error));\n        return new Sql(this, sqlId);\n    }\n    /** @private */\n    _closeSql(sqlId) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#sendStreamRequest({ type: \"close_sql\", sqlId }).then(() => this.#sqlIdAlloc.free(sqlId), (error) => this._setClosed(error));\n    }\n    /** @private */\n    _execute(stmt) {\n        return this.#sendStreamRequest({ type: \"execute\", stmt }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _batch(batch) {\n        return this.#sendStreamRequest({ type: \"batch\", batch }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _describe(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"describe\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId\n        }).then((response) => {\n            return response.result;\n        });\n    }\n    /** @private */\n    _sequence(protoSql) {\n        return this.#sendStreamRequest({\n            type: \"sequence\",\n            sql: protoSql.sql,\n            sqlId: protoSql.sqlId,\n        }).then((_response) => {\n            return undefined;\n        });\n    }\n    /** Check whether the SQL connection underlying this stream is in autocommit state (i.e., outside of an\n     * explicit transaction). This requires protocol version 3 or higher.\n     */\n    getAutocommit() {\n        this.#client._ensureVersion(3, \"getAutocommit()\");\n        return this.#sendStreamRequest({\n            type: \"get_autocommit\",\n        }).then((response) => {\n            return response.isAutocommit;\n        });\n    }\n    #sendStreamRequest(request) {\n        return new Promise((responseCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"pipeline\", request, responseCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _openCursor(batch) {\n        return new Promise((cursorCallback, errorCallback) => {\n            this.#pushToQueue({ type: \"cursor\", batch, cursorCallback, errorCallback });\n        });\n    }\n    /** @private */\n    _cursorClosed(cursor) {\n        if (cursor !== this.#cursor) {\n            throw new InternalError(\"Cursor was closed, but it was not associated with the stream\");\n        }\n        this.#cursor = undefined;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** Immediately close the stream. */\n    close() {\n        this._setClosed(new ClientError(\"Stream was manually closed\"));\n    }\n    /** Gracefully close the stream. */\n    closeGracefully() {\n        this.#closing = true;\n        queueMicrotask(() => this.#flushQueue());\n    }\n    /** True if the stream is closed. */\n    get closed() {\n        return this.#closed !== undefined || this.#closing;\n    }\n    /** @private */\n    _setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        if (this.#cursor !== undefined) {\n            this.#cursor._setClosed(error);\n        }\n        this.#client._streamClosed(this);\n        for (;;) {\n            const entry = this.#queue.shift();\n            if (entry !== undefined) {\n                entry.errorCallback(error);\n            }\n            else {\n                break;\n            }\n        }\n        if ((this.#baton !== undefined || this.#flushing) && !this.#closeQueued) {\n            this.#queue.push({\n                type: \"pipeline\",\n                request: { type: \"close\" },\n                responseCallback: () => undefined,\n                errorCallback: () => undefined,\n            });\n            this.#closeQueued = true;\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #pushToQueue(entry) {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Stream is closed\", this.#closed);\n        }\n        else if (this.#closing) {\n            throw new ClosedError(\"Stream is closing\", undefined);\n        }\n        else {\n            this.#queue.push(entry);\n            queueMicrotask(() => this.#flushQueue());\n        }\n    }\n    #flushQueue() {\n        if (this.#flushing || this.#cursor !== undefined) {\n            return;\n        }\n        if (this.#closing && this.#queue.length === 0) {\n            this._setClosed(new ClientError(\"Stream was gracefully closed\"));\n            return;\n        }\n        const endpoint = this.#client._endpoint;\n        if (endpoint === undefined) {\n            this.#client._endpointPromise.then(() => this.#flushQueue(), (error) => this._setClosed(error));\n            return;\n        }\n        const firstEntry = this.#queue.shift();\n        if (firstEntry === undefined) {\n            return;\n        }\n        else if (firstEntry.type === \"pipeline\") {\n            const pipeline = [firstEntry];\n            for (;;) {\n                const entry = this.#queue.first();\n                if (entry !== undefined && entry.type === \"pipeline\") {\n                    pipeline.push(entry);\n                    this.#queue.shift();\n                }\n                else if (entry === undefined && this.#closing && !this.#closeQueued) {\n                    pipeline.push({\n                        type: \"pipeline\",\n                        request: { type: \"close\" },\n                        responseCallback: () => undefined,\n                        errorCallback: () => undefined,\n                    });\n                    this.#closeQueued = true;\n                    break;\n                }\n                else {\n                    break;\n                }\n            }\n            this.#flushPipeline(endpoint, pipeline);\n        }\n        else if (firstEntry.type === \"cursor\") {\n            this.#flushCursor(endpoint, firstEntry);\n        }\n        else {\n            throw impossible(firstEntry, \"Impossible type of QueueEntry\");\n        }\n    }\n    #flushPipeline(endpoint, pipeline) {\n        this.#flush(() => this.#createPipelineRequest(pipeline, endpoint), (resp) => decodePipelineResponse(resp, endpoint.encoding), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (respBody) => handlePipelineResponse(pipeline, respBody), (error) => pipeline.forEach((entry) => entry.errorCallback(error)));\n    }\n    #flushCursor(endpoint, entry) {\n        const cursor = new HttpCursor(this, endpoint.encoding);\n        this.#cursor = cursor;\n        this.#flush(() => this.#createCursorRequest(entry, endpoint), (resp) => cursor.open(resp), (respBody) => respBody.baton, (respBody) => respBody.baseUrl, (_respBody) => entry.cursorCallback(cursor), (error) => entry.errorCallback(error));\n    }\n    #flush(createRequest, decodeResponse, getBaton, getBaseUrl, handleResponse, handleError) {\n        let promise;\n        try {\n            const request = createRequest();\n            const fetch = this.#fetch;\n            promise = fetch(request);\n        }\n        catch (error) {\n            promise = Promise.reject(error);\n        }\n        this.#flushing = true;\n        promise.then((resp) => {\n            if (!resp.ok) {\n                return errorFromResponse(resp).then((error) => {\n                    throw error;\n                });\n            }\n            return decodeResponse(resp);\n        }).then((r) => {\n            this.#baton = getBaton(r);\n            this.#baseUrl = getBaseUrl(r) ?? this.#baseUrl;\n            handleResponse(r);\n        }).catch((error) => {\n            this._setClosed(error);\n            handleError(error);\n        }).finally(() => {\n            this.#flushing = false;\n            this.#flushQueue();\n        });\n    }\n    #createPipelineRequest(pipeline, endpoint) {\n        return this.#createRequest(new URL(endpoint.pipelinePath, this.#baseUrl), {\n            baton: this.#baton,\n            requests: pipeline.map((entry) => entry.request),\n        }, endpoint.encoding, json_PipelineReqBody, protobuf_PipelineReqBody);\n    }\n    #createCursorRequest(entry, endpoint) {\n        if (endpoint.cursorPath === undefined) {\n            throw new ProtocolVersionError(\"Cursors are supported only on protocol version 3 and higher, \" +\n                `but the HTTP server only supports version ${endpoint.version}.`);\n        }\n        return this.#createRequest(new URL(endpoint.cursorPath, this.#baseUrl), {\n            baton: this.#baton,\n            batch: entry.batch,\n        }, endpoint.encoding, json_CursorReqBody, protobuf_CursorReqBody);\n    }\n    #createRequest(url, reqBody, encoding, jsonFun, protobufFun) {\n        let bodyData;\n        let contentType;\n        if (encoding === \"json\") {\n            bodyData = writeJsonObject(reqBody, jsonFun);\n            contentType = \"application/json\";\n        }\n        else if (encoding === \"protobuf\") {\n            bodyData = writeProtobufMessage(reqBody, protobufFun);\n            contentType = \"application/x-protobuf\";\n        }\n        else {\n            throw impossible(encoding, \"Impossible encoding\");\n        }\n        const headers = new Headers();\n        headers.set(\"content-type\", contentType);\n        if (this.#jwt !== undefined) {\n            headers.set(\"authorization\", `Bearer ${this.#jwt}`);\n        }\n        return new Request(url.toString(), { method: \"POST\", headers, body: bodyData });\n    }\n}\nfunction handlePipelineResponse(pipeline, respBody) {\n    if (respBody.results.length !== pipeline.length) {\n        throw new ProtoError(\"Server returned unexpected number of pipeline results\");\n    }\n    for (let i = 0; i < pipeline.length; ++i) {\n        const result = respBody.results[i];\n        const entry = pipeline[i];\n        if (result.type === \"ok\") {\n            if (result.response.type !== entry.request.type) {\n                throw new ProtoError(\"Received unexpected type of response\");\n            }\n            entry.responseCallback(result.response);\n        }\n        else if (result.type === \"error\") {\n            entry.errorCallback(errorFromProto(result.error));\n        }\n        else if (result.type === \"none\") {\n            throw new ProtoError(\"Received unrecognized type of StreamResult\");\n        }\n        else {\n            throw impossible(result, \"Received impossible type of StreamResult\");\n        }\n    }\n}\nasync function decodePipelineResponse(resp, encoding) {\n    if (encoding === \"json\") {\n        const respJson = await resp.json();\n        return readJsonObject(respJson, json_PipelineRespBody);\n    }\n    else if (encoding === \"protobuf\") {\n        const respData = await resp.arrayBuffer();\n        return readProtobufMessage(new Uint8Array(respData), protobuf_PipelineRespBody);\n    }\n    else {\n        throw impossible(encoding, \"Impossible encoding\");\n    }\n}\nasync function errorFromResponse(resp) {\n    const respType = resp.headers.get(\"content-type\") ?? \"text/plain\";\n    if (respType === \"application/json\") {\n        const respBody = await resp.json();\n        if (\"message\" in respBody) {\n            return errorFromProto(respBody);\n        }\n    }\n    let message = `Server returned HTTP status ${resp.status}`;\n    if (respType === \"text/plain\") {\n        const respBody = (await resp.text()).trim();\n        if (respBody !== \"\") {\n            message += `: ${respBody}`;\n        }\n    }\n    return new HttpServerError(message, resp.status);\n}\n", "import { fetch, Request } from \"@libsql/isomorphic-fetch\";\nimport { Client } from \"../client.js\";\nimport { ClientError, ClosedError, ProtocolVersionError } from \"../errors.js\";\nimport { HttpStream } from \"./stream.js\";\nexport const checkEndpoints = [\n    {\n        versionPath: \"v3-protobuf\",\n        pipelinePath: \"v3-protobuf/pipeline\",\n        cursorPath: \"v3-protobuf/cursor\",\n        version: 3,\n        encoding: \"protobuf\",\n    },\n    /*\n    {\n        versionPath: \"v3\",\n        pipelinePath: \"v3/pipeline\",\n        cursorPath: \"v3/cursor\",\n        version: 3,\n        encoding: \"json\",\n    },\n    */\n];\nconst fallbackEndpoint = {\n    versionPath: \"v2\",\n    pipelinePath: \"v2/pipeline\",\n    cursorPath: undefined,\n    version: 2,\n    encoding: \"json\",\n};\n/** A client for the Hrana protocol over HTTP. */\nexport class HttpClient extends Client {\n    #url;\n    #jwt;\n    #fetch;\n    #closed;\n    #streams;\n    /** @private */\n    _endpointPromise;\n    /** @private */\n    _endpoint;\n    /** @private */\n    constructor(url, jwt, customFetch, protocolVersion = 2) {\n        super();\n        this.#url = url;\n        this.#jwt = jwt;\n        this.#fetch = customFetch ?? fetch;\n        this.#closed = undefined;\n        this.#streams = new Set();\n        if (protocolVersion == 3) {\n            this._endpointPromise = findEndpoint(this.#fetch, this.#url);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n        else {\n            this._endpointPromise = Promise.resolve(fallbackEndpoint);\n            this._endpointPromise.then((endpoint) => this._endpoint = endpoint, (error) => this.#setClosed(error));\n        }\n    }\n    /** Get the protocol version supported by the server. */\n    async getVersion() {\n        if (this._endpoint !== undefined) {\n            return this._endpoint.version;\n        }\n        return (await this._endpointPromise).version;\n    }\n    // Make sure that the negotiated version is at least `minVersion`.\n    /** @private */\n    _ensureVersion(minVersion, feature) {\n        if (minVersion <= fallbackEndpoint.version) {\n            return;\n        }\n        else if (this._endpoint === undefined) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                \"but the version supported by the HTTP server is not yet known. \" +\n                \"Use Client.getVersion() to wait until the version is available.\");\n        }\n        else if (this._endpoint.version < minVersion) {\n            throw new ProtocolVersionError(`${feature} is supported only on protocol version ${minVersion} and higher, ` +\n                `but the HTTP server only supports version ${this._endpoint.version}.`);\n        }\n    }\n    /** Open a {@link HttpStream}, a stream for executing SQL statements. */\n    openStream() {\n        if (this.#closed !== undefined) {\n            throw new ClosedError(\"Client is closed\", this.#closed);\n        }\n        const stream = new HttpStream(this, this.#url, this.#jwt, this.#fetch);\n        this.#streams.add(stream);\n        return stream;\n    }\n    /** @private */\n    _streamClosed(stream) {\n        this.#streams.delete(stream);\n    }\n    /** Close the client and all its streams. */\n    close() {\n        this.#setClosed(new ClientError(\"Client was manually closed\"));\n    }\n    /** True if the client is closed. */\n    get closed() {\n        return this.#closed !== undefined;\n    }\n    #setClosed(error) {\n        if (this.#closed !== undefined) {\n            return;\n        }\n        this.#closed = error;\n        for (const stream of Array.from(this.#streams)) {\n            stream._setClosed(new ClosedError(\"Client was closed\", error));\n        }\n    }\n}\nasync function findEndpoint(customFetch, clientUrl) {\n    const fetch = customFetch;\n    for (const endpoint of checkEndpoints) {\n        const url = new URL(endpoint.versionPath, clientUrl);\n        const request = new Request(url.toString(), { method: \"GET\" });\n        const response = await fetch(request);\n        await response.arrayBuffer();\n        if (response.ok) {\n            return endpoint;\n        }\n    }\n    return fallbackEndpoint;\n}\n", "import { LibsqlUrlParseError } from \"./errors.js\";\n;\n/** Parses a URL compatible with the libsql client (`@libsql/client`). This URL may have the \"libsql:\" scheme\n * and may contain query parameters. */\nexport function parseLibsqlUrl(urlStr) {\n    const url = new URL(urlStr);\n    let authToken = undefined;\n    let tls = undefined;\n    for (const [key, value] of url.searchParams.entries()) {\n        if (key === \"authToken\") {\n            authToken = value;\n        }\n        else if (key === \"tls\") {\n            if (value === \"0\") {\n                tls = false;\n            }\n            else if (value === \"1\") {\n                tls = true;\n            }\n            else {\n                throw new LibsqlUrlParseError(`Unknown value for the \"tls\" query argument: ${JSON.stringify(value)}`);\n            }\n        }\n        else {\n            throw new LibsqlUrlParseError(`Unknown URL query argument ${JSON.stringify(key)}`);\n        }\n    }\n    let hranaWsScheme;\n    let hranaHttpScheme;\n    if ((url.protocol === \"http:\" || url.protocol === \"ws:\") && (tls === true)) {\n        throw new LibsqlUrlParseError(`A ${JSON.stringify(url.protocol)} URL cannot opt into TLS using ?tls=1`);\n    }\n    else if ((url.protocol === \"https:\" || url.protocol === \"wss:\") && (tls === false)) {\n        throw new LibsqlUrlParseError(`A ${JSON.stringify(url.protocol)} URL cannot opt out of TLS using ?tls=0`);\n    }\n    if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n        hranaHttpScheme = url.protocol;\n    }\n    else if (url.protocol === \"ws:\" || url.protocol === \"wss:\") {\n        hranaWsScheme = url.protocol;\n    }\n    else if (url.protocol === \"libsql:\") {\n        if (tls === false) {\n            if (!url.port) {\n                throw new LibsqlUrlParseError(`A \"libsql:\" URL with ?tls=0 must specify an explicit port`);\n            }\n            hranaHttpScheme = \"http:\";\n            hranaWsScheme = \"ws:\";\n        }\n        else {\n            hranaHttpScheme = \"https:\";\n            hranaWsScheme = \"wss:\";\n        }\n    }\n    else {\n        throw new LibsqlUrlParseError(`This client does not support ${JSON.stringify(url.protocol)} URLs. ` +\n            'Please use a \"libsql:\", \"ws:\", \"wss:\", \"http:\" or \"https:\" URL instead.');\n    }\n    if (url.username || url.password) {\n        throw new LibsqlUrlParseError(\"This client does not support HTTP Basic authentication with a username and password. \" +\n            'You can authenticate using a token passed in the \"authToken\" URL query parameter.');\n    }\n    if (url.hash) {\n        throw new LibsqlUrlParseError(\"URL fragments are not supported\");\n    }\n    let hranaPath = url.pathname;\n    if (hranaPath === \"/\") {\n        hranaPath = \"\";\n    }\n    const hranaWsUrl = hranaWsScheme !== undefined\n        ? `${hranaWsScheme}//${url.host}${hranaPath}` : undefined;\n    const hranaHttpUrl = hranaHttpScheme !== undefined\n        ? `${hranaHttpScheme}//${url.host}${hranaPath}` : undefined;\n    return { hranaWsUrl, hranaHttpUrl, authToken };\n}\n", "import { WebSocket } from \"@libsql/isomorphic-ws\";\nimport { subprotocolsV2, subprotocolsV3 } from \"./ws/client.js\";\nimport { WebSocketUnsupportedError } from \"./errors.js\";\nimport { HttpClient } from \"./http/client.js\";\nimport { WsClient } from \"./ws/client.js\";\nexport { WebSocket } from \"@libsql/isomorphic-ws\";\nexport { fetch, Request, Headers } from \"@libsql/isomorphic-fetch\";\nexport { Client } from \"./client.js\";\nexport * from \"./errors.js\";\nexport { Batch, BatchStep, BatchCond } from \"./batch.js\";\nexport { parseLibsqlUrl } from \"./libsql_url.js\";\nexport { Sql } from \"./sql.js\";\nexport { Stmt } from \"./stmt.js\";\nexport { Stream } from \"./stream.js\";\nexport { HttpClient } from \"./http/client.js\";\nexport { HttpStream } from \"./http/stream.js\";\nexport { WsClient } from \"./ws/client.js\";\nexport { WsStream } from \"./ws/stream.js\";\n/** Open a Hrana client over WebSocket connected to the given `url`. */\nexport function openWs(url, jwt, protocolVersion = 2) {\n    if (typeof WebSocket === \"undefined\") {\n        throw new WebSocketUnsupportedError(\"WebSockets are not supported in this environment\");\n    }\n    var subprotocols = undefined;\n    if (protocolVersion == 3) {\n        subprotocols = Array.from(subprotocolsV3.keys());\n    }\n    else {\n        subprotocols = Array.from(subprotocolsV2.keys());\n    }\n    const socket = new WebSocket(url, subprotocols);\n    return new WsClient(socket, jwt);\n}\n/** Open a Hrana client over HTTP connected to the given `url`.\n *\n * If the `customFetch` argument is passed and not `undefined`, it is used in place of the `fetch` function\n * from `@libsql/isomorphic-fetch`. This function is always called with a `Request` object from\n * `@libsql/isomorphic-fetch`.\n */\nexport function openHttp(url, jwt, customFetch, protocolVersion = 2) {\n    return new HttpClient(url instanceof URL ? url : new URL(url), jwt, customFetch, protocolVersion);\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { transactionModeToBegin, ResultSetImpl } from \"@libsql/core/util\";\nexport class HranaTransaction {\n    #mode;\n    #version;\n    // Promise that is resolved when the BEGIN statement completes, or `undefined` if we haven't executed the\n    // BEGIN statement yet.\n    #started;\n    /** @private */\n    constructor(mode, version) {\n        this.#mode = mode;\n        this.#version = version;\n        this.#started = undefined;\n    }\n    execute(stmt) {\n        return this.batch([stmt]).then((results) => results[0]);\n    }\n    async batch(stmts) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            const hranaStmts = stmts.map(stmtToHrana);\n            let rowsPromises;\n            if (this.#started === undefined) {\n                // The transaction hasn't started yet, so we need to send the BEGIN statement in a batch with\n                // `hranaStmts`.\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                const beginStep = batch.step();\n                const beginPromise = beginStep.run(transactionModeToBegin(this.#mode));\n                // Execute the `hranaStmts` only if the BEGIN succeeded, to make sure that we don't execute it\n                // outside of a transaction.\n                let lastStep = beginStep;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch\n                        .step()\n                        .condition(hrana.BatchCond.ok(lastStep));\n                    if (this.#version >= 3) {\n                        // If the Hrana version supports it, make sure that we are still in a transaction\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                // `this.#started` is resolved successfully only if the batch and the BEGIN statement inside\n                // of the batch are both successful.\n                this.#started = batch\n                    .execute()\n                    .then(() => beginPromise)\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    // If the BEGIN failed, the transaction is unusable and we must close it. However, if the\n                    // BEGIN suceeds and `hranaStmts` fail, the transaction is _not_ closed.\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                if (this.#version < 3) {\n                    // The transaction has started, so we must wait until the BEGIN statement completed to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction.\n                    await this.#started;\n                }\n                else {\n                    // The transaction has started, but we will use `hrana.BatchCond.isAutocommit()` to make\n                    // sure that we don't execute `hranaStmts` outside of a transaction, so we don't have to\n                    // wait for `this.#started`\n                }\n                this._getSqlCache().apply(hranaStmts);\n                const batch = stream.batch(this.#version >= 3);\n                let lastStep = undefined;\n                rowsPromises = hranaStmts.map((hranaStmt) => {\n                    const stmtStep = batch.step();\n                    if (lastStep !== undefined) {\n                        stmtStep.condition(hrana.BatchCond.ok(lastStep));\n                    }\n                    if (this.#version >= 3) {\n                        stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n                    }\n                    const rowsPromise = stmtStep.query(hranaStmt);\n                    rowsPromise.catch(() => undefined); // silence Node warning\n                    lastStep = stmtStep;\n                    return rowsPromise;\n                });\n                await batch.execute();\n            }\n            const resultSets = [];\n            for (const rowsPromise of rowsPromises) {\n                const rows = await rowsPromise;\n                if (rows === undefined) {\n                    throw new LibsqlError(\"Statement in a transaction was not executed, \" +\n                        \"probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n                }\n                resultSets.push(resultSetFromHrana(rows));\n            }\n            return resultSets;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async executeMultiple(sql) {\n        const stream = this._getStream();\n        if (stream.closed) {\n            throw new LibsqlError(\"Cannot execute statements because the transaction is closed\", \"TRANSACTION_CLOSED\");\n        }\n        try {\n            if (this.#started === undefined) {\n                // If the transaction hasn't started yet, start it now\n                this.#started = stream\n                    .run(transactionModeToBegin(this.#mode))\n                    .then(() => undefined);\n                try {\n                    await this.#started;\n                }\n                catch (e) {\n                    this.close();\n                    throw e;\n                }\n            }\n            else {\n                // Wait until the transaction has started\n                await this.#started;\n            }\n            await stream.sequence(sql);\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    async rollback() {\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                return;\n            }\n            if (this.#started !== undefined) {\n                // We don't have to wait for the BEGIN statement to complete. If the BEGIN fails, we will\n                // execute a ROLLBACK outside of an active transaction, which should be harmless.\n            }\n            else {\n                // We did nothing in the transaction, so there is nothing to rollback.\n                return;\n            }\n            // Pipeline the ROLLBACK statement and the stream close.\n            const promise = stream.run(\"ROLLBACK\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            // `this.close()` may close the `hrana.Client`, which aborts all pending stream requests, so we\n            // must call it _after_ we receive the ROLLBACK response.\n            // Also note that the current stream should already be closed, but we need to call `this.close()`\n            // anyway, because it may need to do more cleanup.\n            this.close();\n        }\n    }\n    async commit() {\n        // (this method is analogous to `rollback()`)\n        try {\n            const stream = this._getStream();\n            if (stream.closed) {\n                throw new LibsqlError(\"Cannot commit the transaction because it is already closed\", \"TRANSACTION_CLOSED\");\n            }\n            if (this.#started !== undefined) {\n                // Make sure to execute the COMMIT only if the BEGIN was successful.\n                await this.#started;\n            }\n            else {\n                return;\n            }\n            const promise = stream.run(\"COMMIT\").catch((e) => {\n                throw mapHranaError(e);\n            });\n            stream.closeGracefully();\n            await promise;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n        finally {\n            this.close();\n        }\n    }\n}\nexport async function executeHranaBatch(mode, version, batch, hranaStmts) {\n    const beginStep = batch.step();\n    const beginPromise = beginStep.run(transactionModeToBegin(mode));\n    let lastStep = beginStep;\n    const stmtPromises = hranaStmts.map((hranaStmt) => {\n        const stmtStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n        if (version >= 3) {\n            stmtStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n        }\n        const stmtPromise = stmtStep.query(hranaStmt);\n        lastStep = stmtStep;\n        return stmtPromise;\n    });\n    const commitStep = batch.step().condition(hrana.BatchCond.ok(lastStep));\n    if (version >= 3) {\n        commitStep.condition(hrana.BatchCond.not(hrana.BatchCond.isAutocommit(batch)));\n    }\n    const commitPromise = commitStep.run(\"COMMIT\");\n    const rollbackStep = batch\n        .step()\n        .condition(hrana.BatchCond.not(hrana.BatchCond.ok(commitStep)));\n    rollbackStep.run(\"ROLLBACK\").catch((_) => undefined);\n    await batch.execute();\n    const resultSets = [];\n    await beginPromise;\n    for (const stmtPromise of stmtPromises) {\n        const hranaRows = await stmtPromise;\n        if (hranaRows === undefined) {\n            throw new LibsqlError(\"Statement in a batch was not executed, probably because the transaction has been rolled back\", \"TRANSACTION_CLOSED\");\n        }\n        resultSets.push(resultSetFromHrana(hranaRows));\n    }\n    await commitPromise;\n    return resultSets;\n}\nexport function stmtToHrana(stmt) {\n    if (typeof stmt === \"string\") {\n        return new hrana.Stmt(stmt);\n    }\n    const hranaStmt = new hrana.Stmt(stmt.sql);\n    if (Array.isArray(stmt.args)) {\n        hranaStmt.bindIndexes(stmt.args);\n    }\n    else {\n        for (const [key, value] of Object.entries(stmt.args)) {\n            hranaStmt.bindName(key, value);\n        }\n    }\n    return hranaStmt;\n}\nexport function resultSetFromHrana(hranaRows) {\n    const columns = hranaRows.columnNames.map((c) => c ?? \"\");\n    const columnTypes = hranaRows.columnDecltypes.map((c) => c ?? \"\");\n    const rows = hranaRows.rows;\n    const rowsAffected = hranaRows.affectedRowCount;\n    const lastInsertRowid = hranaRows.lastInsertRowid !== undefined\n        ? hranaRows.lastInsertRowid\n        : undefined;\n    return new ResultSetImpl(columns, columnTypes, rows, rowsAffected, lastInsertRowid);\n}\nexport function mapHranaError(e) {\n    if (e instanceof hrana.ClientError) {\n        const code = mapHranaErrorCode(e);\n        return new LibsqlError(e.message, code, undefined, e);\n    }\n    return e;\n}\nfunction mapHranaErrorCode(e) {\n    if (e instanceof hrana.ResponseError && e.code !== undefined) {\n        return e.code;\n    }\n    else if (e instanceof hrana.ProtoError) {\n        return \"HRANA_PROTO_ERROR\";\n    }\n    else if (e instanceof hrana.ClosedError) {\n        return e.cause instanceof hrana.ClientError\n            ? mapHranaErrorCode(e.cause)\n            : \"HRANA_CLOSED_ERROR\";\n    }\n    else if (e instanceof hrana.WebSocketError) {\n        return \"HRANA_WEBSOCKET_ERROR\";\n    }\n    else if (e instanceof hrana.HttpServerError) {\n        return \"SERVER_ERROR\";\n    }\n    else if (e instanceof hrana.ProtocolVersionError) {\n        return \"PROTOCOL_VERSION_ERROR\";\n    }\n    else if (e instanceof hrana.InternalError) {\n        return \"INTERNAL_ERROR\";\n    }\n    else {\n        return \"UNKNOWN\";\n    }\n}\n", "export class SqlCache {\n    #owner;\n    #sqls;\n    capacity;\n    constructor(owner, capacity) {\n        this.#owner = owner;\n        this.#sqls = new Lru();\n        this.capacity = capacity;\n    }\n    // Replaces SQL strings with cached `hrana.Sql` objects in the statements in `hranaStmts`. After this\n    // function returns, we guarantee that all `hranaStmts` refer to valid (not closed) `hrana.Sql` objects,\n    // but _we may invalidate any other `hrana.Sql` objects_ (by closing them, thus removing them from the\n    // server).\n    //\n    // In practice, this means that after calling this function, you can use the statements only up to the\n    // first `await`, because concurrent code may also use the cache and invalidate those statements.\n    apply(hranaStmts) {\n        if (this.capacity <= 0) {\n            return;\n        }\n        const usedSqlObjs = new Set();\n        for (const hranaStmt of hranaStmts) {\n            if (typeof hranaStmt.sql !== \"string\") {\n                continue;\n            }\n            const sqlText = hranaStmt.sql;\n            // Stored SQL cannot exceed 5kb.\n            // https://github.com/tursodatabase/libsql/blob/e9d637e051685f92b0da43849507b5ef4232fbeb/libsql-server/src/hrana/http/request.rs#L10\n            if (sqlText.length >= 5000) {\n                continue;\n            }\n            let sqlObj = this.#sqls.get(sqlText);\n            if (sqlObj === undefined) {\n                while (this.#sqls.size + 1 > this.capacity) {\n                    const [evictSqlText, evictSqlObj] = this.#sqls.peekLru();\n                    if (usedSqlObjs.has(evictSqlObj)) {\n                        // The SQL object that we are trying to evict is already in use in this batch, so we\n                        // must not evict and close it.\n                        break;\n                    }\n                    evictSqlObj.close();\n                    this.#sqls.delete(evictSqlText);\n                }\n                if (this.#sqls.size + 1 <= this.capacity) {\n                    sqlObj = this.#owner.storeSql(sqlText);\n                    this.#sqls.set(sqlText, sqlObj);\n                }\n            }\n            if (sqlObj !== undefined) {\n                hranaStmt.sql = sqlObj;\n                usedSqlObjs.add(sqlObj);\n            }\n        }\n    }\n}\nclass Lru {\n    // This maps keys to the cache values. The entries are ordered by their last use (entires that were used\n    // most recently are at the end).\n    #cache;\n    constructor() {\n        this.#cache = new Map();\n    }\n    get(key) {\n        const value = this.#cache.get(key);\n        if (value !== undefined) {\n            // move the entry to the back of the Map\n            this.#cache.delete(key);\n            this.#cache.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        this.#cache.set(key, value);\n    }\n    peekLru() {\n        for (const entry of this.#cache.entries()) {\n            return entry;\n        }\n        return undefined;\n    }\n    delete(key) {\n        this.#cache.delete(key);\n    }\n    get size() {\n        return this.#cache.size;\n    }\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, false));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"wss\" && config.scheme !== \"ws\") {\n        throw new LibsqlError('The WebSocket client supports only \"libsql:\", \"wss:\" and \"ws:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"ws\" && config.tls) {\n        throw new LibsqlError(`A \"ws:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"wss\" && !config.tls) {\n        throw new LibsqlError(`A \"wss:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    let client;\n    try {\n        client = hrana.openWs(url, config.authToken);\n    }\n    catch (e) {\n        if (e instanceof hrana.WebSocketUnsupportedError) {\n            const suggestedScheme = config.scheme === \"wss\" ? \"https\" : \"http\";\n            const suggestedUrl = encodeBaseUrl(suggestedScheme, config.authority, config.path);\n            throw new LibsqlError(\"This environment does not support WebSockets, please switch to the HTTP client by using \" +\n                `a \"${suggestedScheme}:\" URL (${JSON.stringify(suggestedUrl)}). ` +\n                `For more information, please read ${supportedUrlLink}`, \"WEBSOCKETS_NOT_SUPPORTED\");\n        }\n        throw mapHranaError(e);\n    }\n    return new WsClient(client, url, config.authToken, config.intMode, config.concurrency);\n}\nconst maxConnAgeMillis = 60 * 1000;\nconst sqlCacheCapacity = 100;\nexport class WsClient {\n    #url;\n    #authToken;\n    #intMode;\n    // State of the current connection. The `hrana.WsClient` inside may be closed at any moment due to an\n    // asynchronous error.\n    #connState;\n    // If defined, this is a connection that will be used in the future, once it is ready.\n    #futureConnState;\n    closed;\n    protocol;\n    #isSchemaDatabase;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(client, url, authToken, intMode, concurrency) {\n        this.#url = url;\n        this.#authToken = authToken;\n        this.#intMode = intMode;\n        this.#connState = this.#openConn(client);\n        this.#futureConnState = undefined;\n        this.closed = false;\n        this.protocol = \"ws\";\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === 'string') {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || []\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply([hranaStmt]);\n                const hranaRowsPromise = streamState.stream.query(hranaStmt);\n                streamState.stream.closeGracefully();\n                const hranaRowsResult = await hranaRowsPromise;\n                return resultSetFromHrana(hranaRowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await streamState.conn.client.getVersion();\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                streamState.conn.sqlCache.apply(hranaStmts);\n                const batch = streamState.stream.batch(version >= 3);\n                const resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                const version = await streamState.conn.client.getVersion();\n                // the BEGIN statement will be batched with the first statement on the transaction to save a\n                // network roundtrip\n                return new WsTransaction(this, streamState, mode, version);\n            }\n            catch (e) {\n                this._closeStream(streamState);\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            const streamState = await this.#openStream();\n            try {\n                // Schedule all operations synchronously, so they will be pipelined and executed in a single\n                // network roundtrip.\n                const promise = streamState.stream.sequence(sql);\n                streamState.stream.closeGracefully();\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n            finally {\n                this._closeStream(streamState);\n            }\n        });\n    }\n    sync() {\n        return Promise.resolve();\n    }\n    async #openStream() {\n        if (this.closed) {\n            throw new LibsqlError(\"The client is closed\", \"CLIENT_CLOSED\");\n        }\n        const now = new Date();\n        const ageMillis = now.valueOf() - this.#connState.openTime.valueOf();\n        if (ageMillis > maxConnAgeMillis &&\n            this.#futureConnState === undefined) {\n            // The existing connection is too old, let's open a new one.\n            const futureConnState = this.#openConn();\n            this.#futureConnState = futureConnState;\n            // However, if we used `futureConnState` immediately, we would introduce additional latency,\n            // because we would have to wait for the WebSocket handshake to complete, even though we may a\n            // have perfectly good existing connection in `this.#connState`!\n            //\n            // So we wait until the `hrana.Client.getVersion()` operation completes (which happens when the\n            // WebSocket hanshake completes), and only then we replace `this.#connState` with\n            // `futureConnState`, which is stored in `this.#futureConnState` in the meantime.\n            futureConnState.client.getVersion().then((_version) => {\n                if (this.#connState !== futureConnState) {\n                    // We need to close `this.#connState` before we replace it. However, it is possible\n                    // that `this.#connState` has already been replaced: see the code below.\n                    if (this.#connState.streamStates.size === 0) {\n                        this.#connState.client.close();\n                    }\n                    else {\n                        // If there are existing streams on the connection, we must not close it, because\n                        // these streams would be broken. The last stream to be closed will also close the\n                        // connection in `_closeStream()`.\n                    }\n                }\n                this.#connState = futureConnState;\n                this.#futureConnState = undefined;\n            }, (_e) => {\n                // If the new connection could not be established, let's just ignore the error and keep\n                // using the existing connection.\n                this.#futureConnState = undefined;\n            });\n        }\n        if (this.#connState.client.closed) {\n            // An error happened on this connection and it has been closed. Let's try to seamlessly reconnect.\n            try {\n                if (this.#futureConnState !== undefined) {\n                    // We are already in the process of opening a new connection, so let's just use it\n                    // immediately.\n                    this.#connState = this.#futureConnState;\n                }\n                else {\n                    this.#connState = this.#openConn();\n                }\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        }\n        const connState = this.#connState;\n        try {\n            // Now we wait for the WebSocket handshake to complete (if it hasn't completed yet). Note that\n            // this does not increase latency, because any messages that we would send on the WebSocket before\n            // the handshake would be queued until the handshake is completed anyway.\n            if (connState.useSqlCache === undefined) {\n                connState.useSqlCache =\n                    (await connState.client.getVersion()) >= 2;\n                if (connState.useSqlCache) {\n                    connState.sqlCache.capacity = sqlCacheCapacity;\n                }\n            }\n            const stream = connState.client.openStream();\n            stream.intMode = this.#intMode;\n            const streamState = { conn: connState, stream };\n            connState.streamStates.add(streamState);\n            return streamState;\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    #openConn(client) {\n        try {\n            client ??= hrana.openWs(this.#url, this.#authToken);\n            return {\n                client,\n                useSqlCache: undefined,\n                sqlCache: new SqlCache(client, 0),\n                openTime: new Date(),\n                streamStates: new Set(),\n            };\n        }\n        catch (e) {\n            throw mapHranaError(e);\n        }\n    }\n    _closeStream(streamState) {\n        streamState.stream.close();\n        const connState = streamState.conn;\n        connState.streamStates.delete(streamState);\n        if (connState.streamStates.size === 0 &&\n            connState !== this.#connState) {\n            // We are not using this connection anymore and this is the last stream that was using it, so we\n            // must close it now.\n            connState.client.close();\n        }\n    }\n    close() {\n        this.#connState.client.close();\n        this.closed = true;\n    }\n}\nexport class WsTransaction extends HranaTransaction {\n    #client;\n    #streamState;\n    /** @private */\n    constructor(client, state, mode, version) {\n        super(mode, version);\n        this.#client = client;\n        this.#streamState = state;\n    }\n    /** @private */\n    _getStream() {\n        return this.#streamState.stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#streamState.conn.sqlCache;\n    }\n    close() {\n        this.#client._closeStream(this.#streamState);\n    }\n    get closed() {\n        return this.#streamState.stream.closed;\n    }\n}\n", "import * as hrana from \"@libsql/hrana-client\";\nimport { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { HranaTransaction, executeHranaBatch, stmtToHrana, resultSetFromHrana, mapHranaError, } from \"./hrana.js\";\nimport { SqlCache } from \"./sql_cache.js\";\nimport { encodeBaseUrl } from \"@libsql/core/uri\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport promiseLimit from \"promise-limit\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme !== \"https\" && config.scheme !== \"http\") {\n        throw new LibsqlError('The HTTP client supports only \"libsql:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n    if (config.encryptionKey !== undefined) {\n        throw new LibsqlError(\"Encryption key is not supported by the remote client.\", \"ENCRYPTION_KEY_NOT_SUPPORTED\");\n    }\n    if (config.scheme === \"http\" && config.tls) {\n        throw new LibsqlError(`A \"http:\" URL cannot opt into TLS by using ?tls=1`, \"URL_INVALID\");\n    }\n    else if (config.scheme === \"https\" && !config.tls) {\n        throw new LibsqlError(`A \"https:\" URL cannot opt out of TLS by using ?tls=0`, \"URL_INVALID\");\n    }\n    const url = encodeBaseUrl(config.scheme, config.authority, config.path);\n    return new HttpClient(url, config.authToken, config.intMode, config.fetch, config.concurrency);\n}\nconst sqlCacheCapacity = 30;\nexport class HttpClient {\n    #client;\n    protocol;\n    #authToken;\n    #promiseLimitFunction;\n    /** @private */\n    constructor(url, authToken, intMode, customFetch, concurrency) {\n        this.#client = hrana.openHttp(url, authToken, customFetch);\n        this.#client.intMode = intMode;\n        this.protocol = \"http\";\n        this.#authToken = authToken;\n        this.#promiseLimitFunction = promiseLimit(concurrency);\n    }\n    async limit(fn) {\n        return this.#promiseLimitFunction(fn);\n    }\n    async execute(stmtOrSql, args) {\n        let stmt;\n        if (typeof stmtOrSql === 'string') {\n            stmt = {\n                sql: stmtOrSql,\n                args: args || []\n            };\n        }\n        else {\n            stmt = stmtOrSql;\n        }\n        return this.limit(async () => {\n            try {\n                const hranaStmt = stmtToHrana(stmt);\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the statement and\n                // close the stream in a single HTTP request.\n                let rowsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    rowsPromise = stream.query(hranaStmt);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const rowsResult = await rowsPromise;\n                return resultSetFromHrana(rowsResult);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async batch(stmts, mode = \"deferred\") {\n        return this.limit(async () => {\n            try {\n                const hranaStmts = stmts.map(stmtToHrana);\n                const version = await this.#client.getVersion();\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the batch and\n                // close the stream in a single HTTP request.\n                let resultsPromise;\n                const stream = this.#client.openStream();\n                try {\n                    // It makes sense to use a SQL cache even for a single batch, because it may contain the same\n                    // statement repeated multiple times.\n                    const sqlCache = new SqlCache(stream, sqlCacheCapacity);\n                    sqlCache.apply(hranaStmts);\n                    // TODO: we do not use a cursor here, because it would cause three roundtrips:\n                    // 1. pipeline request to store SQL texts\n                    // 2. cursor request\n                    // 3. pipeline request to close the stream\n                    const batch = stream.batch(false);\n                    resultsPromise = executeHranaBatch(mode, version, batch, hranaStmts);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                const results = await resultsPromise;\n                return results;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async transaction(mode = \"write\") {\n        return this.limit(async () => {\n            try {\n                const version = await this.#client.getVersion();\n                return new HttpTransaction(this.#client.openStream(), mode, version);\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    async executeMultiple(sql) {\n        return this.limit(async () => {\n            try {\n                // Pipeline all operations, so `hrana.HttpClient` can open the stream, execute the sequence and\n                // close the stream in a single HTTP request.\n                let promise;\n                const stream = this.#client.openStream();\n                try {\n                    promise = stream.sequence(sql);\n                }\n                finally {\n                    stream.closeGracefully();\n                }\n                await promise;\n            }\n            catch (e) {\n                throw mapHranaError(e);\n            }\n        });\n    }\n    sync() {\n        throw new LibsqlError(\"sync not supported in http mode\", \"SYNC_NOT_SUPPORTED\");\n    }\n    close() {\n        this.#client.close();\n    }\n    get closed() {\n        return this.#client.closed;\n    }\n}\nexport class HttpTransaction extends HranaTransaction {\n    #stream;\n    #sqlCache;\n    /** @private */\n    constructor(stream, mode, version) {\n        super(mode, version);\n        this.#stream = stream;\n        this.#sqlCache = new SqlCache(stream, sqlCacheCapacity);\n    }\n    /** @private */\n    _getStream() {\n        return this.#stream;\n    }\n    /** @private */\n    _getSqlCache() {\n        return this.#sqlCache;\n    }\n    close() {\n        this.#stream.close();\n    }\n    get closed() {\n        return this.#stream.closed;\n    }\n}\n", "import { LibsqlError } from \"@libsql/core/api\";\nimport { expandConfig } from \"@libsql/core/config\";\nimport { supportedUrlLink } from \"@libsql/core/util\";\nimport { _createClient as _createWsClient } from \"./ws.js\";\nimport { _createClient as _createHttpClient } from \"./http.js\";\nexport * from \"@libsql/core/api\";\nexport function createClient(config) {\n    return _createClient(expandConfig(config, true));\n}\n/** @private */\nexport function _createClient(config) {\n    if (config.scheme === \"ws\" || config.scheme === \"wss\") {\n        return _createWsClient(config);\n    }\n    else if (config.scheme === \"http\" || config.scheme === \"https\") {\n        return _createHttpClient(config);\n    }\n    else {\n        throw new LibsqlError('The client that uses Web standard APIs supports only \"libsql:\", \"wss:\", \"ws:\", \"https:\" and \"http:\" URLs, ' +\n            `got ${JSON.stringify(config.scheme + \":\")}. For more information, please read ${supportedUrlLink}`, \"URL_SCHEME_NOT_SUPPORTED\");\n    }\n}\n", "/// <reference types=\"./object-utils.d.ts\" />\nexport function isEmpty(obj) {\n    if (Array.isArray(obj) || isString(obj) || isBuffer(obj)) {\n        return obj.length === 0;\n    }\n    else if (obj) {\n        return Object.keys(obj).length === 0;\n    }\n    return false;\n}\nexport function isUndefined(obj) {\n    return typeof obj === 'undefined' || obj === undefined;\n}\nexport function isString(obj) {\n    return typeof obj === 'string';\n}\nexport function isNumber(obj) {\n    return typeof obj === 'number';\n}\nexport function isBoolean(obj) {\n    return typeof obj === 'boolean';\n}\nexport function isNull(obj) {\n    return obj === null;\n}\nexport function isDate(obj) {\n    return obj instanceof Date;\n}\nexport function isBigInt(obj) {\n    return typeof obj === 'bigint';\n}\n// Don't change the returnd type to `obj is Buffer` to not create a\n// hard dependency to node.\nexport function isBuffer(obj) {\n    return typeof Buffer !== 'undefined' && Buffer.isBuffer(obj);\n}\nexport function isFunction(obj) {\n    return typeof obj === 'function';\n}\nexport function isObject(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nexport function isArrayBufferOrView(obj) {\n    return obj instanceof ArrayBuffer || ArrayBuffer.isView(obj);\n}\nexport function isPlainObject(obj) {\n    if (!isObject(obj) || getTag(obj) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(obj) === null) {\n        return true;\n    }\n    let proto = obj;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(obj) === proto;\n}\nexport function getLast(arr) {\n    return arr[arr.length - 1];\n}\nexport function freeze(obj) {\n    return Object.freeze(obj);\n}\nexport function asArray(arg) {\n    if (isReadonlyArray(arg)) {\n        return arg;\n    }\n    else {\n        return [arg];\n    }\n}\nexport function asReadonlyArray(arg) {\n    if (isReadonlyArray(arg)) {\n        return arg;\n    }\n    else {\n        return freeze([arg]);\n    }\n}\nexport function isReadonlyArray(arg) {\n    return Array.isArray(arg);\n}\nexport function noop(obj) {\n    return obj;\n}\nexport function compare(obj1, obj2) {\n    if (isReadonlyArray(obj1) && isReadonlyArray(obj2)) {\n        return compareArrays(obj1, obj2);\n    }\n    else if (isObject(obj1) && isObject(obj2)) {\n        return compareObjects(obj1, obj2);\n    }\n    return obj1 === obj2;\n}\nfunction compareArrays(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; ++i) {\n        if (!compare(arr1[i], arr2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction compareObjects(obj1, obj2) {\n    if (isBuffer(obj1) && isBuffer(obj2)) {\n        return compareBuffers(obj1, obj2);\n    }\n    else if (isDate(obj1) && isDate(obj2)) {\n        return compareDates(obj1, obj2);\n    }\n    return compareGenericObjects(obj1, obj2);\n}\nfunction compareBuffers(buf1, buf2) {\n    return Buffer.compare(buf1, buf2) === 0;\n}\nfunction compareDates(date1, date2) {\n    return date1.getTime() === date2.getTime();\n}\nfunction compareGenericObjects(obj1, obj2) {\n    const keys1 = Object.keys(obj1);\n    const keys2 = Object.keys(obj2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        if (!compare(obj1[key], obj2[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nconst toString = Object.prototype.toString;\nfunction getTag(value) {\n    if (value == null) {\n        return value === undefined ? '[object Undefined]' : '[object Null]';\n    }\n    return toString.call(value);\n}\n", "/// <reference types=\"./alter-table-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const AlterTableNode = freeze({\n    is(node) {\n        return node.kind === 'AlterTableNode';\n    },\n    create(table) {\n        return freeze({\n            kind: 'AlterTableNode',\n            table,\n        });\n    },\n    cloneWithTableProps(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n    cloneWithColumnAlteration(node, columnAlteration) {\n        return freeze({\n            ...node,\n            columnAlterations: node.columnAlterations\n                ? [...node.columnAlterations, columnAlteration]\n                : [columnAlteration],\n        });\n    },\n});\n", "/// <reference types=\"./identifier-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const IdentifierNode = freeze({\n    is(node) {\n        return node.kind === 'IdentifierNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'IdentifierNode',\n            name,\n        });\n    },\n});\n", "/// <reference types=\"./create-index-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const CreateIndexNode = freeze({\n    is(node) {\n        return node.kind === 'CreateIndexNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'CreateIndexNode',\n            name: IdentifierNode.create(name),\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n    cloneWithColumns(node, columns) {\n        return freeze({\n            ...node,\n            columns: [...(node.columns || []), ...columns],\n        });\n    },\n});\n", "/// <reference types=\"./create-schema-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const CreateSchemaNode = freeze({\n    is(node) {\n        return node.kind === 'CreateSchemaNode';\n    },\n    create(schema, params) {\n        return freeze({\n            kind: 'CreateSchemaNode',\n            schema: IdentifierNode.create(schema),\n            ...params,\n        });\n    },\n    cloneWith(createSchema, params) {\n        return freeze({\n            ...createSchema,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./create-table-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nexport const ON_COMMIT_ACTIONS = ['preserve rows', 'delete rows', 'drop'];\n/**\n * @internal\n */\nexport const CreateTableNode = freeze({\n    is(node) {\n        return node.kind === 'CreateTableNode';\n    },\n    create(table) {\n        return freeze({\n            kind: 'CreateTableNode',\n            table,\n            columns: freeze([]),\n        });\n    },\n    cloneWithColumn(createTable, column) {\n        return freeze({\n            ...createTable,\n            columns: freeze([...createTable.columns, column]),\n        });\n    },\n    cloneWithConstraint(createTable, constraint) {\n        return freeze({\n            ...createTable,\n            constraints: createTable.constraints\n                ? freeze([...createTable.constraints, constraint])\n                : freeze([constraint]),\n        });\n    },\n    cloneWithFrontModifier(createTable, modifier) {\n        return freeze({\n            ...createTable,\n            frontModifiers: createTable.frontModifiers\n                ? freeze([...createTable.frontModifiers, modifier])\n                : freeze([modifier]),\n        });\n    },\n    cloneWithEndModifier(createTable, modifier) {\n        return freeze({\n            ...createTable,\n            endModifiers: createTable.endModifiers\n                ? freeze([...createTable.endModifiers, modifier])\n                : freeze([modifier]),\n        });\n    },\n    cloneWith(createTable, params) {\n        return freeze({\n            ...createTable,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./schemable-identifier-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const SchemableIdentifierNode = freeze({\n    is(node) {\n        return node.kind === 'SchemableIdentifierNode';\n    },\n    create(identifier) {\n        return freeze({\n            kind: 'SchemableIdentifierNode',\n            identifier: IdentifierNode.create(identifier),\n        });\n    },\n    createWithSchema(schema, identifier) {\n        return freeze({\n            kind: 'SchemableIdentifierNode',\n            schema: IdentifierNode.create(schema),\n            identifier: IdentifierNode.create(identifier),\n        });\n    },\n});\n", "/// <reference types=\"./drop-index-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { SchemableIdentifierNode } from './schemable-identifier-node.js';\n/**\n * @internal\n */\nexport const DropIndexNode = freeze({\n    is(node) {\n        return node.kind === 'DropIndexNode';\n    },\n    create(name, params) {\n        return freeze({\n            kind: 'DropIndexNode',\n            name: SchemableIdentifierNode.create(name),\n            ...params,\n        });\n    },\n    cloneWith(dropIndex, props) {\n        return freeze({\n            ...dropIndex,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./drop-schema-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const DropSchemaNode = freeze({\n    is(node) {\n        return node.kind === 'DropSchemaNode';\n    },\n    create(schema, params) {\n        return freeze({\n            kind: 'DropSchemaNode',\n            schema: IdentifierNode.create(schema),\n            ...params,\n        });\n    },\n    cloneWith(dropSchema, params) {\n        return freeze({\n            ...dropSchema,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./drop-table-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const DropTableNode = freeze({\n    is(node) {\n        return node.kind === 'DropTableNode';\n    },\n    create(table, params) {\n        return freeze({\n            kind: 'DropTableNode',\n            table,\n            ...params,\n        });\n    },\n    cloneWith(dropIndex, params) {\n        return freeze({\n            ...dropIndex,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./alias-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const AliasNode = freeze({\n    is(node) {\n        return node.kind === 'AliasNode';\n    },\n    create(node, alias) {\n        return freeze({\n            kind: 'AliasNode',\n            node,\n            alias,\n        });\n    },\n});\n", "/// <reference types=\"./table-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { SchemableIdentifierNode } from './schemable-identifier-node.js';\n/**\n * @internal\n */\nexport const TableNode = freeze({\n    is(node) {\n        return node.kind === 'TableNode';\n    },\n    create(table) {\n        return freeze({\n            kind: 'TableNode',\n            table: SchemableIdentifierNode.create(table),\n        });\n    },\n    createWithSchema(schema, table) {\n        return freeze({\n            kind: 'TableNode',\n            table: SchemableIdentifierNode.createWithSchema(schema, table),\n        });\n    },\n});\n", "/// <reference types=\"./operation-node-source.d.ts\" />\nimport { isFunction, isObject } from '../util/object-utils.js';\nexport function isOperationNodeSource(obj) {\n    return isObject(obj) && isFunction(obj.toOperationNode);\n}\n", "/// <reference types=\"./expression.d.ts\" />\nimport { isOperationNodeSource, } from '../operation-node/operation-node-source.js';\nimport { isObject, isString } from '../util/object-utils.js';\nexport function isExpression(obj) {\n    return isObject(obj) && 'expressionType' in obj && isOperationNodeSource(obj);\n}\nexport function isAliasedExpression(obj) {\n    return (isObject(obj) &&\n        'expression' in obj &&\n        isString(obj.alias) &&\n        isOperationNodeSource(obj));\n}\n", "/// <reference types=\"./select-modifier-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const SelectModifierNode = freeze({\n    is(node) {\n        return node.kind === 'SelectModifierNode';\n    },\n    create(modifier, of) {\n        return freeze({\n            kind: 'SelectModifierNode',\n            modifier,\n            of,\n        });\n    },\n    createWithExpression(modifier) {\n        return freeze({\n            kind: 'SelectModifierNode',\n            rawModifier: modifier,\n        });\n    },\n});\n", "/// <reference types=\"./and-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const AndNode = freeze({\n    is(node) {\n        return node.kind === 'AndNode';\n    },\n    create(left, right) {\n        return freeze({\n            kind: 'AndNode',\n            left,\n            right,\n        });\n    },\n});\n", "/// <reference types=\"./or-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OrNode = freeze({\n    is(node) {\n        return node.kind === 'OrNode';\n    },\n    create(left, right) {\n        return freeze({\n            kind: 'OrNode',\n            left,\n            right,\n        });\n    },\n});\n", "/// <reference types=\"./on-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { AndNode } from './and-node.js';\nimport { OrNode } from './or-node.js';\n/**\n * @internal\n */\nexport const OnNode = freeze({\n    is(node) {\n        return node.kind === 'OnNode';\n    },\n    create(filter) {\n        return freeze({\n            kind: 'OnNode',\n            on: filter,\n        });\n    },\n    cloneWithOperation(onNode, operator, operation) {\n        return freeze({\n            ...onNode,\n            on: operator === 'And'\n                ? AndNode.create(onNode.on, operation)\n                : OrNode.create(onNode.on, operation),\n        });\n    },\n});\n", "/// <reference types=\"./join-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { OnNode } from './on-node.js';\n/**\n * @internal\n */\nexport const JoinNode = freeze({\n    is(node) {\n        return node.kind === 'JoinNode';\n    },\n    create(joinType, table) {\n        return freeze({\n            kind: 'JoinNode',\n            joinType,\n            table,\n            on: undefined,\n        });\n    },\n    createWithOn(joinType, table, on) {\n        return freeze({\n            kind: 'JoinNode',\n            joinType,\n            table,\n            on: OnNode.create(on),\n        });\n    },\n    cloneWithOn(joinNode, operation) {\n        return freeze({\n            ...joinNode,\n            on: joinNode.on\n                ? OnNode.cloneWithOperation(joinNode.on, 'And', operation)\n                : OnNode.create(operation),\n        });\n    },\n});\n", "/// <reference types=\"./binary-operation-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const BinaryOperationNode = freeze({\n    is(node) {\n        return node.kind === 'BinaryOperationNode';\n    },\n    create(leftOperand, operator, rightOperand) {\n        return freeze({\n            kind: 'BinaryOperationNode',\n            leftOperand,\n            operator,\n            rightOperand,\n        });\n    },\n});\n", "/// <reference types=\"./operator-node.d.ts\" />\nimport { freeze, isString } from '../util/object-utils.js';\nexport const COMPARISON_OPERATORS = [\n    '=',\n    '==',\n    '!=',\n    '<>',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'in',\n    'not in',\n    'is',\n    'is not',\n    'like',\n    'not like',\n    'match',\n    'ilike',\n    'not ilike',\n    '@>',\n    '<@',\n    '^@',\n    '&&',\n    '?',\n    '?&',\n    '?|',\n    '!<',\n    '!>',\n    '<=>',\n    '!~',\n    '~',\n    '~*',\n    '!~*',\n    '@@',\n    '@@@',\n    '!!',\n    '<->',\n    'regexp',\n    'is distinct from',\n    'is not distinct from',\n];\nexport const ARITHMETIC_OPERATORS = [\n    '+',\n    '-',\n    '*',\n    '/',\n    '%',\n    '^',\n    '&',\n    '|',\n    '#',\n    '<<',\n    '>>',\n];\nexport const JSON_OPERATORS = ['->', '->>'];\nexport const BINARY_OPERATORS = [\n    ...COMPARISON_OPERATORS,\n    ...ARITHMETIC_OPERATORS,\n    '&&',\n    '||',\n];\nexport const UNARY_FILTER_OPERATORS = ['exists', 'not exists'];\nexport const UNARY_OPERATORS = ['not', '-', ...UNARY_FILTER_OPERATORS];\nexport const OPERATORS = [\n    ...BINARY_OPERATORS,\n    ...JSON_OPERATORS,\n    ...UNARY_OPERATORS,\n    'between',\n    'between symmetric',\n];\n/**\n * @internal\n */\nexport const OperatorNode = freeze({\n    is(node) {\n        return node.kind === 'OperatorNode';\n    },\n    create(operator) {\n        return freeze({\n            kind: 'OperatorNode',\n            operator,\n        });\n    },\n});\nexport function isOperator(op) {\n    return isString(op) && OPERATORS.includes(op);\n}\nexport function isBinaryOperator(op) {\n    return isString(op) && BINARY_OPERATORS.includes(op);\n}\nexport function isComparisonOperator(op) {\n    return isString(op) && COMPARISON_OPERATORS.includes(op);\n}\nexport function isArithmeticOperator(op) {\n    return isString(op) && ARITHMETIC_OPERATORS.includes(op);\n}\nexport function isJSONOperator(op) {\n    return isString(op) && JSON_OPERATORS.includes(op);\n}\n", "/// <reference types=\"./column-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const ColumnNode = freeze({\n    is(node) {\n        return node.kind === 'ColumnNode';\n    },\n    create(column) {\n        return freeze({\n            kind: 'ColumnNode',\n            column: IdentifierNode.create(column),\n        });\n    },\n});\n", "/// <reference types=\"./select-all-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const SelectAllNode = freeze({\n    is(node) {\n        return node.kind === 'SelectAllNode';\n    },\n    create() {\n        return freeze({\n            kind: 'SelectAllNode',\n        });\n    },\n});\n", "/// <reference types=\"./reference-node.d.ts\" />\nimport { SelectAllNode } from './select-all-node.js';\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ReferenceNode = freeze({\n    is(node) {\n        return node.kind === 'ReferenceNode';\n    },\n    create(column, table) {\n        return freeze({\n            kind: 'ReferenceNode',\n            table,\n            column,\n        });\n    },\n    createSelectAll(table) {\n        return freeze({\n            kind: 'ReferenceNode',\n            table,\n            column: SelectAllNode.create(),\n        });\n    },\n});\n", "/// <reference types=\"./dynamic-reference-builder.d.ts\" />\nimport { isOperationNodeSource, } from '../operation-node/operation-node-source.js';\nimport { parseSimpleReferenceExpression } from '../parser/reference-parser.js';\nimport { isObject, isString } from '../util/object-utils.js';\nexport class DynamicReferenceBuilder {\n    #dynamicReference;\n    get dynamicReference() {\n        return this.#dynamicReference;\n    }\n    /**\n     * @private\n     *\n     * This needs to be here just so that the typings work. Without this\n     * the generated .d.ts file contains no reference to the type param R\n     * which causes this type to be equal to DynamicReferenceBuilder with\n     * any R.\n     */\n    get refType() {\n        return undefined;\n    }\n    constructor(reference) {\n        this.#dynamicReference = reference;\n    }\n    toOperationNode() {\n        return parseSimpleReferenceExpression(this.#dynamicReference);\n    }\n}\nexport function isDynamicReferenceBuilder(obj) {\n    return (isObject(obj) &&\n        isOperationNodeSource(obj) &&\n        isString(obj.dynamicReference));\n}\n", "/// <reference types=\"./order-by-item-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OrderByItemNode = freeze({\n    is(node) {\n        return node.kind === 'OrderByItemNode';\n    },\n    create(orderBy, direction) {\n        return freeze({\n            kind: 'OrderByItemNode',\n            orderBy,\n            direction,\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./raw-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const RawNode = freeze({\n    is(node) {\n        return node.kind === 'RawNode';\n    },\n    create(sqlFragments, parameters) {\n        return freeze({\n            kind: 'RawNode',\n            sqlFragments: freeze(sqlFragments),\n            parameters: freeze(parameters),\n        });\n    },\n    createWithSql(sql) {\n        return RawNode.create([sql], []);\n    },\n    createWithChild(child) {\n        return RawNode.create(['', ''], [child]);\n    },\n    createWithChildren(children) {\n        return RawNode.create(new Array(children.length + 1).fill(''), children);\n    },\n});\n", "/// <reference types=\"./collate-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const CollateNode = {\n    is(node) {\n        return node.kind === 'CollateNode';\n    },\n    create(collation) {\n        return freeze({\n            kind: 'CollateNode',\n            collation: IdentifierNode.create(collation),\n        });\n    },\n};\n", "/// <reference types=\"./order-by-item-builder.d.ts\" />\nimport { CollateNode } from '../operation-node/collate-node.js';\nimport { OrderByItemNode } from '../operation-node/order-by-item-node.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class OrderByItemBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Adds `desc` to the `order by` item.\n     *\n     * See {@link asc} for the opposite.\n     */\n    desc() {\n        return new OrderByItemBuilder({\n            node: OrderByItemNode.cloneWith(this.#props.node, {\n                direction: RawNode.createWithSql('desc'),\n            }),\n        });\n    }\n    /**\n     * Adds `asc` to the `order by` item.\n     *\n     * See {@link desc} for the opposite.\n     */\n    asc() {\n        return new OrderByItemBuilder({\n            node: OrderByItemNode.cloneWith(this.#props.node, {\n                direction: RawNode.createWithSql('asc'),\n            }),\n        });\n    }\n    /**\n     * Adds `nulls last` to the `order by` item.\n     *\n     * This is only supported by some dialects like PostgreSQL and SQLite.\n     *\n     * See {@link nullsFirst} for the opposite.\n     */\n    nullsLast() {\n        return new OrderByItemBuilder({\n            node: OrderByItemNode.cloneWith(this.#props.node, { nulls: 'last' }),\n        });\n    }\n    /**\n     * Adds `nulls first` to the `order by` item.\n     *\n     * This is only supported by some dialects like PostgreSQL and SQLite.\n     *\n     * See {@link nullsLast} for the opposite.\n     */\n    nullsFirst() {\n        return new OrderByItemBuilder({\n            node: OrderByItemNode.cloneWith(this.#props.node, { nulls: 'first' }),\n        });\n    }\n    /**\n     * Adds `collate <collationName>` to the `order by` item.\n     */\n    collate(collation) {\n        return new OrderByItemBuilder({\n            node: OrderByItemNode.cloneWith(this.#props.node, {\n                collation: CollateNode.create(collation),\n            }),\n        });\n    }\n    toOperationNode() {\n        return this.#props.node;\n    }\n}\n", "/// <reference types=\"./log-once.d.ts\" />\nconst LOGGED_MESSAGES = new Set();\n/**\n * Use for system-level logging, such as deprecation messages.\n * Logs a message and ensures it won't be logged again.\n */\nexport function logOnce(message) {\n    if (LOGGED_MESSAGES.has(message)) {\n        return;\n    }\n    LOGGED_MESSAGES.add(message);\n    console.log(message);\n}\n", "/// <reference types=\"./order-by-parser.d.ts\" />\nimport { isDynamicReferenceBuilder, } from '../dynamic/dynamic-reference-builder.js';\nimport { isExpression } from '../expression/expression.js';\nimport { OrderByItemNode } from '../operation-node/order-by-item-node.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { OrderByItemBuilder } from '../query-builder/order-by-item-builder.js';\nimport { logOnce } from '../util/log-once.js';\nimport { isExpressionOrFactory, parseExpression, } from './expression-parser.js';\nimport { parseStringReference, } from './reference-parser.js';\nexport function isOrderByDirection(thing) {\n    return thing === 'asc' || thing === 'desc';\n}\nexport function parseOrderBy(args) {\n    if (args.length === 2) {\n        return [parseOrderByItem(args[0], args[1])];\n    }\n    if (args.length === 1) {\n        const [orderBy] = args;\n        if (Array.isArray(orderBy)) {\n            logOnce('orderBy(array) is deprecated, use multiple orderBy calls instead.');\n            return orderBy.map((item) => parseOrderByItem(item));\n        }\n        return [parseOrderByItem(orderBy)];\n    }\n    throw new Error(`Invalid number of arguments at order by! expected 1-2, received ${args.length}`);\n}\nexport function parseOrderByItem(expr, modifiers) {\n    const parsedRef = parseOrderByExpression(expr);\n    if (OrderByItemNode.is(parsedRef)) {\n        if (modifiers) {\n            throw new Error('Cannot specify direction twice!');\n        }\n        return parsedRef;\n    }\n    return parseOrderByWithModifiers(parsedRef, modifiers);\n}\nfunction parseOrderByExpression(expr) {\n    if (isExpressionOrFactory(expr)) {\n        return parseExpression(expr);\n    }\n    if (isDynamicReferenceBuilder(expr)) {\n        return expr.toOperationNode();\n    }\n    const [ref, direction] = expr.split(' ');\n    if (direction) {\n        logOnce(\"`orderBy('column asc')` is deprecated. Use `orderBy('column', 'asc')` instead.\");\n        return parseOrderByWithModifiers(parseStringReference(ref), direction);\n    }\n    return parseStringReference(expr);\n}\nfunction parseOrderByWithModifiers(expr, modifiers) {\n    if (typeof modifiers === 'string') {\n        if (!isOrderByDirection(modifiers)) {\n            throw new Error(`Invalid order by direction: ${modifiers}`);\n        }\n        return OrderByItemNode.create(expr, RawNode.createWithSql(modifiers));\n    }\n    if (isExpression(modifiers)) {\n        logOnce(\"`orderBy(..., expr)` is deprecated. Use `orderBy(..., 'asc')` or `orderBy(..., (ob) => ...)` instead.\");\n        return OrderByItemNode.create(expr, modifiers.toOperationNode());\n    }\n    const node = OrderByItemNode.create(expr);\n    if (!modifiers) {\n        return node;\n    }\n    return modifiers(new OrderByItemBuilder({ node })).toOperationNode();\n}\n", "/// <reference types=\"./json-reference-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const JSONReferenceNode = freeze({\n    is(node) {\n        return node.kind === 'JSONReferenceNode';\n    },\n    create(reference, traversal) {\n        return freeze({\n            kind: 'JSONReferenceNode',\n            reference,\n            traversal,\n        });\n    },\n    cloneWithTraversal(node, traversal) {\n        return freeze({\n            ...node,\n            traversal,\n        });\n    },\n});\n", "/// <reference types=\"./json-operator-chain-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const JSONOperatorChainNode = freeze({\n    is(node) {\n        return node.kind === 'JSONOperatorChainNode';\n    },\n    create(operator) {\n        return freeze({\n            kind: 'JSONOperatorChainNode',\n            operator,\n            values: freeze([]),\n        });\n    },\n    cloneWithValue(node, value) {\n        return freeze({\n            ...node,\n            values: freeze([...node.values, value]),\n        });\n    },\n});\n", "/// <reference types=\"./json-path-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const JSONPathNode = freeze({\n    is(node) {\n        return node.kind === 'JSONPathNode';\n    },\n    create(inOperator) {\n        return freeze({\n            kind: 'JSONPathNode',\n            inOperator,\n            pathLegs: freeze([]),\n        });\n    },\n    cloneWithLeg(jsonPathNode, pathLeg) {\n        return freeze({\n            ...jsonPathNode,\n            pathLegs: freeze([...jsonPathNode.pathLegs, pathLeg]),\n        });\n    },\n});\n", "/// <reference types=\"./reference-parser.d.ts\" />\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { ReferenceNode } from '../operation-node/reference-node.js';\nimport { TableNode } from '../operation-node/table-node.js';\nimport { isReadonlyArray, isString } from '../util/object-utils.js';\nimport { parseExpression, isExpressionOrFactory, } from './expression-parser.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { isOrderByDirection, parseOrderBy, } from './order-by-parser.js';\nimport { OperatorNode, isJSONOperator, } from '../operation-node/operator-node.js';\nimport { JSONReferenceNode } from '../operation-node/json-reference-node.js';\nimport { JSONOperatorChainNode } from '../operation-node/json-operator-chain-node.js';\nimport { JSONPathNode } from '../operation-node/json-path-node.js';\nexport function parseSimpleReferenceExpression(exp) {\n    if (isString(exp)) {\n        return parseStringReference(exp);\n    }\n    return exp.toOperationNode();\n}\nexport function parseReferenceExpressionOrList(arg) {\n    if (isReadonlyArray(arg)) {\n        return arg.map((it) => parseReferenceExpression(it));\n    }\n    else {\n        return [parseReferenceExpression(arg)];\n    }\n}\nexport function parseReferenceExpression(exp) {\n    if (isExpressionOrFactory(exp)) {\n        return parseExpression(exp);\n    }\n    return parseSimpleReferenceExpression(exp);\n}\nexport function parseJSONReference(ref, op) {\n    const referenceNode = parseStringReference(ref);\n    if (isJSONOperator(op)) {\n        return JSONReferenceNode.create(referenceNode, JSONOperatorChainNode.create(OperatorNode.create(op)));\n    }\n    const opWithoutLastChar = op.slice(0, -1);\n    if (isJSONOperator(opWithoutLastChar)) {\n        return JSONReferenceNode.create(referenceNode, JSONPathNode.create(OperatorNode.create(opWithoutLastChar)));\n    }\n    throw new Error(`Invalid JSON operator: ${op}`);\n}\nexport function parseStringReference(ref) {\n    const COLUMN_SEPARATOR = '.';\n    if (!ref.includes(COLUMN_SEPARATOR)) {\n        return ReferenceNode.create(ColumnNode.create(ref));\n    }\n    const parts = ref.split(COLUMN_SEPARATOR).map(trim);\n    if (parts.length === 3) {\n        return parseStringReferenceWithTableAndSchema(parts);\n    }\n    if (parts.length === 2) {\n        return parseStringReferenceWithTable(parts);\n    }\n    throw new Error(`invalid column reference ${ref}`);\n}\nexport function parseAliasedStringReference(ref) {\n    const ALIAS_SEPARATOR = ' as ';\n    if (ref.includes(ALIAS_SEPARATOR)) {\n        const [columnRef, alias] = ref.split(ALIAS_SEPARATOR).map(trim);\n        return AliasNode.create(parseStringReference(columnRef), IdentifierNode.create(alias));\n    }\n    else {\n        return parseStringReference(ref);\n    }\n}\nexport function parseColumnName(column) {\n    return ColumnNode.create(column);\n}\nexport function parseOrderedColumnName(column) {\n    const ORDER_SEPARATOR = ' ';\n    if (column.includes(ORDER_SEPARATOR)) {\n        const [columnName, order] = column.split(ORDER_SEPARATOR).map(trim);\n        if (!isOrderByDirection(order)) {\n            throw new Error(`invalid order direction \"${order}\" next to \"${columnName}\"`);\n        }\n        return parseOrderBy([columnName, order])[0];\n    }\n    else {\n        return parseColumnName(column);\n    }\n}\nfunction parseStringReferenceWithTableAndSchema(parts) {\n    const [schema, table, column] = parts;\n    return ReferenceNode.create(ColumnNode.create(column), TableNode.createWithSchema(schema, table));\n}\nfunction parseStringReferenceWithTable(parts) {\n    const [table, column] = parts;\n    return ReferenceNode.create(ColumnNode.create(column), TableNode.create(table));\n}\nfunction trim(str) {\n    return str.trim();\n}\n", "/// <reference types=\"./primitive-value-list-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const PrimitiveValueListNode = freeze({\n    is(node) {\n        return node.kind === 'PrimitiveValueListNode';\n    },\n    create(values) {\n        return freeze({\n            kind: 'PrimitiveValueListNode',\n            values: freeze([...values]),\n        });\n    },\n});\n", "/// <reference types=\"./value-list-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ValueListNode = freeze({\n    is(node) {\n        return node.kind === 'ValueListNode';\n    },\n    create(values) {\n        return freeze({\n            kind: 'ValueListNode',\n            values: freeze(values),\n        });\n    },\n});\n", "/// <reference types=\"./value-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ValueNode = freeze({\n    is(node) {\n        return node.kind === 'ValueNode';\n    },\n    create(value) {\n        return freeze({\n            kind: 'ValueNode',\n            value,\n        });\n    },\n    createImmediate(value) {\n        return freeze({\n            kind: 'ValueNode',\n            value,\n            immediate: true,\n        });\n    },\n});\n", "/// <reference types=\"./value-parser.d.ts\" />\nimport { PrimitiveValueListNode } from '../operation-node/primitive-value-list-node.js';\nimport { ValueListNode } from '../operation-node/value-list-node.js';\nimport { ValueNode } from '../operation-node/value-node.js';\nimport { isBoolean, isNull, isNumber, isReadonlyArray, } from '../util/object-utils.js';\nimport { parseExpression, isExpressionOrFactory, } from './expression-parser.js';\nexport function parseValueExpressionOrList(arg) {\n    if (isReadonlyArray(arg)) {\n        return parseValueExpressionList(arg);\n    }\n    return parseValueExpression(arg);\n}\nexport function parseValueExpression(exp) {\n    if (isExpressionOrFactory(exp)) {\n        return parseExpression(exp);\n    }\n    return ValueNode.create(exp);\n}\nexport function isSafeImmediateValue(value) {\n    return isNumber(value) || isBoolean(value) || isNull(value);\n}\nexport function parseSafeImmediateValue(value) {\n    if (!isSafeImmediateValue(value)) {\n        throw new Error(`unsafe immediate value ${JSON.stringify(value)}`);\n    }\n    return ValueNode.createImmediate(value);\n}\nfunction parseValueExpressionList(arg) {\n    if (arg.some(isExpressionOrFactory)) {\n        return ValueListNode.create(arg.map((it) => parseValueExpression(it)));\n    }\n    return PrimitiveValueListNode.create(arg);\n}\n", "/// <reference types=\"./parens-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ParensNode = freeze({\n    is(node) {\n        return node.kind === 'ParensNode';\n    },\n    create(node) {\n        return freeze({\n            kind: 'ParensNode',\n            node,\n        });\n    },\n});\n", "/// <reference types=\"./binary-operation-parser.d.ts\" />\nimport { BinaryOperationNode } from '../operation-node/binary-operation-node.js';\nimport { isBoolean, isNull, isString, isUndefined, } from '../util/object-utils.js';\nimport { isOperationNodeSource, } from '../operation-node/operation-node-source.js';\nimport { OperatorNode, OPERATORS, } from '../operation-node/operator-node.js';\nimport { parseReferenceExpression, } from './reference-parser.js';\nimport { parseValueExpression, parseValueExpressionOrList, } from './value-parser.js';\nimport { ValueNode } from '../operation-node/value-node.js';\nimport { AndNode } from '../operation-node/and-node.js';\nimport { ParensNode } from '../operation-node/parens-node.js';\nimport { OrNode } from '../operation-node/or-node.js';\nexport function parseValueBinaryOperationOrExpression(args) {\n    if (args.length === 3) {\n        return parseValueBinaryOperation(args[0], args[1], args[2]);\n    }\n    else if (args.length === 1) {\n        return parseValueExpression(args[0]);\n    }\n    throw new Error(`invalid arguments: ${JSON.stringify(args)}`);\n}\nexport function parseValueBinaryOperation(left, operator, right) {\n    if (isIsOperator(operator) && needsIsOperator(right)) {\n        return BinaryOperationNode.create(parseReferenceExpression(left), parseOperator(operator), ValueNode.createImmediate(right));\n    }\n    return BinaryOperationNode.create(parseReferenceExpression(left), parseOperator(operator), parseValueExpressionOrList(right));\n}\nexport function parseReferentialBinaryOperation(left, operator, right) {\n    return BinaryOperationNode.create(parseReferenceExpression(left), parseOperator(operator), parseReferenceExpression(right));\n}\nexport function parseFilterObject(obj, combinator) {\n    return parseFilterList(Object.entries(obj)\n        .filter(([, v]) => !isUndefined(v))\n        .map(([k, v]) => parseValueBinaryOperation(k, needsIsOperator(v) ? 'is' : '=', v)), combinator);\n}\nexport function parseFilterList(list, combinator, withParens = true) {\n    const combine = combinator === 'and' ? AndNode.create : OrNode.create;\n    if (list.length === 0) {\n        return BinaryOperationNode.create(ValueNode.createImmediate(1), OperatorNode.create('='), ValueNode.createImmediate(combinator === 'and' ? 1 : 0));\n    }\n    let node = toOperationNode(list[0]);\n    for (let i = 1; i < list.length; ++i) {\n        node = combine(node, toOperationNode(list[i]));\n    }\n    if (list.length > 1 && withParens) {\n        return ParensNode.create(node);\n    }\n    return node;\n}\nfunction isIsOperator(operator) {\n    return operator === 'is' || operator === 'is not';\n}\nfunction needsIsOperator(value) {\n    return isNull(value) || isBoolean(value);\n}\nfunction parseOperator(operator) {\n    if (isString(operator) && OPERATORS.includes(operator)) {\n        return OperatorNode.create(operator);\n    }\n    if (isOperationNodeSource(operator)) {\n        return operator.toOperationNode();\n    }\n    throw new Error(`invalid operator ${JSON.stringify(operator)}`);\n}\nfunction toOperationNode(nodeOrSource) {\n    return isOperationNodeSource(nodeOrSource)\n        ? nodeOrSource.toOperationNode()\n        : nodeOrSource;\n}\n", "/// <reference types=\"./order-by-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OrderByNode = freeze({\n    is(node) {\n        return node.kind === 'OrderByNode';\n    },\n    create(items) {\n        return freeze({\n            kind: 'OrderByNode',\n            items: freeze([...items]),\n        });\n    },\n    cloneWithItems(orderBy, items) {\n        return freeze({\n            ...orderBy,\n            items: freeze([...orderBy.items, ...items]),\n        });\n    },\n});\n", "/// <reference types=\"./partition-by-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const PartitionByNode = freeze({\n    is(node) {\n        return node.kind === 'PartitionByNode';\n    },\n    create(items) {\n        return freeze({\n            kind: 'PartitionByNode',\n            items: freeze(items),\n        });\n    },\n    cloneWithItems(partitionBy, items) {\n        return freeze({\n            ...partitionBy,\n            items: freeze([...partitionBy.items, ...items]),\n        });\n    },\n});\n", "/// <reference types=\"./over-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { OrderByNode } from './order-by-node.js';\nimport { PartitionByNode } from './partition-by-node.js';\n/**\n * @internal\n */\nexport const OverNode = freeze({\n    is(node) {\n        return node.kind === 'OverNode';\n    },\n    create() {\n        return freeze({\n            kind: 'OverNode',\n        });\n    },\n    cloneWithOrderByItems(overNode, items) {\n        return freeze({\n            ...overNode,\n            orderBy: overNode.orderBy\n                ? OrderByNode.cloneWithItems(overNode.orderBy, items)\n                : OrderByNode.create(items),\n        });\n    },\n    cloneWithPartitionByItems(overNode, items) {\n        return freeze({\n            ...overNode,\n            partitionBy: overNode.partitionBy\n                ? PartitionByNode.cloneWithItems(overNode.partitionBy, items)\n                : PartitionByNode.create(items),\n        });\n    },\n});\n", "/// <reference types=\"./from-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const FromNode = freeze({\n    is(node) {\n        return node.kind === 'FromNode';\n    },\n    create(froms) {\n        return freeze({\n            kind: 'FromNode',\n            froms: freeze(froms),\n        });\n    },\n    cloneWithFroms(from, froms) {\n        return freeze({\n            ...from,\n            froms: freeze([...from.froms, ...froms]),\n        });\n    },\n});\n", "/// <reference types=\"./group-by-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const GroupByNode = freeze({\n    is(node) {\n        return node.kind === 'GroupByNode';\n    },\n    create(items) {\n        return freeze({\n            kind: 'GroupByNode',\n            items: freeze(items),\n        });\n    },\n    cloneWithItems(groupBy, items) {\n        return freeze({\n            ...groupBy,\n            items: freeze([...groupBy.items, ...items]),\n        });\n    },\n});\n", "/// <reference types=\"./having-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { AndNode } from './and-node.js';\nimport { OrNode } from './or-node.js';\n/**\n * @internal\n */\nexport const HavingNode = freeze({\n    is(node) {\n        return node.kind === 'HavingNode';\n    },\n    create(filter) {\n        return freeze({\n            kind: 'HavingNode',\n            having: filter,\n        });\n    },\n    cloneWithOperation(havingNode, operator, operation) {\n        return freeze({\n            ...havingNode,\n            having: operator === 'And'\n                ? AndNode.create(havingNode.having, operation)\n                : OrNode.create(havingNode.having, operation),\n        });\n    },\n});\n", "/// <reference types=\"./insert-query-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const InsertQueryNode = freeze({\n    is(node) {\n        return node.kind === 'InsertQueryNode';\n    },\n    create(into, withNode, replace) {\n        return freeze({\n            kind: 'InsertQueryNode',\n            into,\n            ...(withNode && { with: withNode }),\n            replace,\n        });\n    },\n    createWithoutInto() {\n        return freeze({\n            kind: 'InsertQueryNode',\n        });\n    },\n    cloneWith(insertQuery, props) {\n        return freeze({\n            ...insertQuery,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./list-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ListNode = freeze({\n    is(node) {\n        return node.kind === 'ListNode';\n    },\n    create(items) {\n        return freeze({\n            kind: 'ListNode',\n            items: freeze(items),\n        });\n    },\n});\n", "/// <reference types=\"./update-query-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { FromNode } from './from-node.js';\nimport { ListNode } from './list-node.js';\n/**\n * @internal\n */\nexport const UpdateQueryNode = freeze({\n    is(node) {\n        return node.kind === 'UpdateQueryNode';\n    },\n    create(tables, withNode) {\n        return freeze({\n            kind: 'UpdateQueryNode',\n            // For backwards compatibility, use the raw table node when there's only one table\n            // and don't rename the property to something like `tables`.\n            table: tables.length === 1 ? tables[0] : ListNode.create(tables),\n            ...(withNode && { with: withNode }),\n        });\n    },\n    createWithoutTable() {\n        return freeze({\n            kind: 'UpdateQueryNode',\n        });\n    },\n    cloneWithFromItems(updateQuery, fromItems) {\n        return freeze({\n            ...updateQuery,\n            from: updateQuery.from\n                ? FromNode.cloneWithFroms(updateQuery.from, fromItems)\n                : FromNode.create(fromItems),\n        });\n    },\n    cloneWithUpdates(updateQuery, updates) {\n        return freeze({\n            ...updateQuery,\n            updates: updateQuery.updates\n                ? freeze([...updateQuery.updates, ...updates])\n                : updates,\n        });\n    },\n    cloneWithLimit(updateQuery, limit) {\n        return freeze({\n            ...updateQuery,\n            limit,\n        });\n    },\n});\n", "/// <reference types=\"./using-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const UsingNode = freeze({\n    is(node) {\n        return node.kind === 'UsingNode';\n    },\n    create(tables) {\n        return freeze({\n            kind: 'UsingNode',\n            tables: freeze(tables),\n        });\n    },\n    cloneWithTables(using, tables) {\n        return freeze({\n            ...using,\n            tables: freeze([...using.tables, ...tables]),\n        });\n    },\n});\n", "/// <reference types=\"./delete-query-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { FromNode } from './from-node.js';\nimport { UsingNode } from './using-node.js';\nimport { QueryNode } from './query-node.js';\n/**\n * @internal\n */\nexport const DeleteQueryNode = freeze({\n    is(node) {\n        return node.kind === 'DeleteQueryNode';\n    },\n    create(fromItems, withNode) {\n        return freeze({\n            kind: 'DeleteQueryNode',\n            from: FromNode.create(fromItems),\n            ...(withNode && { with: withNode }),\n        });\n    },\n    // TODO: remove in v0.29\n    /**\n     * @deprecated Use `QueryNode.cloneWithoutOrderBy` instead.\n     */\n    cloneWithOrderByItems: (node, items) => QueryNode.cloneWithOrderByItems(node, items),\n    // TODO: remove in v0.29\n    /**\n     * @deprecated Use `QueryNode.cloneWithoutOrderBy` instead.\n     */\n    cloneWithoutOrderBy: (node) => QueryNode.cloneWithoutOrderBy(node),\n    cloneWithLimit(deleteNode, limit) {\n        return freeze({\n            ...deleteNode,\n            limit,\n        });\n    },\n    cloneWithoutLimit(deleteNode) {\n        return freeze({\n            ...deleteNode,\n            limit: undefined,\n        });\n    },\n    cloneWithUsing(deleteNode, tables) {\n        return freeze({\n            ...deleteNode,\n            using: deleteNode.using !== undefined\n                ? UsingNode.cloneWithTables(deleteNode.using, tables)\n                : UsingNode.create(tables),\n        });\n    },\n});\n", "/// <reference types=\"./where-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { AndNode } from './and-node.js';\nimport { OrNode } from './or-node.js';\n/**\n * @internal\n */\nexport const WhereNode = freeze({\n    is(node) {\n        return node.kind === 'WhereNode';\n    },\n    create(filter) {\n        return freeze({\n            kind: 'WhereNode',\n            where: filter,\n        });\n    },\n    cloneWithOperation(whereNode, operator, operation) {\n        return freeze({\n            ...whereNode,\n            where: operator === 'And'\n                ? AndNode.create(whereNode.where, operation)\n                : OrNode.create(whereNode.where, operation),\n        });\n    },\n});\n", "/// <reference types=\"./returning-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ReturningNode = freeze({\n    is(node) {\n        return node.kind === 'ReturningNode';\n    },\n    create(selections) {\n        return freeze({\n            kind: 'ReturningNode',\n            selections: freeze(selections),\n        });\n    },\n    cloneWithSelections(returning, selections) {\n        return freeze({\n            ...returning,\n            selections: returning.selections\n                ? freeze([...returning.selections, ...selections])\n                : freeze(selections),\n        });\n    },\n});\n", "/// <reference types=\"./explain-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ExplainNode = freeze({\n    is(node) {\n        return node.kind === 'ExplainNode';\n    },\n    create(format, options) {\n        return freeze({\n            kind: 'ExplainNode',\n            format,\n            options,\n        });\n    },\n});\n", "/// <reference types=\"./when-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const WhenNode = freeze({\n    is(node) {\n        return node.kind === 'WhenNode';\n    },\n    create(condition) {\n        return freeze({\n            kind: 'WhenNode',\n            condition,\n        });\n    },\n    cloneWithResult(whenNode, result) {\n        return freeze({\n            ...whenNode,\n            result,\n        });\n    },\n});\n", "/// <reference types=\"./merge-query-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { WhenNode } from './when-node.js';\n/**\n * @internal\n */\nexport const MergeQueryNode = freeze({\n    is(node) {\n        return node.kind === 'MergeQueryNode';\n    },\n    create(into, withNode) {\n        return freeze({\n            kind: 'MergeQueryNode',\n            into,\n            ...(withNode && { with: withNode }),\n        });\n    },\n    cloneWithUsing(mergeNode, using) {\n        return freeze({\n            ...mergeNode,\n            using,\n        });\n    },\n    cloneWithWhen(mergeNode, when) {\n        return freeze({\n            ...mergeNode,\n            whens: mergeNode.whens\n                ? freeze([...mergeNode.whens, when])\n                : freeze([when]),\n        });\n    },\n    cloneWithThen(mergeNode, then) {\n        return freeze({\n            ...mergeNode,\n            whens: mergeNode.whens\n                ? freeze([\n                    ...mergeNode.whens.slice(0, -1),\n                    WhenNode.cloneWithResult(mergeNode.whens[mergeNode.whens.length - 1], then),\n                ])\n                : undefined,\n        });\n    },\n});\n", "/// <reference types=\"./output-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OutputNode = freeze({\n    is(node) {\n        return node.kind === 'OutputNode';\n    },\n    create(selections) {\n        return freeze({\n            kind: 'OutputNode',\n            selections: freeze(selections),\n        });\n    },\n    cloneWithSelections(output, selections) {\n        return freeze({\n            ...output,\n            selections: output.selections\n                ? freeze([...output.selections, ...selections])\n                : freeze(selections),\n        });\n    },\n});\n", "/// <reference types=\"./query-node.d.ts\" />\nimport { InsertQueryNode } from './insert-query-node.js';\nimport { SelectQueryNode } from './select-query-node.js';\nimport { UpdateQueryNode } from './update-query-node.js';\nimport { DeleteQueryNode } from './delete-query-node.js';\nimport { WhereNode } from './where-node.js';\nimport { freeze } from '../util/object-utils.js';\nimport { ReturningNode } from './returning-node.js';\nimport { ExplainNode } from './explain-node.js';\nimport { MergeQueryNode } from './merge-query-node.js';\nimport { OutputNode } from './output-node.js';\nimport { OrderByNode } from './order-by-node.js';\n/**\n * @internal\n */\nexport const QueryNode = freeze({\n    is(node) {\n        return (SelectQueryNode.is(node) ||\n            InsertQueryNode.is(node) ||\n            UpdateQueryNode.is(node) ||\n            DeleteQueryNode.is(node) ||\n            MergeQueryNode.is(node));\n    },\n    cloneWithEndModifier(node, modifier) {\n        return freeze({\n            ...node,\n            endModifiers: node.endModifiers\n                ? freeze([...node.endModifiers, modifier])\n                : freeze([modifier]),\n        });\n    },\n    cloneWithWhere(node, operation) {\n        return freeze({\n            ...node,\n            where: node.where\n                ? WhereNode.cloneWithOperation(node.where, 'And', operation)\n                : WhereNode.create(operation),\n        });\n    },\n    cloneWithJoin(node, join) {\n        return freeze({\n            ...node,\n            joins: node.joins ? freeze([...node.joins, join]) : freeze([join]),\n        });\n    },\n    cloneWithReturning(node, selections) {\n        return freeze({\n            ...node,\n            returning: node.returning\n                ? ReturningNode.cloneWithSelections(node.returning, selections)\n                : ReturningNode.create(selections),\n        });\n    },\n    cloneWithoutReturning(node) {\n        return freeze({\n            ...node,\n            returning: undefined,\n        });\n    },\n    cloneWithoutWhere(node) {\n        return freeze({\n            ...node,\n            where: undefined,\n        });\n    },\n    cloneWithExplain(node, format, options) {\n        return freeze({\n            ...node,\n            explain: ExplainNode.create(format, options?.toOperationNode()),\n        });\n    },\n    cloneWithTop(node, top) {\n        return freeze({\n            ...node,\n            top,\n        });\n    },\n    cloneWithOutput(node, selections) {\n        return freeze({\n            ...node,\n            output: node.output\n                ? OutputNode.cloneWithSelections(node.output, selections)\n                : OutputNode.create(selections),\n        });\n    },\n    cloneWithOrderByItems(node, items) {\n        return freeze({\n            ...node,\n            orderBy: node.orderBy\n                ? OrderByNode.cloneWithItems(node.orderBy, items)\n                : OrderByNode.create(items),\n        });\n    },\n    cloneWithoutOrderBy(node) {\n        return freeze({\n            ...node,\n            orderBy: undefined,\n        });\n    },\n});\n", "/// <reference types=\"./select-query-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { FromNode } from './from-node.js';\nimport { GroupByNode } from './group-by-node.js';\nimport { HavingNode } from './having-node.js';\nimport { QueryNode } from './query-node.js';\n/**\n * @internal\n */\nexport const SelectQueryNode = freeze({\n    is(node) {\n        return node.kind === 'SelectQueryNode';\n    },\n    create(withNode) {\n        return freeze({\n            kind: 'SelectQueryNode',\n            ...(withNode && { with: withNode }),\n        });\n    },\n    createFrom(fromItems, withNode) {\n        return freeze({\n            kind: 'SelectQueryNode',\n            from: FromNode.create(fromItems),\n            ...(withNode && { with: withNode }),\n        });\n    },\n    cloneWithSelections(select, selections) {\n        return freeze({\n            ...select,\n            selections: select.selections\n                ? freeze([...select.selections, ...selections])\n                : freeze(selections),\n        });\n    },\n    cloneWithDistinctOn(select, expressions) {\n        return freeze({\n            ...select,\n            distinctOn: select.distinctOn\n                ? freeze([...select.distinctOn, ...expressions])\n                : freeze(expressions),\n        });\n    },\n    cloneWithFrontModifier(select, modifier) {\n        return freeze({\n            ...select,\n            frontModifiers: select.frontModifiers\n                ? freeze([...select.frontModifiers, modifier])\n                : freeze([modifier]),\n        });\n    },\n    // TODO: remove in v0.29\n    /**\n     * @deprecated Use `QueryNode.cloneWithoutOrderBy` instead.\n     */\n    cloneWithOrderByItems: (node, items) => QueryNode.cloneWithOrderByItems(node, items),\n    cloneWithGroupByItems(selectNode, items) {\n        return freeze({\n            ...selectNode,\n            groupBy: selectNode.groupBy\n                ? GroupByNode.cloneWithItems(selectNode.groupBy, items)\n                : GroupByNode.create(items),\n        });\n    },\n    cloneWithLimit(selectNode, limit) {\n        return freeze({\n            ...selectNode,\n            limit,\n        });\n    },\n    cloneWithOffset(selectNode, offset) {\n        return freeze({\n            ...selectNode,\n            offset,\n        });\n    },\n    cloneWithFetch(selectNode, fetch) {\n        return freeze({\n            ...selectNode,\n            fetch,\n        });\n    },\n    cloneWithHaving(selectNode, operation) {\n        return freeze({\n            ...selectNode,\n            having: selectNode.having\n                ? HavingNode.cloneWithOperation(selectNode.having, 'And', operation)\n                : HavingNode.create(operation),\n        });\n    },\n    cloneWithSetOperations(selectNode, setOperations) {\n        return freeze({\n            ...selectNode,\n            setOperations: selectNode.setOperations\n                ? freeze([...selectNode.setOperations, ...setOperations])\n                : freeze([...setOperations]),\n        });\n    },\n    cloneWithoutSelections(select) {\n        return freeze({\n            ...select,\n            selections: [],\n        });\n    },\n    cloneWithoutLimit(select) {\n        return freeze({\n            ...select,\n            limit: undefined,\n        });\n    },\n    cloneWithoutOffset(select) {\n        return freeze({\n            ...select,\n            offset: undefined,\n        });\n    },\n    // TODO: remove in v0.29\n    /**\n     * @deprecated Use `QueryNode.cloneWithoutOrderBy` instead.\n     */\n    cloneWithoutOrderBy: (node) => QueryNode.cloneWithoutOrderBy(node),\n    cloneWithoutGroupBy(select) {\n        return freeze({\n            ...select,\n            groupBy: undefined,\n        });\n    },\n});\n", "/// <reference types=\"./join-builder.d.ts\" />\nimport { JoinNode } from '../operation-node/join-node.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { parseValueBinaryOperationOrExpression, parseReferentialBinaryOperation, } from '../parser/binary-operation-parser.js';\nimport { freeze } from '../util/object-utils.js';\nexport class JoinBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    on(...args) {\n        return new JoinBuilder({\n            ...this.#props,\n            joinNode: JoinNode.cloneWithOn(this.#props.joinNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    /**\n     * Just like {@link WhereInterface.whereRef} but adds an item to the join's\n     * `on` clause instead.\n     *\n     * See {@link WhereInterface.whereRef} for documentation and examples.\n     */\n    onRef(lhs, op, rhs) {\n        return new JoinBuilder({\n            ...this.#props,\n            joinNode: JoinNode.cloneWithOn(this.#props.joinNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    /**\n     * Adds `on true`.\n     */\n    onTrue() {\n        return new JoinBuilder({\n            ...this.#props,\n            joinNode: JoinNode.cloneWithOn(this.#props.joinNode, RawNode.createWithSql('true')),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.joinNode;\n    }\n}\n", "/// <reference types=\"./partition-by-item-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const PartitionByItemNode = freeze({\n    is(node) {\n        return node.kind === 'PartitionByItemNode';\n    },\n    create(partitionBy) {\n        return freeze({\n            kind: 'PartitionByItemNode',\n            partitionBy,\n        });\n    },\n});\n", "/// <reference types=\"./partition-by-parser.d.ts\" />\nimport { PartitionByItemNode } from '../operation-node/partition-by-item-node.js';\nimport { parseReferenceExpressionOrList, } from './reference-parser.js';\nexport function parsePartitionBy(partitionBy) {\n    return parseReferenceExpressionOrList(partitionBy).map(PartitionByItemNode.create);\n}\n", "/// <reference types=\"./over-builder.d.ts\" />\nimport { OverNode } from '../operation-node/over-node.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { parseOrderBy, } from '../parser/order-by-parser.js';\nimport { parsePartitionBy, } from '../parser/partition-by-parser.js';\nimport { freeze } from '../util/object-utils.js';\nexport class OverBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    orderBy(...args) {\n        return new OverBuilder({\n            overNode: OverNode.cloneWithOrderByItems(this.#props.overNode, parseOrderBy(args)),\n        });\n    }\n    clearOrderBy() {\n        return new OverBuilder({\n            overNode: QueryNode.cloneWithoutOrderBy(this.#props.overNode),\n        });\n    }\n    partitionBy(partitionBy) {\n        return new OverBuilder({\n            overNode: OverNode.cloneWithPartitionByItems(this.#props.overNode, parsePartitionBy(partitionBy)),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.overNode;\n    }\n}\n", "/// <reference types=\"./selection-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ReferenceNode } from './reference-node.js';\nimport { SelectAllNode } from './select-all-node.js';\n/**\n * @internal\n */\nexport const SelectionNode = freeze({\n    is(node) {\n        return node.kind === 'SelectionNode';\n    },\n    create(selection) {\n        return freeze({\n            kind: 'SelectionNode',\n            selection: selection,\n        });\n    },\n    createSelectAll() {\n        return freeze({\n            kind: 'SelectionNode',\n            selection: SelectAllNode.create(),\n        });\n    },\n    createSelectAllFromTable(table) {\n        return freeze({\n            kind: 'SelectionNode',\n            selection: ReferenceNode.createSelectAll(table),\n        });\n    },\n});\n", "/// <reference types=\"./select-parser.d.ts\" />\nimport { isFunction, isReadonlyArray, isString } from '../util/object-utils.js';\nimport { SelectionNode } from '../operation-node/selection-node.js';\nimport { parseAliasedStringReference } from './reference-parser.js';\nimport { isDynamicReferenceBuilder, } from '../dynamic/dynamic-reference-builder.js';\nimport { parseAliasedExpression, } from './expression-parser.js';\nimport { parseTable } from './table-parser.js';\nimport { expressionBuilder, } from '../expression/expression-builder.js';\nexport function parseSelectArg(selection) {\n    if (isFunction(selection)) {\n        return parseSelectArg(selection(expressionBuilder()));\n    }\n    else if (isReadonlyArray(selection)) {\n        return selection.map((it) => parseSelectExpression(it));\n    }\n    else {\n        return [parseSelectExpression(selection)];\n    }\n}\nfunction parseSelectExpression(selection) {\n    if (isString(selection)) {\n        return SelectionNode.create(parseAliasedStringReference(selection));\n    }\n    else if (isDynamicReferenceBuilder(selection)) {\n        return SelectionNode.create(selection.toOperationNode());\n    }\n    else {\n        return SelectionNode.create(parseAliasedExpression(selection));\n    }\n}\nexport function parseSelectAll(table) {\n    if (!table) {\n        return [SelectionNode.createSelectAll()];\n    }\n    else if (Array.isArray(table)) {\n        return table.map(parseSelectAllArg);\n    }\n    else {\n        return [parseSelectAllArg(table)];\n    }\n}\nfunction parseSelectAllArg(table) {\n    if (isString(table)) {\n        return SelectionNode.createSelectAllFromTable(parseTable(table));\n    }\n    throw new Error(`invalid value selectAll expression: ${JSON.stringify(table)}`);\n}\n", "/// <reference types=\"./values-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ValuesNode = freeze({\n    is(node) {\n        return node.kind === 'ValuesNode';\n    },\n    create(values) {\n        return freeze({\n            kind: 'ValuesNode',\n            values: freeze(values),\n        });\n    },\n});\n", "/// <reference types=\"./default-insert-value-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const DefaultInsertValueNode = freeze({\n    is(node) {\n        return node.kind === 'DefaultInsertValueNode';\n    },\n    create() {\n        return freeze({\n            kind: 'DefaultInsertValueNode',\n        });\n    },\n});\n", "/// <reference types=\"./insert-values-parser.d.ts\" />\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { PrimitiveValueListNode } from '../operation-node/primitive-value-list-node.js';\nimport { ValueListNode } from '../operation-node/value-list-node.js';\nimport { freeze, isFunction, isReadonlyArray, isUndefined, } from '../util/object-utils.js';\nimport { parseValueExpression } from './value-parser.js';\nimport { ValuesNode } from '../operation-node/values-node.js';\nimport { isExpressionOrFactory } from './expression-parser.js';\nimport { DefaultInsertValueNode } from '../operation-node/default-insert-value-node.js';\nimport { expressionBuilder, } from '../expression/expression-builder.js';\nexport function parseInsertExpression(arg) {\n    const objectOrList = isFunction(arg) ? arg(expressionBuilder()) : arg;\n    const list = isReadonlyArray(objectOrList)\n        ? objectOrList\n        : freeze([objectOrList]);\n    return parseInsertColumnsAndValues(list);\n}\nfunction parseInsertColumnsAndValues(rows) {\n    const columns = parseColumnNamesAndIndexes(rows);\n    return [\n        freeze([...columns.keys()].map(ColumnNode.create)),\n        ValuesNode.create(rows.map((row) => parseRowValues(row, columns))),\n    ];\n}\nfunction parseColumnNamesAndIndexes(rows) {\n    const columns = new Map();\n    for (const row of rows) {\n        const cols = Object.keys(row);\n        for (const col of cols) {\n            if (!columns.has(col) && row[col] !== undefined) {\n                columns.set(col, columns.size);\n            }\n        }\n    }\n    return columns;\n}\nfunction parseRowValues(row, columns) {\n    const rowColumns = Object.keys(row);\n    const rowValues = Array.from({\n        length: columns.size,\n    });\n    let hasUndefinedOrComplexColumns = false;\n    let indexedRowColumns = rowColumns.length;\n    for (const col of rowColumns) {\n        const columnIdx = columns.get(col);\n        if (isUndefined(columnIdx)) {\n            indexedRowColumns--;\n            continue;\n        }\n        const value = row[col];\n        if (isUndefined(value) || isExpressionOrFactory(value)) {\n            hasUndefinedOrComplexColumns = true;\n        }\n        rowValues[columnIdx] = value;\n    }\n    const hasMissingColumns = indexedRowColumns < columns.size;\n    if (hasMissingColumns || hasUndefinedOrComplexColumns) {\n        const defaultValue = DefaultInsertValueNode.create();\n        return ValueListNode.create(rowValues.map((it) => isUndefined(it) ? defaultValue : parseValueExpression(it)));\n    }\n    return PrimitiveValueListNode.create(rowValues);\n}\n", "/// <reference types=\"./column-update-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ColumnUpdateNode = freeze({\n    is(node) {\n        return node.kind === 'ColumnUpdateNode';\n    },\n    create(column, value) {\n        return freeze({\n            kind: 'ColumnUpdateNode',\n            column,\n            value,\n        });\n    },\n});\n", "/// <reference types=\"./update-set-parser.d.ts\" />\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { ColumnUpdateNode } from '../operation-node/column-update-node.js';\nimport { expressionBuilder, } from '../expression/expression-builder.js';\nimport { isFunction } from '../util/object-utils.js';\nimport { parseValueExpression } from './value-parser.js';\nimport { parseReferenceExpression, } from './reference-parser.js';\nexport function parseUpdate(...args) {\n    if (args.length === 2) {\n        return [\n            ColumnUpdateNode.create(parseReferenceExpression(args[0]), parseValueExpression(args[1])),\n        ];\n    }\n    return parseUpdateObjectExpression(args[0]);\n}\nexport function parseUpdateObjectExpression(update) {\n    const updateObj = isFunction(update) ? update(expressionBuilder()) : update;\n    return Object.entries(updateObj)\n        .filter(([_, value]) => value !== undefined)\n        .map(([key, value]) => {\n        return ColumnUpdateNode.create(ColumnNode.create(key), parseValueExpression(value));\n    });\n}\n", "/// <reference types=\"./on-duplicate-key-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OnDuplicateKeyNode = freeze({\n    is(node) {\n        return node.kind === 'OnDuplicateKeyNode';\n    },\n    create(updates) {\n        return freeze({\n            kind: 'OnDuplicateKeyNode',\n            updates,\n        });\n    },\n});\n", "/// <reference types=\"./insert-result.d.ts\" />\n/**\n * The result of an insert query.\n *\n * If the table has an auto incrementing primary key {@link insertId} will hold\n * the generated id on dialects that support it. For example PostgreSQL doesn't\n * return the id by default and {@link insertId} is undefined. On PostgreSQL you\n * need to use {@link ReturningInterface.returning} or {@link ReturningInterface.returningAll}\n * to get out the inserted id.\n *\n * {@link numInsertedOrUpdatedRows} holds the number of (actually) inserted rows.\n * On MySQL, updated rows are counted twice when using `on duplicate key update`.\n *\n * ### Examples\n *\n * ```ts\n * import type { NewPerson } from 'type-editor' // imaginary module\n *\n * async function insertPerson(person: NewPerson) {\n *   const result = await db\n *     .insertInto('person')\n *     .values(person)\n *     .executeTakeFirstOrThrow()\n *\n *   console.log(result.insertId) // relevant on MySQL\n *   console.log(result.numInsertedOrUpdatedRows) // always relevant\n * }\n * ```\n */\nexport class InsertResult {\n    /**\n     * The auto incrementing primary key of the inserted row.\n     *\n     * This property can be undefined when the query contains an `on conflict`\n     * clause that makes the query succeed even when nothing gets inserted.\n     *\n     * This property is always undefined on dialects like PostgreSQL that\n     * don't return the inserted id by default. On those dialects you need\n     * to use the {@link ReturningInterface.returning | returning} method.\n     */\n    insertId;\n    /**\n     * Affected rows count.\n     */\n    numInsertedOrUpdatedRows;\n    constructor(insertId, numInsertedOrUpdatedRows) {\n        this.insertId = insertId;\n        this.numInsertedOrUpdatedRows = numInsertedOrUpdatedRows;\n    }\n}\n", "/// <reference types=\"./no-result-error.d.ts\" />\nexport class NoResultError extends Error {\n    /**\n     * The operation node tree of the query that was executed.\n     */\n    node;\n    constructor(node) {\n        super('no result');\n        this.node = node;\n    }\n}\nexport function isNoResultErrorConstructor(fn) {\n    return Object.prototype.hasOwnProperty.call(fn, 'prototype');\n}\n", "/// <reference types=\"./on-conflict-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { WhereNode } from './where-node.js';\n/**\n * @internal\n */\nexport const OnConflictNode = freeze({\n    is(node) {\n        return node.kind === 'OnConflictNode';\n    },\n    create() {\n        return freeze({\n            kind: 'OnConflictNode',\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n    cloneWithIndexWhere(node, operation) {\n        return freeze({\n            ...node,\n            indexWhere: node.indexWhere\n                ? WhereNode.cloneWithOperation(node.indexWhere, 'And', operation)\n                : WhereNode.create(operation),\n        });\n    },\n    cloneWithIndexOrWhere(node, operation) {\n        return freeze({\n            ...node,\n            indexWhere: node.indexWhere\n                ? WhereNode.cloneWithOperation(node.indexWhere, 'Or', operation)\n                : WhereNode.create(operation),\n        });\n    },\n    cloneWithUpdateWhere(node, operation) {\n        return freeze({\n            ...node,\n            updateWhere: node.updateWhere\n                ? WhereNode.cloneWithOperation(node.updateWhere, 'And', operation)\n                : WhereNode.create(operation),\n        });\n    },\n    cloneWithUpdateOrWhere(node, operation) {\n        return freeze({\n            ...node,\n            updateWhere: node.updateWhere\n                ? WhereNode.cloneWithOperation(node.updateWhere, 'Or', operation)\n                : WhereNode.create(operation),\n        });\n    },\n    cloneWithoutIndexWhere(node) {\n        return freeze({\n            ...node,\n            indexWhere: undefined,\n        });\n    },\n    cloneWithoutUpdateWhere(node) {\n        return freeze({\n            ...node,\n            updateWhere: undefined,\n        });\n    },\n});\n", "/// <reference types=\"./on-conflict-builder.d.ts\" />\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { OnConflictNode } from '../operation-node/on-conflict-node.js';\nimport { parseValueBinaryOperationOrExpression, parseReferentialBinaryOperation, } from '../parser/binary-operation-parser.js';\nimport { parseUpdateObjectExpression, } from '../parser/update-set-parser.js';\nimport { freeze } from '../util/object-utils.js';\nexport class OnConflictBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Specify a single column as the conflict target.\n     *\n     * Also see the {@link columns}, {@link constraint} and {@link expression}\n     * methods for alternative ways to specify the conflict target.\n     */\n    column(column) {\n        const columnNode = ColumnNode.create(column);\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWith(this.#props.onConflictNode, {\n                columns: this.#props.onConflictNode.columns\n                    ? freeze([...this.#props.onConflictNode.columns, columnNode])\n                    : freeze([columnNode]),\n            }),\n        });\n    }\n    /**\n     * Specify a list of columns as the conflict target.\n     *\n     * Also see the {@link column}, {@link constraint} and {@link expression}\n     * methods for alternative ways to specify the conflict target.\n     */\n    columns(columns) {\n        const columnNodes = columns.map(ColumnNode.create);\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWith(this.#props.onConflictNode, {\n                columns: this.#props.onConflictNode.columns\n                    ? freeze([...this.#props.onConflictNode.columns, ...columnNodes])\n                    : freeze(columnNodes),\n            }),\n        });\n    }\n    /**\n     * Specify a specific constraint by name as the conflict target.\n     *\n     * Also see the {@link column}, {@link columns} and {@link expression}\n     * methods for alternative ways to specify the conflict target.\n     */\n    constraint(constraintName) {\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWith(this.#props.onConflictNode, {\n                constraint: IdentifierNode.create(constraintName),\n            }),\n        });\n    }\n    /**\n     * Specify an expression as the conflict target.\n     *\n     * This can be used if the unique index is an expression index.\n     *\n     * Also see the {@link column}, {@link columns} and {@link constraint}\n     * methods for alternative ways to specify the conflict target.\n     */\n    expression(expression) {\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWith(this.#props.onConflictNode, {\n                indexExpression: expression.toOperationNode(),\n            }),\n        });\n    }\n    where(...args) {\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWithIndexWhere(this.#props.onConflictNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    whereRef(lhs, op, rhs) {\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWithIndexWhere(this.#props.onConflictNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    clearWhere() {\n        return new OnConflictBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWithoutIndexWhere(this.#props.onConflictNode),\n        });\n    }\n    /**\n     * Adds the \"do nothing\" conflict action.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const id = 1\n     * const first_name = 'John'\n     *\n     * await db\n     *   .insertInto('person')\n     *   .values({\u00A0first_name, id })\n     *   .onConflict((oc) => oc\n     *     .column('id')\n     *     .doNothing()\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"id\")\n     * values ($1, $2)\n     * on conflict (\"id\") do nothing\n     * ```\n     */\n    doNothing() {\n        return new OnConflictDoNothingBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWith(this.#props.onConflictNode, {\n                doNothing: true,\n            }),\n        });\n    }\n    /**\n     * Adds the \"do update set\" conflict action.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const id = 1\n     * const first_name = 'John'\n     *\n     * await db\n     *   .insertInto('person')\n     *   .values({\u00A0first_name, id })\n     *   .onConflict((oc) => oc\n     *     .column('id')\n     *     .doUpdateSet({ first_name })\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"id\")\n     * values ($1, $2)\n     * on conflict (\"id\")\n     * do update set \"first_name\" = $3\n     * ```\n     *\n     * In the next example we use the `ref` method to reference\n     * columns of the virtual table `excluded` in a type-safe way\n     * to create an upsert operation:\n     *\n     * ```ts\n     * import type { NewPerson } from 'type-editor' // imaginary module\n     *\n     * async function upsertPerson(person: NewPerson): Promise<void> {\n     *   await db.insertInto('person')\n     *     .values(person)\n     *     .onConflict((oc) => oc\n     *       .column('id')\n     *       .doUpdateSet((eb) => ({\n     *         first_name: eb.ref('excluded.first_name'),\n     *         last_name: eb.ref('excluded.last_name')\n     *       })\n     *     )\n     *   )\n     *   .execute()\n     * }\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"last_name\")\n     * values ($1, $2)\n     * on conflict (\"id\")\n     * do update set\n     *  \"first_name\" = excluded.\"first_name\",\n     *  \"last_name\" = excluded.\"last_name\"\n     * ```\n     */\n    doUpdateSet(update) {\n        return new OnConflictUpdateBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWith(this.#props.onConflictNode, {\n                updates: parseUpdateObjectExpression(update),\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n}\nexport class OnConflictDoNothingBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    toOperationNode() {\n        return this.#props.onConflictNode;\n    }\n}\nexport class OnConflictUpdateBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    where(...args) {\n        return new OnConflictUpdateBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWithUpdateWhere(this.#props.onConflictNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    /**\n     * Specify a where condition for the update operation.\n     *\n     * See {@link WhereInterface.whereRef} for more info.\n     */\n    whereRef(lhs, op, rhs) {\n        return new OnConflictUpdateBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWithUpdateWhere(this.#props.onConflictNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    clearWhere() {\n        return new OnConflictUpdateBuilder({\n            ...this.#props,\n            onConflictNode: OnConflictNode.cloneWithoutUpdateWhere(this.#props.onConflictNode),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.onConflictNode;\n    }\n}\n", "/// <reference types=\"./top-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const TopNode = freeze({\n    is(node) {\n        return node.kind === 'TopNode';\n    },\n    create(expression, modifiers) {\n        return freeze({\n            kind: 'TopNode',\n            expression,\n            modifiers,\n        });\n    },\n});\n", "/// <reference types=\"./top-parser.d.ts\" />\nimport { TopNode } from '../operation-node/top-node.js';\nimport { isBigInt, isNumber, isUndefined } from '../util/object-utils.js';\nexport function parseTop(expression, modifiers) {\n    if (!isNumber(expression) && !isBigInt(expression)) {\n        throw new Error(`Invalid top expression: ${expression}`);\n    }\n    if (!isUndefined(modifiers) && !isTopModifiers(modifiers)) {\n        throw new Error(`Invalid top modifiers: ${modifiers}`);\n    }\n    return TopNode.create(expression, modifiers);\n}\nfunction isTopModifiers(modifiers) {\n    return (modifiers === 'percent' ||\n        modifiers === 'with ties' ||\n        modifiers === 'percent with ties');\n}\n", "/// <reference types=\"./or-action-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OrActionNode = freeze({\n    is(node) {\n        return node.kind === 'OrActionNode';\n    },\n    create(action) {\n        return freeze({\n            kind: 'OrActionNode',\n            action,\n        });\n    },\n});\n", "/// <reference types=\"./insert-query-builder.d.ts\" />\nimport { parseSelectArg, parseSelectAll, } from '../parser/select-parser.js';\nimport { parseInsertExpression, } from '../parser/insert-values-parser.js';\nimport { InsertQueryNode } from '../operation-node/insert-query-node.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { parseUpdateObjectExpression, } from '../parser/update-set-parser.js';\nimport { freeze } from '../util/object-utils.js';\nimport { OnDuplicateKeyNode } from '../operation-node/on-duplicate-key-node.js';\nimport { InsertResult } from './insert-result.js';\nimport { isNoResultErrorConstructor, NoResultError, } from './no-result-error.js';\nimport { parseExpression, } from '../parser/expression-parser.js';\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { OnConflictBuilder, } from './on-conflict-builder.js';\nimport { OnConflictNode } from '../operation-node/on-conflict-node.js';\nimport { parseTop } from '../parser/top-parser.js';\nimport { OrActionNode } from '../operation-node/or-action-node.js';\nexport class InsertQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Sets the values to insert for an {@link Kysely.insertInto | insert} query.\n     *\n     * This method takes an object whose keys are column names and values are\n     * values to insert. In addition to the column's type, the values can be\n     * raw {@link sql} snippets or select queries.\n     *\n     * You must provide all fields you haven't explicitly marked as nullable\n     * or optional using {@link Generated} or {@link ColumnType}.\n     *\n     * The return value of an `insert` query is an instance of {@link InsertResult}. The\n     * {@link InsertResult.insertId | insertId} field holds the auto incremented primary\n     * key if the database returned one.\n     *\n     * On PostgreSQL and some other dialects, you need to call `returning` to get\n     * something out of the query.\n     *\n     * Also see the {@link expression} method for inserting the result of a select\n     * query or any other expression.\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"insert\", \"Single row\", 10) -->\n     *\n     * Insert a single row:\n     *\n     * ```ts\n     * const result = await db\n     *   .insertInto('person')\n     *   .values({\n     *     first_name: 'Jennifer',\n     *     last_name: 'Aniston',\n     *     age: 40\n     *   })\n     *   .executeTakeFirst()\n     *\n     * // `insertId` is only available on dialects that\n     * // automatically return the id of the inserted row\n     * // such as MySQL and SQLite. On PostgreSQL, for example,\n     * // you need to add a `returning` clause to the query to\n     * // get anything out. See the \"returning data\" example.\n     * console.log(result.insertId)\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * insert into `person` (`first_name`, `last_name`, `age`) values (?, ?, ?)\n     * ```\n     *\n     * <!-- siteExample(\"insert\", \"Multiple rows\", 20) -->\n     *\n     * On dialects that support it (for example PostgreSQL) you can insert multiple\n     * rows by providing an array. Note that the return value is once again very\n     * dialect-specific. Some databases may only return the id of the *last* inserted\n     * row and some return nothing at all unless you call `returning`.\n     *\n     * ```ts\n     * await db\n     *   .insertInto('person')\n     *   .values([{\n     *     first_name: 'Jennifer',\n     *     last_name: 'Aniston',\n     *     age: 40,\n     *   }, {\n     *     first_name: 'Arnold',\n     *     last_name: 'Schwarzenegger',\n     *     age: 70,\n     *   }])\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"last_name\", \"age\") values (($1, $2, $3), ($4, $5, $6))\n     * ```\n     *\n     * <!-- siteExample(\"insert\", \"Returning data\", 30) -->\n     *\n     * On supported dialects like PostgreSQL you need to chain `returning` to the query to get\n     * the inserted row's columns (or any other expression) as the return value. `returning`\n     * works just like `select`. Refer to `select` method's examples and documentation for\n     * more info.\n     *\n     * ```ts\n     * const result = await db\n     *   .insertInto('person')\n     *   .values({\n     *     first_name: 'Jennifer',\n     *     last_name: 'Aniston',\n     *     age: 40,\n     *   })\n     *   .returning(['id', 'first_name as name'])\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"last_name\", \"age\") values ($1, $2, $3) returning \"id\", \"first_name\" as \"name\"\n     * ```\n     *\n     * <!-- siteExample(\"insert\", \"Complex values\", 40) -->\n     *\n     * In addition to primitives, the values can also be arbitrary expressions.\n     * You can build the expressions by using a callback and calling the methods\n     * on the expression builder passed to it:\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * const ani = \"Ani\"\n     * const ston = \"ston\"\n     *\n     * const result = await db\n     *   .insertInto('person')\n     *   .values(({ ref, selectFrom, fn }) => ({\n     *     first_name: 'Jennifer',\n     *     last_name: sql<string>`concat(${ani}, ${ston})`,\n     *     middle_name: ref('first_name'),\n     *     age: selectFrom('person')\n     *       .select(fn.avg<number>('age').as('avg_age')),\n     *   }))\n     *   .executeTakeFirst()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\n     *   \"first_name\",\n     *   \"last_name\",\n     *   \"middle_name\",\n     *   \"age\"\n     * )\n     * values (\n     *   $1,\n     *   concat($2, $3),\n     *   \"first_name\",\n     *   (select avg(\"age\") as \"avg_age\" from \"person\")\n     * )\n     * ```\n     *\n     * You can also use the callback version of subqueries or raw expressions:\n     *\n     * ```ts\n     * await db.with('jennifer', (db) => db\n     *   .selectFrom('person')\n     *   .where('first_name', '=', 'Jennifer')\n     *   .select(['id', 'first_name', 'gender'])\n     *   .limit(1)\n     * ).insertInto('pet').values((eb) => ({\n     *   owner_id: eb.selectFrom('jennifer').select('id'),\n     *   name: eb.selectFrom('jennifer').select('first_name'),\n     *   species: 'cat',\n     * }))\n     * .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * with \"jennifer\" as (\n     *   select \"id\", \"first_name\", \"gender\"\n     *   from \"person\"\n     *   where \"first_name\" = $1\n     *   limit $2\n     * )\n     * insert into \"pet\" (\"owner_id\", \"name\", \"species\")\n     * values (\n     *  (select \"id\" from \"jennifer\"),\n     *  (select \"first_name\" from \"jennifer\"),\n     *  $3\n     * )\n     * ```\n     */\n    values(insert) {\n        const [columns, values] = parseInsertExpression(insert);\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                columns,\n                values,\n            }),\n        });\n    }\n    /**\n     * Sets the columns to insert.\n     *\n     * The {@link values} method sets both the columns and the values and this method\n     * is not needed. But if you are using the {@link expression} method, you can use\n     * this method to set the columns to insert.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .columns(['first_name'])\n     *   .expression((eb) => eb.selectFrom('pet').select('pet.name'))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\")\n     * select \"pet\".\"name\" from \"pet\"\n     * ```\n     */\n    columns(columns) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                columns: freeze(columns.map(ColumnNode.create)),\n            }),\n        });\n    }\n    /**\n     * Insert an arbitrary expression. For example the result of a select query.\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"insert\", \"Insert subquery\", 50) -->\n     *\n     * You can create an `INSERT INTO SELECT FROM` query using the `expression` method.\n     * This API doesn't follow our WYSIWYG principles and might be a bit difficult to\n     * remember. The reasons for this design stem from implementation difficulties.\n     *\n     * ```ts\n     * const result = await db.insertInto('person')\n     *   .columns(['first_name', 'last_name', 'age'])\n     *   .expression((eb) => eb\n     *     .selectFrom('pet')\n     *     .select((eb) => [\n     *       'pet.name',\n     *       eb.val('Petson').as('last_name'),\n     *       eb.lit(7).as('age'),\n     *     ])\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"last_name\", \"age\")\n     * select \"pet\".\"name\", $1 as \"last_name\", 7 as \"age from \"pet\"\n     * ```\n     */\n    expression(expression) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                values: parseExpression(expression),\n            }),\n        });\n    }\n    /**\n     * Creates an `insert into \"person\" default values` query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .defaultValues()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" default values\n     * ```\n     */\n    defaultValues() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                defaultValues: true,\n            }),\n        });\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.insertInto('person')\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'male',\n     *   })\n     *   .modifyEnd(sql`-- This is a comment`)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * insert into `person` (\"first_name\", \"last_name\", \"gender\")\n     * values (?, ?, ?) -- This is a comment\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert ignore into` query.\n     *\n     * This is only supported by some dialects like MySQL.\n     *\n     * To avoid a footgun, when invoked with the SQLite dialect, this method will\n     * be handled like {@link orIgnore}. See also, {@link orAbort}, {@link orFail},\n     * {@link orReplace}, and {@link orRollback}.\n     *\n     * If you use the ignore modifier, ignorable errors that occur while executing the\n     * insert statement are ignored. For example, without ignore, a row that duplicates\n     * an existing unique index or primary key value in the table causes a duplicate-key\n     * error and the statement is aborted. With ignore, the row is discarded and no error\n     * occurs.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .ignore()\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'female',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * insert ignore into `person` (`first_name`, `last_name`, `gender`) values (?, ?, ?)\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * insert or ignore into \"person\" (\"first_name\", \"last_name\", \"gender\") values (?, ?, ?)\n     * ```\n     */\n    ignore() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                orAction: OrActionNode.create('ignore'),\n            }),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert or ignore into` query.\n     *\n     * This is only supported by some dialects like SQLite.\n     *\n     * To avoid a footgun, when invoked with the MySQL dialect, this method will\n     * be handled like {@link ignore}.\n     *\n     * See also, {@link orAbort}, {@link orFail}, {@link orReplace}, and {@link orRollback}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .orIgnore()\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'female',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * insert or ignore into \"person\" (\"first_name\", \"last_name\", \"gender\") values (?, ?, ?)\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * insert ignore into `person` (`first_name`, `last_name`, `gender`) values (?, ?, ?)\n     * ```\n     */\n    orIgnore() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                orAction: OrActionNode.create('ignore'),\n            }),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert or abort into` query.\n     *\n     * This is only supported by some dialects like SQLite.\n     *\n     * See also, {@link orIgnore}, {@link orFail}, {@link orReplace}, and {@link orRollback}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .orAbort()\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'female',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * insert or abort into \"person\" (\"first_name\", \"last_name\", \"gender\") values (?, ?, ?)\n     * ```\n     */\n    orAbort() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                orAction: OrActionNode.create('abort'),\n            }),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert or fail into` query.\n     *\n     * This is only supported by some dialects like SQLite.\n     *\n     * See also, {@link orIgnore}, {@link orAbort}, {@link orReplace}, and {@link orRollback}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .orFail()\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'female',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * insert or fail into \"person\" (\"first_name\", \"last_name\", \"gender\") values (?, ?, ?)\n     * ```\n     */\n    orFail() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                orAction: OrActionNode.create('fail'),\n            }),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert or replace into` query.\n     *\n     * This is only supported by some dialects like SQLite.\n     *\n     * You can also use {@link Kysely.replaceInto} to achieve the same result.\n     *\n     * See also, {@link orIgnore}, {@link orAbort}, {@link orFail}, and {@link orRollback}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .orReplace()\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'female',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * insert or replace into \"person\" (\"first_name\", \"last_name\", \"gender\") values (?, ?, ?)\n     * ```\n     */\n    orReplace() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                orAction: OrActionNode.create('replace'),\n            }),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert or rollback into` query.\n     *\n     * This is only supported by some dialects like SQLite.\n     *\n     * See also, {@link orIgnore}, {@link orAbort}, {@link orFail}, and {@link orReplace}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .orRollback()\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'female',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * insert or rollback into \"person\" (\"first_name\", \"last_name\", \"gender\") values (?, ?, ?)\n     * ```\n     */\n    orRollback() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                orAction: OrActionNode.create('rollback'),\n            }),\n        });\n    }\n    /**\n     * Changes an `insert into` query to an `insert top into` query.\n     *\n     * `top` clause is only supported by some dialects like MS SQL Server.\n     *\n     * ### Examples\n     *\n     * Insert the first 5 rows:\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.insertInto('person')\n     *   .top(5)\n     *   .columns(['first_name', 'gender'])\n     *   .expression(\n     *     (eb) => eb.selectFrom('pet').select(['name', sql.lit('other').as('gender')])\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * insert top(5) into \"person\" (\"first_name\", \"gender\") select \"name\", 'other' as \"gender\" from \"pet\"\n     * ```\n     *\n     * Insert the first 50 percent of rows:\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.insertInto('person')\n     *   .top(50, 'percent')\n     *   .columns(['first_name', 'gender'])\n     *   .expression(\n     *     (eb) => eb.selectFrom('pet').select(['name', sql.lit('other').as('gender')])\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * insert top(50) percent into \"person\" (\"first_name\", \"gender\") select \"name\", 'other' as \"gender\" from \"pet\"\n     * ```\n     */\n    top(expression, modifiers) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithTop(this.#props.queryNode, parseTop(expression, modifiers)),\n        });\n    }\n    /**\n     * Adds an `on conflict` clause to the query.\n     *\n     * `on conflict` is only supported by some dialects like PostgreSQL and SQLite. On MySQL\n     * you can use {@link ignore} and {@link onDuplicateKeyUpdate} to achieve similar results.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db\n     *   .insertInto('pet')\n     *   .values({\n     *     name: 'Catto',\n     *     species: 'cat',\n     *     owner_id: 3,\n     *   })\n     *   .onConflict((oc) => oc\n     *     .column('name')\n     *     .doUpdateSet({ species: 'hamster' })\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"pet\" (\"name\", \"species\", \"owner_id\")\n     * values ($1, $2, $3)\n     * on conflict (\"name\")\n     * do update set \"species\" = $4\n     * ```\n     *\n     * You can provide the name of the constraint instead of a column name:\n     *\n     * ```ts\n     * await db\n     *   .insertInto('pet')\n     *   .values({\n     *     name: 'Catto',\n     *     species: 'cat',\n     *     owner_id: 3,\n     *   })\n     *   .onConflict((oc) => oc\n     *     .constraint('pet_name_key')\n     *     .doUpdateSet({ species: 'hamster' })\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"pet\" (\"name\", \"species\", \"owner_id\")\n     * values ($1, $2, $3)\n     * on conflict on constraint \"pet_name_key\"\n     * do update set \"species\" = $4\n     * ```\n     *\n     * You can also specify an expression as the conflict target in case\n     * the unique index is an expression index:\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db\n     *   .insertInto('pet')\n     *   .values({\n     *     name: 'Catto',\n     *     species: 'cat',\n     *     owner_id: 3,\n     *   })\n     *   .onConflict((oc) => oc\n     *     .expression(sql<string>`lower(name)`)\n     *     .doUpdateSet({ species: 'hamster' })\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"pet\" (\"name\", \"species\", \"owner_id\")\n     * values ($1, $2, $3)\n     * on conflict (lower(name))\n     * do update set \"species\" = $4\n     * ```\n     *\n     * You can add a filter for the update statement like this:\n     *\n     * ```ts\n     * await db\n     *   .insertInto('pet')\n     *   .values({\n     *     name: 'Catto',\n     *     species: 'cat',\n     *     owner_id: 3,\n     *   })\n     *   .onConflict((oc) => oc\n     *     .column('name')\n     *     .doUpdateSet({ species: 'hamster' })\n     *     .where('excluded.name', '!=', 'Catto')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"pet\" (\"name\", \"species\", \"owner_id\")\n     * values ($1, $2, $3)\n     * on conflict (\"name\")\n     * do update set \"species\" = $4\n     * where \"excluded\".\"name\" != $5\n     * ```\n     *\n     * You can create an `on conflict do nothing` clauses like this:\n     *\n     * ```ts\n     * await db\n     *   .insertInto('pet')\n     *   .values({\n     *     name: 'Catto',\n     *     species: 'cat',\n     *     owner_id: 3,\n     *   })\n     *   .onConflict((oc) => oc\n     *     .column('name')\n     *     .doNothing()\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"pet\" (\"name\", \"species\", \"owner_id\")\n     * values ($1, $2, $3)\n     * on conflict (\"name\") do nothing\n     * ```\n     *\n     * You can refer to the columns of the virtual `excluded` table\n     * in a type-safe way using a callback and the `ref` method of\n     * `ExpressionBuilder`:\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .values({\n     *     id: 1,\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'male',\n     *   })\n     *   .onConflict(oc => oc\n     *     .column('id')\n     *     .doUpdateSet({\n     *       first_name: (eb) => eb.ref('excluded.first_name'),\n     *       last_name: (eb) => eb.ref('excluded.last_name')\n     *     })\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"id\", \"first_name\", \"last_name\", \"gender\")\n     * values ($1, $2, $3, $4)\n     * on conflict (\"id\")\n     * do update set\n     *  \"first_name\" = \"excluded\".\"first_name\",\n     *  \"last_name\" = \"excluded\".\"last_name\"\n     * ```\n     */\n    onConflict(callback) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                onConflict: callback(new OnConflictBuilder({\n                    onConflictNode: OnConflictNode.create(),\n                })).toOperationNode(),\n            }),\n        });\n    }\n    /**\n     * Adds `on duplicate key update` to the query.\n     *\n     * If you specify `on duplicate key update`, and a row is inserted that would cause\n     * a duplicate value in a unique index or primary key, an update of the old row occurs.\n     *\n     * This is only implemented by some dialects like MySQL. On most dialects you should\n     * use {@link onConflict} instead.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db\n     *   .insertInto('person')\n     *   .values({\n     *     id: 1,\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'male',\n     *   })\n     *   .onDuplicateKeyUpdate({ updated_at: new Date().toISOString() })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * insert into `person` (`id`, `first_name`, `last_name`, `gender`)\n     * values (?, ?, ?, ?)\n     * on duplicate key update `updated_at` = ?\n     * ```\n     */\n    onDuplicateKeyUpdate(update) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: InsertQueryNode.cloneWith(this.#props.queryNode, {\n                onDuplicateKey: OnDuplicateKeyNode.create(parseUpdateObjectExpression(update)),\n            }),\n        });\n    }\n    returning(selection) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectArg(selection)),\n        });\n    }\n    returningAll() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectAll()),\n        });\n    }\n    output(args) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    outputAll(table) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    /**\n     * Clears all `returning` clauses from the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.insertInto('person')\n     *   .values({ first_name: 'James', last_name: 'Smith', gender: 'male' })\n     *   .returning(['first_name'])\n     *   .clearReturning()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL(PostgreSQL):\n     *\n     * ```sql\n     * insert into \"person\" (\"first_name\", \"last_name\", \"gender\") values ($1, $2, $3)\n     * ```\n     */\n    clearReturning() {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutReturning(this.#props.queryNode),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     *\n     * If you want to conditionally call a method on `this`, see\n     * the {@link $if} method.\n     *\n     * ### Examples\n     *\n     * The next example uses a helper function `log` to log a query:\n     *\n     * ```ts\n     * import type { Compilable } from 'kysely'\n     *\n     * function log<T extends Compilable>(qb: T): T {\n     *   console.log(qb.compile())\n     *   return qb\n     * }\n     *\n     * await db.insertInto('person')\n     *   .values({ first_name: 'John', last_name: 'Doe', gender: 'male' })\n     *   .$call(log)\n     *   .execute()\n     * ```\n     */\n    $call(func) {\n        return func(this);\n    }\n    /**\n     * Call `func(this)` if `condition` is true.\n     *\n     * This method is especially handy with optional selects. Any `returning` or `returningAll`\n     * method calls add columns as optional fields to the output type when called inside\n     * the `func` callback. This is because we can't know if those selections were actually\n     * made before running the code.\n     *\n     * You can also call any other methods inside the callback.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { NewPerson } from 'type-editor' // imaginary module\n     *\n     * async function insertPerson(values: NewPerson, returnLastName: boolean) {\n     *   return await db\n     *     .insertInto('person')\n     *     .values(values)\n     *     .returning(['id', 'first_name'])\n     *     .$if(returnLastName, (qb) => qb.returning('last_name'))\n     *     .executeTakeFirstOrThrow()\n     * }\n     * ```\n     *\n     * Any selections added inside the `if` callback will be added as optional fields to the\n     * output type since we can't know if the selections were actually made before running\n     * the code. In the example above the return type of the `insertPerson` function is:\n     *\n     * ```ts\n     * Promise<{\n     *   id: number\n     *   first_name: string\n     *   last_name?: string\n     * }>\n     * ```\n     */\n    $if(condition, func) {\n        if (condition) {\n            return func(this);\n        }\n        return new InsertQueryBuilder({\n            ...this.#props,\n        });\n    }\n    /**\n     * Change the output type of the query.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `InsertQueryBuilder` with a new output type.\n     */\n    $castTo() {\n        return new InsertQueryBuilder(this.#props);\n    }\n    /**\n     * Narrows (parts of) the output type of the query.\n     *\n     * Kysely tries to be as type-safe as possible, but in some cases we have to make\n     * compromises for better maintainability and compilation performance. At present,\n     * Kysely doesn't narrow the output type of the query based on {@link values} input\n     * when using {@link returning} or {@link returningAll}.\n     *\n     * This utility method is very useful for these situations, as it removes unncessary\n     * runtime assertion/guard code. Its input type is limited to the output type\n     * of the query, so you can't add a column that doesn't exist, or change a column's\n     * type to something that doesn't exist in its union type.\n     *\n     * ### Examples\n     *\n     * Turn this code:\n     *\n     * ```ts\n     * import type { Person } from 'type-editor' // imaginary module\n     *\n     * const person = await db.insertInto('person')\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'male',\n     *     nullable_column: 'hell yeah!'\n     *   })\n     *   .returningAll()\n     *   .executeTakeFirstOrThrow()\n     *\n     * if (isWithNoNullValue(person)) {\n     *   functionThatExpectsPersonWithNonNullValue(person)\n     * }\n     *\n     * function isWithNoNullValue(person: Person): person is Person & { nullable_column: string } {\n     *   return person.nullable_column != null\n     * }\n     * ```\n     *\n     * Into this:\n     *\n     * ```ts\n     * import type { NotNull } from 'kysely'\n     *\n     * const person = await db.insertInto('person')\n     *   .values({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *     gender: 'male',\n     *     nullable_column: 'hell yeah!'\n     *   })\n     *   .returningAll()\n     *   .$narrowType<{ nullable_column: NotNull }>()\n     *   .executeTakeFirstOrThrow()\n     *\n     * functionThatExpectsPersonWithNonNullValue(person)\n     * ```\n     */\n    $narrowType() {\n        return new InsertQueryBuilder(this.#props);\n    }\n    /**\n     * Asserts that query's output row type equals the given type `T`.\n     *\n     * This method can be used to simplify excessively complex types to make TypeScript happy\n     * and much faster.\n     *\n     * Kysely uses complex type magic to achieve its type safety. This complexity is sometimes too much\n     * for TypeScript and you get errors like this:\n     *\n     * ```\n     * error TS2589: Type instantiation is excessively deep and possibly infinite.\n     * ```\n     *\n     * In these case you can often use this method to help TypeScript a little bit. When you use this\n     * method to assert the output type of a query, Kysely can drop the complex output type that\n     * consists of multiple nested helper types and replace it with the simple asserted type.\n     *\n     * Using this method doesn't reduce type safety at all. You have to pass in a type that is\n     * structurally equal to the current type.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { NewPerson, NewPet, Species } from 'type-editor' // imaginary module\n     *\n     * async function insertPersonAndPet(person: NewPerson, pet: Omit<NewPet, 'owner_id'>) {\n     *   return await db\n     *     .with('new_person', (qb) => qb\n     *       .insertInto('person')\n     *       .values(person)\n     *       .returning('id')\n     *       .$assertType<{ id: number }>()\n     *     )\n     *     .with('new_pet', (qb) => qb\n     *       .insertInto('pet')\n     *       .values((eb) => ({\n     *         owner_id: eb.selectFrom('new_person').select('id'),\n     *         ...pet\n     *       }))\n     *       .returning(['name as pet_name', 'species'])\n     *       .$assertType<{ pet_name: string, species: Species }>()\n     *     )\n     *     .selectFrom(['new_person', 'new_pet'])\n     *     .selectAll()\n     *     .executeTakeFirstOrThrow()\n     * }\n     * ```\n     */\n    $assertType() {\n        return new InsertQueryBuilder(this.#props);\n    }\n    /**\n     * Returns a copy of this InsertQueryBuilder instance with the given plugin installed.\n     */\n    withPlugin(plugin) {\n        return new InsertQueryBuilder({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    /**\n     * Executes the query and returns an array of rows.\n     *\n     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.\n     */\n    async execute() {\n        const compiledQuery = this.compile();\n        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);\n        const { adapter } = this.#props.executor;\n        const query = compiledQuery.query;\n        if ((query.returning && adapter.supportsReturning) ||\n            (query.output && adapter.supportsOutput)) {\n            return result.rows;\n        }\n        return [\n            new InsertResult(result.insertId, result.numAffectedRows ?? BigInt(0)),\n        ];\n    }\n    /**\n     * Executes the query and returns the first result or undefined if\n     * the query returned no result.\n     */\n    async executeTakeFirst() {\n        const [result] = await this.execute();\n        return result;\n    }\n    /**\n     * Executes the query and returns the first result or throws if\n     * the query returned no result.\n     *\n     * By default an instance of {@link NoResultError} is thrown, but you can\n     * provide a custom error class, or callback as the only argument to throw a different\n     * error.\n     */\n    async executeTakeFirstOrThrow(errorConstructor = NoResultError) {\n        const result = await this.executeTakeFirst();\n        if (result === undefined) {\n            const error = isNoResultErrorConstructor(errorConstructor)\n                ? new errorConstructor(this.toOperationNode())\n                : errorConstructor(this.toOperationNode());\n            throw error;\n        }\n        return result;\n    }\n    async *stream(chunkSize = 100) {\n        const compiledQuery = this.compile();\n        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);\n        for await (const item of stream) {\n            yield* item.rows;\n        }\n    }\n    async explain(format, options) {\n        const builder = new InsertQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithExplain(this.#props.queryNode, format, options),\n        });\n        return await builder.execute();\n    }\n}\n", "/// <reference types=\"./delete-result.d.ts\" />\nexport class DeleteResult {\n    numDeletedRows;\n    constructor(numDeletedRows) {\n        this.numDeletedRows = numDeletedRows;\n    }\n}\n", "/// <reference types=\"./limit-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const LimitNode = freeze({\n    is(node) {\n        return node.kind === 'LimitNode';\n    },\n    create(limit) {\n        return freeze({\n            kind: 'LimitNode',\n            limit,\n        });\n    },\n});\n", "/// <reference types=\"./delete-query-builder.d.ts\" />\nimport { parseJoin, } from '../parser/join-parser.js';\nimport { parseTableExpressionOrList, } from '../parser/table-parser.js';\nimport { parseSelectArg, parseSelectAll, } from '../parser/select-parser.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { freeze } from '../util/object-utils.js';\nimport { isNoResultErrorConstructor, NoResultError, } from './no-result-error.js';\nimport { DeleteResult } from './delete-result.js';\nimport { DeleteQueryNode } from '../operation-node/delete-query-node.js';\nimport { LimitNode } from '../operation-node/limit-node.js';\nimport { parseOrderBy, } from '../parser/order-by-parser.js';\nimport { parseValueBinaryOperationOrExpression, parseReferentialBinaryOperation, } from '../parser/binary-operation-parser.js';\nimport { parseValueExpression, } from '../parser/value-parser.js';\nimport { parseTop } from '../parser/top-parser.js';\nexport class DeleteQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    where(...args) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithWhere(this.#props.queryNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    whereRef(lhs, op, rhs) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithWhere(this.#props.queryNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    clearWhere() {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutWhere(this.#props.queryNode),\n        });\n    }\n    /**\n     * Changes a `delete from` query into a `delete top from` query.\n     *\n     * `top` clause is only supported by some dialects like MS SQL Server.\n     *\n     * ### Examples\n     *\n     * Delete the first 5 rows:\n     *\n     * ```ts\n     * await db\n     *   .deleteFrom('person')\n     *   .top(5)\n     *   .where('age', '>', 18)\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * delete top(5) from \"person\" where \"age\" > @1\n     * ```\n     *\n     * Delete the first 50% of rows:\n     *\n     * ```ts\n     * await db\n     *   .deleteFrom('person')\n     *   .top(50, 'percent')\n     *   .where('age', '>', 18)\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * delete top(50) percent from \"person\" where \"age\" > @1\n     * ```\n     */\n    top(expression, modifiers) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithTop(this.#props.queryNode, parseTop(expression, modifiers)),\n        });\n    }\n    using(tables) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: DeleteQueryNode.cloneWithUsing(this.#props.queryNode, parseTableExpressionOrList(tables)),\n        });\n    }\n    innerJoin(...args) {\n        return this.#join('InnerJoin', args);\n    }\n    leftJoin(...args) {\n        return this.#join('LeftJoin', args);\n    }\n    rightJoin(...args) {\n        return this.#join('RightJoin', args);\n    }\n    fullJoin(...args) {\n        return this.#join('FullJoin', args);\n    }\n    #join(joinType, args) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithJoin(this.#props.queryNode, parseJoin(joinType, args)),\n        });\n    }\n    returning(selection) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectArg(selection)),\n        });\n    }\n    returningAll(table) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    output(args) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    outputAll(table) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    /**\n     * Clears all `returning` clauses from the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.deleteFrom('pet')\n     *   .returningAll()\n     *   .where('name', '=', 'Max')\n     *   .clearReturning()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL(PostgreSQL):\n     *\n     * ```sql\n     * delete from \"pet\" where \"name\" = \"Max\"\n     * ```\n     */\n    clearReturning() {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutReturning(this.#props.queryNode),\n        });\n    }\n    /**\n     * Clears the `limit` clause from the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.deleteFrom('pet')\n     *   .returningAll()\n     *   .where('name', '=', 'Max')\n     *   .limit(5)\n     *   .clearLimit()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL(PostgreSQL):\n     *\n     * ```sql\n     * delete from \"pet\" where \"name\" = \"Max\" returning *\n     * ```\n     */\n    clearLimit() {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: DeleteQueryNode.cloneWithoutLimit(this.#props.queryNode),\n        });\n    }\n    orderBy(...args) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOrderByItems(this.#props.queryNode, parseOrderBy(args)),\n        });\n    }\n    clearOrderBy() {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutOrderBy(this.#props.queryNode),\n        });\n    }\n    /**\n     * Adds a limit clause to the query.\n     *\n     * A limit clause in a delete query is only supported by some dialects\n     * like MySQL.\n     *\n     * ### Examples\n     *\n     * Delete 5 oldest items in a table:\n     *\n     * ```ts\n     * await db\n     *   .deleteFrom('pet')\n     *   .orderBy('created_at')\n     *   .limit(5)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * delete from `pet` order by `created_at` limit ?\n     * ```\n     */\n    limit(limit) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: DeleteQueryNode.cloneWithLimit(this.#props.queryNode, LimitNode.create(parseValueExpression(limit))),\n        });\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.deleteFrom('person')\n     *   .where('first_name', '=', 'John')\n     *   .modifyEnd(sql`-- This is a comment`)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * delete from `person`\n     * where `first_name` = \"John\" -- This is a comment\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     *\n     * If you want to conditionally call a method on `this`, see\n     * the {@link $if} method.\n     *\n     * ### Examples\n     *\n     * The next example uses a helper function `log` to log a query:\n     *\n     * ```ts\n     * import type { Compilable } from 'kysely'\n     *\n     * function log<T extends Compilable>(qb: T): T {\n     *   console.log(qb.compile())\n     *   return qb\n     * }\n     *\n     * await db.deleteFrom('person')\n     *   .$call(log)\n     *   .execute()\n     * ```\n     */\n    $call(func) {\n        return func(this);\n    }\n    /**\n     * Call `func(this)` if `condition` is true.\n     *\n     * This method is especially handy with optional selects. Any `returning` or `returningAll`\n     * method calls add columns as optional fields to the output type when called inside\n     * the `func` callback. This is because we can't know if those selections were actually\n     * made before running the code.\n     *\n     * You can also call any other methods inside the callback.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * async function deletePerson(id: number, returnLastName: boolean) {\n     *   return await db\n     *     .deleteFrom('person')\n     *     .where('id', '=', id)\n     *     .returning(['id', 'first_name'])\n     *     .$if(returnLastName, (qb) => qb.returning('last_name'))\n     *     .executeTakeFirstOrThrow()\n     * }\n     * ```\n     *\n     * Any selections added inside the `if` callback will be added as optional fields to the\n     * output type since we can't know if the selections were actually made before running\n     * the code. In the example above the return type of the `deletePerson` function is:\n     *\n     * ```ts\n     * Promise<{\n     *   id: number\n     *   first_name: string\n     *   last_name?: string\n     * }>\n     * ```\n     */\n    $if(condition, func) {\n        if (condition) {\n            return func(this);\n        }\n        return new DeleteQueryBuilder({\n            ...this.#props,\n        });\n    }\n    /**\n     * Change the output type of the query.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `DeleteQueryBuilder` with a new output type.\n     */\n    $castTo() {\n        return new DeleteQueryBuilder(this.#props);\n    }\n    /**\n     * Narrows (parts of) the output type of the query.\n     *\n     * Kysely tries to be as type-safe as possible, but in some cases we have to make\n     * compromises for better maintainability and compilation performance. At present,\n     * Kysely doesn't narrow the output type of the query when using {@link where} and {@link returning} or {@link returningAll}.\n     *\n     * This utility method is very useful for these situations, as it removes unncessary\n     * runtime assertion/guard code. Its input type is limited to the output type\n     * of the query, so you can't add a column that doesn't exist, or change a column's\n     * type to something that doesn't exist in its union type.\n     *\n     * ### Examples\n     *\n     * Turn this code:\n     *\n     * ```ts\n     * import type { Person } from 'type-editor' // imaginary module\n     *\n     * const person = await db.deleteFrom('person')\n     *   .where('id', '=', 3)\n     *   .where('nullable_column', 'is not', null)\n     *   .returningAll()\n     *   .executeTakeFirstOrThrow()\n     *\n     * if (isWithNoNullValue(person)) {\n     *   functionThatExpectsPersonWithNonNullValue(person)\n     * }\n     *\n     * function isWithNoNullValue(person: Person): person is Person & { nullable_column: string } {\n     *   return person.nullable_column != null\n     * }\n     * ```\n     *\n     * Into this:\n     *\n     * ```ts\n     * import type { NotNull } from 'kysely'\n     *\n     * const person = await db.deleteFrom('person')\n     *   .where('id', '=', 3)\n     *   .where('nullable_column', 'is not', null)\n     *   .returningAll()\n     *   .$narrowType<{ nullable_column: NotNull }>()\n     *   .executeTakeFirstOrThrow()\n     *\n     * functionThatExpectsPersonWithNonNullValue(person)\n     * ```\n     */\n    $narrowType() {\n        return new DeleteQueryBuilder(this.#props);\n    }\n    /**\n     * Asserts that query's output row type equals the given type `T`.\n     *\n     * This method can be used to simplify excessively complex types to make TypeScript happy\n     * and much faster.\n     *\n     * Kysely uses complex type magic to achieve its type safety. This complexity is sometimes too much\n     * for TypeScript and you get errors like this:\n     *\n     * ```\n     * error TS2589: Type instantiation is excessively deep and possibly infinite.\n     * ```\n     *\n     * In these case you can often use this method to help TypeScript a little bit. When you use this\n     * method to assert the output type of a query, Kysely can drop the complex output type that\n     * consists of multiple nested helper types and replace it with the simple asserted type.\n     *\n     * Using this method doesn't reduce type safety at all. You have to pass in a type that is\n     * structurally equal to the current type.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { Species } from 'type-editor' // imaginary module\n     *\n     * async function deletePersonAndPets(personId: number) {\n     *   return await db\n     *     .with('deleted_person', (qb) => qb\n     *        .deleteFrom('person')\n     *        .where('id', '=', personId)\n     *        .returning('first_name')\n     *        .$assertType<{ first_name: string }>()\n     *     )\n     *     .with('deleted_pets', (qb) => qb\n     *       .deleteFrom('pet')\n     *       .where('owner_id', '=', personId)\n     *       .returning(['name as pet_name', 'species'])\n     *       .$assertType<{ pet_name: string, species: Species }>()\n     *     )\n     *     .selectFrom(['deleted_person', 'deleted_pets'])\n     *     .selectAll()\n     *     .execute()\n     * }\n     * ```\n     */\n    $assertType() {\n        return new DeleteQueryBuilder(this.#props);\n    }\n    /**\n     * Returns a copy of this DeleteQueryBuilder instance with the given plugin installed.\n     */\n    withPlugin(plugin) {\n        return new DeleteQueryBuilder({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    /**\n     * Executes the query and returns an array of rows.\n     *\n     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.\n     */\n    async execute() {\n        const compiledQuery = this.compile();\n        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);\n        const { adapter } = this.#props.executor;\n        const query = compiledQuery.query;\n        if ((query.returning && adapter.supportsReturning) ||\n            (query.output && adapter.supportsOutput)) {\n            return result.rows;\n        }\n        return [new DeleteResult(result.numAffectedRows ?? BigInt(0))];\n    }\n    /**\n     * Executes the query and returns the first result or undefined if\n     * the query returned no result.\n     */\n    async executeTakeFirst() {\n        const [result] = await this.execute();\n        return result;\n    }\n    /**\n     * Executes the query and returns the first result or throws if\n     * the query returned no result.\n     *\n     * By default an instance of {@link NoResultError} is thrown, but you can\n     * provide a custom error class, or callback as the only argument to throw a different\n     * error.\n     */\n    async executeTakeFirstOrThrow(errorConstructor = NoResultError) {\n        const result = await this.executeTakeFirst();\n        if (result === undefined) {\n            const error = isNoResultErrorConstructor(errorConstructor)\n                ? new errorConstructor(this.toOperationNode())\n                : errorConstructor(this.toOperationNode());\n            throw error;\n        }\n        return result;\n    }\n    async *stream(chunkSize = 100) {\n        const compiledQuery = this.compile();\n        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);\n        for await (const item of stream) {\n            yield* item.rows;\n        }\n    }\n    async explain(format, options) {\n        const builder = new DeleteQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithExplain(this.#props.queryNode, format, options),\n        });\n        return await builder.execute();\n    }\n}\n", "/// <reference types=\"./update-result.d.ts\" />\nexport class UpdateResult {\n    /**\n     * The number of rows the update query updated (even if not changed).\n     */\n    numUpdatedRows;\n    /**\n     * The number of rows the update query changed.\n     *\n     * This is **optional** and only supported in dialects such as MySQL.\n     * You would probably use {@link numUpdatedRows} in most cases.\n     */\n    numChangedRows;\n    constructor(numUpdatedRows, numChangedRows) {\n        this.numUpdatedRows = numUpdatedRows;\n        this.numChangedRows = numChangedRows;\n    }\n}\n", "/// <reference types=\"./update-query-builder.d.ts\" />\nimport { parseJoin, } from '../parser/join-parser.js';\nimport { parseTableExpressionOrList, } from '../parser/table-parser.js';\nimport { parseSelectArg, parseSelectAll, } from '../parser/select-parser.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { UpdateQueryNode } from '../operation-node/update-query-node.js';\nimport { parseUpdate, } from '../parser/update-set-parser.js';\nimport { freeze } from '../util/object-utils.js';\nimport { UpdateResult } from './update-result.js';\nimport { isNoResultErrorConstructor, NoResultError, } from './no-result-error.js';\nimport { parseReferentialBinaryOperation, parseValueBinaryOperationOrExpression, } from '../parser/binary-operation-parser.js';\nimport { parseValueExpression, } from '../parser/value-parser.js';\nimport { LimitNode } from '../operation-node/limit-node.js';\nimport { parseTop } from '../parser/top-parser.js';\nimport { parseOrderBy, } from '../parser/order-by-parser.js';\nexport class UpdateQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    where(...args) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithWhere(this.#props.queryNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    whereRef(lhs, op, rhs) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithWhere(this.#props.queryNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    clearWhere() {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutWhere(this.#props.queryNode),\n        });\n    }\n    /**\n     * Changes an `update` query into a `update top` query.\n     *\n     * `top` clause is only supported by some dialects like MS SQL Server.\n     *\n     * ### Examples\n     *\n     * Update the first row:\n     *\n     * ```ts\n     * await db.updateTable('person')\n     *   .top(1)\n     *   .set({ first_name: 'Foo' })\n     *   .where('age', '>', 18)\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * update top(1) \"person\" set \"first_name\" = @1 where \"age\" > @2\n     * ```\n     *\n     * Update the 50% first rows:\n     *\n     * ```ts\n     * await db.updateTable('person')\n     *   .top(50, 'percent')\n     *   .set({ first_name: 'Foo' })\n     *   .where('age', '>', 18)\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * update top(50) percent \"person\" set \"first_name\" = @1 where \"age\" > @2\n     * ```\n     */\n    top(expression, modifiers) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithTop(this.#props.queryNode, parseTop(expression, modifiers)),\n        });\n    }\n    from(from) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: UpdateQueryNode.cloneWithFromItems(this.#props.queryNode, parseTableExpressionOrList(from)),\n        });\n    }\n    innerJoin(...args) {\n        return this.#join('InnerJoin', args);\n    }\n    leftJoin(...args) {\n        return this.#join('LeftJoin', args);\n    }\n    rightJoin(...args) {\n        return this.#join('RightJoin', args);\n    }\n    fullJoin(...args) {\n        return this.#join('FullJoin', args);\n    }\n    #join(joinType, args) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithJoin(this.#props.queryNode, parseJoin(joinType, args)),\n        });\n    }\n    orderBy(...args) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOrderByItems(this.#props.queryNode, parseOrderBy(args)),\n        });\n    }\n    clearOrderBy() {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutOrderBy(this.#props.queryNode),\n        });\n    }\n    /**\n     * Adds a limit clause to the update query for supported databases, such as MySQL.\n     *\n     * ### Examples\n     *\n     * Update the first 2 rows in the 'person' table:\n     *\n     * ```ts\n     * await db\n     *   .updateTable('person')\n     *   .set({ first_name: 'Foo' })\n     *   .limit(2)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * update `person` set `first_name` = ? limit ?\n     * ```\n     */\n    limit(limit) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: UpdateQueryNode.cloneWithLimit(this.#props.queryNode, LimitNode.create(parseValueExpression(limit))),\n        });\n    }\n    set(...args) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: UpdateQueryNode.cloneWithUpdates(this.#props.queryNode, parseUpdate(...args)),\n        });\n    }\n    returning(selection) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectArg(selection)),\n        });\n    }\n    returningAll(table) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    output(args) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    outputAll(table) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.updateTable('person')\n     *   .set({ age: 39 })\n     *   .where('first_name', '=', 'John')\n     *   .modifyEnd(sql.raw('-- This is a comment'))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * update `person`\n     * set `age` = 39\n     * where `first_name` = \"John\" -- This is a comment\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * Clears all `returning` clauses from the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * db.updateTable('person')\n     *   .returningAll()\n     *   .set({ age: 39 })\n     *   .where('first_name', '=', 'John')\n     *   .clearReturning()\n     * ```\n     *\n     * The generated SQL(PostgreSQL):\n     *\n     * ```sql\n     * update \"person\" set \"age\" = 39 where \"first_name\" = \"John\"\n     * ```\n     */\n    clearReturning() {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutReturning(this.#props.queryNode),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     *\n     * If you want to conditionally call a method on `this`, see\n     * the {@link $if} method.\n     *\n     * ### Examples\n     *\n     * The next example uses a helper function `log` to log a query:\n     *\n     * ```ts\n     * import type { Compilable } from 'kysely'\n     * import type { PersonUpdate } from 'type-editor' // imaginary module\n     *\n     * function log<T extends Compilable>(qb: T): T {\n     *   console.log(qb.compile())\n     *   return qb\n     * }\n     *\n     * const values = {\n     *   first_name: 'John',\n     * } satisfies PersonUpdate\n     *\n     * db.updateTable('person')\n     *   .set(values)\n     *   .$call(log)\n     *   .execute()\n     * ```\n     */\n    $call(func) {\n        return func(this);\n    }\n    /**\n     * Call `func(this)` if `condition` is true.\n     *\n     * This method is especially handy with optional selects. Any `returning` or `returningAll`\n     * method calls add columns as optional fields to the output type when called inside\n     * the `func` callback. This is because we can't know if those selections were actually\n     * made before running the code.\n     *\n     * You can also call any other methods inside the callback.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { PersonUpdate } from 'type-editor' // imaginary module\n     *\n     * async function updatePerson(id: number, updates: PersonUpdate, returnLastName: boolean) {\n     *   return await db\n     *     .updateTable('person')\n     *     .set(updates)\n     *     .where('id', '=', id)\n     *     .returning(['id', 'first_name'])\n     *     .$if(returnLastName, (qb) => qb.returning('last_name'))\n     *     .executeTakeFirstOrThrow()\n     * }\n     * ```\n     *\n     * Any selections added inside the `if` callback will be added as optional fields to the\n     * output type since we can't know if the selections were actually made before running\n     * the code. In the example above the return type of the `updatePerson` function is:\n     *\n     * ```ts\n     * Promise<{\n     *   id: number\n     *   first_name: string\n     *   last_name?: string\n     * }>\n     * ```\n     */\n    $if(condition, func) {\n        if (condition) {\n            return func(this);\n        }\n        return new UpdateQueryBuilder({\n            ...this.#props,\n        });\n    }\n    /**\n     * Change the output type of the query.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `UpdateQueryBuilder` with a new output type.\n     */\n    $castTo() {\n        return new UpdateQueryBuilder(this.#props);\n    }\n    /**\n     * Narrows (parts of) the output type of the query.\n     *\n     * Kysely tries to be as type-safe as possible, but in some cases we have to make\n     * compromises for better maintainability and compilation performance. At present,\n     * Kysely doesn't narrow the output type of the query based on {@link set} input\n     * when using {@link where} and/or {@link returning} or {@link returningAll}.\n     *\n     * This utility method is very useful for these situations, as it removes unncessary\n     * runtime assertion/guard code. Its input type is limited to the output type\n     * of the query, so you can't add a column that doesn't exist, or change a column's\n     * type to something that doesn't exist in its union type.\n     *\n     * ### Examples\n     *\n     * Turn this code:\n     *\n     * ```ts\n     * import type { Person } from 'type-editor' // imaginary module\n     *\n     * const id = 1\n     * const now = new Date().toISOString()\n     *\n     * const person = await db.updateTable('person')\n     *   .set({ deleted_at: now })\n     *   .where('id', '=', id)\n     *   .where('nullable_column', 'is not', null)\n     *   .returningAll()\n     *   .executeTakeFirstOrThrow()\n     *\n     * if (isWithNoNullValue(person)) {\n     *   functionThatExpectsPersonWithNonNullValue(person)\n     * }\n     *\n     * function isWithNoNullValue(person: Person): person is Person & { nullable_column: string } {\n     *   return person.nullable_column != null\n     * }\n     * ```\n     *\n     * Into this:\n     *\n     * ```ts\n     * import type { NotNull } from 'kysely'\n     *\n     * const id = 1\n     * const now = new Date().toISOString()\n     *\n     * const person = await db.updateTable('person')\n     *   .set({ deleted_at: now })\n     *   .where('id', '=', id)\n     *   .where('nullable_column', 'is not', null)\n     *   .returningAll()\n     *   .$narrowType<{ deleted_at: Date; nullable_column: NotNull }>()\n     *   .executeTakeFirstOrThrow()\n     *\n     * functionThatExpectsPersonWithNonNullValue(person)\n     * ```\n     */\n    $narrowType() {\n        return new UpdateQueryBuilder(this.#props);\n    }\n    /**\n     * Asserts that query's output row type equals the given type `T`.\n     *\n     * This method can be used to simplify excessively complex types to make TypeScript happy\n     * and much faster.\n     *\n     * Kysely uses complex type magic to achieve its type safety. This complexity is sometimes too much\n     * for TypeScript and you get errors like this:\n     *\n     * ```\n     * error TS2589: Type instantiation is excessively deep and possibly infinite.\n     * ```\n     *\n     * In these case you can often use this method to help TypeScript a little bit. When you use this\n     * method to assert the output type of a query, Kysely can drop the complex output type that\n     * consists of multiple nested helper types and replace it with the simple asserted type.\n     *\n     * Using this method doesn't reduce type safety at all. You have to pass in a type that is\n     * structurally equal to the current type.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { PersonUpdate, PetUpdate, Species } from 'type-editor' // imaginary module\n     *\n     * const person = {\n     *   id: 1,\n     *   gender: 'other',\n     * } satisfies PersonUpdate\n     *\n     * const pet = {\n     *   name: 'Fluffy',\n     * } satisfies PetUpdate\n     *\n     * const result = await db\n     *   .with('updated_person', (qb) => qb\n     *     .updateTable('person')\n     *     .set(person)\n     *     .where('id', '=', person.id)\n     *     .returning('first_name')\n     *     .$assertType<{ first_name: string }>()\n     *   )\n     *   .with('updated_pet', (qb) => qb\n     *     .updateTable('pet')\n     *     .set(pet)\n     *     .where('owner_id', '=', person.id)\n     *     .returning(['name as pet_name', 'species'])\n     *     .$assertType<{ pet_name: string, species: Species }>()\n     *   )\n     *   .selectFrom(['updated_person', 'updated_pet'])\n     *   .selectAll()\n     *   .executeTakeFirstOrThrow()\n     * ```\n     */\n    $assertType() {\n        return new UpdateQueryBuilder(this.#props);\n    }\n    /**\n     * Returns a copy of this UpdateQueryBuilder instance with the given plugin installed.\n     */\n    withPlugin(plugin) {\n        return new UpdateQueryBuilder({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    /**\n     * Executes the query and returns an array of rows.\n     *\n     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.\n     */\n    async execute() {\n        const compiledQuery = this.compile();\n        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);\n        const { adapter } = this.#props.executor;\n        const query = compiledQuery.query;\n        if ((query.returning && adapter.supportsReturning) ||\n            (query.output && adapter.supportsOutput)) {\n            return result.rows;\n        }\n        return [\n            new UpdateResult(result.numAffectedRows ?? BigInt(0), result.numChangedRows),\n        ];\n    }\n    /**\n     * Executes the query and returns the first result or undefined if\n     * the query returned no result.\n     */\n    async executeTakeFirst() {\n        const [result] = await this.execute();\n        return result;\n    }\n    /**\n     * Executes the query and returns the first result or throws if\n     * the query returned no result.\n     *\n     * By default an instance of {@link NoResultError} is thrown, but you can\n     * provide a custom error class, or callback as the only argument to throw a different\n     * error.\n     */\n    async executeTakeFirstOrThrow(errorConstructor = NoResultError) {\n        const result = await this.executeTakeFirst();\n        if (result === undefined) {\n            const error = isNoResultErrorConstructor(errorConstructor)\n                ? new errorConstructor(this.toOperationNode())\n                : errorConstructor(this.toOperationNode());\n            throw error;\n        }\n        return result;\n    }\n    async *stream(chunkSize = 100) {\n        const compiledQuery = this.compile();\n        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);\n        for await (const item of stream) {\n            yield* item.rows;\n        }\n    }\n    async explain(format, options) {\n        const builder = new UpdateQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithExplain(this.#props.queryNode, format, options),\n        });\n        return await builder.execute();\n    }\n}\n", "/// <reference types=\"./common-table-expression-name-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\nimport { TableNode } from './table-node.js';\n/**\n * @internal\n */\nexport const CommonTableExpressionNameNode = freeze({\n    is(node) {\n        return node.kind === 'CommonTableExpressionNameNode';\n    },\n    create(tableName, columnNames) {\n        return freeze({\n            kind: 'CommonTableExpressionNameNode',\n            table: TableNode.create(tableName),\n            columns: columnNames\n                ? freeze(columnNames.map(ColumnNode.create))\n                : undefined,\n        });\n    },\n});\n", "/// <reference types=\"./common-table-expression-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const CommonTableExpressionNode = freeze({\n    is(node) {\n        return node.kind === 'CommonTableExpressionNode';\n    },\n    create(name, expression) {\n        return freeze({\n            kind: 'CommonTableExpressionNode',\n            name,\n            expression,\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./cte-builder.d.ts\" />\nimport { CommonTableExpressionNode } from '../operation-node/common-table-expression-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class CTEBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Makes the common table expression materialized.\n     */\n    materialized() {\n        return new CTEBuilder({\n            ...this.#props,\n            node: CommonTableExpressionNode.cloneWith(this.#props.node, {\n                materialized: true,\n            }),\n        });\n    }\n    /**\n     * Makes the common table expression not materialized.\n     */\n    notMaterialized() {\n        return new CTEBuilder({\n            ...this.#props,\n            node: CommonTableExpressionNode.cloneWith(this.#props.node, {\n                materialized: false,\n            }),\n        });\n    }\n    toOperationNode() {\n        return this.#props.node;\n    }\n}\n", "/// <reference types=\"./with-parser.d.ts\" />\nimport { CommonTableExpressionNameNode } from '../operation-node/common-table-expression-name-node.js';\nimport { createQueryCreator } from './parse-utils.js';\nimport { isFunction } from '../util/object-utils.js';\nimport { CTEBuilder } from '../query-builder/cte-builder.js';\nimport { CommonTableExpressionNode } from '../operation-node/common-table-expression-node.js';\nexport function parseCommonTableExpression(nameOrBuilderCallback, expression) {\n    const expressionNode = expression(createQueryCreator()).toOperationNode();\n    if (isFunction(nameOrBuilderCallback)) {\n        return nameOrBuilderCallback(cteBuilderFactory(expressionNode)).toOperationNode();\n    }\n    return CommonTableExpressionNode.create(parseCommonTableExpressionName(nameOrBuilderCallback), expressionNode);\n}\nfunction cteBuilderFactory(expressionNode) {\n    return (name) => {\n        return new CTEBuilder({\n            node: CommonTableExpressionNode.create(parseCommonTableExpressionName(name), expressionNode),\n        });\n    };\n}\nfunction parseCommonTableExpressionName(name) {\n    if (name.includes('(')) {\n        const parts = name.split(/[\\(\\)]/);\n        const table = parts[0];\n        const columns = parts[1].split(',').map((it) => it.trim());\n        return CommonTableExpressionNameNode.create(table, columns);\n    }\n    else {\n        return CommonTableExpressionNameNode.create(name);\n    }\n}\n", "/// <reference types=\"./with-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const WithNode = freeze({\n    is(node) {\n        return node.kind === 'WithNode';\n    },\n    create(expression, params) {\n        return freeze({\n            kind: 'WithNode',\n            expressions: freeze([expression]),\n            ...params,\n        });\n    },\n    cloneWithExpression(withNode, expression) {\n        return freeze({\n            ...withNode,\n            expressions: freeze([...withNode.expressions, expression]),\n        });\n    },\n});\n", "/// <reference types=\"./random-string.d.ts\" />\nconst CHARS = [\n    'A',\n    'B',\n    'C',\n    'D',\n    'E',\n    'F',\n    'G',\n    'H',\n    'I',\n    'J',\n    'K',\n    'L',\n    'M',\n    'N',\n    'O',\n    'P',\n    'Q',\n    'R',\n    'S',\n    'T',\n    'U',\n    'V',\n    'W',\n    'X',\n    'Y',\n    'Z',\n    'a',\n    'b',\n    'c',\n    'd',\n    'e',\n    'f',\n    'g',\n    'h',\n    'i',\n    'j',\n    'k',\n    'l',\n    'm',\n    'n',\n    'o',\n    'p',\n    'q',\n    'r',\n    's',\n    't',\n    'u',\n    'v',\n    'w',\n    'x',\n    'y',\n    'z',\n    '0',\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n];\nexport function randomString(length) {\n    let chars = '';\n    for (let i = 0; i < length; ++i) {\n        chars += randomChar();\n    }\n    return chars;\n}\nfunction randomChar() {\n    return CHARS[~~(Math.random() * CHARS.length)];\n}\n", "/// <reference types=\"./query-id.d.ts\" />\nimport { randomString } from './random-string.js';\nexport function createQueryId() {\n    return new LazyQueryId();\n}\nclass LazyQueryId {\n    #queryId;\n    get queryId() {\n        if (this.#queryId === undefined) {\n            this.#queryId = randomString(8);\n        }\n        return this.#queryId;\n    }\n}\n", "/// <reference types=\"./require-all-props.d.ts\" />\n/**\n * Helper function to check listed properties according to given type. Check if all properties has been used when object is initialised.\n *\n * Example use:\n *\n * ```ts\n * type SomeType = { propA: string; propB?: number; }\n *\n * // propB has to be mentioned even it is optional. It still should be initialized with undefined.\n * const a: SomeType = requireAllProps<SomeType>({ propA: \"value A\", propB: undefined });\n *\n * // checked type is implicit for variable.\n * const b = requireAllProps<SomeType>({ propA: \"value A\", propB: undefined });\n * ```\n *\n * Wrong use of this helper:\n *\n * 1. Omit checked type - all checked properties will be expect as of type never\n *\n * ```ts\n * type SomeType = { propA: string; propB?: number; }\n * // const z: SomeType = requireAllProps({ propC: \"no type will work\" }); // Property 'propA' is missing in type '{ propC: string; }' but required in type 'SomeType'.\n * ```\n *\n * 2. Apply to spreaded object - there is no way how to check in compile time if spreaded object contains all properties\n *\n * ```ts\n * type SomeType = { propA: string; propB?: number; }\n * const y: SomeType = { propA: \"\" }; // valid object according to SomeType declaration\n * // const x = requireAllProps<SomeType>({ ...y }); // Argument of type '{ propA: string; propB?: number; }' is not assignable to parameter of type 'AllProps<SomeType>'.\n * ```\n *\n * @param obj object to check if all properties has been used\n * @returns untouched obj parameter is returned\n */\nexport function requireAllProps(obj) {\n    return obj;\n}\n", "/// <reference types=\"./operation-node-transformer.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { requireAllProps } from '../util/require-all-props.js';\n/**\n * Transforms an operation node tree into another one.\n *\n * Kysely queries are expressed internally as a tree of objects (operation nodes).\n * `OperationNodeTransformer` takes such a tree as its input and returns a\n * transformed deep copy of it. By default the `OperationNodeTransformer`\n * does nothing. You need to override one or more methods to make it do\n * something.\n *\n * There's a method for each node type. For example if you'd like to convert\n * each identifier (table name, column name, alias etc.) from camelCase to\n * snake_case, you'd do something like this:\n *\n * ```ts\n * import { type IdentifierNode, OperationNodeTransformer } from 'kysely'\n * import snakeCase from 'lodash/snakeCase'\n *\n * class CamelCaseTransformer extends OperationNodeTransformer {\n *   override transformIdentifier(node: IdentifierNode): IdentifierNode {\n *     node = super.transformIdentifier(node)\n *\n *     return {\n *       ...node,\n *       name: snakeCase(node.name),\n *     }\n *   }\n * }\n *\n * const transformer = new CamelCaseTransformer()\n *\n * const query = db.selectFrom('person').select(['first_name', 'last_name'])\n *\n * const tree = transformer.transformNode(query.toOperationNode())\n * ```\n */\nexport class OperationNodeTransformer {\n    nodeStack = [];\n    #transformers = freeze({\n        AliasNode: this.transformAlias.bind(this),\n        ColumnNode: this.transformColumn.bind(this),\n        IdentifierNode: this.transformIdentifier.bind(this),\n        SchemableIdentifierNode: this.transformSchemableIdentifier.bind(this),\n        RawNode: this.transformRaw.bind(this),\n        ReferenceNode: this.transformReference.bind(this),\n        SelectQueryNode: this.transformSelectQuery.bind(this),\n        SelectionNode: this.transformSelection.bind(this),\n        TableNode: this.transformTable.bind(this),\n        FromNode: this.transformFrom.bind(this),\n        SelectAllNode: this.transformSelectAll.bind(this),\n        AndNode: this.transformAnd.bind(this),\n        OrNode: this.transformOr.bind(this),\n        ValueNode: this.transformValue.bind(this),\n        ValueListNode: this.transformValueList.bind(this),\n        PrimitiveValueListNode: this.transformPrimitiveValueList.bind(this),\n        ParensNode: this.transformParens.bind(this),\n        JoinNode: this.transformJoin.bind(this),\n        OperatorNode: this.transformOperator.bind(this),\n        WhereNode: this.transformWhere.bind(this),\n        InsertQueryNode: this.transformInsertQuery.bind(this),\n        DeleteQueryNode: this.transformDeleteQuery.bind(this),\n        ReturningNode: this.transformReturning.bind(this),\n        CreateTableNode: this.transformCreateTable.bind(this),\n        AddColumnNode: this.transformAddColumn.bind(this),\n        ColumnDefinitionNode: this.transformColumnDefinition.bind(this),\n        DropTableNode: this.transformDropTable.bind(this),\n        DataTypeNode: this.transformDataType.bind(this),\n        OrderByNode: this.transformOrderBy.bind(this),\n        OrderByItemNode: this.transformOrderByItem.bind(this),\n        GroupByNode: this.transformGroupBy.bind(this),\n        GroupByItemNode: this.transformGroupByItem.bind(this),\n        UpdateQueryNode: this.transformUpdateQuery.bind(this),\n        ColumnUpdateNode: this.transformColumnUpdate.bind(this),\n        LimitNode: this.transformLimit.bind(this),\n        OffsetNode: this.transformOffset.bind(this),\n        OnConflictNode: this.transformOnConflict.bind(this),\n        OnDuplicateKeyNode: this.transformOnDuplicateKey.bind(this),\n        CreateIndexNode: this.transformCreateIndex.bind(this),\n        DropIndexNode: this.transformDropIndex.bind(this),\n        ListNode: this.transformList.bind(this),\n        PrimaryKeyConstraintNode: this.transformPrimaryKeyConstraint.bind(this),\n        UniqueConstraintNode: this.transformUniqueConstraint.bind(this),\n        ReferencesNode: this.transformReferences.bind(this),\n        CheckConstraintNode: this.transformCheckConstraint.bind(this),\n        WithNode: this.transformWith.bind(this),\n        CommonTableExpressionNode: this.transformCommonTableExpression.bind(this),\n        CommonTableExpressionNameNode: this.transformCommonTableExpressionName.bind(this),\n        HavingNode: this.transformHaving.bind(this),\n        CreateSchemaNode: this.transformCreateSchema.bind(this),\n        DropSchemaNode: this.transformDropSchema.bind(this),\n        AlterTableNode: this.transformAlterTable.bind(this),\n        DropColumnNode: this.transformDropColumn.bind(this),\n        RenameColumnNode: this.transformRenameColumn.bind(this),\n        AlterColumnNode: this.transformAlterColumn.bind(this),\n        ModifyColumnNode: this.transformModifyColumn.bind(this),\n        AddConstraintNode: this.transformAddConstraint.bind(this),\n        DropConstraintNode: this.transformDropConstraint.bind(this),\n        RenameConstraintNode: this.transformRenameConstraint.bind(this),\n        ForeignKeyConstraintNode: this.transformForeignKeyConstraint.bind(this),\n        CreateViewNode: this.transformCreateView.bind(this),\n        RefreshMaterializedViewNode: this.transformRefreshMaterializedView.bind(this),\n        DropViewNode: this.transformDropView.bind(this),\n        GeneratedNode: this.transformGenerated.bind(this),\n        DefaultValueNode: this.transformDefaultValue.bind(this),\n        OnNode: this.transformOn.bind(this),\n        ValuesNode: this.transformValues.bind(this),\n        SelectModifierNode: this.transformSelectModifier.bind(this),\n        CreateTypeNode: this.transformCreateType.bind(this),\n        DropTypeNode: this.transformDropType.bind(this),\n        ExplainNode: this.transformExplain.bind(this),\n        DefaultInsertValueNode: this.transformDefaultInsertValue.bind(this),\n        AggregateFunctionNode: this.transformAggregateFunction.bind(this),\n        OverNode: this.transformOver.bind(this),\n        PartitionByNode: this.transformPartitionBy.bind(this),\n        PartitionByItemNode: this.transformPartitionByItem.bind(this),\n        SetOperationNode: this.transformSetOperation.bind(this),\n        BinaryOperationNode: this.transformBinaryOperation.bind(this),\n        UnaryOperationNode: this.transformUnaryOperation.bind(this),\n        UsingNode: this.transformUsing.bind(this),\n        FunctionNode: this.transformFunction.bind(this),\n        CaseNode: this.transformCase.bind(this),\n        WhenNode: this.transformWhen.bind(this),\n        JSONReferenceNode: this.transformJSONReference.bind(this),\n        JSONPathNode: this.transformJSONPath.bind(this),\n        JSONPathLegNode: this.transformJSONPathLeg.bind(this),\n        JSONOperatorChainNode: this.transformJSONOperatorChain.bind(this),\n        TupleNode: this.transformTuple.bind(this),\n        MergeQueryNode: this.transformMergeQuery.bind(this),\n        MatchedNode: this.transformMatched.bind(this),\n        AddIndexNode: this.transformAddIndex.bind(this),\n        CastNode: this.transformCast.bind(this),\n        FetchNode: this.transformFetch.bind(this),\n        TopNode: this.transformTop.bind(this),\n        OutputNode: this.transformOutput.bind(this),\n        OrActionNode: this.transformOrAction.bind(this),\n        CollateNode: this.transformCollate.bind(this),\n    });\n    transformNode(node, queryId) {\n        if (!node) {\n            return node;\n        }\n        this.nodeStack.push(node);\n        const out = this.transformNodeImpl(node, queryId);\n        this.nodeStack.pop();\n        return freeze(out);\n    }\n    transformNodeImpl(node, queryId) {\n        return this.#transformers[node.kind](node, queryId);\n    }\n    transformNodeList(list, queryId) {\n        if (!list) {\n            return list;\n        }\n        return freeze(list.map((node) => this.transformNode(node, queryId)));\n    }\n    transformSelectQuery(node, queryId) {\n        return requireAllProps({\n            kind: 'SelectQueryNode',\n            from: this.transformNode(node.from, queryId),\n            selections: this.transformNodeList(node.selections, queryId),\n            distinctOn: this.transformNodeList(node.distinctOn, queryId),\n            joins: this.transformNodeList(node.joins, queryId),\n            groupBy: this.transformNode(node.groupBy, queryId),\n            orderBy: this.transformNode(node.orderBy, queryId),\n            where: this.transformNode(node.where, queryId),\n            frontModifiers: this.transformNodeList(node.frontModifiers, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            limit: this.transformNode(node.limit, queryId),\n            offset: this.transformNode(node.offset, queryId),\n            with: this.transformNode(node.with, queryId),\n            having: this.transformNode(node.having, queryId),\n            explain: this.transformNode(node.explain, queryId),\n            setOperations: this.transformNodeList(node.setOperations, queryId),\n            fetch: this.transformNode(node.fetch, queryId),\n            top: this.transformNode(node.top, queryId),\n        });\n    }\n    transformSelection(node, queryId) {\n        return requireAllProps({\n            kind: 'SelectionNode',\n            selection: this.transformNode(node.selection, queryId),\n        });\n    }\n    transformColumn(node, queryId) {\n        return requireAllProps({\n            kind: 'ColumnNode',\n            column: this.transformNode(node.column, queryId),\n        });\n    }\n    transformAlias(node, queryId) {\n        return requireAllProps({\n            kind: 'AliasNode',\n            node: this.transformNode(node.node, queryId),\n            alias: this.transformNode(node.alias, queryId),\n        });\n    }\n    transformTable(node, queryId) {\n        return requireAllProps({\n            kind: 'TableNode',\n            table: this.transformNode(node.table, queryId),\n        });\n    }\n    transformFrom(node, queryId) {\n        return requireAllProps({\n            kind: 'FromNode',\n            froms: this.transformNodeList(node.froms, queryId),\n        });\n    }\n    transformReference(node, queryId) {\n        return requireAllProps({\n            kind: 'ReferenceNode',\n            column: this.transformNode(node.column, queryId),\n            table: this.transformNode(node.table, queryId),\n        });\n    }\n    transformAnd(node, queryId) {\n        return requireAllProps({\n            kind: 'AndNode',\n            left: this.transformNode(node.left, queryId),\n            right: this.transformNode(node.right, queryId),\n        });\n    }\n    transformOr(node, queryId) {\n        return requireAllProps({\n            kind: 'OrNode',\n            left: this.transformNode(node.left, queryId),\n            right: this.transformNode(node.right, queryId),\n        });\n    }\n    transformValueList(node, queryId) {\n        return requireAllProps({\n            kind: 'ValueListNode',\n            values: this.transformNodeList(node.values, queryId),\n        });\n    }\n    transformParens(node, queryId) {\n        return requireAllProps({\n            kind: 'ParensNode',\n            node: this.transformNode(node.node, queryId),\n        });\n    }\n    transformJoin(node, queryId) {\n        return requireAllProps({\n            kind: 'JoinNode',\n            joinType: node.joinType,\n            table: this.transformNode(node.table, queryId),\n            on: this.transformNode(node.on, queryId),\n        });\n    }\n    transformRaw(node, queryId) {\n        return requireAllProps({\n            kind: 'RawNode',\n            sqlFragments: freeze([...node.sqlFragments]),\n            parameters: this.transformNodeList(node.parameters, queryId),\n        });\n    }\n    transformWhere(node, queryId) {\n        return requireAllProps({\n            kind: 'WhereNode',\n            where: this.transformNode(node.where, queryId),\n        });\n    }\n    transformInsertQuery(node, queryId) {\n        return requireAllProps({\n            kind: 'InsertQueryNode',\n            into: this.transformNode(node.into, queryId),\n            columns: this.transformNodeList(node.columns, queryId),\n            values: this.transformNode(node.values, queryId),\n            returning: this.transformNode(node.returning, queryId),\n            onConflict: this.transformNode(node.onConflict, queryId),\n            onDuplicateKey: this.transformNode(node.onDuplicateKey, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            with: this.transformNode(node.with, queryId),\n            ignore: node.ignore,\n            orAction: this.transformNode(node.orAction, queryId),\n            replace: node.replace,\n            explain: this.transformNode(node.explain, queryId),\n            defaultValues: node.defaultValues,\n            top: this.transformNode(node.top, queryId),\n            output: this.transformNode(node.output, queryId),\n        });\n    }\n    transformValues(node, queryId) {\n        return requireAllProps({\n            kind: 'ValuesNode',\n            values: this.transformNodeList(node.values, queryId),\n        });\n    }\n    transformDeleteQuery(node, queryId) {\n        return requireAllProps({\n            kind: 'DeleteQueryNode',\n            from: this.transformNode(node.from, queryId),\n            using: this.transformNode(node.using, queryId),\n            joins: this.transformNodeList(node.joins, queryId),\n            where: this.transformNode(node.where, queryId),\n            returning: this.transformNode(node.returning, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            with: this.transformNode(node.with, queryId),\n            orderBy: this.transformNode(node.orderBy, queryId),\n            limit: this.transformNode(node.limit, queryId),\n            explain: this.transformNode(node.explain, queryId),\n            top: this.transformNode(node.top, queryId),\n            output: this.transformNode(node.output, queryId),\n        });\n    }\n    transformReturning(node, queryId) {\n        return requireAllProps({\n            kind: 'ReturningNode',\n            selections: this.transformNodeList(node.selections, queryId),\n        });\n    }\n    transformCreateTable(node, queryId) {\n        return requireAllProps({\n            kind: 'CreateTableNode',\n            table: this.transformNode(node.table, queryId),\n            columns: this.transformNodeList(node.columns, queryId),\n            constraints: this.transformNodeList(node.constraints, queryId),\n            temporary: node.temporary,\n            ifNotExists: node.ifNotExists,\n            onCommit: node.onCommit,\n            frontModifiers: this.transformNodeList(node.frontModifiers, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            selectQuery: this.transformNode(node.selectQuery, queryId),\n        });\n    }\n    transformColumnDefinition(node, queryId) {\n        return requireAllProps({\n            kind: 'ColumnDefinitionNode',\n            column: this.transformNode(node.column, queryId),\n            dataType: this.transformNode(node.dataType, queryId),\n            references: this.transformNode(node.references, queryId),\n            primaryKey: node.primaryKey,\n            autoIncrement: node.autoIncrement,\n            unique: node.unique,\n            notNull: node.notNull,\n            unsigned: node.unsigned,\n            defaultTo: this.transformNode(node.defaultTo, queryId),\n            check: this.transformNode(node.check, queryId),\n            generated: this.transformNode(node.generated, queryId),\n            frontModifiers: this.transformNodeList(node.frontModifiers, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            nullsNotDistinct: node.nullsNotDistinct,\n            identity: node.identity,\n            ifNotExists: node.ifNotExists,\n        });\n    }\n    transformAddColumn(node, queryId) {\n        return requireAllProps({\n            kind: 'AddColumnNode',\n            column: this.transformNode(node.column, queryId),\n        });\n    }\n    transformDropTable(node, queryId) {\n        return requireAllProps({\n            kind: 'DropTableNode',\n            table: this.transformNode(node.table, queryId),\n            ifExists: node.ifExists,\n            cascade: node.cascade,\n        });\n    }\n    transformOrderBy(node, queryId) {\n        return requireAllProps({\n            kind: 'OrderByNode',\n            items: this.transformNodeList(node.items, queryId),\n        });\n    }\n    transformOrderByItem(node, queryId) {\n        return requireAllProps({\n            kind: 'OrderByItemNode',\n            orderBy: this.transformNode(node.orderBy, queryId),\n            direction: this.transformNode(node.direction, queryId),\n            collation: this.transformNode(node.collation, queryId),\n            nulls: node.nulls,\n        });\n    }\n    transformGroupBy(node, queryId) {\n        return requireAllProps({\n            kind: 'GroupByNode',\n            items: this.transformNodeList(node.items, queryId),\n        });\n    }\n    transformGroupByItem(node, queryId) {\n        return requireAllProps({\n            kind: 'GroupByItemNode',\n            groupBy: this.transformNode(node.groupBy, queryId),\n        });\n    }\n    transformUpdateQuery(node, queryId) {\n        return requireAllProps({\n            kind: 'UpdateQueryNode',\n            table: this.transformNode(node.table, queryId),\n            from: this.transformNode(node.from, queryId),\n            joins: this.transformNodeList(node.joins, queryId),\n            where: this.transformNode(node.where, queryId),\n            updates: this.transformNodeList(node.updates, queryId),\n            returning: this.transformNode(node.returning, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            with: this.transformNode(node.with, queryId),\n            explain: this.transformNode(node.explain, queryId),\n            limit: this.transformNode(node.limit, queryId),\n            top: this.transformNode(node.top, queryId),\n            output: this.transformNode(node.output, queryId),\n            orderBy: this.transformNode(node.orderBy, queryId),\n        });\n    }\n    transformColumnUpdate(node, queryId) {\n        return requireAllProps({\n            kind: 'ColumnUpdateNode',\n            column: this.transformNode(node.column, queryId),\n            value: this.transformNode(node.value, queryId),\n        });\n    }\n    transformLimit(node, queryId) {\n        return requireAllProps({\n            kind: 'LimitNode',\n            limit: this.transformNode(node.limit, queryId),\n        });\n    }\n    transformOffset(node, queryId) {\n        return requireAllProps({\n            kind: 'OffsetNode',\n            offset: this.transformNode(node.offset, queryId),\n        });\n    }\n    transformOnConflict(node, queryId) {\n        return requireAllProps({\n            kind: 'OnConflictNode',\n            columns: this.transformNodeList(node.columns, queryId),\n            constraint: this.transformNode(node.constraint, queryId),\n            indexExpression: this.transformNode(node.indexExpression, queryId),\n            indexWhere: this.transformNode(node.indexWhere, queryId),\n            updates: this.transformNodeList(node.updates, queryId),\n            updateWhere: this.transformNode(node.updateWhere, queryId),\n            doNothing: node.doNothing,\n        });\n    }\n    transformOnDuplicateKey(node, queryId) {\n        return requireAllProps({\n            kind: 'OnDuplicateKeyNode',\n            updates: this.transformNodeList(node.updates, queryId),\n        });\n    }\n    transformCreateIndex(node, queryId) {\n        return requireAllProps({\n            kind: 'CreateIndexNode',\n            name: this.transformNode(node.name, queryId),\n            table: this.transformNode(node.table, queryId),\n            columns: this.transformNodeList(node.columns, queryId),\n            unique: node.unique,\n            using: this.transformNode(node.using, queryId),\n            ifNotExists: node.ifNotExists,\n            where: this.transformNode(node.where, queryId),\n            nullsNotDistinct: node.nullsNotDistinct,\n        });\n    }\n    transformList(node, queryId) {\n        return requireAllProps({\n            kind: 'ListNode',\n            items: this.transformNodeList(node.items, queryId),\n        });\n    }\n    transformDropIndex(node, queryId) {\n        return requireAllProps({\n            kind: 'DropIndexNode',\n            name: this.transformNode(node.name, queryId),\n            table: this.transformNode(node.table, queryId),\n            ifExists: node.ifExists,\n            cascade: node.cascade,\n        });\n    }\n    transformPrimaryKeyConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'PrimaryKeyConstraintNode',\n            columns: this.transformNodeList(node.columns, queryId),\n            name: this.transformNode(node.name, queryId),\n            deferrable: node.deferrable,\n            initiallyDeferred: node.initiallyDeferred,\n        });\n    }\n    transformUniqueConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'UniqueConstraintNode',\n            columns: this.transformNodeList(node.columns, queryId),\n            name: this.transformNode(node.name, queryId),\n            nullsNotDistinct: node.nullsNotDistinct,\n            deferrable: node.deferrable,\n            initiallyDeferred: node.initiallyDeferred,\n        });\n    }\n    transformForeignKeyConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'ForeignKeyConstraintNode',\n            columns: this.transformNodeList(node.columns, queryId),\n            references: this.transformNode(node.references, queryId),\n            name: this.transformNode(node.name, queryId),\n            onDelete: node.onDelete,\n            onUpdate: node.onUpdate,\n            deferrable: node.deferrable,\n            initiallyDeferred: node.initiallyDeferred,\n        });\n    }\n    transformSetOperation(node, queryId) {\n        return requireAllProps({\n            kind: 'SetOperationNode',\n            operator: node.operator,\n            expression: this.transformNode(node.expression, queryId),\n            all: node.all,\n        });\n    }\n    transformReferences(node, queryId) {\n        return requireAllProps({\n            kind: 'ReferencesNode',\n            table: this.transformNode(node.table, queryId),\n            columns: this.transformNodeList(node.columns, queryId),\n            onDelete: node.onDelete,\n            onUpdate: node.onUpdate,\n        });\n    }\n    transformCheckConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'CheckConstraintNode',\n            expression: this.transformNode(node.expression, queryId),\n            name: this.transformNode(node.name, queryId),\n        });\n    }\n    transformWith(node, queryId) {\n        return requireAllProps({\n            kind: 'WithNode',\n            expressions: this.transformNodeList(node.expressions, queryId),\n            recursive: node.recursive,\n        });\n    }\n    transformCommonTableExpression(node, queryId) {\n        return requireAllProps({\n            kind: 'CommonTableExpressionNode',\n            name: this.transformNode(node.name, queryId),\n            materialized: node.materialized,\n            expression: this.transformNode(node.expression, queryId),\n        });\n    }\n    transformCommonTableExpressionName(node, queryId) {\n        return requireAllProps({\n            kind: 'CommonTableExpressionNameNode',\n            table: this.transformNode(node.table, queryId),\n            columns: this.transformNodeList(node.columns, queryId),\n        });\n    }\n    transformHaving(node, queryId) {\n        return requireAllProps({\n            kind: 'HavingNode',\n            having: this.transformNode(node.having, queryId),\n        });\n    }\n    transformCreateSchema(node, queryId) {\n        return requireAllProps({\n            kind: 'CreateSchemaNode',\n            schema: this.transformNode(node.schema, queryId),\n            ifNotExists: node.ifNotExists,\n        });\n    }\n    transformDropSchema(node, queryId) {\n        return requireAllProps({\n            kind: 'DropSchemaNode',\n            schema: this.transformNode(node.schema, queryId),\n            ifExists: node.ifExists,\n            cascade: node.cascade,\n        });\n    }\n    transformAlterTable(node, queryId) {\n        return requireAllProps({\n            kind: 'AlterTableNode',\n            table: this.transformNode(node.table, queryId),\n            renameTo: this.transformNode(node.renameTo, queryId),\n            setSchema: this.transformNode(node.setSchema, queryId),\n            columnAlterations: this.transformNodeList(node.columnAlterations, queryId),\n            addConstraint: this.transformNode(node.addConstraint, queryId),\n            dropConstraint: this.transformNode(node.dropConstraint, queryId),\n            renameConstraint: this.transformNode(node.renameConstraint, queryId),\n            addIndex: this.transformNode(node.addIndex, queryId),\n            dropIndex: this.transformNode(node.dropIndex, queryId),\n        });\n    }\n    transformDropColumn(node, queryId) {\n        return requireAllProps({\n            kind: 'DropColumnNode',\n            column: this.transformNode(node.column, queryId),\n        });\n    }\n    transformRenameColumn(node, queryId) {\n        return requireAllProps({\n            kind: 'RenameColumnNode',\n            column: this.transformNode(node.column, queryId),\n            renameTo: this.transformNode(node.renameTo, queryId),\n        });\n    }\n    transformAlterColumn(node, queryId) {\n        return requireAllProps({\n            kind: 'AlterColumnNode',\n            column: this.transformNode(node.column, queryId),\n            dataType: this.transformNode(node.dataType, queryId),\n            dataTypeExpression: this.transformNode(node.dataTypeExpression, queryId),\n            setDefault: this.transformNode(node.setDefault, queryId),\n            dropDefault: node.dropDefault,\n            setNotNull: node.setNotNull,\n            dropNotNull: node.dropNotNull,\n        });\n    }\n    transformModifyColumn(node, queryId) {\n        return requireAllProps({\n            kind: 'ModifyColumnNode',\n            column: this.transformNode(node.column, queryId),\n        });\n    }\n    transformAddConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'AddConstraintNode',\n            constraint: this.transformNode(node.constraint, queryId),\n        });\n    }\n    transformDropConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'DropConstraintNode',\n            constraintName: this.transformNode(node.constraintName, queryId),\n            ifExists: node.ifExists,\n            modifier: node.modifier,\n        });\n    }\n    transformRenameConstraint(node, queryId) {\n        return requireAllProps({\n            kind: 'RenameConstraintNode',\n            oldName: this.transformNode(node.oldName, queryId),\n            newName: this.transformNode(node.newName, queryId),\n        });\n    }\n    transformCreateView(node, queryId) {\n        return requireAllProps({\n            kind: 'CreateViewNode',\n            name: this.transformNode(node.name, queryId),\n            temporary: node.temporary,\n            orReplace: node.orReplace,\n            ifNotExists: node.ifNotExists,\n            materialized: node.materialized,\n            columns: this.transformNodeList(node.columns, queryId),\n            as: this.transformNode(node.as, queryId),\n        });\n    }\n    transformRefreshMaterializedView(node, queryId) {\n        return requireAllProps({\n            kind: 'RefreshMaterializedViewNode',\n            name: this.transformNode(node.name, queryId),\n            concurrently: node.concurrently,\n            withNoData: node.withNoData,\n        });\n    }\n    transformDropView(node, queryId) {\n        return requireAllProps({\n            kind: 'DropViewNode',\n            name: this.transformNode(node.name, queryId),\n            ifExists: node.ifExists,\n            materialized: node.materialized,\n            cascade: node.cascade,\n        });\n    }\n    transformGenerated(node, queryId) {\n        return requireAllProps({\n            kind: 'GeneratedNode',\n            byDefault: node.byDefault,\n            always: node.always,\n            identity: node.identity,\n            stored: node.stored,\n            expression: this.transformNode(node.expression, queryId),\n        });\n    }\n    transformDefaultValue(node, queryId) {\n        return requireAllProps({\n            kind: 'DefaultValueNode',\n            defaultValue: this.transformNode(node.defaultValue, queryId),\n        });\n    }\n    transformOn(node, queryId) {\n        return requireAllProps({\n            kind: 'OnNode',\n            on: this.transformNode(node.on, queryId),\n        });\n    }\n    transformSelectModifier(node, queryId) {\n        return requireAllProps({\n            kind: 'SelectModifierNode',\n            modifier: node.modifier,\n            rawModifier: this.transformNode(node.rawModifier, queryId),\n            of: this.transformNodeList(node.of, queryId),\n        });\n    }\n    transformCreateType(node, queryId) {\n        return requireAllProps({\n            kind: 'CreateTypeNode',\n            name: this.transformNode(node.name, queryId),\n            enum: this.transformNode(node.enum, queryId),\n        });\n    }\n    transformDropType(node, queryId) {\n        return requireAllProps({\n            kind: 'DropTypeNode',\n            name: this.transformNode(node.name, queryId),\n            ifExists: node.ifExists,\n        });\n    }\n    transformExplain(node, queryId) {\n        return requireAllProps({\n            kind: 'ExplainNode',\n            format: node.format,\n            options: this.transformNode(node.options, queryId),\n        });\n    }\n    transformSchemableIdentifier(node, queryId) {\n        return requireAllProps({\n            kind: 'SchemableIdentifierNode',\n            schema: this.transformNode(node.schema, queryId),\n            identifier: this.transformNode(node.identifier, queryId),\n        });\n    }\n    transformAggregateFunction(node, queryId) {\n        return requireAllProps({\n            kind: 'AggregateFunctionNode',\n            func: node.func,\n            aggregated: this.transformNodeList(node.aggregated, queryId),\n            distinct: node.distinct,\n            orderBy: this.transformNode(node.orderBy, queryId),\n            withinGroup: this.transformNode(node.withinGroup, queryId),\n            filter: this.transformNode(node.filter, queryId),\n            over: this.transformNode(node.over, queryId),\n        });\n    }\n    transformOver(node, queryId) {\n        return requireAllProps({\n            kind: 'OverNode',\n            orderBy: this.transformNode(node.orderBy, queryId),\n            partitionBy: this.transformNode(node.partitionBy, queryId),\n        });\n    }\n    transformPartitionBy(node, queryId) {\n        return requireAllProps({\n            kind: 'PartitionByNode',\n            items: this.transformNodeList(node.items, queryId),\n        });\n    }\n    transformPartitionByItem(node, queryId) {\n        return requireAllProps({\n            kind: 'PartitionByItemNode',\n            partitionBy: this.transformNode(node.partitionBy, queryId),\n        });\n    }\n    transformBinaryOperation(node, queryId) {\n        return requireAllProps({\n            kind: 'BinaryOperationNode',\n            leftOperand: this.transformNode(node.leftOperand, queryId),\n            operator: this.transformNode(node.operator, queryId),\n            rightOperand: this.transformNode(node.rightOperand, queryId),\n        });\n    }\n    transformUnaryOperation(node, queryId) {\n        return requireAllProps({\n            kind: 'UnaryOperationNode',\n            operator: this.transformNode(node.operator, queryId),\n            operand: this.transformNode(node.operand, queryId),\n        });\n    }\n    transformUsing(node, queryId) {\n        return requireAllProps({\n            kind: 'UsingNode',\n            tables: this.transformNodeList(node.tables, queryId),\n        });\n    }\n    transformFunction(node, queryId) {\n        return requireAllProps({\n            kind: 'FunctionNode',\n            func: node.func,\n            arguments: this.transformNodeList(node.arguments, queryId),\n        });\n    }\n    transformCase(node, queryId) {\n        return requireAllProps({\n            kind: 'CaseNode',\n            value: this.transformNode(node.value, queryId),\n            when: this.transformNodeList(node.when, queryId),\n            else: this.transformNode(node.else, queryId),\n            isStatement: node.isStatement,\n        });\n    }\n    transformWhen(node, queryId) {\n        return requireAllProps({\n            kind: 'WhenNode',\n            condition: this.transformNode(node.condition, queryId),\n            result: this.transformNode(node.result, queryId),\n        });\n    }\n    transformJSONReference(node, queryId) {\n        return requireAllProps({\n            kind: 'JSONReferenceNode',\n            reference: this.transformNode(node.reference, queryId),\n            traversal: this.transformNode(node.traversal, queryId),\n        });\n    }\n    transformJSONPath(node, queryId) {\n        return requireAllProps({\n            kind: 'JSONPathNode',\n            inOperator: this.transformNode(node.inOperator, queryId),\n            pathLegs: this.transformNodeList(node.pathLegs, queryId),\n        });\n    }\n    transformJSONPathLeg(node, _queryId) {\n        return requireAllProps({\n            kind: 'JSONPathLegNode',\n            type: node.type,\n            value: node.value,\n        });\n    }\n    transformJSONOperatorChain(node, queryId) {\n        return requireAllProps({\n            kind: 'JSONOperatorChainNode',\n            operator: this.transformNode(node.operator, queryId),\n            values: this.transformNodeList(node.values, queryId),\n        });\n    }\n    transformTuple(node, queryId) {\n        return requireAllProps({\n            kind: 'TupleNode',\n            values: this.transformNodeList(node.values, queryId),\n        });\n    }\n    transformMergeQuery(node, queryId) {\n        return requireAllProps({\n            kind: 'MergeQueryNode',\n            into: this.transformNode(node.into, queryId),\n            using: this.transformNode(node.using, queryId),\n            whens: this.transformNodeList(node.whens, queryId),\n            with: this.transformNode(node.with, queryId),\n            top: this.transformNode(node.top, queryId),\n            endModifiers: this.transformNodeList(node.endModifiers, queryId),\n            output: this.transformNode(node.output, queryId),\n            returning: this.transformNode(node.returning, queryId),\n        });\n    }\n    transformMatched(node, _queryId) {\n        return requireAllProps({\n            kind: 'MatchedNode',\n            not: node.not,\n            bySource: node.bySource,\n        });\n    }\n    transformAddIndex(node, queryId) {\n        return requireAllProps({\n            kind: 'AddIndexNode',\n            name: this.transformNode(node.name, queryId),\n            columns: this.transformNodeList(node.columns, queryId),\n            unique: node.unique,\n            using: this.transformNode(node.using, queryId),\n            ifNotExists: node.ifNotExists,\n        });\n    }\n    transformCast(node, queryId) {\n        return requireAllProps({\n            kind: 'CastNode',\n            expression: this.transformNode(node.expression, queryId),\n            dataType: this.transformNode(node.dataType, queryId),\n        });\n    }\n    transformFetch(node, queryId) {\n        return requireAllProps({\n            kind: 'FetchNode',\n            rowCount: this.transformNode(node.rowCount, queryId),\n            modifier: node.modifier,\n        });\n    }\n    transformTop(node, _queryId) {\n        return requireAllProps({\n            kind: 'TopNode',\n            expression: node.expression,\n            modifiers: node.modifiers,\n        });\n    }\n    transformOutput(node, queryId) {\n        return requireAllProps({\n            kind: 'OutputNode',\n            selections: this.transformNodeList(node.selections, queryId),\n        });\n    }\n    transformDataType(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformSelectAll(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformIdentifier(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformValue(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformPrimitiveValueList(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformOperator(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformDefaultInsertValue(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformOrAction(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n    transformCollate(node, _queryId) {\n        // An Object.freezed leaf node. No need to clone.\n        return node;\n    }\n}\n", "/// <reference types=\"./with-schema-transformer.d.ts\" />\nimport { AliasNode } from '../../operation-node/alias-node.js';\nimport { IdentifierNode } from '../../operation-node/identifier-node.js';\nimport { ListNode } from '../../operation-node/list-node.js';\nimport { OperationNodeTransformer } from '../../operation-node/operation-node-transformer.js';\nimport { SchemableIdentifierNode } from '../../operation-node/schemable-identifier-node.js';\nimport { TableNode } from '../../operation-node/table-node.js';\nimport { freeze } from '../../util/object-utils.js';\n// This object exist only so that we get a type error when a new RootOperationNode\n// is added. If you get a type error here, make sure to add the new root node and\n// handle it correctly in the transformer.\n//\n// DO NOT REFACTOR THIS EVEN IF IT SEEMS USELESS TO YOU!\nconst ROOT_OPERATION_NODES = freeze({\n    AlterTableNode: true,\n    CreateIndexNode: true,\n    CreateSchemaNode: true,\n    CreateTableNode: true,\n    CreateTypeNode: true,\n    CreateViewNode: true,\n    RefreshMaterializedViewNode: true,\n    DeleteQueryNode: true,\n    DropIndexNode: true,\n    DropSchemaNode: true,\n    DropTableNode: true,\n    DropTypeNode: true,\n    DropViewNode: true,\n    InsertQueryNode: true,\n    RawNode: true,\n    SelectQueryNode: true,\n    UpdateQueryNode: true,\n    MergeQueryNode: true,\n});\nconst SCHEMALESS_FUNCTIONS = {\n    json_agg: true,\n    to_json: true,\n};\nexport class WithSchemaTransformer extends OperationNodeTransformer {\n    #schema;\n    #schemableIds = new Set();\n    #ctes = new Set();\n    constructor(schema) {\n        super();\n        this.#schema = schema;\n    }\n    transformNodeImpl(node, queryId) {\n        if (!this.#isRootOperationNode(node)) {\n            return super.transformNodeImpl(node, queryId);\n        }\n        const ctes = this.#collectCTEs(node);\n        for (const cte of ctes) {\n            this.#ctes.add(cte);\n        }\n        const tables = this.#collectSchemableIds(node);\n        for (const table of tables) {\n            this.#schemableIds.add(table);\n        }\n        const transformed = super.transformNodeImpl(node, queryId);\n        for (const table of tables) {\n            this.#schemableIds.delete(table);\n        }\n        for (const cte of ctes) {\n            this.#ctes.delete(cte);\n        }\n        return transformed;\n    }\n    transformSchemableIdentifier(node, queryId) {\n        const transformed = super.transformSchemableIdentifier(node, queryId);\n        if (transformed.schema || !this.#schemableIds.has(node.identifier.name)) {\n            return transformed;\n        }\n        return {\n            ...transformed,\n            schema: IdentifierNode.create(this.#schema),\n        };\n    }\n    transformReferences(node, queryId) {\n        const transformed = super.transformReferences(node, queryId);\n        if (transformed.table.table.schema) {\n            return transformed;\n        }\n        return {\n            ...transformed,\n            table: TableNode.createWithSchema(this.#schema, transformed.table.table.identifier.name),\n        };\n    }\n    transformAggregateFunction(node, queryId) {\n        return {\n            ...super.transformAggregateFunction({ ...node, aggregated: [] }, queryId),\n            aggregated: this.#transformTableArgsWithoutSchemas(node, queryId, 'aggregated'),\n        };\n    }\n    transformFunction(node, queryId) {\n        return {\n            ...super.transformFunction({ ...node, arguments: [] }, queryId),\n            arguments: this.#transformTableArgsWithoutSchemas(node, queryId, 'arguments'),\n        };\n    }\n    #transformTableArgsWithoutSchemas(node, queryId, argsKey) {\n        return SCHEMALESS_FUNCTIONS[node.func]\n            ? node[argsKey].map((arg) => !TableNode.is(arg) || arg.table.schema\n                ? this.transformNode(arg, queryId)\n                : {\n                    ...arg,\n                    table: this.transformIdentifier(arg.table.identifier, queryId),\n                })\n            : this.transformNodeList(node[argsKey], queryId);\n    }\n    #isRootOperationNode(node) {\n        return node.kind in ROOT_OPERATION_NODES;\n    }\n    #collectSchemableIds(node) {\n        const schemableIds = new Set();\n        if ('name' in node && node.name && SchemableIdentifierNode.is(node.name)) {\n            this.#collectSchemableId(node.name, schemableIds);\n        }\n        if ('from' in node && node.from) {\n            for (const from of node.from.froms) {\n                this.#collectSchemableIdsFromTableExpr(from, schemableIds);\n            }\n        }\n        if ('into' in node && node.into) {\n            this.#collectSchemableIdsFromTableExpr(node.into, schemableIds);\n        }\n        if ('table' in node && node.table) {\n            this.#collectSchemableIdsFromTableExpr(node.table, schemableIds);\n        }\n        if ('joins' in node && node.joins) {\n            for (const join of node.joins) {\n                this.#collectSchemableIdsFromTableExpr(join.table, schemableIds);\n            }\n        }\n        if ('using' in node && node.using) {\n            this.#collectSchemableIdsFromTableExpr(node.using, schemableIds);\n        }\n        return schemableIds;\n    }\n    #collectCTEs(node) {\n        const ctes = new Set();\n        if ('with' in node && node.with) {\n            this.#collectCTEIds(node.with, ctes);\n        }\n        return ctes;\n    }\n    #collectSchemableIdsFromTableExpr(node, schemableIds) {\n        if (TableNode.is(node)) {\n            this.#collectSchemableId(node.table, schemableIds);\n        }\n        else if (AliasNode.is(node) && TableNode.is(node.node)) {\n            this.#collectSchemableId(node.node.table, schemableIds);\n        }\n        else if (ListNode.is(node)) {\n            for (const table of node.items) {\n                this.#collectSchemableIdsFromTableExpr(table, schemableIds);\n            }\n        }\n    }\n    #collectSchemableId(node, schemableIds) {\n        const id = node.identifier.name;\n        if (!this.#schemableIds.has(id) && !this.#ctes.has(id)) {\n            schemableIds.add(id);\n        }\n    }\n    #collectCTEIds(node, ctes) {\n        for (const expr of node.expressions) {\n            const cteId = expr.name.table.table.identifier.name;\n            if (!this.#ctes.has(cteId)) {\n                ctes.add(cteId);\n            }\n        }\n    }\n}\n", "/// <reference types=\"./with-schema-plugin.d.ts\" />\nimport { WithSchemaTransformer } from './with-schema-transformer.js';\nexport class WithSchemaPlugin {\n    #transformer;\n    constructor(schema) {\n        this.#transformer = new WithSchemaTransformer(schema);\n    }\n    transformQuery(args) {\n        return this.#transformer.transformNode(args.node, args.queryId);\n    }\n    async transformResult(args) {\n        return args.result;\n    }\n}\n", "/// <reference types=\"./matched-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const MatchedNode = freeze({\n    is(node) {\n        return node.kind === 'MatchedNode';\n    },\n    create(not, bySource = false) {\n        return freeze({\n            kind: 'MatchedNode',\n            not,\n            bySource,\n        });\n    },\n});\n", "/// <reference types=\"./merge-parser.d.ts\" />\nimport { MatchedNode } from '../operation-node/matched-node.js';\nimport { isOperationNodeSource, } from '../operation-node/operation-node-source.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { WhenNode } from '../operation-node/when-node.js';\nimport { isString } from '../util/object-utils.js';\nimport { parseFilterList, parseReferentialBinaryOperation, parseValueBinaryOperationOrExpression, } from './binary-operation-parser.js';\nexport function parseMergeWhen(type, args, refRight) {\n    return WhenNode.create(parseFilterList([\n        MatchedNode.create(!type.isMatched, type.bySource),\n        ...(args && args.length > 0\n            ? [\n                args.length === 3 && refRight\n                    ? parseReferentialBinaryOperation(args[0], args[1], args[2])\n                    : parseValueBinaryOperationOrExpression(args),\n            ]\n            : []),\n    ], 'and', false));\n}\nexport function parseMergeThen(result) {\n    if (isString(result)) {\n        return RawNode.create([result], []);\n    }\n    if (isOperationNodeSource(result)) {\n        return result.toOperationNode();\n    }\n    return result;\n}\n", "/// <reference types=\"./deferred.d.ts\" />\nexport class Deferred {\n    #promise;\n    #resolve;\n    #reject;\n    constructor() {\n        this.#promise = new Promise((resolve, reject) => {\n            this.#reject = reject;\n            this.#resolve = resolve;\n        });\n    }\n    get promise() {\n        return this.#promise;\n    }\n    resolve = (value) => {\n        if (this.#resolve) {\n            this.#resolve(value);\n        }\n    };\n    reject = (reason) => {\n        if (this.#reject) {\n            this.#reject(reason);\n        }\n    };\n}\n", "/// <reference types=\"./provide-controlled-connection.d.ts\" />\nimport { Deferred } from './deferred.js';\nimport { freeze } from './object-utils.js';\nexport async function provideControlledConnection(connectionProvider) {\n    const connectionDefer = new Deferred();\n    const connectionReleaseDefer = new Deferred();\n    connectionProvider\n        .provideConnection(async (connection) => {\n        connectionDefer.resolve(connection);\n        return await connectionReleaseDefer.promise;\n    })\n        .catch((ex) => connectionDefer.reject(ex));\n    // Create composite of the connection and the release method instead of\n    // modifying the connection or creating a new nesting `DatabaseConnection`.\n    // This way we don't accidentally override any methods of 3rd party\n    // connections and don't return wrapped connections to drivers that\n    // expect a certain specific connection class.\n    return freeze({\n        connection: await connectionDefer.promise,\n        release: connectionReleaseDefer.resolve,\n    });\n}\n", "/// <reference types=\"./query-executor-base.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { provideControlledConnection } from '../util/provide-controlled-connection.js';\nimport { logOnce } from '../util/log-once.js';\nconst NO_PLUGINS = freeze([]);\nexport class QueryExecutorBase {\n    #plugins;\n    constructor(plugins = NO_PLUGINS) {\n        this.#plugins = plugins;\n    }\n    get plugins() {\n        return this.#plugins;\n    }\n    transformQuery(node, queryId) {\n        for (const plugin of this.#plugins) {\n            const transformedNode = plugin.transformQuery({ node, queryId });\n            // We need to do a runtime check here. There is no good way\n            // to write types that enforce this constraint.\n            if (transformedNode.kind === node.kind) {\n                node = transformedNode;\n            }\n            else {\n                throw new Error([\n                    `KyselyPlugin.transformQuery must return a node`,\n                    `of the same kind that was given to it.`,\n                    `The plugin was given a ${node.kind}`,\n                    `but it returned a ${transformedNode.kind}`,\n                ].join(' '));\n            }\n        }\n        return node;\n    }\n    async executeQuery(compiledQuery, queryId) {\n        return await this.provideConnection(async (connection) => {\n            const result = await connection.executeQuery(compiledQuery);\n            if ('numUpdatedOrDeletedRows' in result) {\n                logOnce('kysely:warning: outdated driver/plugin detected! `QueryResult.numUpdatedOrDeletedRows` has been replaced with `QueryResult.numAffectedRows`.');\n            }\n            return await this.#transformResult(result, queryId);\n        });\n    }\n    async *stream(compiledQuery, chunkSize, queryId) {\n        const { connection, release } = await provideControlledConnection(this);\n        try {\n            for await (const result of connection.streamQuery(compiledQuery, chunkSize)) {\n                yield await this.#transformResult(result, queryId);\n            }\n        }\n        finally {\n            release();\n        }\n    }\n    async #transformResult(result, queryId) {\n        for (const plugin of this.#plugins) {\n            result = await plugin.transformResult({ result, queryId });\n        }\n        return result;\n    }\n}\n", "/// <reference types=\"./noop-query-executor.d.ts\" />\nimport { QueryExecutorBase } from './query-executor-base.js';\n/**\n * A {@link QueryExecutor} subclass that can be used when you don't\n * have a {@link QueryCompiler}, {@link ConnectionProvider} or any\n * other needed things to actually execute queries.\n */\nexport class NoopQueryExecutor extends QueryExecutorBase {\n    get adapter() {\n        throw new Error('this query cannot be compiled to SQL');\n    }\n    compileQuery() {\n        throw new Error('this query cannot be compiled to SQL');\n    }\n    provideConnection() {\n        throw new Error('this query cannot be executed');\n    }\n    withConnectionProvider() {\n        throw new Error('this query cannot have a connection provider');\n    }\n    withPlugin(plugin) {\n        return new NoopQueryExecutor([...this.plugins, plugin]);\n    }\n    withPlugins(plugins) {\n        return new NoopQueryExecutor([...this.plugins, ...plugins]);\n    }\n    withPluginAtFront(plugin) {\n        return new NoopQueryExecutor([plugin, ...this.plugins]);\n    }\n    withoutPlugins() {\n        return new NoopQueryExecutor([]);\n    }\n}\nexport const NOOP_QUERY_EXECUTOR = new NoopQueryExecutor();\n", "/// <reference types=\"./merge-result.d.ts\" />\nexport class MergeResult {\n    numChangedRows;\n    constructor(numChangedRows) {\n        this.numChangedRows = numChangedRows;\n    }\n}\n", "/// <reference types=\"./merge-query-builder.d.ts\" />\nimport { InsertQueryNode } from '../operation-node/insert-query-node.js';\nimport { MergeQueryNode } from '../operation-node/merge-query-node.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { UpdateQueryNode } from '../operation-node/update-query-node.js';\nimport { parseInsertExpression, } from '../parser/insert-values-parser.js';\nimport { parseJoin, } from '../parser/join-parser.js';\nimport { parseMergeThen, parseMergeWhen } from '../parser/merge-parser.js';\nimport { parseSelectAll, parseSelectArg, } from '../parser/select-parser.js';\nimport { parseTop } from '../parser/top-parser.js';\nimport { NOOP_QUERY_EXECUTOR } from '../query-executor/noop-query-executor.js';\nimport { freeze } from '../util/object-utils.js';\nimport { MergeResult } from './merge-result.js';\nimport { NoResultError, isNoResultErrorConstructor, } from './no-result-error.js';\nimport { UpdateQueryBuilder } from './update-query-builder.js';\nexport class MergeQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db\n     *   .mergeInto('person')\n     *   .using('pet', 'pet.owner_id', 'person.id')\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .modifyEnd(sql.raw('-- this is a comment'))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\" using \"pet\" on \"pet\".\"owner_id\" = \"person\".\"id\" when matched then delete -- this is a comment\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new MergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * Changes a `merge into` query to an `merge top into` query.\n     *\n     * `top` clause is only supported by some dialects like MS SQL Server.\n     *\n     * ### Examples\n     *\n     * Affect 5 matched rows at most:\n     *\n     * ```ts\n     * await db.mergeInto('person')\n     *   .top(5)\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * merge top(5) into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when matched then\n     *   delete\n     * ```\n     *\n     * Affect 50% of matched rows:\n     *\n     * ```ts\n     * await db.mergeInto('person')\n     *   .top(50, 'percent')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MS SQL Server):\n     *\n     * ```sql\n     * merge top(50) percent into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when matched then\n     *   delete\n     * ```\n     */\n    top(expression, modifiers) {\n        return new MergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithTop(this.#props.queryNode, parseTop(expression, modifiers)),\n        });\n    }\n    using(...args) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithUsing(this.#props.queryNode, parseJoin('Using', args)),\n        });\n    }\n    returning(args) {\n        return new MergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    returningAll(table) {\n        return new MergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    output(args) {\n        return new MergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    outputAll(table) {\n        return new MergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n}\nexport class WheneableMergeQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db\n     *   .mergeInto('person')\n     *   .using('pet', 'pet.owner_id', 'person.id')\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .modifyEnd(sql.raw('-- this is a comment'))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\" using \"pet\" on \"pet\".\"owner_id\" = \"person\".\"id\" when matched then delete -- this is a comment\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * See {@link MergeQueryBuilder.top}.\n     */\n    top(expression, modifiers) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithTop(this.#props.queryNode, parseTop(expression, modifiers)),\n        });\n    }\n    /**\n     * Adds a simple `when matched` clause to the query.\n     *\n     * For a `when matched` clause with an `and` condition, see {@link whenMatchedAnd}.\n     *\n     * For a simple `when not matched` clause, see {@link whenNotMatched}.\n     *\n     * For a `when not matched` clause with an `and` condition, see {@link whenNotMatchedAnd}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db.mergeInto('person')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when matched then\n     *   delete\n     * ```\n     */\n    whenMatched() {\n        return this.#whenMatched([]);\n    }\n    whenMatchedAnd(...args) {\n        return this.#whenMatched(args);\n    }\n    /**\n     * Adds the `when matched` clause to the query with an `and` condition. But unlike\n     * {@link whenMatchedAnd}, this method accepts a column reference as the 3rd argument.\n     *\n     * This method is similar to {@link SelectQueryBuilder.whereRef}, so see the documentation\n     * for that method for more examples.\n     */\n    whenMatchedAndRef(lhs, op, rhs) {\n        return this.#whenMatched([lhs, op, rhs], true);\n    }\n    #whenMatched(args, refRight) {\n        return new MatchedThenableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithWhen(this.#props.queryNode, parseMergeWhen({ isMatched: true }, args, refRight)),\n        });\n    }\n    /**\n     * Adds a simple `when not matched` clause to the query.\n     *\n     * For a `when not matched` clause with an `and` condition, see {@link whenNotMatchedAnd}.\n     *\n     * For a simple `when matched` clause, see {@link whenMatched}.\n     *\n     * For a `when matched` clause with an `and` condition, see {@link whenMatchedAnd}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db.mergeInto('person')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenNotMatched()\n     *   .thenInsertValues({\n     *     first_name: 'John',\n     *     last_name: 'Doe',\n     *   })\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when not matched then\n     *   insert (\"first_name\", \"last_name\") values ($1, $2)\n     * ```\n     */\n    whenNotMatched() {\n        return this.#whenNotMatched([]);\n    }\n    whenNotMatchedAnd(...args) {\n        return this.#whenNotMatched(args);\n    }\n    /**\n     * Adds the `when not matched` clause to the query with an `and` condition. But unlike\n     * {@link whenNotMatchedAnd}, this method accepts a column reference as the 3rd argument.\n     *\n     * Unlike {@link whenMatchedAndRef}, you cannot reference columns from the target table.\n     *\n     * This method is similar to {@link SelectQueryBuilder.whereRef}, so see the documentation\n     * for that method for more examples.\n     */\n    whenNotMatchedAndRef(lhs, op, rhs) {\n        return this.#whenNotMatched([lhs, op, rhs], true);\n    }\n    /**\n     * Adds a simple `when not matched by source` clause to the query.\n     *\n     * Supported in MS SQL Server.\n     *\n     * Similar to {@link whenNotMatched}, but returns a {@link MatchedThenableMergeQueryBuilder}.\n     */\n    whenNotMatchedBySource() {\n        return this.#whenNotMatched([], false, true);\n    }\n    whenNotMatchedBySourceAnd(...args) {\n        return this.#whenNotMatched(args, false, true);\n    }\n    /**\n     * Adds the `when not matched by source` clause to the query with an `and` condition.\n     *\n     * Similar to {@link whenNotMatchedAndRef}, but you can reference columns from\n     * the target table, and not from source table and returns a {@link MatchedThenableMergeQueryBuilder}.\n     */\n    whenNotMatchedBySourceAndRef(lhs, op, rhs) {\n        return this.#whenNotMatched([lhs, op, rhs], true, true);\n    }\n    returning(args) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    returningAll(table) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithReturning(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    output(args) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectArg(args)),\n        });\n    }\n    outputAll(table) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOutput(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    #whenNotMatched(args, refRight = false, bySource = false) {\n        const props = {\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithWhen(this.#props.queryNode, parseMergeWhen({ isMatched: false, bySource }, args, refRight)),\n        };\n        const Builder = bySource\n            ? MatchedThenableMergeQueryBuilder\n            : NotMatchedThenableMergeQueryBuilder;\n        return new Builder(props);\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     *\n     * If you want to conditionally call a method on `this`, see\n     * the {@link $if} method.\n     *\n     * ### Examples\n     *\n     * The next example uses a helper function `log` to log a query:\n     *\n     * ```ts\n     * import type { Compilable } from 'kysely'\n     *\n     * function log<T extends Compilable>(qb: T): T {\n     *   console.log(qb.compile())\n     *   return qb\n     * }\n     *\n     * await db.updateTable('person')\n     *   .set({ first_name: 'John' })\n     *   .$call(log)\n     *   .execute()\n     * ```\n     */\n    $call(func) {\n        return func(this);\n    }\n    /**\n     * Call `func(this)` if `condition` is true.\n     *\n     * This method is especially handy with optional selects. Any `returning` or `returningAll`\n     * method calls add columns as optional fields to the output type when called inside\n     * the `func` callback. This is because we can't know if those selections were actually\n     * made before running the code.\n     *\n     * You can also call any other methods inside the callback.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { PersonUpdate } from 'type-editor' // imaginary module\n     *\n     * async function updatePerson(id: number, updates: PersonUpdate, returnLastName: boolean) {\n     *   return await db\n     *     .updateTable('person')\n     *     .set(updates)\n     *     .where('id', '=', id)\n     *     .returning(['id', 'first_name'])\n     *     .$if(returnLastName, (qb) => qb.returning('last_name'))\n     *     .executeTakeFirstOrThrow()\n     * }\n     * ```\n     *\n     * Any selections added inside the `if` callback will be added as optional fields to the\n     * output type since we can't know if the selections were actually made before running\n     * the code. In the example above the return type of the `updatePerson` function is:\n     *\n     * ```ts\n     * Promise<{\n     *   id: number\n     *   first_name: string\n     *   last_name?: string\n     * }>\n     * ```\n     */\n    $if(condition, func) {\n        if (condition) {\n            return func(this);\n        }\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n        });\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    /**\n     * Executes the query and returns an array of rows.\n     *\n     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.\n     */\n    async execute() {\n        const compiledQuery = this.compile();\n        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);\n        const { adapter } = this.#props.executor;\n        const query = compiledQuery.query;\n        if ((query.returning && adapter.supportsReturning) ||\n            (query.output && adapter.supportsOutput)) {\n            return result.rows;\n        }\n        return [new MergeResult(result.numAffectedRows)];\n    }\n    /**\n     * Executes the query and returns the first result or undefined if\n     * the query returned no result.\n     */\n    async executeTakeFirst() {\n        const [result] = await this.execute();\n        return result;\n    }\n    /**\n     * Executes the query and returns the first result or throws if\n     * the query returned no result.\n     *\n     * By default an instance of {@link NoResultError} is thrown, but you can\n     * provide a custom error class, or callback as the only argument to throw a different\n     * error.\n     */\n    async executeTakeFirstOrThrow(errorConstructor = NoResultError) {\n        const result = await this.executeTakeFirst();\n        if (result === undefined) {\n            const error = isNoResultErrorConstructor(errorConstructor)\n                ? new errorConstructor(this.toOperationNode())\n                : errorConstructor(this.toOperationNode());\n            throw error;\n        }\n        return result;\n    }\n}\nexport class MatchedThenableMergeQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Performs the `delete` action.\n     *\n     * To perform the `do nothing` action, see {@link thenDoNothing}.\n     *\n     * To perform the `update` action, see {@link thenUpdate} or {@link thenUpdateSet}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db.mergeInto('person')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when matched then\n     *   delete\n     * ```\n     */\n    thenDelete() {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithThen(this.#props.queryNode, parseMergeThen('delete')),\n        });\n    }\n    /**\n     * Performs the `do nothing` action.\n     *\n     * This is supported in PostgreSQL.\n     *\n     * To perform the `delete` action, see {@link thenDelete}.\n     *\n     * To perform the `update` action, see {@link thenUpdate} or {@link thenUpdateSet}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db.mergeInto('person')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenMatched()\n     *   .thenDoNothing()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when matched then\n     *   do nothing\n     * ```\n     */\n    thenDoNothing() {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithThen(this.#props.queryNode, parseMergeThen('do nothing')),\n        });\n    }\n    /**\n     * Perform an `update` operation with a full-fledged {@link UpdateQueryBuilder}.\n     * This is handy when multiple `set` invocations are needed.\n     *\n     * For a shorthand version of this method, see {@link thenUpdateSet}.\n     *\n     * To perform the `delete` action, see {@link thenDelete}.\n     *\n     * To perform the `do nothing` action, see {@link thenDoNothing}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * const result = await db.mergeInto('person')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenMatched()\n     *   .thenUpdate((ub) => ub\n     *     .set(sql`metadata['has_pets']`, 'Y')\n     *     .set({\n     *       updated_at: new Date().toISOString(),\n     *     })\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when matched then\n     *   update set metadata['has_pets'] = $1, \"updated_at\" = $2\n     * ```\n     */\n    thenUpdate(set) {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithThen(this.#props.queryNode, parseMergeThen(set(new UpdateQueryBuilder({\n                queryId: this.#props.queryId,\n                executor: NOOP_QUERY_EXECUTOR,\n                queryNode: UpdateQueryNode.createWithoutTable(),\n            })))),\n        });\n    }\n    thenUpdateSet(...args) {\n        // @ts-ignore not sure how to type this so it won't complain about set(...args).\n        return this.thenUpdate((ub) => ub.set(...args));\n    }\n}\nexport class NotMatchedThenableMergeQueryBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Performs the `do nothing` action.\n     *\n     * This is supported in PostgreSQL.\n     *\n     * To perform the `insert` action, see {@link thenInsertValues}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db.mergeInto('person')\n     *   .using('pet', 'person.id', 'pet.owner_id')\n     *   .whenNotMatched()\n     *   .thenDoNothing()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\" on \"person\".\"id\" = \"pet\".\"owner_id\"\n     * when not matched then\n     *   do nothing\n     * ```\n     */\n    thenDoNothing() {\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithThen(this.#props.queryNode, parseMergeThen('do nothing')),\n        });\n    }\n    thenInsertValues(insert) {\n        const [columns, values] = parseInsertExpression(insert);\n        return new WheneableMergeQueryBuilder({\n            ...this.#props,\n            queryNode: MergeQueryNode.cloneWithThen(this.#props.queryNode, parseMergeThen(InsertQueryNode.cloneWith(InsertQueryNode.createWithoutInto(), {\n                columns,\n                values,\n            }))),\n        });\n    }\n}\n", "/// <reference types=\"./query-creator.d.ts\" />\nimport { createSelectQueryBuilder, } from './query-builder/select-query-builder.js';\nimport { InsertQueryBuilder } from './query-builder/insert-query-builder.js';\nimport { DeleteQueryBuilder } from './query-builder/delete-query-builder.js';\nimport { UpdateQueryBuilder } from './query-builder/update-query-builder.js';\nimport { DeleteQueryNode } from './operation-node/delete-query-node.js';\nimport { InsertQueryNode } from './operation-node/insert-query-node.js';\nimport { SelectQueryNode } from './operation-node/select-query-node.js';\nimport { UpdateQueryNode } from './operation-node/update-query-node.js';\nimport { parseTable, parseTableExpressionOrList, parseAliasedTable, } from './parser/table-parser.js';\nimport { parseCommonTableExpression, } from './parser/with-parser.js';\nimport { WithNode } from './operation-node/with-node.js';\nimport { createQueryId } from './util/query-id.js';\nimport { WithSchemaPlugin } from './plugin/with-schema/with-schema-plugin.js';\nimport { freeze } from './util/object-utils.js';\nimport { parseSelectArg, } from './parser/select-parser.js';\nimport { MergeQueryBuilder } from './query-builder/merge-query-builder.js';\nimport { MergeQueryNode } from './operation-node/merge-query-node.js';\nexport class QueryCreator {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Creates a `select` query builder for the given table or tables.\n     *\n     * The tables passed to this method are built as the query's `from` clause.\n     *\n     * ### Examples\n     *\n     * Create a select query for one table:\n     *\n     * ```ts\n     * db.selectFrom('person').selectAll()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select * from \"person\"\n     * ```\n     *\n     * Create a select query for one table with an alias:\n     *\n     * ```ts\n     * const persons = await db.selectFrom('person as p')\n     *   .select(['p.id', 'first_name'])\n     *   .execute()\n     *\n     * console.log(persons[0].id)\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"p\".\"id\", \"first_name\" from \"person\" as \"p\"\n     * ```\n     *\n     * Create a select query from a subquery:\n     *\n     * ```ts\n     * const persons = await db.selectFrom(\n     *     (eb) => eb.selectFrom('person').select('person.id as identifier').as('p')\n     *   )\n     *   .select('p.identifier')\n     *   .execute()\n     *\n     * console.log(persons[0].identifier)\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"p\".\"identifier\",\n     * from (\n     *   select \"person\".\"id\" as \"identifier\" from \"person\"\n     * ) as p\n     * ```\n     *\n     * Create a select query from raw sql:\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * const items = await db\n     *   .selectFrom(sql<{ one: number }>`(select 1 as one)`.as('q'))\n     *   .select('q.one')\n     *   .execute()\n     *\n     * console.log(items[0].one)\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"q\".\"one\",\n     * from (\n     *   select 1 as one\n     * ) as q\n     * ```\n     *\n     * When you use the `sql` tag you need to also provide the result type of the\n     * raw snippet / query so that Kysely can figure out what columns are\n     * available for the rest of the query.\n     *\n     * The `selectFrom` method also accepts an array for multiple tables. All\n     * the above examples can also be used in an array.\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * const items = await db.selectFrom([\n     *     'person as p',\n     *     db.selectFrom('pet').select('pet.species').as('a'),\n     *     sql<{ one: number }>`(select 1 as one)`.as('q')\n     *   ])\n     *   .select(['p.id', 'a.species', 'q.one'])\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"p\".id, \"a\".\"species\", \"q\".\"one\"\n     * from\n     *   \"person\" as \"p\",\n     *   (select \"pet\".\"species\" from \"pet\") as a,\n     *   (select 1 as one) as \"q\"\n     * ```\n     */\n    selectFrom(from) {\n        return createSelectQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: SelectQueryNode.createFrom(parseTableExpressionOrList(from), this.#props.withNode),\n        });\n    }\n    selectNoFrom(selection) {\n        return createSelectQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: SelectQueryNode.cloneWithSelections(SelectQueryNode.create(this.#props.withNode), parseSelectArg(selection)),\n        });\n    }\n    /**\n     * Creates an insert query.\n     *\n     * The return value of this query is an instance of {@link InsertResult}. {@link InsertResult}\n     * has the {@link InsertResult.insertId | insertId} field that holds the auto incremented id of\n     * the inserted row if the db returned one.\n     *\n     * See the {@link InsertQueryBuilder.values | values} method for more info and examples. Also see\n     * the {@link ReturningInterface.returning | returning} method for a way to return columns\n     * on supported databases like PostgreSQL.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db\n     *   .insertInto('person')\n     *   .values({\n     *     first_name: 'Jennifer',\n     *     last_name: 'Aniston'\n     *   })\n     *   .executeTakeFirst()\n     *\n     * console.log(result.insertId)\n     * ```\n     *\n     * Some databases like PostgreSQL support the `returning` method:\n     *\n     * ```ts\n     * const { id } = await db\n     *   .insertInto('person')\n     *   .values({\n     *     first_name: 'Jennifer',\n     *     last_name: 'Aniston'\n     *   })\n     *   .returning('id')\n     *   .executeTakeFirstOrThrow()\n     * ```\n     */\n    insertInto(table) {\n        return new InsertQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: InsertQueryNode.create(parseTable(table), this.#props.withNode),\n        });\n    }\n    /**\n     * Creates a \"replace into\" query.\n     *\n     * This is only supported by some dialects like MySQL or SQLite.\n     *\n     * Similar to MySQL's {@link InsertQueryBuilder.onDuplicateKeyUpdate} that deletes\n     * and inserts values on collision instead of updating existing rows.\n     *\n     * An alias of SQLite's {@link InsertQueryBuilder.orReplace}.\n     *\n     * The return value of this query is an instance of {@link InsertResult}. {@link InsertResult}\n     * has the {@link InsertResult.insertId | insertId} field that holds the auto incremented id of\n     * the inserted row if the db returned one.\n     *\n     * See the {@link InsertQueryBuilder.values | values} method for more info and examples.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db\n     *   .replaceInto('person')\n     *   .values({\n     *     first_name: 'Jennifer',\n     *     last_name: 'Aniston'\n     *   })\n     *   .executeTakeFirstOrThrow()\n     *\n     * console.log(result.insertId)\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * replace into `person` (`first_name`, `last_name`) values (?, ?)\n     * ```\n     */\n    replaceInto(table) {\n        return new InsertQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: InsertQueryNode.create(parseTable(table), this.#props.withNode, true),\n        });\n    }\n    /**\n     * Creates a delete query.\n     *\n     * See the {@link DeleteQueryBuilder.where} method for examples on how to specify\n     * a where clause for the delete operation.\n     *\n     * The return value of the query is an instance of {@link DeleteResult}.\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"delete\", \"Single row\", 10) -->\n     *\n     * Delete a single row:\n     *\n     * ```ts\n     * const result = await db\n     *   .deleteFrom('person')\n     *   .where('person.id', '=', 1)\n     *   .executeTakeFirst()\n     *\n     * console.log(result.numDeletedRows)\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * delete from \"person\" where \"person\".\"id\" = $1\n     * ```\n     *\n     * Some databases such as MySQL support deleting from multiple tables:\n     *\n     * ```ts\n     * const result = await db\n     *   .deleteFrom(['person', 'pet'])\n     *   .using('person')\n     *   .innerJoin('pet', 'pet.owner_id', 'person.id')\n     *   .where('person.id', '=', 1)\n     *   .executeTakeFirst()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * delete from `person`, `pet`\n     * using `person`\n     * inner join `pet` on `pet`.`owner_id` = `person`.`id`\n     * where `person`.`id` = ?\n     * ```\n     */\n    deleteFrom(from) {\n        return new DeleteQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: DeleteQueryNode.create(parseTableExpressionOrList(from), this.#props.withNode),\n        });\n    }\n    /**\n     * Creates an update query.\n     *\n     * See the {@link UpdateQueryBuilder.where} method for examples on how to specify\n     * a where clause for the update operation.\n     *\n     * See the {@link UpdateQueryBuilder.set} method for examples on how to\n     * specify the updates.\n     *\n     * The return value of the query is an {@link UpdateResult}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db\n     *   .updateTable('person')\n     *   .set({ first_name: 'Jennifer' })\n     *   .where('person.id', '=', 1)\n     *   .executeTakeFirst()\n     *\n     * console.log(result.numUpdatedRows)\n     * ```\n     */\n    updateTable(tables) {\n        return new UpdateQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: UpdateQueryNode.create(parseTableExpressionOrList(tables), this.#props.withNode),\n        });\n    }\n    /**\n     * Creates a merge query.\n     *\n     * The return value of the query is a {@link MergeResult}.\n     *\n     * See the {@link MergeQueryBuilder.using} method for examples on how to specify\n     * the other table.\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"merge\", \"Source row existence\", 10) -->\n     *\n     * Update a target column based on the existence of a source row:\n     *\n     * ```ts\n     * const result = await db\n     *   .mergeInto('person as target')\n     *   .using('pet as source', 'source.owner_id', 'target.id')\n     *   .whenMatchedAnd('target.has_pets', '!=', 'Y')\n     *   .thenUpdateSet({ has_pets: 'Y' })\n     *   .whenNotMatchedBySourceAnd('target.has_pets', '=', 'Y')\n     *   .thenUpdateSet({ has_pets: 'N' })\n     *   .executeTakeFirstOrThrow()\n     *\n     * console.log(result.numChangedRows)\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"person\"\n     * using \"pet\"\n     * on \"pet\".\"owner_id\" = \"person\".\"id\"\n     * when matched and \"has_pets\" != $1\n     * then update set \"has_pets\" = $2\n     * when not matched by source and \"has_pets\" = $3\n     * then update set \"has_pets\" = $4\n     * ```\n     *\n     * <!-- siteExample(\"merge\", \"Temporary changes table\", 20) -->\n     *\n     * Merge new entries from a temporary changes table:\n     *\n     * ```ts\n     * const result = await db\n     *   .mergeInto('wine as target')\n     *   .using(\n     *     'wine_stock_change as source',\n     *     'source.wine_name',\n     *     'target.name',\n     *   )\n     *   .whenNotMatchedAnd('source.stock_delta', '>', 0)\n     *   .thenInsertValues(({ ref }) => ({\n     *     name: ref('source.wine_name'),\n     *     stock: ref('source.stock_delta'),\n     *   }))\n     *   .whenMatchedAnd(\n     *     (eb) => eb('target.stock', '+', eb.ref('source.stock_delta')),\n     *     '>',\n     *     0,\n     *   )\n     *   .thenUpdateSet('stock', (eb) =>\n     *     eb('target.stock', '+', eb.ref('source.stock_delta')),\n     *   )\n     *   .whenMatched()\n     *   .thenDelete()\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * merge into \"wine\" as \"target\"\n     * using \"wine_stock_change\" as \"source\"\n     * on \"source\".\"wine_name\" = \"target\".\"name\"\n     * when not matched and \"source\".\"stock_delta\" > $1\n     * then insert (\"name\", \"stock\") values (\"source\".\"wine_name\", \"source\".\"stock_delta\")\n     * when matched and \"target\".\"stock\" + \"source\".\"stock_delta\" > $2\n     * then update set \"stock\" = \"target\".\"stock\" + \"source\".\"stock_delta\"\n     * when matched\n     * then delete\n     * ```\n     */\n    mergeInto(targetTable) {\n        return new MergeQueryBuilder({\n            queryId: createQueryId(),\n            executor: this.#props.executor,\n            queryNode: MergeQueryNode.create(parseAliasedTable(targetTable), this.#props.withNode),\n        });\n    }\n    /**\n     * Creates a `with` query (Common Table Expression).\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"cte\", \"Simple selects\", 10) -->\n     *\n     * Common table expressions (CTE) are a great way to modularize complex queries.\n     * Essentially they allow you to run multiple separate queries within a\n     * single roundtrip to the DB.\n     *\n     * Since CTEs are a part of the main query, query optimizers inside DB\n     * engines are able to optimize the overall query. For example, postgres\n     * is able to inline the CTEs inside the using queries if it decides it's\n     * faster.\n     *\n     * ```ts\n     * const result = await db\n     *   // Create a CTE called `jennifers` that selects all\n     *   // persons named 'Jennifer'.\n     *   .with('jennifers', (db) => db\n     *     .selectFrom('person')\n     *     .where('first_name', '=', 'Jennifer')\n     *     .select(['id', 'age'])\n     *   )\n     *   // Select all rows from the `jennifers` CTE and\n     *   // further filter it.\n     *   .with('adult_jennifers', (db) => db\n     *     .selectFrom('jennifers')\n     *     .where('age', '>', 18)\n     *     .select(['id', 'age'])\n     *   )\n     *   // Finally select all adult jennifers that are\n     *   // also younger than 60.\n     *   .selectFrom('adult_jennifers')\n     *   .where('age', '<', 60)\n     *   .selectAll()\n     *   .execute()\n     * ```\n     *\n     * <!-- siteExample(\"cte\", \"Inserts, updates and deletions\", 20) -->\n     *\n     * Some databases like postgres also allow you to run other queries than selects\n     * in CTEs. On these databases CTEs are extremely powerful:\n     *\n     * ```ts\n     * const result = await db\n     *   .with('new_person', (db) => db\n     *     .insertInto('person')\n     *     .values({\n     *       first_name: 'Jennifer',\n     *       age: 35,\n     *     })\n     *     .returning('id')\n     *   )\n     *   .with('new_pet', (db) => db\n     *     .insertInto('pet')\n     *     .values({\n     *       name: 'Doggo',\n     *       species: 'dog',\n     *       is_favorite: true,\n     *       // Use the id of the person we just inserted.\n     *       owner_id: db\n     *         .selectFrom('new_person')\n     *         .select('id')\n     *     })\n     *     .returning('id')\n     *   )\n     *   .selectFrom(['new_person', 'new_pet'])\n     *   .select([\n     *     'new_person.id as person_id',\n     *     'new_pet.id as pet_id'\n     *   ])\n     *   .execute()\n     * ```\n     *\n     * The CTE name can optionally specify column names in addition to\n     * a name. In that case Kysely requires the expression to retun\n     * rows with the same columns.\n     *\n     * ```ts\n     * await db\n     *   .with('jennifers(id, age)', (db) => db\n     *     .selectFrom('person')\n     *     .where('first_name', '=', 'Jennifer')\n     *     // This is ok since we return columns with the same\n     *     // names as specified by `jennifers(id, age)`.\n     *     .select(['id', 'age'])\n     *   )\n     *   .selectFrom('jennifers')\n     *   .selectAll()\n     *   .execute()\n     * ```\n     *\n     * The first argument can also be a callback. The callback is passed\n     * a `CTEBuilder` instance that can be used to configure the CTE:\n     *\n     * ```ts\n     * await db\n     *   .with(\n     *     (cte) => cte('jennifers').materialized(),\n     *     (db) => db\n     *       .selectFrom('person')\n     *       .where('first_name', '=', 'Jennifer')\n     *       .select(['id', 'age'])\n     *   )\n     *   .selectFrom('jennifers')\n     *   .selectAll()\n     *   .execute()\n     * ```\n     */\n    with(nameOrBuilder, expression) {\n        const cte = parseCommonTableExpression(nameOrBuilder, expression);\n        return new QueryCreator({\n            ...this.#props,\n            withNode: this.#props.withNode\n                ? WithNode.cloneWithExpression(this.#props.withNode, cte)\n                : WithNode.create(cte),\n        });\n    }\n    /**\n     * Creates a recursive `with` query (Common Table Expression).\n     *\n     * Note that recursiveness is a property of the whole `with` statement.\n     * You cannot have recursive and non-recursive CTEs in a same `with` statement.\n     * Therefore the recursiveness is determined by the **first** `with` or\n     * `withRecusive` call you make.\n     *\n     * See the {@link with} method for examples and more documentation.\n     */\n    withRecursive(nameOrBuilder, expression) {\n        const cte = parseCommonTableExpression(nameOrBuilder, expression);\n        return new QueryCreator({\n            ...this.#props,\n            withNode: this.#props.withNode\n                ? WithNode.cloneWithExpression(this.#props.withNode, cte)\n                : WithNode.create(cte, { recursive: true }),\n        });\n    }\n    /**\n     * Returns a copy of this query creator instance with the given plugin installed.\n     */\n    withPlugin(plugin) {\n        return new QueryCreator({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    /**\n     * Returns a copy of this query creator instance without any plugins.\n     */\n    withoutPlugins() {\n        return new QueryCreator({\n            ...this.#props,\n            executor: this.#props.executor.withoutPlugins(),\n        });\n    }\n    /**\n     * Sets the schema to be used for all table references that don't explicitly\n     * specify a schema.\n     *\n     * This only affects the query created through the builder returned from\n     * this method and doesn't modify the `db` instance.\n     *\n     * See [this recipe](https://github.com/kysely-org/kysely/blob/master/site/docs/recipes/0007-schemas.md)\n     * for a more detailed explanation.\n     *\n     * ### Examples\n     *\n     * ```\n     * await db\n     *   .withSchema('mammals')\n     *   .selectFrom('pet')\n     *   .selectAll()\n     *   .innerJoin('public.person', 'public.person.id', 'pet.owner_id')\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select * from \"mammals\".\"pet\"\n     * inner join \"public\".\"person\"\n     * on \"public\".\"person\".\"id\" = \"mammals\".\"pet\".\"owner_id\"\n     * ```\n     *\n     * `withSchema` is smart enough to not add schema for aliases,\n     * common table expressions or other places where the schema\n     * doesn't belong to:\n     *\n     * ```\n     * await db\n     *   .withSchema('mammals')\n     *   .selectFrom('pet as p')\n     *   .select('p.name')\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"p\".\"name\" from \"mammals\".\"pet\" as \"p\"\n     * ```\n     */\n    withSchema(schema) {\n        return new QueryCreator({\n            ...this.#props,\n            executor: this.#props.executor.withPluginAtFront(new WithSchemaPlugin(schema)),\n        });\n    }\n}\n", "/// <reference types=\"./parse-utils.d.ts\" />\nimport { JoinNode } from '../operation-node/join-node.js';\nimport { OverNode } from '../operation-node/over-node.js';\nimport { SelectQueryNode } from '../operation-node/select-query-node.js';\nimport { JoinBuilder } from '../query-builder/join-builder.js';\nimport { OverBuilder } from '../query-builder/over-builder.js';\nimport { createSelectQueryBuilder as newSelectQueryBuilder, } from '../query-builder/select-query-builder.js';\nimport { QueryCreator } from '../query-creator.js';\nimport { NOOP_QUERY_EXECUTOR } from '../query-executor/noop-query-executor.js';\nimport { createQueryId } from '../util/query-id.js';\nimport { parseTableExpression, parseTableExpressionOrList, } from './table-parser.js';\nexport function createSelectQueryBuilder() {\n    return newSelectQueryBuilder({\n        queryId: createQueryId(),\n        executor: NOOP_QUERY_EXECUTOR,\n        queryNode: SelectQueryNode.createFrom(parseTableExpressionOrList([])),\n    });\n}\nexport function createQueryCreator() {\n    return new QueryCreator({\n        executor: NOOP_QUERY_EXECUTOR,\n    });\n}\nexport function createJoinBuilder(joinType, table) {\n    return new JoinBuilder({\n        joinNode: JoinNode.create(joinType, parseTableExpression(table)),\n    });\n}\nexport function createOverBuilder() {\n    return new OverBuilder({\n        overNode: OverNode.create(),\n    });\n}\n", "/// <reference types=\"./join-parser.d.ts\" />\nimport { JoinNode } from '../operation-node/join-node.js';\nimport { parseReferentialBinaryOperation } from './binary-operation-parser.js';\nimport { createJoinBuilder } from './parse-utils.js';\nimport { parseTableExpression, } from './table-parser.js';\nexport function parseJoin(joinType, args) {\n    if (args.length === 3) {\n        return parseSingleOnJoin(joinType, args[0], args[1], args[2]);\n    }\n    else if (args.length === 2) {\n        return parseCallbackJoin(joinType, args[0], args[1]);\n    }\n    else if (args.length === 1) {\n        return parseOnlessJoin(joinType, args[0]);\n    }\n    else {\n        throw new Error('not implemented');\n    }\n}\nfunction parseCallbackJoin(joinType, from, callback) {\n    return callback(createJoinBuilder(joinType, from)).toOperationNode();\n}\nfunction parseSingleOnJoin(joinType, from, lhsColumn, rhsColumn) {\n    return JoinNode.createWithOn(joinType, parseTableExpression(from), parseReferentialBinaryOperation(lhsColumn, '=', rhsColumn));\n}\nfunction parseOnlessJoin(joinType, from) {\n    return JoinNode.create(joinType, parseTableExpression(from));\n}\n", "/// <reference types=\"./offset-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const OffsetNode = freeze({\n    is(node) {\n        return node.kind === 'OffsetNode';\n    },\n    create(offset) {\n        return freeze({\n            kind: 'OffsetNode',\n            offset,\n        });\n    },\n});\n", "/// <reference types=\"./group-by-item-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const GroupByItemNode = freeze({\n    is(node) {\n        return node.kind === 'GroupByItemNode';\n    },\n    create(groupBy) {\n        return freeze({\n            kind: 'GroupByItemNode',\n            groupBy,\n        });\n    },\n});\n", "/// <reference types=\"./group-by-parser.d.ts\" />\nimport { GroupByItemNode } from '../operation-node/group-by-item-node.js';\nimport { expressionBuilder, } from '../expression/expression-builder.js';\nimport { isFunction } from '../util/object-utils.js';\nimport { parseReferenceExpressionOrList, } from './reference-parser.js';\nexport function parseGroupBy(groupBy) {\n    groupBy = isFunction(groupBy) ? groupBy(expressionBuilder()) : groupBy;\n    return parseReferenceExpressionOrList(groupBy).map(GroupByItemNode.create);\n}\n", "/// <reference types=\"./set-operation-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const SetOperationNode = freeze({\n    is(node) {\n        return node.kind === 'SetOperationNode';\n    },\n    create(operator, expression, all) {\n        return freeze({\n            kind: 'SetOperationNode',\n            operator,\n            expression,\n            all,\n        });\n    },\n});\n", "/// <reference types=\"./set-operation-parser.d.ts\" />\nimport { createExpressionBuilder, } from '../expression/expression-builder.js';\nimport { SetOperationNode, } from '../operation-node/set-operation-node.js';\nimport { isFunction, isReadonlyArray } from '../util/object-utils.js';\nimport { parseExpression } from './expression-parser.js';\nexport function parseSetOperations(operator, expression, all) {\n    if (isFunction(expression)) {\n        expression = expression(createExpressionBuilder());\n    }\n    if (!isReadonlyArray(expression)) {\n        expression = [expression];\n    }\n    return expression.map((expr) => SetOperationNode.create(operator, parseExpression(expr), all));\n}\n", "/// <reference types=\"./expression-wrapper.d.ts\" />\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { AndNode } from '../operation-node/and-node.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nimport { OrNode } from '../operation-node/or-node.js';\nimport { ParensNode } from '../operation-node/parens-node.js';\nimport { parseValueBinaryOperationOrExpression, } from '../parser/binary-operation-parser.js';\nexport class ExpressionWrapper {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /** @private */\n    get expressionType() {\n        return undefined;\n    }\n    as(alias) {\n        return new AliasedExpressionWrapper(this, alias);\n    }\n    or(...args) {\n        return new OrWrapper(OrNode.create(this.#node, parseValueBinaryOperationOrExpression(args)));\n    }\n    and(...args) {\n        return new AndWrapper(AndNode.create(this.#node, parseValueBinaryOperationOrExpression(args)));\n    }\n    /**\n     * Change the output type of the expression.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `ExpressionWrapper` with a new output type.\n     */\n    $castTo() {\n        return new ExpressionWrapper(this.#node);\n    }\n    /**\n     * Omit null from the expression's type.\n     *\n     * This function can be useful in cases where you know an expression can't be\n     * null, but Kysely is unable to infer it.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of `this` with a new output type.\n     */\n    $notNull() {\n        return new ExpressionWrapper(this.#node);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\nexport class AliasedExpressionWrapper {\n    #expr;\n    #alias;\n    constructor(expr, alias) {\n        this.#expr = expr;\n        this.#alias = alias;\n    }\n    /** @private */\n    get expression() {\n        return this.#expr;\n    }\n    /** @private */\n    get alias() {\n        return this.#alias;\n    }\n    toOperationNode() {\n        return AliasNode.create(this.#expr.toOperationNode(), isOperationNodeSource(this.#alias)\n            ? this.#alias.toOperationNode()\n            : IdentifierNode.create(this.#alias));\n    }\n}\nexport class OrWrapper {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /** @private */\n    get expressionType() {\n        return undefined;\n    }\n    as(alias) {\n        return new AliasedExpressionWrapper(this, alias);\n    }\n    or(...args) {\n        return new OrWrapper(OrNode.create(this.#node, parseValueBinaryOperationOrExpression(args)));\n    }\n    /**\n     * Change the output type of the expression.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `OrWrapper` with a new output type.\n     */\n    $castTo() {\n        return new OrWrapper(this.#node);\n    }\n    toOperationNode() {\n        return ParensNode.create(this.#node);\n    }\n}\nexport class AndWrapper {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /** @private */\n    get expressionType() {\n        return undefined;\n    }\n    as(alias) {\n        return new AliasedExpressionWrapper(this, alias);\n    }\n    and(...args) {\n        return new AndWrapper(AndNode.create(this.#node, parseValueBinaryOperationOrExpression(args)));\n    }\n    /**\n     * Change the output type of the expression.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `AndWrapper` with a new output type.\n     */\n    $castTo() {\n        return new AndWrapper(this.#node);\n    }\n    toOperationNode() {\n        return ParensNode.create(this.#node);\n    }\n}\n", "/// <reference types=\"./fetch-node.d.ts\" />\nimport { ValueNode } from './value-node.js';\n/**\n * @internal\n */\nexport const FetchNode = {\n    is(node) {\n        return node.kind === 'FetchNode';\n    },\n    create(rowCount, modifier) {\n        return {\n            kind: 'FetchNode',\n            rowCount: ValueNode.create(rowCount),\n            modifier,\n        };\n    },\n};\n", "/// <reference types=\"./fetch-parser.d.ts\" />\nimport { FetchNode } from '../operation-node/fetch-node.js';\nimport { isBigInt, isNumber } from '../util/object-utils.js';\nexport function parseFetch(rowCount, modifier) {\n    if (!isNumber(rowCount) && !isBigInt(rowCount)) {\n        throw new Error(`Invalid fetch row count: ${rowCount}`);\n    }\n    if (!isFetchModifier(modifier)) {\n        throw new Error(`Invalid fetch modifier: ${modifier}`);\n    }\n    return FetchNode.create(rowCount, modifier);\n}\nfunction isFetchModifier(value) {\n    return value === 'only' || value === 'with ties';\n}\n", "/// <reference types=\"./select-query-builder.d.ts\" />\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { SelectModifierNode } from '../operation-node/select-modifier-node.js';\nimport { parseJoin, } from '../parser/join-parser.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { parseSelectArg, parseSelectAll, } from '../parser/select-parser.js';\nimport { parseReferenceExpressionOrList, } from '../parser/reference-parser.js';\nimport { SelectQueryNode } from '../operation-node/select-query-node.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { parseOrderBy, } from '../parser/order-by-parser.js';\nimport { LimitNode } from '../operation-node/limit-node.js';\nimport { OffsetNode } from '../operation-node/offset-node.js';\nimport { asArray, freeze } from '../util/object-utils.js';\nimport { parseGroupBy } from '../parser/group-by-parser.js';\nimport { isNoResultErrorConstructor, NoResultError, } from './no-result-error.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { parseSetOperations, } from '../parser/set-operation-parser.js';\nimport { parseValueBinaryOperationOrExpression, parseReferentialBinaryOperation, } from '../parser/binary-operation-parser.js';\nimport { ExpressionWrapper } from '../expression/expression-wrapper.js';\nimport { parseValueExpression, } from '../parser/value-parser.js';\nimport { parseFetch } from '../parser/fetch-parser.js';\nimport { parseTop } from '../parser/top-parser.js';\nclass SelectQueryBuilderImpl {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    get expressionType() {\n        return undefined;\n    }\n    get isSelectQueryBuilder() {\n        return true;\n    }\n    where(...args) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithWhere(this.#props.queryNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    whereRef(lhs, op, rhs) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithWhere(this.#props.queryNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    having(...args) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithHaving(this.#props.queryNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    havingRef(lhs, op, rhs) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithHaving(this.#props.queryNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    select(selection) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSelections(this.#props.queryNode, parseSelectArg(selection)),\n        });\n    }\n    distinctOn(selection) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithDistinctOn(this.#props.queryNode, parseReferenceExpressionOrList(selection)),\n        });\n    }\n    modifyFront(modifier) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithFrontModifier(this.#props.queryNode, SelectModifierNode.createWithExpression(modifier.toOperationNode())),\n        });\n    }\n    modifyEnd(modifier) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.createWithExpression(modifier.toOperationNode())),\n        });\n    }\n    distinct() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithFrontModifier(this.#props.queryNode, SelectModifierNode.create('Distinct')),\n        });\n    }\n    forUpdate(of) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.create('ForUpdate', of ? asArray(of).map(parseTable) : undefined)),\n        });\n    }\n    forShare(of) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.create('ForShare', of ? asArray(of).map(parseTable) : undefined)),\n        });\n    }\n    forKeyShare(of) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.create('ForKeyShare', of ? asArray(of).map(parseTable) : undefined)),\n        });\n    }\n    forNoKeyUpdate(of) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.create('ForNoKeyUpdate', of ? asArray(of).map(parseTable) : undefined)),\n        });\n    }\n    skipLocked() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.create('SkipLocked')),\n        });\n    }\n    noWait() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithEndModifier(this.#props.queryNode, SelectModifierNode.create('NoWait')),\n        });\n    }\n    selectAll(table) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSelections(this.#props.queryNode, parseSelectAll(table)),\n        });\n    }\n    innerJoin(...args) {\n        return this.#join('InnerJoin', args);\n    }\n    leftJoin(...args) {\n        return this.#join('LeftJoin', args);\n    }\n    rightJoin(...args) {\n        return this.#join('RightJoin', args);\n    }\n    fullJoin(...args) {\n        return this.#join('FullJoin', args);\n    }\n    crossJoin(...args) {\n        return this.#join('CrossJoin', args);\n    }\n    innerJoinLateral(...args) {\n        return this.#join('LateralInnerJoin', args);\n    }\n    leftJoinLateral(...args) {\n        return this.#join('LateralLeftJoin', args);\n    }\n    crossJoinLateral(...args) {\n        return this.#join('LateralCrossJoin', args);\n    }\n    crossApply(...args) {\n        return this.#join('CrossApply', args);\n    }\n    outerApply(...args) {\n        return this.#join('OuterApply', args);\n    }\n    #join(joinType, args) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithJoin(this.#props.queryNode, parseJoin(joinType, args)),\n        });\n    }\n    orderBy(...args) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithOrderByItems(this.#props.queryNode, parseOrderBy(args)),\n        });\n    }\n    groupBy(groupBy) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithGroupByItems(this.#props.queryNode, parseGroupBy(groupBy)),\n        });\n    }\n    limit(limit) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithLimit(this.#props.queryNode, LimitNode.create(parseValueExpression(limit))),\n        });\n    }\n    offset(offset) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithOffset(this.#props.queryNode, OffsetNode.create(parseValueExpression(offset))),\n        });\n    }\n    fetch(rowCount, modifier = 'only') {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithFetch(this.#props.queryNode, parseFetch(rowCount, modifier)),\n        });\n    }\n    top(expression, modifiers) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithTop(this.#props.queryNode, parseTop(expression, modifiers)),\n        });\n    }\n    union(expression) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, parseSetOperations('union', expression, false)),\n        });\n    }\n    unionAll(expression) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, parseSetOperations('union', expression, true)),\n        });\n    }\n    intersect(expression) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, parseSetOperations('intersect', expression, false)),\n        });\n    }\n    intersectAll(expression) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, parseSetOperations('intersect', expression, true)),\n        });\n    }\n    except(expression) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, parseSetOperations('except', expression, false)),\n        });\n    }\n    exceptAll(expression) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, parseSetOperations('except', expression, true)),\n        });\n    }\n    as(alias) {\n        return new AliasedSelectQueryBuilderImpl(this, alias);\n    }\n    clearSelect() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithoutSelections(this.#props.queryNode),\n        });\n    }\n    clearWhere() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutWhere(this.#props.queryNode),\n        });\n    }\n    clearLimit() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithoutLimit(this.#props.queryNode),\n        });\n    }\n    clearOffset() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithoutOffset(this.#props.queryNode),\n        });\n    }\n    clearOrderBy() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithoutOrderBy(this.#props.queryNode),\n        });\n    }\n    clearGroupBy() {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: SelectQueryNode.cloneWithoutGroupBy(this.#props.queryNode),\n        });\n    }\n    $call(func) {\n        return func(this);\n    }\n    $if(condition, func) {\n        if (condition) {\n            return func(this);\n        }\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n        });\n    }\n    $castTo() {\n        return new SelectQueryBuilderImpl(this.#props);\n    }\n    $narrowType() {\n        return new SelectQueryBuilderImpl(this.#props);\n    }\n    $assertType() {\n        return new SelectQueryBuilderImpl(this.#props);\n    }\n    $asTuple() {\n        return new ExpressionWrapper(this.toOperationNode());\n    }\n    $asScalar() {\n        return new ExpressionWrapper(this.toOperationNode());\n    }\n    withPlugin(plugin) {\n        return new SelectQueryBuilderImpl({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        const compiledQuery = this.compile();\n        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);\n        return result.rows;\n    }\n    async executeTakeFirst() {\n        const [result] = await this.execute();\n        return result;\n    }\n    async executeTakeFirstOrThrow(errorConstructor = NoResultError) {\n        const result = await this.executeTakeFirst();\n        if (result === undefined) {\n            const error = isNoResultErrorConstructor(errorConstructor)\n                ? new errorConstructor(this.toOperationNode())\n                : errorConstructor(this.toOperationNode());\n            throw error;\n        }\n        return result;\n    }\n    async *stream(chunkSize = 100) {\n        const compiledQuery = this.compile();\n        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);\n        for await (const item of stream) {\n            yield* item.rows;\n        }\n    }\n    async explain(format, options) {\n        const builder = new SelectQueryBuilderImpl({\n            ...this.#props,\n            queryNode: QueryNode.cloneWithExplain(this.#props.queryNode, format, options),\n        });\n        return await builder.execute();\n    }\n}\nexport function createSelectQueryBuilder(props) {\n    return new SelectQueryBuilderImpl(props);\n}\n/**\n * {@link SelectQueryBuilder} with an alias. The result of calling {@link SelectQueryBuilder.as}.\n */\nclass AliasedSelectQueryBuilderImpl {\n    #queryBuilder;\n    #alias;\n    constructor(queryBuilder, alias) {\n        this.#queryBuilder = queryBuilder;\n        this.#alias = alias;\n    }\n    get expression() {\n        return this.#queryBuilder;\n    }\n    get alias() {\n        return this.#alias;\n    }\n    get isAliasedSelectQueryBuilder() {\n        return true;\n    }\n    toOperationNode() {\n        return AliasNode.create(this.#queryBuilder.toOperationNode(), IdentifierNode.create(this.#alias));\n    }\n}\n", "/// <reference types=\"./aggregate-function-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { WhereNode } from './where-node.js';\nimport { OrderByNode } from './order-by-node.js';\n/**\n * @internal\n */\nexport const AggregateFunctionNode = freeze({\n    is(node) {\n        return node.kind === 'AggregateFunctionNode';\n    },\n    create(aggregateFunction, aggregated = []) {\n        return freeze({\n            kind: 'AggregateFunctionNode',\n            func: aggregateFunction,\n            aggregated,\n        });\n    },\n    cloneWithDistinct(aggregateFunctionNode) {\n        return freeze({\n            ...aggregateFunctionNode,\n            distinct: true,\n        });\n    },\n    cloneWithOrderBy(aggregateFunctionNode, orderItems, withinGroup = false) {\n        const prop = withinGroup ? 'withinGroup' : 'orderBy';\n        return freeze({\n            ...aggregateFunctionNode,\n            [prop]: aggregateFunctionNode[prop]\n                ? OrderByNode.cloneWithItems(aggregateFunctionNode[prop], orderItems)\n                : OrderByNode.create(orderItems),\n        });\n    },\n    cloneWithFilter(aggregateFunctionNode, filter) {\n        return freeze({\n            ...aggregateFunctionNode,\n            filter: aggregateFunctionNode.filter\n                ? WhereNode.cloneWithOperation(aggregateFunctionNode.filter, 'And', filter)\n                : WhereNode.create(filter),\n        });\n    },\n    cloneWithOrFilter(aggregateFunctionNode, filter) {\n        return freeze({\n            ...aggregateFunctionNode,\n            filter: aggregateFunctionNode.filter\n                ? WhereNode.cloneWithOperation(aggregateFunctionNode.filter, 'Or', filter)\n                : WhereNode.create(filter),\n        });\n    },\n    cloneWithOver(aggregateFunctionNode, over) {\n        return freeze({\n            ...aggregateFunctionNode,\n            over,\n        });\n    },\n});\n", "/// <reference types=\"./function-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const FunctionNode = freeze({\n    is(node) {\n        return node.kind === 'FunctionNode';\n    },\n    create(func, args) {\n        return freeze({\n            kind: 'FunctionNode',\n            func,\n            arguments: args,\n        });\n    },\n});\n", "/// <reference types=\"./aggregate-function-builder.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { AggregateFunctionNode } from '../operation-node/aggregate-function-node.js';\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { createOverBuilder } from '../parser/parse-utils.js';\nimport { parseReferentialBinaryOperation, parseValueBinaryOperationOrExpression, } from '../parser/binary-operation-parser.js';\nimport { parseOrderBy, } from '../parser/order-by-parser.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nexport class AggregateFunctionBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /** @private */\n    get expressionType() {\n        return undefined;\n    }\n    /**\n     * Returns an aliased version of the function.\n     *\n     * In addition to slapping `as \"the_alias\"` to the end of the SQL,\n     * this method also provides strict typing:\n     *\n     * ```ts\n     * const result = await db\n     *   .selectFrom('person')\n     *   .select(\n     *     (eb) => eb.fn.count<number>('id').as('person_count')\n     *   )\n     *   .executeTakeFirstOrThrow()\n     *\n     * // `person_count: number` field exists in the result type.\n     * console.log(result.person_count)\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select count(\"id\") as \"person_count\"\n     * from \"person\"\n     * ```\n     */\n    as(alias) {\n        return new AliasedAggregateFunctionBuilder(this, alias);\n    }\n    /**\n     * Adds a `distinct` clause inside the function.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db\n     *   .selectFrom('person')\n     *   .select((eb) =>\n     *     eb.fn.count<number>('first_name').distinct().as('first_name_count')\n     *   )\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select count(distinct \"first_name\") as \"first_name_count\"\n     * from \"person\"\n     * ```\n     */\n    distinct() {\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: AggregateFunctionNode.cloneWithDistinct(this.#props.aggregateFunctionNode),\n        });\n    }\n    orderBy(...args) {\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: QueryNode.cloneWithOrderByItems(this.#props.aggregateFunctionNode, parseOrderBy(args)),\n        });\n    }\n    clearOrderBy() {\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: QueryNode.cloneWithoutOrderBy(this.#props.aggregateFunctionNode),\n        });\n    }\n    withinGroupOrderBy(...args) {\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: AggregateFunctionNode.cloneWithOrderBy(this.#props.aggregateFunctionNode, parseOrderBy(args), true),\n        });\n    }\n    filterWhere(...args) {\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: AggregateFunctionNode.cloneWithFilter(this.#props.aggregateFunctionNode, parseValueBinaryOperationOrExpression(args)),\n        });\n    }\n    /**\n     * Adds a `filter` clause with a nested `where` clause after the function, where\n     * both sides of the operator are references to columns.\n     *\n     * Similar to {@link WhereInterface}'s `whereRef` method.\n     *\n     * ### Examples\n     *\n     * Count people with same first and last names versus general public:\n     *\n     * ```ts\n     * const result = await db\n     *   .selectFrom('person')\n     *   .select((eb) => [\n     *     eb.fn\n     *       .count<number>('id')\n     *       .filterWhereRef('first_name', '=', 'last_name')\n     *       .as('repeat_name_count'),\n     *     eb.fn.count<number>('id').as('total_count'),\n     *   ])\n     *   .executeTakeFirstOrThrow()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select\n     *   count(\"id\") filter(where \"first_name\" = \"last_name\") as \"repeat_name_count\",\n     *   count(\"id\") as \"total_count\"\n     * from \"person\"\n     * ```\n     */\n    filterWhereRef(lhs, op, rhs) {\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: AggregateFunctionNode.cloneWithFilter(this.#props.aggregateFunctionNode, parseReferentialBinaryOperation(lhs, op, rhs)),\n        });\n    }\n    /**\n     * Adds an `over` clause (window functions) after the function.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * const result = await db\n     *   .selectFrom('person')\n     *   .select(\n     *     (eb) => eb.fn.avg<number>('age').over().as('average_age')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select avg(\"age\") over() as \"average_age\"\n     * from \"person\"\n     * ```\n     *\n     * Also supports passing a callback that returns an over builder,\n     * allowing to add partition by and sort by clauses inside over.\n     *\n     * ```ts\n     * const result = await db\n     *   .selectFrom('person')\n     *   .select(\n     *     (eb) => eb.fn.avg<number>('age').over(\n     *       ob => ob.partitionBy('last_name').orderBy('first_name', 'asc')\n     *     ).as('average_age')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select avg(\"age\") over(partition by \"last_name\" order by \"first_name\" asc) as \"average_age\"\n     * from \"person\"\n     * ```\n     */\n    over(over) {\n        const builder = createOverBuilder();\n        return new AggregateFunctionBuilder({\n            ...this.#props,\n            aggregateFunctionNode: AggregateFunctionNode.cloneWithOver(this.#props.aggregateFunctionNode, (over ? over(builder) : builder).toOperationNode()),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    /**\n     * Casts the expression to the given type.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `AggregateFunctionBuilder` with a new output type.\n     */\n    $castTo() {\n        return new AggregateFunctionBuilder(this.#props);\n    }\n    /**\n     * Omit null from the expression's type.\n     *\n     * This function can be useful in cases where you know an expression can't be\n     * null, but Kysely is unable to infer it.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of `this` with a new output type.\n     */\n    $notNull() {\n        return new AggregateFunctionBuilder(this.#props);\n    }\n    toOperationNode() {\n        return this.#props.aggregateFunctionNode;\n    }\n}\n/**\n * {@link AggregateFunctionBuilder} with an alias. The result of calling {@link AggregateFunctionBuilder.as}.\n */\nexport class AliasedAggregateFunctionBuilder {\n    #aggregateFunctionBuilder;\n    #alias;\n    constructor(aggregateFunctionBuilder, alias) {\n        this.#aggregateFunctionBuilder = aggregateFunctionBuilder;\n        this.#alias = alias;\n    }\n    /** @private */\n    get expression() {\n        return this.#aggregateFunctionBuilder;\n    }\n    /** @private */\n    get alias() {\n        return this.#alias;\n    }\n    toOperationNode() {\n        return AliasNode.create(this.#aggregateFunctionBuilder.toOperationNode(), IdentifierNode.create(this.#alias));\n    }\n}\n", "/// <reference types=\"./function-module.d.ts\" />\nimport { ExpressionWrapper } from '../expression/expression-wrapper.js';\nimport { AggregateFunctionNode } from '../operation-node/aggregate-function-node.js';\nimport { FunctionNode } from '../operation-node/function-node.js';\nimport { parseReferenceExpressionOrList, } from '../parser/reference-parser.js';\nimport { parseSelectAll } from '../parser/select-parser.js';\nimport { AggregateFunctionBuilder } from './aggregate-function-builder.js';\nimport { isString } from '../util/object-utils.js';\nimport { parseTable } from '../parser/table-parser.js';\nexport function createFunctionModule() {\n    const fn = (name, args) => {\n        return new ExpressionWrapper(FunctionNode.create(name, parseReferenceExpressionOrList(args ?? [])));\n    };\n    const agg = (name, args) => {\n        return new AggregateFunctionBuilder({\n            aggregateFunctionNode: AggregateFunctionNode.create(name, args ? parseReferenceExpressionOrList(args) : undefined),\n        });\n    };\n    return Object.assign(fn, {\n        agg,\n        avg(column) {\n            return agg('avg', [column]);\n        },\n        coalesce(...values) {\n            return fn('coalesce', values);\n        },\n        count(column) {\n            return agg('count', [column]);\n        },\n        countAll(table) {\n            return new AggregateFunctionBuilder({\n                aggregateFunctionNode: AggregateFunctionNode.create('count', parseSelectAll(table)),\n            });\n        },\n        max(column) {\n            return agg('max', [column]);\n        },\n        min(column) {\n            return agg('min', [column]);\n        },\n        sum(column) {\n            return agg('sum', [column]);\n        },\n        any(column) {\n            return fn('any', [column]);\n        },\n        jsonAgg(table) {\n            return new AggregateFunctionBuilder({\n                aggregateFunctionNode: AggregateFunctionNode.create('json_agg', [\n                    isString(table) ? parseTable(table) : table.toOperationNode(),\n                ]),\n            });\n        },\n        toJson(table) {\n            return new ExpressionWrapper(FunctionNode.create('to_json', [\n                isString(table) ? parseTable(table) : table.toOperationNode(),\n            ]));\n        },\n    });\n}\n", "/// <reference types=\"./unary-operation-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const UnaryOperationNode = freeze({\n    is(node) {\n        return node.kind === 'UnaryOperationNode';\n    },\n    create(operator, operand) {\n        return freeze({\n            kind: 'UnaryOperationNode',\n            operator,\n            operand,\n        });\n    },\n});\n", "/// <reference types=\"./unary-operation-parser.d.ts\" />\nimport { OperatorNode } from '../operation-node/operator-node.js';\nimport { UnaryOperationNode } from '../operation-node/unary-operation-node.js';\nimport { parseReferenceExpression, } from './reference-parser.js';\nexport function parseExists(operand) {\n    return parseUnaryOperation('exists', operand);\n}\nexport function parseNotExists(operand) {\n    return parseUnaryOperation('not exists', operand);\n}\nexport function parseUnaryOperation(operator, operand) {\n    return UnaryOperationNode.create(OperatorNode.create(operator), parseReferenceExpression(operand));\n}\n", "/// <reference types=\"./case-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { WhenNode } from './when-node.js';\n/**\n * @internal\n */\nexport const CaseNode = freeze({\n    is(node) {\n        return node.kind === 'CaseNode';\n    },\n    create(value) {\n        return freeze({\n            kind: 'CaseNode',\n            value,\n        });\n    },\n    cloneWithWhen(caseNode, when) {\n        return freeze({\n            ...caseNode,\n            when: freeze(caseNode.when ? [...caseNode.when, when] : [when]),\n        });\n    },\n    cloneWithThen(caseNode, then) {\n        return freeze({\n            ...caseNode,\n            when: caseNode.when\n                ? freeze([\n                    ...caseNode.when.slice(0, -1),\n                    WhenNode.cloneWithResult(caseNode.when[caseNode.when.length - 1], then),\n                ])\n                : undefined,\n        });\n    },\n    cloneWith(caseNode, props) {\n        return freeze({\n            ...caseNode,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./case-builder.d.ts\" />\nimport { ExpressionWrapper } from '../expression/expression-wrapper.js';\nimport { freeze } from '../util/object-utils.js';\nimport { CaseNode } from '../operation-node/case-node.js';\nimport { WhenNode } from '../operation-node/when-node.js';\nimport { parseValueBinaryOperationOrExpression, } from '../parser/binary-operation-parser.js';\nimport { isSafeImmediateValue, parseSafeImmediateValue, parseValueExpression, } from '../parser/value-parser.js';\nexport class CaseBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    when(...args) {\n        return new CaseThenBuilder({\n            ...this.#props,\n            node: CaseNode.cloneWithWhen(this.#props.node, WhenNode.create(parseValueBinaryOperationOrExpression(args))),\n        });\n    }\n}\nexport class CaseThenBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    then(valueExpression) {\n        return new CaseWhenBuilder({\n            ...this.#props,\n            node: CaseNode.cloneWithThen(this.#props.node, isSafeImmediateValue(valueExpression)\n                ? parseSafeImmediateValue(valueExpression)\n                : parseValueExpression(valueExpression)),\n        });\n    }\n}\nexport class CaseWhenBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    when(...args) {\n        return new CaseThenBuilder({\n            ...this.#props,\n            node: CaseNode.cloneWithWhen(this.#props.node, WhenNode.create(parseValueBinaryOperationOrExpression(args))),\n        });\n    }\n    else(valueExpression) {\n        return new CaseEndBuilder({\n            ...this.#props,\n            node: CaseNode.cloneWith(this.#props.node, {\n                else: isSafeImmediateValue(valueExpression)\n                    ? parseSafeImmediateValue(valueExpression)\n                    : parseValueExpression(valueExpression),\n            }),\n        });\n    }\n    end() {\n        return new ExpressionWrapper(CaseNode.cloneWith(this.#props.node, { isStatement: false }));\n    }\n    endCase() {\n        return new ExpressionWrapper(CaseNode.cloneWith(this.#props.node, { isStatement: true }));\n    }\n}\nexport class CaseEndBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    end() {\n        return new ExpressionWrapper(CaseNode.cloneWith(this.#props.node, { isStatement: false }));\n    }\n    endCase() {\n        return new ExpressionWrapper(CaseNode.cloneWith(this.#props.node, { isStatement: true }));\n    }\n}\n", "/// <reference types=\"./json-path-leg-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const JSONPathLegNode = freeze({\n    is(node) {\n        return node.kind === 'JSONPathLegNode';\n    },\n    create(type, value) {\n        return freeze({\n            kind: 'JSONPathLegNode',\n            type,\n            value,\n        });\n    },\n});\n", "/// <reference types=\"./json-path-builder.d.ts\" />\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { JSONOperatorChainNode } from '../operation-node/json-operator-chain-node.js';\nimport { JSONPathLegNode, } from '../operation-node/json-path-leg-node.js';\nimport { JSONPathNode } from '../operation-node/json-path-node.js';\nimport { JSONReferenceNode } from '../operation-node/json-reference-node.js';\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nimport { ValueNode } from '../operation-node/value-node.js';\nexport class JSONPathBuilder {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /**\n     * Access an element of a JSON array in a specific location.\n     *\n     * Since there's no guarantee an element exists in the given array location, the\n     * resulting type is always nullable. If you're sure the element exists, you\n     * should use {@link SelectQueryBuilder.$assertType} to narrow the type safely.\n     *\n     * See also {@link key} to access properties of JSON objects.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.selectFrom('person')\n     *   .select(eb =>\n     *     eb.ref('nicknames', '->').at(0).as('primary_nickname')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"nicknames\"->0 as \"primary_nickname\" from \"person\"\n     *```\n     *\n     * Combined with {@link key}:\n     *\n     * ```ts\n     * db.selectFrom('person').select(eb =>\n     *   eb.ref('experience', '->').at(0).key('role').as('first_role')\n     * )\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"experience\"->0->'role' as \"first_role\" from \"person\"\n     * ```\n     *\n     * You can use `'last'` to access the last element of the array in MySQL:\n     *\n     * ```ts\n     * db.selectFrom('person').select(eb =>\n     *   eb.ref('nicknames', '->$').at('last').as('last_nickname')\n     * )\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * select `nicknames`->'$[last]' as `last_nickname` from `person`\n     * ```\n     *\n     * Or `'#-1'` in SQLite:\n     *\n     * ```ts\n     * db.selectFrom('person').select(eb =>\n     *   eb.ref('nicknames', '->>$').at('#-1').as('last_nickname')\n     * )\n     * ```\n     *\n     * The generated SQL (SQLite):\n     *\n     * ```sql\n     * select \"nicknames\"->>'$[#-1]' as `last_nickname` from `person`\n     * ```\n     */\n    at(index) {\n        return this.#createBuilderWithPathLeg('ArrayLocation', index);\n    }\n    /**\n     * Access a property of a JSON object.\n     *\n     * If a field is optional, the resulting type will be nullable.\n     *\n     * See also {@link at} to access elements of JSON arrays.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * db.selectFrom('person').select(eb =>\n     *   eb.ref('address', '->').key('city').as('city')\n     * )\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"address\"->'city' as \"city\" from \"person\"\n     * ```\n     *\n     * Going deeper:\n     *\n     * ```ts\n     * db.selectFrom('person').select(eb =>\n     *   eb.ref('profile', '->$').key('website').key('url').as('website_url')\n     * )\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * select `profile`->'$.website.url' as `website_url` from `person`\n     * ```\n     *\n     * Combined with {@link at}:\n     *\n     * ```ts\n     * db.selectFrom('person').select(eb =>\n     *   eb.ref('profile', '->').key('addresses').at(0).key('city').as('city')\n     * )\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"profile\"->'addresses'->0->'city' as \"city\" from \"person\"\n     * ```\n     */\n    key(key) {\n        return this.#createBuilderWithPathLeg('Member', key);\n    }\n    #createBuilderWithPathLeg(legType, value) {\n        if (JSONReferenceNode.is(this.#node)) {\n            return new TraversedJSONPathBuilder(JSONReferenceNode.cloneWithTraversal(this.#node, JSONPathNode.is(this.#node.traversal)\n                ? JSONPathNode.cloneWithLeg(this.#node.traversal, JSONPathLegNode.create(legType, value))\n                : JSONOperatorChainNode.cloneWithValue(this.#node.traversal, ValueNode.createImmediate(value))));\n        }\n        return new TraversedJSONPathBuilder(JSONPathNode.cloneWithLeg(this.#node, JSONPathLegNode.create(legType, value)));\n    }\n}\nexport class TraversedJSONPathBuilder extends JSONPathBuilder {\n    #node;\n    constructor(node) {\n        super(node);\n        this.#node = node;\n    }\n    /** @private */\n    get expressionType() {\n        return undefined;\n    }\n    as(alias) {\n        return new AliasedJSONPathBuilder(this, alias);\n    }\n    /**\n     * Change the output type of the json path.\n     *\n     * This method call doesn't change the SQL in any way. This methods simply\n     * returns a copy of this `JSONPathBuilder` with a new output type.\n     */\n    $castTo() {\n        return new TraversedJSONPathBuilder(this.#node);\n    }\n    $notNull() {\n        return new TraversedJSONPathBuilder(this.#node);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\nexport class AliasedJSONPathBuilder {\n    #jsonPath;\n    #alias;\n    constructor(jsonPath, alias) {\n        this.#jsonPath = jsonPath;\n        this.#alias = alias;\n    }\n    /** @private */\n    get expression() {\n        return this.#jsonPath;\n    }\n    /** @private */\n    get alias() {\n        return this.#alias;\n    }\n    toOperationNode() {\n        return AliasNode.create(this.#jsonPath.toOperationNode(), isOperationNodeSource(this.#alias)\n            ? this.#alias.toOperationNode()\n            : IdentifierNode.create(this.#alias));\n    }\n}\n", "/// <reference types=\"./tuple-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const TupleNode = freeze({\n    is(node) {\n        return node.kind === 'TupleNode';\n    },\n    create(values) {\n        return freeze({\n            kind: 'TupleNode',\n            values: freeze(values),\n        });\n    },\n});\n", "/// <reference types=\"./data-type-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nconst SIMPLE_COLUMN_DATA_TYPES = [\n    'varchar',\n    'char',\n    'text',\n    'integer',\n    'int2',\n    'int4',\n    'int8',\n    'smallint',\n    'bigint',\n    'boolean',\n    'real',\n    'double precision',\n    'float4',\n    'float8',\n    'decimal',\n    'numeric',\n    'binary',\n    'bytea',\n    'date',\n    'datetime',\n    'time',\n    'timetz',\n    'timestamp',\n    'timestamptz',\n    'serial',\n    'bigserial',\n    'uuid',\n    'json',\n    'jsonb',\n    'blob',\n    'varbinary',\n    'int4range',\n    'int4multirange',\n    'int8range',\n    'int8multirange',\n    'numrange',\n    'nummultirange',\n    'tsrange',\n    'tsmultirange',\n    'tstzrange',\n    'tstzmultirange',\n    'daterange',\n    'datemultirange',\n];\nconst COLUMN_DATA_TYPE_REGEX = [\n    /^varchar\\(\\d+\\)$/,\n    /^char\\(\\d+\\)$/,\n    /^decimal\\(\\d+, \\d+\\)$/,\n    /^numeric\\(\\d+, \\d+\\)$/,\n    /^binary\\(\\d+\\)$/,\n    /^datetime\\(\\d+\\)$/,\n    /^time\\(\\d+\\)$/,\n    /^timetz\\(\\d+\\)$/,\n    /^timestamp\\(\\d+\\)$/,\n    /^timestamptz\\(\\d+\\)$/,\n    /^varbinary\\(\\d+\\)$/,\n];\n/**\n * @internal\n */\nexport const DataTypeNode = freeze({\n    is(node) {\n        return node.kind === 'DataTypeNode';\n    },\n    create(dataType) {\n        return freeze({\n            kind: 'DataTypeNode',\n            dataType,\n        });\n    },\n});\nexport function isColumnDataType(dataType) {\n    if (SIMPLE_COLUMN_DATA_TYPES.includes(dataType)) {\n        return true;\n    }\n    if (COLUMN_DATA_TYPE_REGEX.some((r) => r.test(dataType))) {\n        return true;\n    }\n    return false;\n}\n", "/// <reference types=\"./data-type-parser.d.ts\" />\nimport { DataTypeNode, isColumnDataType, } from '../operation-node/data-type-node.js';\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nexport function parseDataTypeExpression(dataType) {\n    if (isOperationNodeSource(dataType)) {\n        return dataType.toOperationNode();\n    }\n    if (isColumnDataType(dataType)) {\n        return DataTypeNode.create(dataType);\n    }\n    throw new Error(`invalid column data type ${JSON.stringify(dataType)}`);\n}\n", "/// <reference types=\"./cast-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const CastNode = freeze({\n    is(node) {\n        return node.kind === 'CastNode';\n    },\n    create(expression, dataType) {\n        return freeze({\n            kind: 'CastNode',\n            expression,\n            dataType,\n        });\n    },\n});\n", "/// <reference types=\"./expression-builder.d.ts\" />\nimport { createSelectQueryBuilder, } from '../query-builder/select-query-builder.js';\nimport { SelectQueryNode } from '../operation-node/select-query-node.js';\nimport { parseTableExpressionOrList, parseTable, } from '../parser/table-parser.js';\nimport { WithSchemaPlugin } from '../plugin/with-schema/with-schema-plugin.js';\nimport { createQueryId } from '../util/query-id.js';\nimport { createFunctionModule, } from '../query-builder/function-module.js';\nimport { parseJSONReference, parseReferenceExpression, parseStringReference, } from '../parser/reference-parser.js';\nimport { parseFilterList, parseFilterObject, parseValueBinaryOperation, parseValueBinaryOperationOrExpression, } from '../parser/binary-operation-parser.js';\nimport { ParensNode } from '../operation-node/parens-node.js';\nimport { ExpressionWrapper } from './expression-wrapper.js';\nimport { OperatorNode, } from '../operation-node/operator-node.js';\nimport { parseUnaryOperation } from '../parser/unary-operation-parser.js';\nimport { parseSafeImmediateValue, parseValueExpression, } from '../parser/value-parser.js';\nimport { NOOP_QUERY_EXECUTOR } from '../query-executor/noop-query-executor.js';\nimport { CaseBuilder } from '../query-builder/case-builder.js';\nimport { CaseNode } from '../operation-node/case-node.js';\nimport { isReadonlyArray, isUndefined } from '../util/object-utils.js';\nimport { JSONPathBuilder } from '../query-builder/json-path-builder.js';\nimport { BinaryOperationNode } from '../operation-node/binary-operation-node.js';\nimport { AndNode } from '../operation-node/and-node.js';\nimport { TupleNode } from '../operation-node/tuple-node.js';\nimport { JSONPathNode } from '../operation-node/json-path-node.js';\nimport { parseDataTypeExpression, } from '../parser/data-type-parser.js';\nimport { CastNode } from '../operation-node/cast-node.js';\nexport function createExpressionBuilder(executor = NOOP_QUERY_EXECUTOR) {\n    function binary(lhs, op, rhs) {\n        return new ExpressionWrapper(parseValueBinaryOperation(lhs, op, rhs));\n    }\n    function unary(op, expr) {\n        return new ExpressionWrapper(parseUnaryOperation(op, expr));\n    }\n    const eb = Object.assign(binary, {\n        fn: undefined,\n        eb: undefined,\n        selectFrom(table) {\n            return createSelectQueryBuilder({\n                queryId: createQueryId(),\n                executor,\n                queryNode: SelectQueryNode.createFrom(parseTableExpressionOrList(table)),\n            });\n        },\n        case(reference) {\n            return new CaseBuilder({\n                node: CaseNode.create(isUndefined(reference)\n                    ? undefined\n                    : parseReferenceExpression(reference)),\n            });\n        },\n        ref(reference, op) {\n            if (isUndefined(op)) {\n                return new ExpressionWrapper(parseStringReference(reference));\n            }\n            return new JSONPathBuilder(parseJSONReference(reference, op));\n        },\n        jsonPath() {\n            return new JSONPathBuilder(JSONPathNode.create());\n        },\n        table(table) {\n            return new ExpressionWrapper(parseTable(table));\n        },\n        val(value) {\n            return new ExpressionWrapper(parseValueExpression(value));\n        },\n        refTuple(...values) {\n            return new ExpressionWrapper(TupleNode.create(values.map(parseReferenceExpression)));\n        },\n        tuple(...values) {\n            return new ExpressionWrapper(TupleNode.create(values.map(parseValueExpression)));\n        },\n        lit(value) {\n            return new ExpressionWrapper(parseSafeImmediateValue(value));\n        },\n        unary,\n        not(expr) {\n            return unary('not', expr);\n        },\n        exists(expr) {\n            return unary('exists', expr);\n        },\n        neg(expr) {\n            return unary('-', expr);\n        },\n        between(expr, start, end) {\n            return new ExpressionWrapper(BinaryOperationNode.create(parseReferenceExpression(expr), OperatorNode.create('between'), AndNode.create(parseValueExpression(start), parseValueExpression(end))));\n        },\n        betweenSymmetric(expr, start, end) {\n            return new ExpressionWrapper(BinaryOperationNode.create(parseReferenceExpression(expr), OperatorNode.create('between symmetric'), AndNode.create(parseValueExpression(start), parseValueExpression(end))));\n        },\n        and(exprs) {\n            if (isReadonlyArray(exprs)) {\n                return new ExpressionWrapper(parseFilterList(exprs, 'and'));\n            }\n            return new ExpressionWrapper(parseFilterObject(exprs, 'and'));\n        },\n        or(exprs) {\n            if (isReadonlyArray(exprs)) {\n                return new ExpressionWrapper(parseFilterList(exprs, 'or'));\n            }\n            return new ExpressionWrapper(parseFilterObject(exprs, 'or'));\n        },\n        parens(...args) {\n            const node = parseValueBinaryOperationOrExpression(args);\n            if (ParensNode.is(node)) {\n                // No double wrapping.\n                return new ExpressionWrapper(node);\n            }\n            else {\n                return new ExpressionWrapper(ParensNode.create(node));\n            }\n        },\n        cast(expr, dataType) {\n            return new ExpressionWrapper(CastNode.create(parseReferenceExpression(expr), parseDataTypeExpression(dataType)));\n        },\n        withSchema(schema) {\n            return createExpressionBuilder(executor.withPluginAtFront(new WithSchemaPlugin(schema)));\n        },\n    });\n    eb.fn = createFunctionModule();\n    eb.eb = eb;\n    return eb;\n}\nexport function expressionBuilder(_) {\n    return createExpressionBuilder();\n}\n", "/// <reference types=\"./expression-parser.d.ts\" />\nimport { isAliasedExpression, isExpression, } from '../expression/expression.js';\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nimport { expressionBuilder, } from '../expression/expression-builder.js';\nimport { isFunction } from '../util/object-utils.js';\nexport function parseExpression(exp) {\n    if (isOperationNodeSource(exp)) {\n        return exp.toOperationNode();\n    }\n    else if (isFunction(exp)) {\n        return exp(expressionBuilder()).toOperationNode();\n    }\n    throw new Error(`invalid expression: ${JSON.stringify(exp)}`);\n}\nexport function parseAliasedExpression(exp) {\n    if (isOperationNodeSource(exp)) {\n        return exp.toOperationNode();\n    }\n    else if (isFunction(exp)) {\n        return exp(expressionBuilder()).toOperationNode();\n    }\n    throw new Error(`invalid aliased expression: ${JSON.stringify(exp)}`);\n}\nexport function isExpressionOrFactory(obj) {\n    return isExpression(obj) || isAliasedExpression(obj) || isFunction(obj);\n}\n", "/// <reference types=\"./dynamic-table-builder.d.ts\" />\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { isOperationNodeSource, } from '../operation-node/operation-node-source.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { isObject, isString } from '../util/object-utils.js';\nexport class DynamicTableBuilder {\n    #table;\n    get table() {\n        return this.#table;\n    }\n    constructor(table) {\n        this.#table = table;\n    }\n    as(alias) {\n        return new AliasedDynamicTableBuilder(this.#table, alias);\n    }\n}\nexport class AliasedDynamicTableBuilder {\n    #table;\n    #alias;\n    get table() {\n        return this.#table;\n    }\n    get alias() {\n        return this.#alias;\n    }\n    constructor(table, alias) {\n        this.#table = table;\n        this.#alias = alias;\n    }\n    toOperationNode() {\n        return AliasNode.create(parseTable(this.#table), IdentifierNode.create(this.#alias));\n    }\n}\nexport function isAliasedDynamicTableBuilder(obj) {\n    return (isObject(obj) &&\n        isOperationNodeSource(obj) &&\n        isString(obj.table) &&\n        isString(obj.alias));\n}\n", "/// <reference types=\"./table-parser.d.ts\" />\nimport { isReadonlyArray, isString } from '../util/object-utils.js';\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { TableNode } from '../operation-node/table-node.js';\nimport { parseAliasedExpression, } from './expression-parser.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { isAliasedDynamicTableBuilder, } from '../dynamic/dynamic-table-builder.js';\nexport function parseTableExpressionOrList(table) {\n    if (isReadonlyArray(table)) {\n        return table.map((it) => parseTableExpression(it));\n    }\n    else {\n        return [parseTableExpression(table)];\n    }\n}\nexport function parseTableExpression(table) {\n    if (isString(table)) {\n        return parseAliasedTable(table);\n    }\n    else if (isAliasedDynamicTableBuilder(table)) {\n        return table.toOperationNode();\n    }\n    else {\n        return parseAliasedExpression(table);\n    }\n}\nexport function parseAliasedTable(from) {\n    const ALIAS_SEPARATOR = ' as ';\n    if (from.includes(ALIAS_SEPARATOR)) {\n        const [table, alias] = from.split(ALIAS_SEPARATOR).map(trim);\n        return AliasNode.create(parseTable(table), IdentifierNode.create(alias));\n    }\n    else {\n        return parseTable(from);\n    }\n}\nexport function parseTable(from) {\n    const SCHEMA_SEPARATOR = '.';\n    if (from.includes(SCHEMA_SEPARATOR)) {\n        const [schema, table] = from.split(SCHEMA_SEPARATOR).map(trim);\n        return TableNode.createWithSchema(schema, table);\n    }\n    else {\n        return TableNode.create(from);\n    }\n}\nfunction trim(str) {\n    return str.trim();\n}\n", "/// <reference types=\"./add-column-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const AddColumnNode = freeze({\n    is(node) {\n        return node.kind === 'AddColumnNode';\n    },\n    create(column) {\n        return freeze({\n            kind: 'AddColumnNode',\n            column,\n        });\n    },\n});\n", "/// <reference types=\"./column-definition-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\n/**\n * @internal\n */\nexport const ColumnDefinitionNode = freeze({\n    is(node) {\n        return node.kind === 'ColumnDefinitionNode';\n    },\n    create(column, dataType) {\n        return freeze({\n            kind: 'ColumnDefinitionNode',\n            column: ColumnNode.create(column),\n            dataType,\n        });\n    },\n    cloneWithFrontModifier(node, modifier) {\n        return freeze({\n            ...node,\n            frontModifiers: node.frontModifiers\n                ? freeze([...node.frontModifiers, modifier])\n                : [modifier],\n        });\n    },\n    cloneWithEndModifier(node, modifier) {\n        return freeze({\n            ...node,\n            endModifiers: node.endModifiers\n                ? freeze([...node.endModifiers, modifier])\n                : [modifier],\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./drop-column-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\n/**\n * @internal\n */\nexport const DropColumnNode = freeze({\n    is(node) {\n        return node.kind === 'DropColumnNode';\n    },\n    create(column) {\n        return freeze({\n            kind: 'DropColumnNode',\n            column: ColumnNode.create(column),\n        });\n    },\n});\n", "/// <reference types=\"./rename-column-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\n/**\n * @internal\n */\nexport const RenameColumnNode = freeze({\n    is(node) {\n        return node.kind === 'RenameColumnNode';\n    },\n    create(column, newColumn) {\n        return freeze({\n            kind: 'RenameColumnNode',\n            column: ColumnNode.create(column),\n            renameTo: ColumnNode.create(newColumn),\n        });\n    },\n});\n", "/// <reference types=\"./check-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const CheckConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'CheckConstraintNode';\n    },\n    create(expression, constraintName) {\n        return freeze({\n            kind: 'CheckConstraintNode',\n            expression,\n            name: constraintName ? IdentifierNode.create(constraintName) : undefined,\n        });\n    },\n});\n", "/// <reference types=\"./references-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nexport const ON_MODIFY_FOREIGN_ACTIONS = [\n    'no action',\n    'restrict',\n    'cascade',\n    'set null',\n    'set default',\n];\n/**\n * @internal\n */\nexport const ReferencesNode = freeze({\n    is(node) {\n        return node.kind === 'ReferencesNode';\n    },\n    create(table, columns) {\n        return freeze({\n            kind: 'ReferencesNode',\n            table,\n            columns: freeze([...columns]),\n        });\n    },\n    cloneWithOnDelete(references, onDelete) {\n        return freeze({\n            ...references,\n            onDelete,\n        });\n    },\n    cloneWithOnUpdate(references, onUpdate) {\n        return freeze({\n            ...references,\n            onUpdate,\n        });\n    },\n});\n", "/// <reference types=\"./default-value-parser.d.ts\" />\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nimport { ValueNode } from '../operation-node/value-node.js';\nexport function parseDefaultValueExpression(value) {\n    return isOperationNodeSource(value)\n        ? value.toOperationNode()\n        : ValueNode.createImmediate(value);\n}\n", "/// <reference types=\"./generated-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const GeneratedNode = freeze({\n    is(node) {\n        return node.kind === 'GeneratedNode';\n    },\n    create(params) {\n        return freeze({\n            kind: 'GeneratedNode',\n            ...params,\n        });\n    },\n    createWithExpression(expression) {\n        return freeze({\n            kind: 'GeneratedNode',\n            always: true,\n            expression,\n        });\n    },\n    cloneWith(node, params) {\n        return freeze({\n            ...node,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./default-value-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const DefaultValueNode = freeze({\n    is(node) {\n        return node.kind === 'DefaultValueNode';\n    },\n    create(defaultValue) {\n        return freeze({\n            kind: 'DefaultValueNode',\n            defaultValue,\n        });\n    },\n});\n", "/// <reference types=\"./on-modify-action-parser.d.ts\" />\nimport { ON_MODIFY_FOREIGN_ACTIONS, } from '../operation-node/references-node.js';\nexport function parseOnModifyForeignAction(action) {\n    if (ON_MODIFY_FOREIGN_ACTIONS.includes(action)) {\n        return action;\n    }\n    throw new Error(`invalid OnModifyForeignAction ${action}`);\n}\n", "/// <reference types=\"./column-definition-builder.d.ts\" />\nimport { CheckConstraintNode } from '../operation-node/check-constraint-node.js';\nimport { ReferencesNode, } from '../operation-node/references-node.js';\nimport { SelectAllNode } from '../operation-node/select-all-node.js';\nimport { parseStringReference } from '../parser/reference-parser.js';\nimport { ColumnDefinitionNode } from '../operation-node/column-definition-node.js';\nimport { parseDefaultValueExpression, } from '../parser/default-value-parser.js';\nimport { GeneratedNode } from '../operation-node/generated-node.js';\nimport { DefaultValueNode } from '../operation-node/default-value-node.js';\nimport { parseOnModifyForeignAction } from '../parser/on-modify-action-parser.js';\nexport class ColumnDefinitionBuilder {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /**\n     * Adds `auto_increment` or `autoincrement` to the column definition\n     * depending on the dialect.\n     *\n     * Some dialects like PostgreSQL don't support this. On PostgreSQL\n     * you can use the `serial` or `bigserial` data type instead.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.autoIncrement().primaryKey())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `id` integer primary key auto_increment\n     * )\n     * ```\n     */\n    autoIncrement() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { autoIncrement: true }));\n    }\n    /**\n     * Makes the column an identity column.\n     *\n     * This only works on some dialects like MS SQL Server (MSSQL).\n     *\n     * For PostgreSQL's `generated always as identity` use {@link generatedAlwaysAsIdentity}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.identity().primaryKey())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MSSQL):\n     *\n     * ```sql\n     * create table \"person\" (\n     *   \"id\" integer identity primary key\n     * )\n     * ```\n     */\n    identity() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { identity: true }));\n    }\n    /**\n     * Makes the column the primary key.\n     *\n     * If you want to specify a composite primary key use the\n     * {@link CreateTableBuilder.addPrimaryKeyConstraint} method.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.primaryKey())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `id` integer primary key\n     * )\n     */\n    primaryKey() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { primaryKey: true }));\n    }\n    /**\n     * Adds a foreign key constraint for the column.\n     *\n     * If your database engine doesn't support foreign key constraints in the\n     * column definition (like MySQL 5) you need to call the table level\n     * {@link CreateTableBuilder.addForeignKeyConstraint} method instead.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('owner_id', 'integer', (col) => col.references('person.id'))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create table \"pet\" (\n     *   \"owner_id\" integer references \"person\" (\"id\")\n     * )\n     * ```\n     */\n    references(ref) {\n        const references = parseStringReference(ref);\n        if (!references.table || SelectAllNode.is(references.column)) {\n            throw new Error(`invalid call references('${ref}'). The reference must have format table.column or schema.table.column`);\n        }\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            references: ReferencesNode.create(references.table, [\n                references.column,\n            ]),\n        }));\n    }\n    /**\n     * Adds an `on delete` constraint for the foreign key column.\n     *\n     * If your database engine doesn't support foreign key constraints in the\n     * column definition (like MySQL 5) you need to call the table level\n     * {@link CreateTableBuilder.addForeignKeyConstraint} method instead.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn(\n     *     'owner_id',\n     *     'integer',\n     *     (col) => col.references('person.id').onDelete('cascade')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create table \"pet\" (\n     *   \"owner_id\" integer references \"person\" (\"id\") on delete cascade\n     * )\n     * ```\n     */\n    onDelete(onDelete) {\n        if (!this.#node.references) {\n            throw new Error('on delete constraint can only be added for foreign keys');\n        }\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            references: ReferencesNode.cloneWithOnDelete(this.#node.references, parseOnModifyForeignAction(onDelete)),\n        }));\n    }\n    /**\n     * Adds an `on update` constraint for the foreign key column.\n     *\n     * If your database engine doesn't support foreign key constraints in the\n     * column definition (like MySQL 5) you need to call the table level\n     * {@link CreateTableBuilder.addForeignKeyConstraint} method instead.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn(\n     *     'owner_id',\n     *     'integer',\n     *     (col) => col.references('person.id').onUpdate('cascade')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create table \"pet\" (\n     *   \"owner_id\" integer references \"person\" (\"id\") on update cascade\n     * )\n     * ```\n     */\n    onUpdate(onUpdate) {\n        if (!this.#node.references) {\n            throw new Error('on update constraint can only be added for foreign keys');\n        }\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            references: ReferencesNode.cloneWithOnUpdate(this.#node.references, parseOnModifyForeignAction(onUpdate)),\n        }));\n    }\n    /**\n     * Adds a unique constraint for the column.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('email', 'varchar(255)', col => col.unique())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `email` varchar(255) unique\n     * )\n     * ```\n     */\n    unique() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { unique: true }));\n    }\n    /**\n     * Adds a `not null` constraint for the column.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('first_name', 'varchar(255)', col => col.notNull())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `first_name` varchar(255) not null\n     * )\n     * ```\n     */\n    notNull() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { notNull: true }));\n    }\n    /**\n     * Adds a `unsigned` modifier for the column.\n     *\n     * This only works on some dialects like MySQL.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('age', 'integer', col => col.unsigned())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `age` integer unsigned\n     * )\n     * ```\n     */\n    unsigned() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { unsigned: true }));\n    }\n    /**\n     * Adds a default value constraint for the column.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('number_of_legs', 'integer', (col) => col.defaultTo(4))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `pet` (\n     *   `number_of_legs` integer default 4\n     * )\n     * ```\n     *\n     * Values passed to `defaultTo` are interpreted as value literals by default. You can define\n     * an arbitrary SQL expression using the {@link sql} template tag:\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn(\n     *     'created_at',\n     *     'timestamp',\n     *     (col) => col.defaultTo(sql`CURRENT_TIMESTAMP`)\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `pet` (\n     *   `created_at` timestamp default CURRENT_TIMESTAMP\n     * )\n     * ```\n     */\n    defaultTo(value) {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            defaultTo: DefaultValueNode.create(parseDefaultValueExpression(value)),\n        }));\n    }\n    /**\n     * Adds a check constraint for the column.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('number_of_legs', 'integer', (col) =>\n     *     col.check(sql`number_of_legs < 5`)\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `pet` (\n     *   `number_of_legs` integer check (number_of_legs < 5)\n     * )\n     * ```\n     */\n    check(expression) {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            check: CheckConstraintNode.create(expression.toOperationNode()),\n        }));\n    }\n    /**\n     * Makes the column a generated column using a `generated always as` statement.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('full_name', 'varchar(255)',\n     *     (col) => col.generatedAlwaysAs(sql`concat(first_name, ' ', last_name)`)\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `full_name` varchar(255) generated always as (concat(first_name, ' ', last_name))\n     * )\n     * ```\n     */\n    generatedAlwaysAs(expression) {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            generated: GeneratedNode.createWithExpression(expression.toOperationNode()),\n        }));\n    }\n    /**\n     * Adds the `generated always as identity` specifier.\n     *\n     * This only works on some dialects like PostgreSQL.\n     *\n     * For MS SQL Server (MSSQL)'s identity column use {@link identity}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.generatedAlwaysAsIdentity().primaryKey())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create table \"person\" (\n     *   \"id\" integer generated always as identity primary key\n     * )\n     * ```\n     */\n    generatedAlwaysAsIdentity() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            generated: GeneratedNode.create({ identity: true, always: true }),\n        }));\n    }\n    /**\n     * Adds the `generated by default as identity` specifier on supported dialects.\n     *\n     * This only works on some dialects like PostgreSQL.\n     *\n     * For MS SQL Server (MSSQL)'s identity column use {@link identity}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.generatedByDefaultAsIdentity().primaryKey())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create table \"person\" (\n     *   \"id\" integer generated by default as identity primary key\n     * )\n     * ```\n     */\n    generatedByDefaultAsIdentity() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            generated: GeneratedNode.create({ identity: true, byDefault: true }),\n        }));\n    }\n    /**\n     * Makes a generated column stored instead of virtual. This method can only\n     * be used with {@link generatedAlwaysAs}\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('full_name', 'varchar(255)', (col) => col\n     *     .generatedAlwaysAs(sql`concat(first_name, ' ', last_name)`)\n     *     .stored()\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `full_name` varchar(255) generated always as (concat(first_name, ' ', last_name)) stored\n     * )\n     * ```\n     */\n    stored() {\n        if (!this.#node.generated) {\n            throw new Error('stored() can only be called after generatedAlwaysAs');\n        }\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, {\n            generated: GeneratedNode.cloneWith(this.#node.generated, {\n                stored: true,\n            }),\n        }));\n    }\n    /**\n     * This can be used to add any additional SQL right after the column's data type.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.primaryKey())\n     *   .addColumn(\n     *     'first_name',\n     *     'varchar(36)',\n     *     (col) => col.modifyFront(sql`collate utf8mb4_general_ci`).notNull()\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `id` integer primary key,\n     *   `first_name` varchar(36) collate utf8mb4_general_ci not null\n     * )\n     * ```\n     */\n    modifyFront(modifier) {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWithFrontModifier(this.#node, modifier.toOperationNode()));\n    }\n    /**\n     * Adds `nulls not distinct` specifier.\n     * Should be used with `unique` constraint.\n     *\n     * This only works on some dialects like PostgreSQL.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.primaryKey())\n     *   .addColumn('first_name', 'varchar(30)', col => col.unique().nullsNotDistinct())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create table \"person\" (\n     *   \"id\" integer primary key,\n     *   \"first_name\" varchar(30) unique nulls not distinct\n     * )\n     * ```\n     */\n    nullsNotDistinct() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { nullsNotDistinct: true }));\n    }\n    /**\n     * Adds `if not exists` specifier. This only works for PostgreSQL.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .alterTable('person')\n     *   .addColumn('email', 'varchar(255)', col => col.unique().ifNotExists())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * alter table \"person\" add column if not exists \"email\" varchar(255) unique\n     * ```\n     */\n    ifNotExists() {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWith(this.#node, { ifNotExists: true }));\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the column definition.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.primaryKey())\n     *   .addColumn(\n     *     'age',\n     *     'integer',\n     *     col => col.unsigned()\n     *       .notNull()\n     *       .modifyEnd(sql`comment ${sql.lit('it is not polite to ask a woman her age')}`)\n     *   )\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `id` integer primary key,\n     *   `age` integer unsigned not null comment 'it is not polite to ask a woman her age'\n     * )\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new ColumnDefinitionBuilder(ColumnDefinitionNode.cloneWithEndModifier(this.#node, modifier.toOperationNode()));\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\n", "/// <reference types=\"./modify-column-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const ModifyColumnNode = freeze({\n    is(node) {\n        return node.kind === 'ModifyColumnNode';\n    },\n    create(column) {\n        return freeze({\n            kind: 'ModifyColumnNode',\n            column,\n        });\n    },\n});\n", "/// <reference types=\"./foreign-key-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\nimport { ReferencesNode } from './references-node.js';\n/**\n * @internal\n */\nexport const ForeignKeyConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'ForeignKeyConstraintNode';\n    },\n    create(sourceColumns, targetTable, targetColumns, constraintName) {\n        return freeze({\n            kind: 'ForeignKeyConstraintNode',\n            columns: sourceColumns,\n            references: ReferencesNode.create(targetTable, targetColumns),\n            name: constraintName ? IdentifierNode.create(constraintName) : undefined,\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./foreign-key-constraint-builder.d.ts\" />\nimport { ForeignKeyConstraintNode } from '../operation-node/foreign-key-constraint-node.js';\nimport { parseOnModifyForeignAction } from '../parser/on-modify-action-parser.js';\nexport class ForeignKeyConstraintBuilder {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    onDelete(onDelete) {\n        return new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.cloneWith(this.#node, {\n            onDelete: parseOnModifyForeignAction(onDelete),\n        }));\n    }\n    onUpdate(onUpdate) {\n        return new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.cloneWith(this.#node, {\n            onUpdate: parseOnModifyForeignAction(onUpdate),\n        }));\n    }\n    deferrable() {\n        return new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.cloneWith(this.#node, { deferrable: true }));\n    }\n    notDeferrable() {\n        return new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.cloneWith(this.#node, { deferrable: false }));\n    }\n    initiallyDeferred() {\n        return new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.cloneWith(this.#node, {\n            initiallyDeferred: true,\n        }));\n    }\n    initiallyImmediate() {\n        return new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.cloneWith(this.#node, {\n            initiallyDeferred: false,\n        }));\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\n", "/// <reference types=\"./add-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const AddConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'AddConstraintNode';\n    },\n    create(constraint) {\n        return freeze({\n            kind: 'AddConstraintNode',\n            constraint,\n        });\n    },\n});\n", "/// <reference types=\"./unique-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const UniqueConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'UniqueConstraintNode';\n    },\n    create(columns, constraintName, nullsNotDistinct) {\n        return freeze({\n            kind: 'UniqueConstraintNode',\n            columns: freeze(columns.map(ColumnNode.create)),\n            name: constraintName ? IdentifierNode.create(constraintName) : undefined,\n            nullsNotDistinct,\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./drop-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const DropConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'DropConstraintNode';\n    },\n    create(constraintName) {\n        return freeze({\n            kind: 'DropConstraintNode',\n            constraintName: IdentifierNode.create(constraintName),\n        });\n    },\n    cloneWith(dropConstraint, props) {\n        return freeze({\n            ...dropConstraint,\n            ...props,\n        });\n    },\n});\n", "/// <reference types=\"./alter-column-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\n/**\n * @internal\n */\nexport const AlterColumnNode = freeze({\n    is(node) {\n        return node.kind === 'AlterColumnNode';\n    },\n    create(column, prop, value) {\n        return freeze({\n            kind: 'AlterColumnNode',\n            column: ColumnNode.create(column),\n            [prop]: value,\n        });\n    },\n});\n", "/// <reference types=\"./alter-column-builder.d.ts\" />\nimport { AlterColumnNode } from '../operation-node/alter-column-node.js';\nimport { parseDataTypeExpression, } from '../parser/data-type-parser.js';\nimport { parseDefaultValueExpression, } from '../parser/default-value-parser.js';\nexport class AlterColumnBuilder {\n    #column;\n    constructor(column) {\n        this.#column = column;\n    }\n    setDataType(dataType) {\n        return new AlteredColumnBuilder(AlterColumnNode.create(this.#column, 'dataType', parseDataTypeExpression(dataType)));\n    }\n    setDefault(value) {\n        return new AlteredColumnBuilder(AlterColumnNode.create(this.#column, 'setDefault', parseDefaultValueExpression(value)));\n    }\n    dropDefault() {\n        return new AlteredColumnBuilder(AlterColumnNode.create(this.#column, 'dropDefault', true));\n    }\n    setNotNull() {\n        return new AlteredColumnBuilder(AlterColumnNode.create(this.#column, 'setNotNull', true));\n    }\n    dropNotNull() {\n        return new AlteredColumnBuilder(AlterColumnNode.create(this.#column, 'dropNotNull', true));\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n}\n/**\n * Allows us to force consumers to do exactly one alteration to a column.\n *\n * One cannot do no alterations:\n *\n * ```ts\n * await db.schema\n *   .alterTable('person')\n * //  .execute() // Property 'execute' does not exist on type 'AlteredColumnBuilder'.\n * ```\n *\n * ```ts\n * await db.schema\n *   .alterTable('person')\n * //  .alterColumn('age', (ac) => ac) // Type 'AlterColumnBuilder' is not assignable to type 'AlteredColumnBuilder'.\n * //  .execute()\n * ```\n *\n * One cannot do multiple alterations:\n *\n * ```ts\n * await db.schema\n *   .alterTable('person')\n * //  .alterColumn('age', (ac) => ac.dropNotNull().setNotNull()) // Property 'setNotNull' does not exist on type 'AlteredColumnBuilder'.\n * //  .execute()\n * ```\n *\n * Which would now throw a compilation error, instead of a runtime error.\n */\nexport class AlteredColumnBuilder {\n    #alterColumnNode;\n    constructor(alterColumnNode) {\n        this.#alterColumnNode = alterColumnNode;\n    }\n    toOperationNode() {\n        return this.#alterColumnNode;\n    }\n}\n", "/// <reference types=\"./alter-table-executor.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nexport class AlterTableExecutor {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./alter-table-add-foreign-key-constraint-builder.d.ts\" />\nimport { AddConstraintNode } from '../operation-node/add-constraint-node.js';\nimport { AlterTableNode } from '../operation-node/alter-table-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class AlterTableAddForeignKeyConstraintBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    onDelete(onDelete) {\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder: this.#props.constraintBuilder.onDelete(onDelete),\n        });\n    }\n    onUpdate(onUpdate) {\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder: this.#props.constraintBuilder.onUpdate(onUpdate),\n        });\n    }\n    deferrable() {\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder: this.#props.constraintBuilder.deferrable(),\n        });\n    }\n    notDeferrable() {\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder: this.#props.constraintBuilder.notDeferrable(),\n        });\n    }\n    initiallyDeferred() {\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder: this.#props.constraintBuilder.initiallyDeferred(),\n        });\n    }\n    initiallyImmediate() {\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder: this.#props.constraintBuilder.initiallyImmediate(),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(AlterTableNode.cloneWithTableProps(this.#props.node, {\n            addConstraint: AddConstraintNode.create(this.#props.constraintBuilder.toOperationNode()),\n        }), this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./alter-table-drop-constraint-builder.d.ts\" />\nimport { AlterTableNode } from '../operation-node/alter-table-node.js';\nimport { DropConstraintNode } from '../operation-node/drop-constraint-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class AlterTableDropConstraintBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    ifExists() {\n        return new AlterTableDropConstraintBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                dropConstraint: DropConstraintNode.cloneWith(this.#props.node.dropConstraint, {\n                    ifExists: true,\n                }),\n            }),\n        });\n    }\n    cascade() {\n        return new AlterTableDropConstraintBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                dropConstraint: DropConstraintNode.cloneWith(this.#props.node.dropConstraint, {\n                    modifier: 'cascade',\n                }),\n            }),\n        });\n    }\n    restrict() {\n        return new AlterTableDropConstraintBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                dropConstraint: DropConstraintNode.cloneWith(this.#props.node.dropConstraint, {\n                    modifier: 'restrict',\n                }),\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./primary-key-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ColumnNode } from './column-node.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const PrimaryKeyConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'PrimaryKeyConstraintNode';\n    },\n    create(columns, constraintName) {\n        return freeze({\n            kind: 'PrimaryKeyConstraintNode',\n            columns: freeze(columns.map(ColumnNode.create)),\n            name: constraintName ? IdentifierNode.create(constraintName) : undefined,\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({ ...node, ...props });\n    },\n});\n/**\n * Backwards compatibility for a typo in the codebase.\n *\n * @deprecated Use {@link PrimaryKeyConstraintNode} instead.\n */\nexport const PrimaryConstraintNode = PrimaryKeyConstraintNode;\n", "/// <reference types=\"./add-index-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const AddIndexNode = freeze({\n    is(node) {\n        return node.kind === 'AddIndexNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'AddIndexNode',\n            name: IdentifierNode.create(name),\n        });\n    },\n    cloneWith(node, props) {\n        return freeze({\n            ...node,\n            ...props,\n        });\n    },\n    cloneWithColumns(node, columns) {\n        return freeze({\n            ...node,\n            columns: [...(node.columns || []), ...columns],\n        });\n    },\n});\n", "/// <reference types=\"./alter-table-add-index-builder.d.ts\" />\nimport { AddIndexNode } from '../operation-node/add-index-node.js';\nimport { AlterTableNode } from '../operation-node/alter-table-node.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { parseOrderedColumnName, } from '../parser/reference-parser.js';\nimport { freeze } from '../util/object-utils.js';\nexport class AlterTableAddIndexBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Makes the index unique.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .alterTable('person')\n     *   .addIndex('person_first_name_index')\n     *   .unique()\n     *   .column('email')\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * alter table `person` add unique index `person_first_name_index` (`email`)\n     * ```\n     */\n    unique() {\n        return new AlterTableAddIndexBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addIndex: AddIndexNode.cloneWith(this.#props.node.addIndex, {\n                    unique: true,\n                }),\n            }),\n        });\n    }\n    /**\n     * Adds a column to the index.\n     *\n     * Also see {@link columns} for adding multiple columns at once or {@link expression}\n     * for specifying an arbitrary expression.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .alterTable('person')\n     *   .addIndex('person_first_name_and_age_index')\n     *   .column('first_name')\n     *   .column('age desc')\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * alter table `person` add index `person_first_name_and_age_index` (`first_name`, `age` desc)\n     * ```\n     */\n    column(column) {\n        return new AlterTableAddIndexBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addIndex: AddIndexNode.cloneWithColumns(this.#props.node.addIndex, [\n                    parseOrderedColumnName(column),\n                ]),\n            }),\n        });\n    }\n    /**\n     * Specifies a list of columns for the index.\n     *\n     * Also see {@link column} for adding a single column or {@link expression} for\n     * specifying an arbitrary expression.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .alterTable('person')\n     *   .addIndex('person_first_name_and_age_index')\n     *   .columns(['first_name', 'age desc'])\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * alter table `person` add index `person_first_name_and_age_index` (`first_name`, `age` desc)\n     * ```\n     */\n    columns(columns) {\n        return new AlterTableAddIndexBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addIndex: AddIndexNode.cloneWithColumns(this.#props.node.addIndex, columns.map(parseOrderedColumnName)),\n            }),\n        });\n    }\n    /**\n     * Specifies an arbitrary expression for the index.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .alterTable('person')\n     *   .addIndex('person_first_name_index')\n     *   .expression(sql<boolean>`(first_name < 'Sami')`)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * alter table `person` add index `person_first_name_index` ((first_name < 'Sami'))\n     * ```\n     */\n    expression(expression) {\n        return new AlterTableAddIndexBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addIndex: AddIndexNode.cloneWithColumns(this.#props.node.addIndex, [\n                    expression.toOperationNode(),\n                ]),\n            }),\n        });\n    }\n    using(indexType) {\n        return new AlterTableAddIndexBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addIndex: AddIndexNode.cloneWith(this.#props.node.addIndex, {\n                    using: RawNode.createWithSql(indexType),\n                }),\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./unique-constraint-builder.d.ts\" />\nimport { UniqueConstraintNode } from '../operation-node/unique-constraint-node.js';\nexport class UniqueConstraintNodeBuilder {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /**\n     * Adds `nulls not distinct` to the unique constraint definition\n     *\n     * Supported by PostgreSQL dialect only\n     */\n    nullsNotDistinct() {\n        return new UniqueConstraintNodeBuilder(UniqueConstraintNode.cloneWith(this.#node, { nullsNotDistinct: true }));\n    }\n    deferrable() {\n        return new UniqueConstraintNodeBuilder(UniqueConstraintNode.cloneWith(this.#node, { deferrable: true }));\n    }\n    notDeferrable() {\n        return new UniqueConstraintNodeBuilder(UniqueConstraintNode.cloneWith(this.#node, { deferrable: false }));\n    }\n    initiallyDeferred() {\n        return new UniqueConstraintNodeBuilder(UniqueConstraintNode.cloneWith(this.#node, {\n            initiallyDeferred: true,\n        }));\n    }\n    initiallyImmediate() {\n        return new UniqueConstraintNodeBuilder(UniqueConstraintNode.cloneWith(this.#node, {\n            initiallyDeferred: false,\n        }));\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\n", "/// <reference types=\"./primary-key-constraint-builder.d.ts\" />\nimport { PrimaryKeyConstraintNode } from '../operation-node/primary-key-constraint-node.js';\nexport class PrimaryKeyConstraintBuilder {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    deferrable() {\n        return new PrimaryKeyConstraintBuilder(PrimaryKeyConstraintNode.cloneWith(this.#node, { deferrable: true }));\n    }\n    notDeferrable() {\n        return new PrimaryKeyConstraintBuilder(PrimaryKeyConstraintNode.cloneWith(this.#node, { deferrable: false }));\n    }\n    initiallyDeferred() {\n        return new PrimaryKeyConstraintBuilder(PrimaryKeyConstraintNode.cloneWith(this.#node, {\n            initiallyDeferred: true,\n        }));\n    }\n    initiallyImmediate() {\n        return new PrimaryKeyConstraintBuilder(PrimaryKeyConstraintNode.cloneWith(this.#node, {\n            initiallyDeferred: false,\n        }));\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\n", "/// <reference types=\"./check-constraint-builder.d.ts\" />\nexport class CheckConstraintBuilder {\n    #node;\n    constructor(node) {\n        this.#node = node;\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#node;\n    }\n}\n", "/// <reference types=\"./rename-constraint-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { IdentifierNode } from './identifier-node.js';\n/**\n * @internal\n */\nexport const RenameConstraintNode = freeze({\n    is(node) {\n        return node.kind === 'RenameConstraintNode';\n    },\n    create(oldName, newName) {\n        return freeze({\n            kind: 'RenameConstraintNode',\n            oldName: IdentifierNode.create(oldName),\n            newName: IdentifierNode.create(newName),\n        });\n    },\n});\n", "/// <reference types=\"./alter-table-builder.d.ts\" />\nimport { AddColumnNode } from '../operation-node/add-column-node.js';\nimport { AlterTableNode } from '../operation-node/alter-table-node.js';\nimport { ColumnDefinitionNode } from '../operation-node/column-definition-node.js';\nimport { DropColumnNode } from '../operation-node/drop-column-node.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { RenameColumnNode } from '../operation-node/rename-column-node.js';\nimport { freeze, noop } from '../util/object-utils.js';\nimport { ColumnDefinitionBuilder, } from './column-definition-builder.js';\nimport { ModifyColumnNode } from '../operation-node/modify-column-node.js';\nimport { parseDataTypeExpression, } from '../parser/data-type-parser.js';\nimport { ForeignKeyConstraintBuilder, } from './foreign-key-constraint-builder.js';\nimport { AddConstraintNode } from '../operation-node/add-constraint-node.js';\nimport { UniqueConstraintNode } from '../operation-node/unique-constraint-node.js';\nimport { CheckConstraintNode } from '../operation-node/check-constraint-node.js';\nimport { ForeignKeyConstraintNode } from '../operation-node/foreign-key-constraint-node.js';\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { DropConstraintNode } from '../operation-node/drop-constraint-node.js';\nimport { AlterColumnBuilder, } from './alter-column-builder.js';\nimport { AlterTableExecutor } from './alter-table-executor.js';\nimport { AlterTableAddForeignKeyConstraintBuilder } from './alter-table-add-foreign-key-constraint-builder.js';\nimport { AlterTableDropConstraintBuilder } from './alter-table-drop-constraint-builder.js';\nimport { PrimaryKeyConstraintNode } from '../operation-node/primary-key-constraint-node.js';\nimport { DropIndexNode } from '../operation-node/drop-index-node.js';\nimport { AddIndexNode } from '../operation-node/add-index-node.js';\nimport { AlterTableAddIndexBuilder } from './alter-table-add-index-builder.js';\nimport { UniqueConstraintNodeBuilder, } from './unique-constraint-builder.js';\nimport { PrimaryKeyConstraintBuilder, } from './primary-key-constraint-builder.js';\nimport { CheckConstraintBuilder, } from './check-constraint-builder.js';\nimport { RenameConstraintNode } from '../operation-node/rename-constraint-node.js';\n/**\n * This builder can be used to create a `alter table` query.\n */\nexport class AlterTableBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    renameTo(newTableName) {\n        return new AlterTableExecutor({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                renameTo: parseTable(newTableName),\n            }),\n        });\n    }\n    setSchema(newSchema) {\n        return new AlterTableExecutor({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                setSchema: IdentifierNode.create(newSchema),\n            }),\n        });\n    }\n    alterColumn(column, alteration) {\n        const builder = alteration(new AlterColumnBuilder(column));\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, builder.toOperationNode()),\n        });\n    }\n    dropColumn(column) {\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, DropColumnNode.create(column)),\n        });\n    }\n    renameColumn(column, newColumn) {\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, RenameColumnNode.create(column, newColumn)),\n        });\n    }\n    addColumn(columnName, dataType, build = noop) {\n        const builder = build(new ColumnDefinitionBuilder(ColumnDefinitionNode.create(columnName, parseDataTypeExpression(dataType))));\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, AddColumnNode.create(builder.toOperationNode())),\n        });\n    }\n    modifyColumn(columnName, dataType, build = noop) {\n        const builder = build(new ColumnDefinitionBuilder(ColumnDefinitionNode.create(columnName, parseDataTypeExpression(dataType))));\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, ModifyColumnNode.create(builder.toOperationNode())),\n        });\n    }\n    /**\n     * See {@link CreateTableBuilder.addUniqueConstraint}\n     */\n    addUniqueConstraint(constraintName, columns, build = noop) {\n        const uniqueConstraintBuilder = build(new UniqueConstraintNodeBuilder(UniqueConstraintNode.create(columns, constraintName)));\n        return new AlterTableExecutor({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addConstraint: AddConstraintNode.create(uniqueConstraintBuilder.toOperationNode()),\n            }),\n        });\n    }\n    /**\n     * See {@link CreateTableBuilder.addCheckConstraint}\n     */\n    addCheckConstraint(constraintName, checkExpression, build = noop) {\n        const constraintBuilder = build(new CheckConstraintBuilder(CheckConstraintNode.create(checkExpression.toOperationNode(), constraintName)));\n        return new AlterTableExecutor({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addConstraint: AddConstraintNode.create(constraintBuilder.toOperationNode()),\n            }),\n        });\n    }\n    /**\n     * See {@link CreateTableBuilder.addForeignKeyConstraint}\n     *\n     * Unlike {@link CreateTableBuilder.addForeignKeyConstraint} this method returns\n     * the constraint builder and doesn't take a callback as the last argument. This\n     * is because you can only add one column per `ALTER TABLE` query.\n     */\n    addForeignKeyConstraint(constraintName, columns, targetTable, targetColumns, build = noop) {\n        const constraintBuilder = build(new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.create(columns.map(ColumnNode.create), parseTable(targetTable), targetColumns.map(ColumnNode.create), constraintName)));\n        return new AlterTableAddForeignKeyConstraintBuilder({\n            ...this.#props,\n            constraintBuilder,\n        });\n    }\n    /**\n     * See {@link CreateTableBuilder.addPrimaryKeyConstraint}\n     */\n    addPrimaryKeyConstraint(constraintName, columns, build = noop) {\n        const constraintBuilder = build(new PrimaryKeyConstraintBuilder(PrimaryKeyConstraintNode.create(columns, constraintName)));\n        return new AlterTableExecutor({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addConstraint: AddConstraintNode.create(constraintBuilder.toOperationNode()),\n            }),\n        });\n    }\n    dropConstraint(constraintName) {\n        return new AlterTableDropConstraintBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                dropConstraint: DropConstraintNode.create(constraintName),\n            }),\n        });\n    }\n    renameConstraint(oldName, newName) {\n        return new AlterTableDropConstraintBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                renameConstraint: RenameConstraintNode.create(oldName, newName),\n            }),\n        });\n    }\n    /**\n     * This can be used to add index to table.\n     *\n     *  ### Examples\n     *\n     * ```ts\n     * db.schema.alterTable('person')\n     *   .addIndex('person_email_index')\n     *   .column('email')\n     *   .unique()\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * alter table `person` add unique index `person_email_index` (`email`)\n     * ```\n     */\n    addIndex(indexName) {\n        return new AlterTableAddIndexBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                addIndex: AddIndexNode.create(indexName),\n            }),\n        });\n    }\n    /**\n     * This can be used to drop index from table.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * db.schema.alterTable('person')\n     *   .dropIndex('person_email_index')\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * alter table `person` drop index `test_first_name_index`\n     * ```\n     */\n    dropIndex(indexName) {\n        return new AlterTableExecutor({\n            ...this.#props,\n            node: AlterTableNode.cloneWithTableProps(this.#props.node, {\n                dropIndex: DropIndexNode.create(indexName),\n            }),\n        });\n    }\n    /**\n     * Calls the given function passing `this` as the only argument.\n     *\n     * See {@link CreateTableBuilder.$call}\n     */\n    $call(func) {\n        return func(this);\n    }\n}\nexport class AlterTableColumnAlteringBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    alterColumn(column, alteration) {\n        const builder = alteration(new AlterColumnBuilder(column));\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, builder.toOperationNode()),\n        });\n    }\n    dropColumn(column) {\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, DropColumnNode.create(column)),\n        });\n    }\n    renameColumn(column, newColumn) {\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, RenameColumnNode.create(column, newColumn)),\n        });\n    }\n    addColumn(columnName, dataType, build = noop) {\n        const builder = build(new ColumnDefinitionBuilder(ColumnDefinitionNode.create(columnName, parseDataTypeExpression(dataType))));\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, AddColumnNode.create(builder.toOperationNode())),\n        });\n    }\n    modifyColumn(columnName, dataType, build = noop) {\n        const builder = build(new ColumnDefinitionBuilder(ColumnDefinitionNode.create(columnName, parseDataTypeExpression(dataType))));\n        return new AlterTableColumnAlteringBuilder({\n            ...this.#props,\n            node: AlterTableNode.cloneWithColumnAlteration(this.#props.node, ModifyColumnNode.create(builder.toOperationNode())),\n        });\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./immediate-value-transformer.d.ts\" />\nimport { OperationNodeTransformer } from '../../operation-node/operation-node-transformer.js';\nimport { ValueListNode } from '../../operation-node/value-list-node.js';\nimport { ValueNode } from '../../operation-node/value-node.js';\n/**\n * Transforms all ValueNodes to immediate.\n *\n * WARNING! This should never be part of the public API. Users should never use this.\n * This is an internal helper.\n *\n * @internal\n */\nexport class ImmediateValueTransformer extends OperationNodeTransformer {\n    transformPrimitiveValueList(node) {\n        return ValueListNode.create(node.values.map(ValueNode.createImmediate));\n    }\n    transformValue(node) {\n        return ValueNode.createImmediate(node.value);\n    }\n}\n", "/// <reference types=\"./create-index-builder.d.ts\" />\nimport { CreateIndexNode, } from '../operation-node/create-index-node.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { parseOrderedColumnName, } from '../parser/reference-parser.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { freeze } from '../util/object-utils.js';\nimport { parseValueBinaryOperationOrExpression, } from '../parser/binary-operation-parser.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { ImmediateValueTransformer } from '../plugin/immediate-value/immediate-value-transformer.js';\nexport class CreateIndexBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Adds the \"if not exists\" modifier.\n     *\n     * If the index already exists, no error is thrown if this method has been called.\n     */\n    ifNotExists() {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWith(this.#props.node, {\n                ifNotExists: true,\n            }),\n        });\n    }\n    /**\n     * Makes the index unique.\n     */\n    unique() {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWith(this.#props.node, {\n                unique: true,\n            }),\n        });\n    }\n    /**\n     * Adds `nulls not distinct` specifier to index.\n     * This only works on some dialects like PostgreSQL.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * db.schema.createIndex('person_first_name_index')\n     *  .on('person')\n     *  .column('first_name')\n     *  .nullsNotDistinct()\n     *  .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create index \"person_first_name_index\"\n     * on \"test\" (\"first_name\")\n     * nulls not distinct;\n     * ```\n     */\n    nullsNotDistinct() {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWith(this.#props.node, {\n                nullsNotDistinct: true,\n            }),\n        });\n    }\n    /**\n     * Specifies the table for the index.\n     */\n    on(table) {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWith(this.#props.node, {\n                table: parseTable(table),\n            }),\n        });\n    }\n    /**\n     * Adds a column to the index.\n     *\n     * Also see {@link columns} for adding multiple columns at once or {@link expression}\n     * for specifying an arbitrary expression.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *         .createIndex('person_first_name_and_age_index')\n     *         .on('person')\n     *         .column('first_name')\n     *         .column('age desc')\n     *         .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create index \"person_first_name_and_age_index\" on \"person\" (\"first_name\", \"age\" desc)\n     * ```\n     */\n    column(column) {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWithColumns(this.#props.node, [\n                parseOrderedColumnName(column),\n            ]),\n        });\n    }\n    /**\n     * Specifies a list of columns for the index.\n     *\n     * Also see {@link column} for adding a single column or {@link expression} for\n     * specifying an arbitrary expression.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *         .createIndex('person_first_name_and_age_index')\n     *         .on('person')\n     *         .columns(['first_name', 'age desc'])\n     *         .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create index \"person_first_name_and_age_index\" on \"person\" (\"first_name\", \"age\" desc)\n     * ```\n     */\n    columns(columns) {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWithColumns(this.#props.node, columns.map(parseOrderedColumnName)),\n        });\n    }\n    /**\n     * Specifies an arbitrary expression for the index.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createIndex('person_first_name_index')\n     *   .on('person')\n     *   .expression(sql`first_name COLLATE \"fi_FI\"`)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create index \"person_first_name_index\" on \"person\" (first_name COLLATE \"fi_FI\")\n     * ```\n     */\n    expression(expression) {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWithColumns(this.#props.node, [\n                expression.toOperationNode(),\n            ]),\n        });\n    }\n    using(indexType) {\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: CreateIndexNode.cloneWith(this.#props.node, {\n                using: RawNode.createWithSql(indexType),\n            }),\n        });\n    }\n    where(...args) {\n        const transformer = new ImmediateValueTransformer();\n        return new CreateIndexBuilder({\n            ...this.#props,\n            node: QueryNode.cloneWithWhere(this.#props.node, transformer.transformNode(parseValueBinaryOperationOrExpression(args), this.#props.queryId)),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./create-schema-builder.d.ts\" />\nimport { CreateSchemaNode } from '../operation-node/create-schema-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class CreateSchemaBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    ifNotExists() {\n        return new CreateSchemaBuilder({\n            ...this.#props,\n            node: CreateSchemaNode.cloneWith(this.#props.node, { ifNotExists: true }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./on-commit-action-parse.d.ts\" />\nimport { ON_COMMIT_ACTIONS, } from '../operation-node/create-table-node.js';\nexport function parseOnCommitAction(action) {\n    if (ON_COMMIT_ACTIONS.includes(action)) {\n        return action;\n    }\n    throw new Error(`invalid OnCommitAction ${action}`);\n}\n", "/// <reference types=\"./create-table-builder.d.ts\" />\nimport { ColumnDefinitionNode } from '../operation-node/column-definition-node.js';\nimport { CreateTableNode, } from '../operation-node/create-table-node.js';\nimport { ColumnDefinitionBuilder } from './column-definition-builder.js';\nimport { freeze, noop } from '../util/object-utils.js';\nimport { ForeignKeyConstraintNode } from '../operation-node/foreign-key-constraint-node.js';\nimport { ColumnNode } from '../operation-node/column-node.js';\nimport { ForeignKeyConstraintBuilder, } from './foreign-key-constraint-builder.js';\nimport { parseDataTypeExpression, } from '../parser/data-type-parser.js';\nimport { PrimaryKeyConstraintNode } from '../operation-node/primary-key-constraint-node.js';\nimport { UniqueConstraintNode } from '../operation-node/unique-constraint-node.js';\nimport { CheckConstraintNode } from '../operation-node/check-constraint-node.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { parseOnCommitAction } from '../parser/on-commit-action-parse.js';\nimport { UniqueConstraintNodeBuilder, } from './unique-constraint-builder.js';\nimport { parseExpression } from '../parser/expression-parser.js';\nimport { PrimaryKeyConstraintBuilder, } from './primary-key-constraint-builder.js';\nimport { CheckConstraintBuilder, } from './check-constraint-builder.js';\n/**\n * This builder can be used to create a `create table` query.\n */\nexport class CreateTableBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Adds the \"temporary\" modifier.\n     *\n     * Use this to create a temporary table.\n     */\n    temporary() {\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWith(this.#props.node, {\n                temporary: true,\n            }),\n        });\n    }\n    /**\n     * Adds an \"on commit\" statement.\n     *\n     * This can be used in conjunction with temporary tables on supported databases\n     * like PostgreSQL.\n     */\n    onCommit(onCommit) {\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWith(this.#props.node, {\n                onCommit: parseOnCommitAction(onCommit),\n            }),\n        });\n    }\n    /**\n     * Adds the \"if not exists\" modifier.\n     *\n     * If the table already exists, no error is thrown if this method has been called.\n     */\n    ifNotExists() {\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWith(this.#props.node, {\n                ifNotExists: true,\n            }),\n        });\n    }\n    /**\n     * Adds a column to the table.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', (col) => col.autoIncrement().primaryKey())\n     *   .addColumn('first_name', 'varchar(50)', (col) => col.notNull())\n     *   .addColumn('last_name', 'varchar(255)')\n     *   .addColumn('bank_balance', 'numeric(8, 2)')\n     *   // You can specify any data type using the `sql` tag if the types\n     *   // don't include it.\n     *   .addColumn('data', sql`any_type_here`)\n     *   .addColumn('parent_id', 'integer', (col) =>\n     *     col.references('person.id').onDelete('cascade')\n     *   )\n     * ```\n     *\n     * With this method, it's once again good to remember that Kysely just builds the\n     * query and doesn't provide the same API for all databases. For example, some\n     * databases like older MySQL don't support the `references` statement in the\n     * column definition. Instead foreign key constraints need to be defined in the\n     * `create table` query. See the next example:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', (col) => col.primaryKey())\n     *   .addColumn('parent_id', 'integer')\n     *   .addForeignKeyConstraint(\n     *     'person_parent_id_fk',\n     *     ['parent_id'],\n     *     'person',\n     *     ['id'],\n     *     (cb) => cb.onDelete('cascade')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * Another good example is that PostgreSQL doesn't support the `auto_increment`\n     * keyword and you need to define an autoincrementing column for example using\n     * `serial`:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'serial', (col) => col.primaryKey())\n     *   .execute()\n     * ```\n     */\n    addColumn(columnName, dataType, build = noop) {\n        const columnBuilder = build(new ColumnDefinitionBuilder(ColumnDefinitionNode.create(columnName, parseDataTypeExpression(dataType))));\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithColumn(this.#props.node, columnBuilder.toOperationNode()),\n        });\n    }\n    /**\n     * Adds a primary key constraint for one or more columns.\n     *\n     * The constraint name can be anything you want, but it must be unique\n     * across the whole database.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('first_name', 'varchar(64)')\n     *   .addColumn('last_name', 'varchar(64)')\n     *   .addPrimaryKeyConstraint('primary_key', ['first_name', 'last_name'])\n     *   .execute()\n     * ```\n     */\n    addPrimaryKeyConstraint(constraintName, columns, build = noop) {\n        const constraintBuilder = build(new PrimaryKeyConstraintBuilder(PrimaryKeyConstraintNode.create(columns, constraintName)));\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithConstraint(this.#props.node, constraintBuilder.toOperationNode()),\n        });\n    }\n    /**\n     * Adds a unique constraint for one or more columns.\n     *\n     * The constraint name can be anything you want, but it must be unique\n     * across the whole database.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('first_name', 'varchar(64)')\n     *   .addColumn('last_name', 'varchar(64)')\n     *   .addUniqueConstraint(\n     *     'first_name_last_name_unique',\n     *     ['first_name', 'last_name']\n     *   )\n     *   .execute()\n     * ```\n     *\n     * In dialects such as PostgreSQL you can specify `nulls not distinct` as follows:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('first_name', 'varchar(64)')\n     *   .addColumn('last_name', 'varchar(64)')\n     *   .addUniqueConstraint(\n     *     'first_name_last_name_unique',\n     *     ['first_name', 'last_name'],\n     *     (cb) => cb.nullsNotDistinct()\n     *   )\n     *   .execute()\n     * ```\n     */\n    addUniqueConstraint(constraintName, columns, build = noop) {\n        const uniqueConstraintBuilder = build(new UniqueConstraintNodeBuilder(UniqueConstraintNode.create(columns, constraintName)));\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithConstraint(this.#props.node, uniqueConstraintBuilder.toOperationNode()),\n        });\n    }\n    /**\n     * Adds a check constraint.\n     *\n     * The constraint name can be anything you want, but it must be unique\n     * across the whole database.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import {\u00A0sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('animal')\n     *   .addColumn('number_of_legs', 'integer')\n     *   .addCheckConstraint('check_legs', sql`number_of_legs < 5`)\n     *   .execute()\n     * ```\n     */\n    addCheckConstraint(constraintName, checkExpression, build = noop) {\n        const constraintBuilder = build(new CheckConstraintBuilder(CheckConstraintNode.create(checkExpression.toOperationNode(), constraintName)));\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithConstraint(this.#props.node, constraintBuilder.toOperationNode()),\n        });\n    }\n    /**\n     * Adds a foreign key constraint.\n     *\n     * The constraint name can be anything you want, but it must be unique\n     * across the whole database.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('owner_id', 'integer')\n     *   .addForeignKeyConstraint(\n     *     'owner_id_foreign',\n     *     ['owner_id'],\n     *     'person',\n     *     ['id'],\n     *   )\n     *   .execute()\n     * ```\n     *\n     * Add constraint for multiple columns:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('owner_id1', 'integer')\n     *   .addColumn('owner_id2', 'integer')\n     *   .addForeignKeyConstraint(\n     *     'owner_id_foreign',\n     *     ['owner_id1', 'owner_id2'],\n     *     'person',\n     *     ['id1', 'id2'],\n     *     (cb) => cb.onDelete('cascade')\n     *   )\n     *   .execute()\n     * ```\n     */\n    addForeignKeyConstraint(constraintName, columns, targetTable, targetColumns, build = noop) {\n        const builder = build(new ForeignKeyConstraintBuilder(ForeignKeyConstraintNode.create(columns.map(ColumnNode.create), parseTable(targetTable), targetColumns.map(ColumnNode.create), constraintName)));\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithConstraint(this.#props.node, builder.toOperationNode()),\n        });\n    }\n    /**\n     * This can be used to add any additional SQL to the front of the query __after__ the `create` keyword.\n     *\n     * Also see {@link temporary}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .modifyFront(sql`global temporary`)\n     *   .addColumn('id', 'integer', col => col.primaryKey())\n     *   .addColumn('first_name', 'varchar(64)', col => col.notNull())\n     *   .addColumn('last_name', 'varchar(64)', col => col.notNull())\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (Postgres):\n     *\n     * ```sql\n     * create global temporary table \"person\" (\n     *   \"id\" integer primary key,\n     *   \"first_name\" varchar(64) not null,\n     *   \"last_name\" varchar(64) not null\n     * )\n     * ```\n     */\n    modifyFront(modifier) {\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithFrontModifier(this.#props.node, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * This can be used to add any additional SQL to the end of the query.\n     *\n     * Also see {@link onCommit}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { sql } from 'kysely'\n     *\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.primaryKey())\n     *   .addColumn('first_name', 'varchar(64)', col => col.notNull())\n     *   .addColumn('last_name', 'varchar(64)', col => col.notNull())\n     *   .modifyEnd(sql`collate utf8_unicode_ci`)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (MySQL):\n     *\n     * ```sql\n     * create table `person` (\n     *   `id` integer primary key,\n     *   `first_name` varchar(64) not null,\n     *   `last_name` varchar(64) not null\n     * ) collate utf8_unicode_ci\n     * ```\n     */\n    modifyEnd(modifier) {\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWithEndModifier(this.#props.node, modifier.toOperationNode()),\n        });\n    }\n    /**\n     * Allows to create table from `select` query.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('copy')\n     *   .temporary()\n     *   .as(db.selectFrom('person').select(['first_name', 'last_name']))\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * create temporary table \"copy\" as\n     * select \"first_name\", \"last_name\" from \"person\"\n     * ```\n     */\n    as(expression) {\n        return new CreateTableBuilder({\n            ...this.#props,\n            node: CreateTableNode.cloneWith(this.#props.node, {\n                selectQuery: parseExpression(expression),\n            }),\n        });\n    }\n    /**\n     * Calls the given function passing `this` as the only argument.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('test')\n     *   .$call((builder) => builder.addColumn('id', 'integer'))\n     *   .execute()\n     * ```\n     *\n     * This is useful for creating reusable functions that can be called with a builder.\n     *\n     * ```ts\n     * import { type CreateTableBuilder, sql } from 'kysely'\n     *\n     * const addDefaultColumns = (ctb: CreateTableBuilder<any, any>) => {\n     *   return ctb\n     *     .addColumn('id', 'integer', (col) => col.notNull())\n     *     .addColumn('created_at', 'date', (col) =>\n     *       col.notNull().defaultTo(sql`now()`)\n     *     )\n     *     .addColumn('updated_at', 'date', (col) =>\n     *       col.notNull().defaultTo(sql`now()`)\n     *     )\n     * }\n     *\n     * await db.schema\n     *   .createTable('test')\n     *   .$call(addDefaultColumns)\n     *   .execute()\n     * ```\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./drop-index-builder.d.ts\" />\nimport { DropIndexNode } from '../operation-node/drop-index-node.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { freeze } from '../util/object-utils.js';\nexport class DropIndexBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Specifies the table the index was created for. This is not needed\n     * in all dialects.\n     */\n    on(table) {\n        return new DropIndexBuilder({\n            ...this.#props,\n            node: DropIndexNode.cloneWith(this.#props.node, {\n                table: parseTable(table),\n            }),\n        });\n    }\n    ifExists() {\n        return new DropIndexBuilder({\n            ...this.#props,\n            node: DropIndexNode.cloneWith(this.#props.node, {\n                ifExists: true,\n            }),\n        });\n    }\n    cascade() {\n        return new DropIndexBuilder({\n            ...this.#props,\n            node: DropIndexNode.cloneWith(this.#props.node, {\n                cascade: true,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./drop-schema-builder.d.ts\" />\nimport { DropSchemaNode } from '../operation-node/drop-schema-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class DropSchemaBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    ifExists() {\n        return new DropSchemaBuilder({\n            ...this.#props,\n            node: DropSchemaNode.cloneWith(this.#props.node, {\n                ifExists: true,\n            }),\n        });\n    }\n    cascade() {\n        return new DropSchemaBuilder({\n            ...this.#props,\n            node: DropSchemaNode.cloneWith(this.#props.node, {\n                cascade: true,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./drop-table-builder.d.ts\" />\nimport { DropTableNode } from '../operation-node/drop-table-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class DropTableBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    ifExists() {\n        return new DropTableBuilder({\n            ...this.#props,\n            node: DropTableNode.cloneWith(this.#props.node, {\n                ifExists: true,\n            }),\n        });\n    }\n    cascade() {\n        return new DropTableBuilder({\n            ...this.#props,\n            node: DropTableNode.cloneWith(this.#props.node, {\n                cascade: true,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./create-view-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { SchemableIdentifierNode } from './schemable-identifier-node.js';\n/**\n * @internal\n */\nexport const CreateViewNode = freeze({\n    is(node) {\n        return node.kind === 'CreateViewNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'CreateViewNode',\n            name: SchemableIdentifierNode.create(name),\n        });\n    },\n    cloneWith(createView, params) {\n        return freeze({\n            ...createView,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./immediate-value-plugin.d.ts\" />\nimport { ImmediateValueTransformer } from './immediate-value-transformer.js';\n/**\n * Transforms all ValueNodes to immediate.\n *\n * WARNING! This should never be part of the public API. Users should never use this.\n * This is an internal helper.\n *\n * @internal\n */\nexport class ImmediateValuePlugin {\n    #transformer = new ImmediateValueTransformer();\n    transformQuery(args) {\n        return this.#transformer.transformNode(args.node, args.queryId);\n    }\n    transformResult(args) {\n        return Promise.resolve(args.result);\n    }\n}\n", "/// <reference types=\"./create-view-builder.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { CreateViewNode } from '../operation-node/create-view-node.js';\nimport { parseColumnName } from '../parser/reference-parser.js';\nimport { ImmediateValuePlugin } from '../plugin/immediate-value/immediate-value-plugin.js';\nexport class CreateViewBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Adds the \"temporary\" modifier.\n     *\n     * Use this to create a temporary view.\n     */\n    temporary() {\n        return new CreateViewBuilder({\n            ...this.#props,\n            node: CreateViewNode.cloneWith(this.#props.node, {\n                temporary: true,\n            }),\n        });\n    }\n    materialized() {\n        return new CreateViewBuilder({\n            ...this.#props,\n            node: CreateViewNode.cloneWith(this.#props.node, {\n                materialized: true,\n            }),\n        });\n    }\n    /**\n     * Only implemented on some dialects like SQLite. On most dialects, use {@link orReplace}.\n     */\n    ifNotExists() {\n        return new CreateViewBuilder({\n            ...this.#props,\n            node: CreateViewNode.cloneWith(this.#props.node, {\n                ifNotExists: true,\n            }),\n        });\n    }\n    orReplace() {\n        return new CreateViewBuilder({\n            ...this.#props,\n            node: CreateViewNode.cloneWith(this.#props.node, {\n                orReplace: true,\n            }),\n        });\n    }\n    columns(columns) {\n        return new CreateViewBuilder({\n            ...this.#props,\n            node: CreateViewNode.cloneWith(this.#props.node, {\n                columns: columns.map(parseColumnName),\n            }),\n        });\n    }\n    /**\n     * Sets the select query or a `values` statement that creates the view.\n     *\n     * WARNING!\n     * Some dialects don't support parameterized queries in DDL statements and therefore\n     * the query or raw {@link sql } expression passed here is interpolated into a single\n     * string opening an SQL injection vulnerability. DO NOT pass unchecked user input\n     * into the query or raw expression passed to this method!\n     */\n    as(query) {\n        const queryNode = query\n            .withPlugin(new ImmediateValuePlugin())\n            .toOperationNode();\n        return new CreateViewBuilder({\n            ...this.#props,\n            node: CreateViewNode.cloneWith(this.#props.node, {\n                as: queryNode,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./drop-view-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { SchemableIdentifierNode } from './schemable-identifier-node.js';\n/**\n * @internal\n */\nexport const DropViewNode = freeze({\n    is(node) {\n        return node.kind === 'DropViewNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'DropViewNode',\n            name: SchemableIdentifierNode.create(name),\n        });\n    },\n    cloneWith(dropView, params) {\n        return freeze({\n            ...dropView,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./drop-view-builder.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { DropViewNode } from '../operation-node/drop-view-node.js';\nexport class DropViewBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    materialized() {\n        return new DropViewBuilder({\n            ...this.#props,\n            node: DropViewNode.cloneWith(this.#props.node, {\n                materialized: true,\n            }),\n        });\n    }\n    ifExists() {\n        return new DropViewBuilder({\n            ...this.#props,\n            node: DropViewNode.cloneWith(this.#props.node, {\n                ifExists: true,\n            }),\n        });\n    }\n    cascade() {\n        return new DropViewBuilder({\n            ...this.#props,\n            node: DropViewNode.cloneWith(this.#props.node, {\n                cascade: true,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./create-type-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { ValueListNode } from './value-list-node.js';\nimport { ValueNode } from './value-node.js';\n/**\n * @internal\n */\nexport const CreateTypeNode = freeze({\n    is(node) {\n        return node.kind === 'CreateTypeNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'CreateTypeNode',\n            name,\n        });\n    },\n    cloneWithEnum(createType, values) {\n        return freeze({\n            ...createType,\n            enum: ValueListNode.create(values.map(ValueNode.createImmediate)),\n        });\n    },\n});\n", "/// <reference types=\"./create-type-builder.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { CreateTypeNode } from '../operation-node/create-type-node.js';\nexport class CreateTypeBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    /**\n     * Creates an anum type.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * db.schema.createType('species').asEnum(['cat', 'dog', 'frog'])\n     * ```\n     */\n    asEnum(values) {\n        return new CreateTypeBuilder({\n            ...this.#props,\n            node: CreateTypeNode.cloneWithEnum(this.#props.node, values),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./drop-type-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\n/**\n * @internal\n */\nexport const DropTypeNode = freeze({\n    is(node) {\n        return node.kind === 'DropTypeNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'DropTypeNode',\n            name,\n        });\n    },\n    cloneWith(dropType, params) {\n        return freeze({\n            ...dropType,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./drop-type-builder.d.ts\" />\nimport { DropTypeNode } from '../operation-node/drop-type-node.js';\nimport { freeze } from '../util/object-utils.js';\nexport class DropTypeBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    ifExists() {\n        return new DropTypeBuilder({\n            ...this.#props,\n            node: DropTypeNode.cloneWith(this.#props.node, {\n                ifExists: true,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./identifier-parser.d.ts\" />\nimport { SchemableIdentifierNode } from '../operation-node/schemable-identifier-node.js';\nexport function parseSchemableIdentifier(id) {\n    const SCHEMA_SEPARATOR = '.';\n    if (id.includes(SCHEMA_SEPARATOR)) {\n        const parts = id.split(SCHEMA_SEPARATOR).map(trim);\n        if (parts.length === 2) {\n            return SchemableIdentifierNode.createWithSchema(parts[0], parts[1]);\n        }\n        else {\n            throw new Error(`invalid schemable identifier ${id}`);\n        }\n    }\n    else {\n        return SchemableIdentifierNode.create(id);\n    }\n}\nfunction trim(str) {\n    return str.trim();\n}\n", "/// <reference types=\"./refresh-materialized-view-node.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { SchemableIdentifierNode } from './schemable-identifier-node.js';\n/**\n * @internal\n */\nexport const RefreshMaterializedViewNode = freeze({\n    is(node) {\n        return node.kind === 'RefreshMaterializedViewNode';\n    },\n    create(name) {\n        return freeze({\n            kind: 'RefreshMaterializedViewNode',\n            name: SchemableIdentifierNode.create(name),\n        });\n    },\n    cloneWith(createView, params) {\n        return freeze({\n            ...createView,\n            ...params,\n        });\n    },\n});\n", "/// <reference types=\"./refresh-materialized-view-builder.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nimport { RefreshMaterializedViewNode } from '../operation-node/refresh-materialized-view-node.js';\nexport class RefreshMaterializedViewBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Adds the \"concurrently\" modifier.\n     *\n     * Use this to refresh the view without locking out concurrent selects on the materialized view.\n     *\n     * WARNING!\n     * This cannot be used with the \"with no data\" modifier.\n     */\n    concurrently() {\n        return new RefreshMaterializedViewBuilder({\n            ...this.#props,\n            node: RefreshMaterializedViewNode.cloneWith(this.#props.node, {\n                concurrently: true,\n                withNoData: false,\n            }),\n        });\n    }\n    /**\n     * Adds the \"with data\" modifier.\n     *\n     * If specified (or defaults) the backing query is executed to provide the new data, and the materialized view is left in a scannable state\n     */\n    withData() {\n        return new RefreshMaterializedViewBuilder({\n            ...this.#props,\n            node: RefreshMaterializedViewNode.cloneWith(this.#props.node, {\n                withNoData: false,\n            }),\n        });\n    }\n    /**\n     * Adds the \"with no data\" modifier.\n     *\n     * If specified, no new data is generated and the materialized view is left in an unscannable state.\n     *\n     * WARNING!\n     * This cannot be used with the \"concurrently\" modifier.\n     */\n    withNoData() {\n        return new RefreshMaterializedViewBuilder({\n            ...this.#props,\n            node: RefreshMaterializedViewNode.cloneWith(this.#props.node, {\n                withNoData: true,\n                concurrently: false,\n            }),\n        });\n    }\n    /**\n     * Simply calls the provided function passing `this` as the only argument. `$call` returns\n     * what the provided function returns.\n     */\n    $call(func) {\n        return func(this);\n    }\n    toOperationNode() {\n        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);\n    }\n    compile() {\n        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);\n    }\n    async execute() {\n        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);\n    }\n}\n", "/// <reference types=\"./schema.d.ts\" />\nimport { AlterTableNode } from '../operation-node/alter-table-node.js';\nimport { CreateIndexNode } from '../operation-node/create-index-node.js';\nimport { CreateSchemaNode } from '../operation-node/create-schema-node.js';\nimport { CreateTableNode } from '../operation-node/create-table-node.js';\nimport { DropIndexNode } from '../operation-node/drop-index-node.js';\nimport { DropSchemaNode } from '../operation-node/drop-schema-node.js';\nimport { DropTableNode } from '../operation-node/drop-table-node.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { AlterTableBuilder } from './alter-table-builder.js';\nimport { CreateIndexBuilder } from './create-index-builder.js';\nimport { CreateSchemaBuilder } from './create-schema-builder.js';\nimport { CreateTableBuilder } from './create-table-builder.js';\nimport { DropIndexBuilder } from './drop-index-builder.js';\nimport { DropSchemaBuilder } from './drop-schema-builder.js';\nimport { DropTableBuilder } from './drop-table-builder.js';\nimport { createQueryId } from '../util/query-id.js';\nimport { WithSchemaPlugin } from '../plugin/with-schema/with-schema-plugin.js';\nimport { CreateViewBuilder } from './create-view-builder.js';\nimport { CreateViewNode } from '../operation-node/create-view-node.js';\nimport { DropViewBuilder } from './drop-view-builder.js';\nimport { DropViewNode } from '../operation-node/drop-view-node.js';\nimport { CreateTypeBuilder } from './create-type-builder.js';\nimport { DropTypeBuilder } from './drop-type-builder.js';\nimport { CreateTypeNode } from '../operation-node/create-type-node.js';\nimport { DropTypeNode } from '../operation-node/drop-type-node.js';\nimport { parseSchemableIdentifier } from '../parser/identifier-parser.js';\nimport { RefreshMaterializedViewBuilder } from './refresh-materialized-view-builder.js';\nimport { RefreshMaterializedViewNode } from '../operation-node/refresh-materialized-view-node.js';\n/**\n * Provides methods for building database schema.\n */\nexport class SchemaModule {\n    #executor;\n    constructor(executor) {\n        this.#executor = executor;\n    }\n    /**\n     * Create a new table.\n     *\n     * ### Examples\n     *\n     * This example creates a new table with columns `id`, `first_name`,\n     * `last_name` and `gender`:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('person')\n     *   .addColumn('id', 'integer', col => col.primaryKey().autoIncrement())\n     *   .addColumn('first_name', 'varchar', col => col.notNull())\n     *   .addColumn('last_name', 'varchar', col => col.notNull())\n     *   .addColumn('gender', 'varchar')\n     *   .execute()\n     * ```\n     *\n     * This example creates a table with a foreign key. Not all database\n     * engines support column-level foreign key constraint definitions.\n     * For example if you are using MySQL 5.X see the next example after\n     * this one.\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('id', 'integer', col => col.primaryKey().autoIncrement())\n     *   .addColumn('owner_id', 'integer', col => col\n     *     .references('person.id')\n     *     .onDelete('cascade')\n     *   )\n     *   .execute()\n     * ```\n     *\n     * This example adds a foreign key constraint for a columns just\n     * like the previous example, but using a table-level statement.\n     * On MySQL 5.X you need to define foreign key constraints like\n     * this:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('pet')\n     *   .addColumn('id', 'integer', col => col.primaryKey().autoIncrement())\n     *   .addColumn('owner_id', 'integer')\n     *   .addForeignKeyConstraint(\n     *     'pet_owner_id_foreign', ['owner_id'], 'person', ['id'],\n     *     (constraint) => constraint.onDelete('cascade')\n     *   )\n     *   .execute()\n     * ```\n     */\n    createTable(table) {\n        return new CreateTableBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: CreateTableNode.create(parseTable(table)),\n        });\n    }\n    /**\n     * Drop a table.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .dropTable('person')\n     *   .execute()\n     * ```\n     */\n    dropTable(table) {\n        return new DropTableBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: DropTableNode.create(parseTable(table)),\n        });\n    }\n    /**\n     * Create a new index.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createIndex('person_full_name_unique_index')\n     *   .on('person')\n     *   .columns(['first_name', 'last_name'])\n     *   .execute()\n     * ```\n     */\n    createIndex(indexName) {\n        return new CreateIndexBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: CreateIndexNode.create(indexName),\n        });\n    }\n    /**\n     * Drop an index.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .dropIndex('person_full_name_unique_index')\n     *   .execute()\n     * ```\n     */\n    dropIndex(indexName) {\n        return new DropIndexBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: DropIndexNode.create(indexName),\n        });\n    }\n    /**\n     * Create a new schema.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createSchema('some_schema')\n     *   .execute()\n     * ```\n     */\n    createSchema(schema) {\n        return new CreateSchemaBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: CreateSchemaNode.create(schema),\n        });\n    }\n    /**\n     * Drop a schema.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .dropSchema('some_schema')\n     *   .execute()\n     * ```\n     */\n    dropSchema(schema) {\n        return new DropSchemaBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: DropSchemaNode.create(schema),\n        });\n    }\n    /**\n     * Alter a table.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .alterTable('person')\n     *   .alterColumn('first_name', (ac) => ac.setDataType('text'))\n     *   .execute()\n     * ```\n     */\n    alterTable(table) {\n        return new AlterTableBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: AlterTableNode.create(parseTable(table)),\n        });\n    }\n    /**\n     * Create a new view.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createView('dogs')\n     *   .orReplace()\n     *   .as(db.selectFrom('pet').selectAll().where('species', '=', 'dog'))\n     *   .execute()\n     * ```\n     */\n    createView(viewName) {\n        return new CreateViewBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: CreateViewNode.create(viewName),\n        });\n    }\n    /**\n     * Refresh a materialized view.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .refreshMaterializedView('my_view')\n     *   .concurrently()\n     *   .execute()\n     * ```\n     */\n    refreshMaterializedView(viewName) {\n        return new RefreshMaterializedViewBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: RefreshMaterializedViewNode.create(viewName),\n        });\n    }\n    /**\n     * Drop a view.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .dropView('dogs')\n     *   .ifExists()\n     *   .execute()\n     * ```\n     */\n    dropView(viewName) {\n        return new DropViewBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: DropViewNode.create(viewName),\n        });\n    }\n    /**\n     * Create a new type.\n     *\n     * Only some dialects like PostgreSQL have user-defined types.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .createType('species')\n     *   .asEnum(['dog', 'cat', 'frog'])\n     *   .execute()\n     * ```\n     */\n    createType(typeName) {\n        return new CreateTypeBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: CreateTypeNode.create(parseSchemableIdentifier(typeName)),\n        });\n    }\n    /**\n     * Drop a type.\n     *\n     * Only some dialects like PostgreSQL have user-defined types.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db.schema\n     *   .dropType('species')\n     *   .ifExists()\n     *   .execute()\n     * ```\n     */\n    dropType(typeName) {\n        return new DropTypeBuilder({\n            queryId: createQueryId(),\n            executor: this.#executor,\n            node: DropTypeNode.create(parseSchemableIdentifier(typeName)),\n        });\n    }\n    /**\n     * Returns a copy of this schema module with the given plugin installed.\n     */\n    withPlugin(plugin) {\n        return new SchemaModule(this.#executor.withPlugin(plugin));\n    }\n    /**\n     * Returns a copy of this schema module  without any plugins.\n     */\n    withoutPlugins() {\n        return new SchemaModule(this.#executor.withoutPlugins());\n    }\n    /**\n     * See {@link QueryCreator.withSchema}\n     */\n    withSchema(schema) {\n        return new SchemaModule(this.#executor.withPluginAtFront(new WithSchemaPlugin(schema)));\n    }\n}\n", "/// <reference types=\"./dynamic.d.ts\" />\nimport { DynamicReferenceBuilder } from './dynamic-reference-builder.js';\nimport { DynamicTableBuilder } from './dynamic-table-builder.js';\nexport class DynamicModule {\n    /**\n     * Creates a dynamic reference to a column that is not know at compile time.\n     *\n     * Kysely is built in a way that by default you can't refer to tables or columns\n     * that are not actually visible in the current query and context. This is all\n     * done by TypeScript at compile time, which means that you need to know the\n     * columns and tables at compile time. This is not always the case of course.\n     *\n     * This method is meant to be used in those cases where the column names\n     * come from the user input or are not otherwise known at compile time.\n     *\n     * WARNING! Unlike values, column names are not escaped by the database engine\n     * or Kysely and if you pass in unchecked column names using this method, you\n     * create an SQL injection vulnerability. Always __always__ validate the user\n     * input before passing it to this method.\n     *\n     * There are couple of examples below for some use cases, but you can pass\n     * `ref` to other methods as well. If the types allow you to pass a `ref`\n     * value to some place, it should work.\n     *\n     * ### Examples\n     *\n     * Filter by a column not know at compile time:\n     *\n     * ```ts\n     * async function someQuery(filterColumn: string, filterValue: string) {\n     *   const { ref } = db.dynamic\n     *\n     *   return await db\n     *     .selectFrom('person')\n     *     .selectAll()\n     *     .where(ref(filterColumn), '=', filterValue)\n     *     .execute()\n     * }\n     *\n     * someQuery('first_name', 'Arnold')\n     * someQuery('person.last_name', 'Aniston')\n     * ```\n     *\n     * Order by a column not know at compile time:\n     *\n     * ```ts\n     * async function someQuery(orderBy: string) {\n     *   const { ref } = db.dynamic\n     *\n     *   return await db\n     *     .selectFrom('person')\n     *     .select('person.first_name as fn')\n     *     .orderBy(ref(orderBy))\n     *     .execute()\n     * }\n     *\n     * someQuery('fn')\n     * ```\n     *\n     * In this example we add selections dynamically:\n     *\n     * ```ts\n     * const { ref } = db.dynamic\n     *\n     * // Some column name provided by the user. Value not known at compile time.\n     * const columnFromUserInput: PossibleColumns = 'birthdate';\n     *\n     * // A type that lists all possible values `columnFromUserInput` can have.\n     * // You can use `keyof Person` if any column of an interface is allowed.\n     * type PossibleColumns = 'last_name' | 'first_name' | 'birthdate'\n     *\n     * const [person] = await db.selectFrom('person')\n     *   .select([\n     *     ref<PossibleColumns>(columnFromUserInput),\n     *     'id'\n     *   ])\n     *   .execute()\n     *\n     * // The resulting type contains all `PossibleColumns` as optional fields\n     * // because we cannot know which field was actually selected before\n     * // running the code.\n     * const lastName: string | null | undefined = person?.last_name\n     * const firstName: string | undefined = person?.first_name\n     * const birthDate: Date | null | undefined = person?.birthdate\n     *\n     * // The result type also contains the compile time selection `id`.\n     * person?.id\n     * ```\n     */\n    ref(reference) {\n        return new DynamicReferenceBuilder(reference);\n    }\n    /**\n     * Creates a table reference to a table that's not fully known at compile time.\n     *\n     * The type `T` is allowed to be a union of multiple tables.\n     *\n     * <!-- siteExample(\"select\", \"Generic find query\", 130) -->\n     *\n     * A generic type-safe helper function for finding a row by a column value:\n     *\n     * ```ts\n     * import { SelectType } from 'kysely'\n     * import { Database } from 'type-editor'\n     *\n     * async function getRowByColumn<\n     *   T extends keyof Database,\n     *   C extends keyof Database[T] & string,\n     *   V extends SelectType<Database[T][C]>,\n     * >(t: T, c: C, v: V) {\n     *   // We need to use the dynamic module since the table name\n     *   // is not known at compile time.\n     *   const { table, ref } = db.dynamic\n     *\n     *   return await db\n     *     .selectFrom(table(t).as('t'))\n     *     .selectAll()\n     *     .where(ref(c), '=', v)\n     *     .orderBy('t.id')\n     *     .executeTakeFirstOrThrow()\n     * }\n     *\n     * const person = await getRowByColumn('person', 'first_name', 'Arnold')\n     * ```\n     */\n    table(table) {\n        return new DynamicTableBuilder(table);\n    }\n}\n", "/// <reference types=\"./default-connection-provider.d.ts\" />\nexport class DefaultConnectionProvider {\n    #driver;\n    constructor(driver) {\n        this.#driver = driver;\n    }\n    async provideConnection(consumer) {\n        const connection = await this.#driver.acquireConnection();\n        try {\n            return await consumer(connection);\n        }\n        finally {\n            await this.#driver.releaseConnection(connection);\n        }\n    }\n}\n", "/// <reference types=\"./default-query-executor.d.ts\" />\nimport { QueryExecutorBase } from './query-executor-base.js';\nexport class DefaultQueryExecutor extends QueryExecutorBase {\n    #compiler;\n    #adapter;\n    #connectionProvider;\n    constructor(compiler, adapter, connectionProvider, plugins = []) {\n        super(plugins);\n        this.#compiler = compiler;\n        this.#adapter = adapter;\n        this.#connectionProvider = connectionProvider;\n    }\n    get adapter() {\n        return this.#adapter;\n    }\n    compileQuery(node, queryId) {\n        return this.#compiler.compileQuery(node, queryId);\n    }\n    provideConnection(consumer) {\n        return this.#connectionProvider.provideConnection(consumer);\n    }\n    withPlugins(plugins) {\n        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, [...this.plugins, ...plugins]);\n    }\n    withPlugin(plugin) {\n        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, [...this.plugins, plugin]);\n    }\n    withPluginAtFront(plugin) {\n        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, [plugin, ...this.plugins]);\n    }\n    withConnectionProvider(connectionProvider) {\n        return new DefaultQueryExecutor(this.#compiler, this.#adapter, connectionProvider, [...this.plugins]);\n    }\n    withoutPlugins() {\n        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, []);\n    }\n}\n", "/// <reference types=\"./performance-now.d.ts\" />\nimport { isFunction } from './object-utils.js';\nexport function performanceNow() {\n    if (typeof performance !== 'undefined' && isFunction(performance.now)) {\n        return performance.now();\n    }\n    else {\n        return Date.now();\n    }\n}\n", "/// <reference types=\"./runtime-driver.d.ts\" />\nimport { performanceNow } from '../util/performance-now.js';\n/**\n * A small wrapper around {@link Driver} that makes sure the driver is\n * initialized before it is used, only initialized and destroyed\n * once etc.\n */\nexport class RuntimeDriver {\n    #driver;\n    #log;\n    #initPromise;\n    #initDone;\n    #destroyPromise;\n    #connections = new WeakSet();\n    constructor(driver, log) {\n        this.#initDone = false;\n        this.#driver = driver;\n        this.#log = log;\n    }\n    async init() {\n        if (this.#destroyPromise) {\n            throw new Error('driver has already been destroyed');\n        }\n        if (!this.#initPromise) {\n            this.#initPromise = this.#driver\n                .init()\n                .then(() => {\n                this.#initDone = true;\n            })\n                .catch((err) => {\n                this.#initPromise = undefined;\n                return Promise.reject(err);\n            });\n        }\n        await this.#initPromise;\n    }\n    async acquireConnection() {\n        if (this.#destroyPromise) {\n            throw new Error('driver has already been destroyed');\n        }\n        if (!this.#initDone) {\n            await this.init();\n        }\n        const connection = await this.#driver.acquireConnection();\n        if (!this.#connections.has(connection)) {\n            if (this.#needsLogging()) {\n                this.#addLogging(connection);\n            }\n            this.#connections.add(connection);\n        }\n        return connection;\n    }\n    async releaseConnection(connection) {\n        await this.#driver.releaseConnection(connection);\n    }\n    beginTransaction(connection, settings) {\n        return this.#driver.beginTransaction(connection, settings);\n    }\n    commitTransaction(connection) {\n        return this.#driver.commitTransaction(connection);\n    }\n    rollbackTransaction(connection) {\n        return this.#driver.rollbackTransaction(connection);\n    }\n    savepoint(connection, savepointName, compileQuery) {\n        if (this.#driver.savepoint) {\n            return this.#driver.savepoint(connection, savepointName, compileQuery);\n        }\n        throw new Error('The `savepoint` method is not supported by this driver');\n    }\n    rollbackToSavepoint(connection, savepointName, compileQuery) {\n        if (this.#driver.rollbackToSavepoint) {\n            return this.#driver.rollbackToSavepoint(connection, savepointName, compileQuery);\n        }\n        throw new Error('The `rollbackToSavepoint` method is not supported by this driver');\n    }\n    releaseSavepoint(connection, savepointName, compileQuery) {\n        if (this.#driver.releaseSavepoint) {\n            return this.#driver.releaseSavepoint(connection, savepointName, compileQuery);\n        }\n        throw new Error('The `releaseSavepoint` method is not supported by this driver');\n    }\n    async destroy() {\n        if (!this.#initPromise) {\n            return;\n        }\n        await this.#initPromise;\n        if (!this.#destroyPromise) {\n            this.#destroyPromise = this.#driver.destroy().catch((err) => {\n                this.#destroyPromise = undefined;\n                return Promise.reject(err);\n            });\n        }\n        await this.#destroyPromise;\n    }\n    #needsLogging() {\n        return (this.#log.isLevelEnabled('query') || this.#log.isLevelEnabled('error'));\n    }\n    // This method monkey patches the database connection's executeQuery method\n    // by adding logging code around it. Monkey patching is not pretty, but it's\n    // the best option in this case.\n    #addLogging(connection) {\n        const executeQuery = connection.executeQuery;\n        const streamQuery = connection.streamQuery;\n        const dis = this;\n        connection.executeQuery = async (compiledQuery) => {\n            let caughtError;\n            const startTime = performanceNow();\n            try {\n                return await executeQuery.call(connection, compiledQuery);\n            }\n            catch (error) {\n                caughtError = error;\n                await dis.#logError(error, compiledQuery, startTime);\n                throw error;\n            }\n            finally {\n                if (!caughtError) {\n                    await dis.#logQuery(compiledQuery, startTime);\n                }\n            }\n        };\n        connection.streamQuery = async function* (compiledQuery, chunkSize) {\n            let caughtError;\n            const startTime = performanceNow();\n            try {\n                for await (const result of streamQuery.call(connection, compiledQuery, chunkSize)) {\n                    yield result;\n                }\n            }\n            catch (error) {\n                caughtError = error;\n                await dis.#logError(error, compiledQuery, startTime);\n                throw error;\n            }\n            finally {\n                if (!caughtError) {\n                    await dis.#logQuery(compiledQuery, startTime, true);\n                }\n            }\n        };\n    }\n    async #logError(error, compiledQuery, startTime) {\n        await this.#log.error(() => ({\n            level: 'error',\n            error,\n            query: compiledQuery,\n            queryDurationMillis: this.#calculateDurationMillis(startTime),\n        }));\n    }\n    async #logQuery(compiledQuery, startTime, isStream = false) {\n        await this.#log.query(() => ({\n            level: 'query',\n            isStream,\n            query: compiledQuery,\n            queryDurationMillis: this.#calculateDurationMillis(startTime),\n        }));\n    }\n    #calculateDurationMillis(startTime) {\n        return performanceNow() - startTime;\n    }\n}\n", "/// <reference types=\"./single-connection-provider.d.ts\" />\nconst ignoreError = () => { };\nexport class SingleConnectionProvider {\n    #connection;\n    #runningPromise;\n    constructor(connection) {\n        this.#connection = connection;\n    }\n    async provideConnection(consumer) {\n        while (this.#runningPromise) {\n            await this.#runningPromise.catch(ignoreError);\n        }\n        // `#runningPromise` must be set to undefined before it's\n        // resolved or rejected. Otherwise the while loop above\n        // will misbehave.\n        this.#runningPromise = this.#run(consumer).finally(() => {\n            this.#runningPromise = undefined;\n        });\n        return this.#runningPromise;\n    }\n    // Run the runner in an async function to make sure it doesn't\n    // throw synchronous errors.\n    async #run(runner) {\n        return await runner(this.#connection);\n    }\n}\n", "/// <reference types=\"./driver.d.ts\" />\nexport const TRANSACTION_ACCESS_MODES = ['read only', 'read write'];\nexport const TRANSACTION_ISOLATION_LEVELS = [\n    'read uncommitted',\n    'read committed',\n    'repeatable read',\n    'serializable',\n    'snapshot',\n];\nexport function validateTransactionSettings(settings) {\n    if (settings.accessMode &&\n        !TRANSACTION_ACCESS_MODES.includes(settings.accessMode)) {\n        throw new Error(`invalid transaction access mode ${settings.accessMode}`);\n    }\n    if (settings.isolationLevel &&\n        !TRANSACTION_ISOLATION_LEVELS.includes(settings.isolationLevel)) {\n        throw new Error(`invalid transaction isolation level ${settings.isolationLevel}`);\n    }\n}\n", "/// <reference types=\"./log.d.ts\" />\nimport { freeze, isFunction } from './object-utils.js';\nexport const LOG_LEVELS = freeze(['query', 'error']);\nexport class Log {\n    #levels;\n    #logger;\n    constructor(config) {\n        if (isFunction(config)) {\n            this.#logger = config;\n            this.#levels = freeze({\n                query: true,\n                error: true,\n            });\n        }\n        else {\n            this.#logger = defaultLogger;\n            this.#levels = freeze({\n                query: config.includes('query'),\n                error: config.includes('error'),\n            });\n        }\n    }\n    isLevelEnabled(level) {\n        return this.#levels[level];\n    }\n    async query(getEvent) {\n        if (this.#levels.query) {\n            await this.#logger(getEvent());\n        }\n    }\n    async error(getEvent) {\n        if (this.#levels.error) {\n            await this.#logger(getEvent());\n        }\n    }\n}\nfunction defaultLogger(event) {\n    if (event.level === 'query') {\n        const prefix = `kysely:query:${event.isStream ? 'stream:' : ''}`;\n        console.log(`${prefix} ${event.query.sql}`);\n        console.log(`${prefix} duration: ${event.queryDurationMillis.toFixed(1)}ms`);\n    }\n    else if (event.level === 'error') {\n        if (event.error instanceof Error) {\n            console.error(`kysely:error: ${event.error.stack ?? event.error.message}`);\n        }\n        else {\n            console.error(`kysely:error: ${JSON.stringify({\n                error: event.error,\n                query: event.query.sql,\n                queryDurationMillis: event.queryDurationMillis,\n            })}`);\n        }\n    }\n}\n", "/// <reference types=\"./compilable.d.ts\" />\nimport { isFunction, isObject } from './object-utils.js';\nexport function isCompilable(value) {\n    return isObject(value) && isFunction(value.compile);\n}\n", "/// <reference types=\"./kysely.d.ts\" />\nimport { SchemaModule } from './schema/schema.js';\nimport { DynamicModule } from './dynamic/dynamic.js';\nimport { DefaultConnectionProvider } from './driver/default-connection-provider.js';\nimport { QueryCreator } from './query-creator.js';\nimport { DefaultQueryExecutor } from './query-executor/default-query-executor.js';\nimport { freeze, isObject, isUndefined } from './util/object-utils.js';\nimport { RuntimeDriver } from './driver/runtime-driver.js';\nimport { SingleConnectionProvider } from './driver/single-connection-provider.js';\nimport { validateTransactionSettings, } from './driver/driver.js';\nimport { createFunctionModule, } from './query-builder/function-module.js';\nimport { Log } from './util/log.js';\nimport { createQueryId } from './util/query-id.js';\nimport { isCompilable } from './util/compilable.js';\nimport { CaseBuilder } from './query-builder/case-builder.js';\nimport { CaseNode } from './operation-node/case-node.js';\nimport { parseExpression } from './parser/expression-parser.js';\nimport { WithSchemaPlugin } from './plugin/with-schema/with-schema-plugin.js';\nimport { provideControlledConnection, } from './util/provide-controlled-connection.js';\n// @ts-ignore\nSymbol.asyncDispose ??= Symbol('Symbol.asyncDispose');\n/**\n * The main Kysely class.\n *\n * You should create one instance of `Kysely` per database using the {@link Kysely}\n * constructor. Each `Kysely` instance maintains its own connection pool.\n *\n * ### Examples\n *\n * This example assumes your database has a \"person\" table:\n *\n * ```ts\n * import * as Sqlite from 'better-sqlite3'\n * import {\u00A0type Generated, Kysely, SqliteDialect } from 'kysely'\n *\n * interface Database {\n *   person: {\n *     id: Generated<number>\n *     first_name: string\n *     last_name: string | null\n *   }\n * }\n *\n * const db = new Kysely<Database>({\n *   dialect: new SqliteDialect({\n *     database: new Sqlite(':memory:'),\n *   })\n * })\n * ```\n *\n * @typeParam DB - The database interface type. Keys of this type must be table names\n *    in the database and values must be interfaces that describe the rows in those\n *    tables. See the examples above.\n */\nexport class Kysely extends QueryCreator {\n    #props;\n    constructor(args) {\n        let superProps;\n        let props;\n        if (isKyselyProps(args)) {\n            superProps = { executor: args.executor };\n            props = { ...args };\n        }\n        else {\n            const dialect = args.dialect;\n            const driver = dialect.createDriver();\n            const compiler = dialect.createQueryCompiler();\n            const adapter = dialect.createAdapter();\n            const log = new Log(args.log ?? []);\n            const runtimeDriver = new RuntimeDriver(driver, log);\n            const connectionProvider = new DefaultConnectionProvider(runtimeDriver);\n            const executor = new DefaultQueryExecutor(compiler, adapter, connectionProvider, args.plugins ?? []);\n            superProps = { executor };\n            props = {\n                config: args,\n                executor,\n                dialect,\n                driver: runtimeDriver,\n            };\n        }\n        super(superProps);\n        this.#props = freeze(props);\n    }\n    /**\n     * Returns the {@link SchemaModule} module for building database schema.\n     */\n    get schema() {\n        return new SchemaModule(this.#props.executor);\n    }\n    /**\n     * Returns a the {@link DynamicModule} module.\n     *\n     * The {@link DynamicModule} module can be used to bypass strict typing and\n     * passing in dynamic values for the queries.\n     */\n    get dynamic() {\n        return new DynamicModule();\n    }\n    /**\n     * Returns a {@link DatabaseIntrospector | database introspector}.\n     */\n    get introspection() {\n        return this.#props.dialect.createIntrospector(this.withoutPlugins());\n    }\n    case(value) {\n        return new CaseBuilder({\n            node: CaseNode.create(isUndefined(value) ? undefined : parseExpression(value)),\n        });\n    }\n    /**\n     * Returns a {@link FunctionModule} that can be used to write somewhat type-safe function\n     * calls.\n     *\n     * ```ts\n     * const { count } = db.fn\n     *\n     * await db.selectFrom('person')\n     *   .innerJoin('pet', 'pet.owner_id', 'person.id')\n     *   .select([\n     *     'id',\n     *     count('pet.id').as('person_count'),\n     *   ])\n     *   .groupBy('person.id')\n     *   .having(count('pet.id'), '>', 10)\n     *   .execute()\n     * ```\n     *\n     * The generated SQL (PostgreSQL):\n     *\n     * ```sql\n     * select \"person\".\"id\", count(\"pet\".\"id\") as \"person_count\"\n     * from \"person\"\n     * inner join \"pet\" on \"pet\".\"owner_id\" = \"person\".\"id\"\n     * group by \"person\".\"id\"\n     * having count(\"pet\".\"id\") > $1\n     * ```\n     *\n     * Why \"somewhat\" type-safe? Because the function calls are not bound to the\n     * current query context. They allow you to reference columns and tables that\n     * are not in the current query. E.g. remove the `innerJoin` from the previous\n     * query and TypeScript won't even complain.\n     *\n     * If you want to make the function calls fully type-safe, you can use the\n     * {@link ExpressionBuilder.fn} getter for a query context-aware, stricter {@link FunctionModule}.\n     *\n     * ```ts\n     * await db.selectFrom('person')\n     *   .innerJoin('pet', 'pet.owner_id', 'person.id')\n     *   .select((eb) => [\n     *     'person.id',\n     *     eb.fn.count('pet.id').as('pet_count')\n     *   ])\n     *   .groupBy('person.id')\n     *   .having((eb) => eb.fn.count('pet.id'), '>', 10)\n     *   .execute()\n     * ```\n     */\n    get fn() {\n        return createFunctionModule();\n    }\n    /**\n     * Creates a {@link TransactionBuilder} that can be used to run queries inside a transaction.\n     *\n     * The returned {@link TransactionBuilder} can be used to configure the transaction. The\n     * {@link TransactionBuilder.execute} method can then be called to run the transaction.\n     * {@link TransactionBuilder.execute} takes a function that is run inside the\n     * transaction. If the function throws an exception,\n     * 1. the exception is caught,\n     * 2. the transaction is rolled back, and\n     * 3. the exception is thrown again.\n     * Otherwise the transaction is committed.\n     *\n     * The callback function passed to the {@link TransactionBuilder.execute | execute}\n     * method gets the transaction object as its only argument. The transaction is\n     * of type {@link Transaction} which inherits {@link Kysely}. Any query\n     * started through the transaction object is executed inside the transaction.\n     *\n     * To run a controlled transaction, allowing you to commit and rollback manually,\n     * use {@link startTransaction} instead.\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"transactions\", \"Simple transaction\", 10) -->\n     *\n     * This example inserts two rows in a transaction. If an exception is thrown inside\n     * the callback passed to the `execute` method,\n     * 1. the exception is caught,\n     * 2. the transaction is rolled back, and\n     * 3. the exception is thrown again.\n     * Otherwise the transaction is committed.\n     *\n     * ```ts\n     * const catto = await db.transaction().execute(async (trx) => {\n     *   const jennifer = await trx.insertInto('person')\n     *     .values({\n     *       first_name: 'Jennifer',\n     *       last_name: 'Aniston',\n     *       age: 40,\n     *     })\n     *     .returning('id')\n     *     .executeTakeFirstOrThrow()\n     *\n     *   return await trx.insertInto('pet')\n     *     .values({\n     *       owner_id: jennifer.id,\n     *       name: 'Catto',\n     *       species: 'cat',\n     *       is_favorite: false,\n     *     })\n     *     .returningAll()\n     *     .executeTakeFirst()\n     * })\n     * ```\n     *\n     * Setting the isolation level:\n     *\n     * ```ts\n     * import type { Kysely } from 'kysely'\n     *\n     * await db\n     *   .transaction()\n     *   .setIsolationLevel('serializable')\n     *   .execute(async (trx) => {\n     *     await doStuff(trx)\n     *   })\n     *\n     * async function doStuff(kysely: typeof db) {\n     *   // ...\n     * }\n     * ```\n     */\n    transaction() {\n        return new TransactionBuilder({ ...this.#props });\n    }\n    /**\n     * Creates a {@link ControlledTransactionBuilder} that can be used to run queries inside a controlled transaction.\n     *\n     * The returned {@link ControlledTransactionBuilder} can be used to configure the transaction.\n     * The {@link ControlledTransactionBuilder.execute} method can then be called\n     * to start the transaction and return a {@link ControlledTransaction}.\n     *\n     * A {@link ControlledTransaction} allows you to commit and rollback manually,\n     * execute savepoint commands. It extends {@link Transaction} which extends {@link Kysely},\n     * so you can run queries inside the transaction. Once the transaction is committed,\n     * or rolled back, it can't be used anymore - all queries will throw an error.\n     * This is to prevent accidentally running queries outside the transaction - where\n     * atomicity is not guaranteed anymore.\n     *\n     * ### Examples\n     *\n     * <!-- siteExample(\"transactions\", \"Controlled transaction\", 11) -->\n     *\n     * A controlled transaction allows you to commit and rollback manually, execute\n     * savepoint commands, and queries in general.\n     *\n     * In this example we start a transaction, use it to insert two rows and then commit\n     * the transaction. If an error is thrown, we catch it and rollback the transaction.\n     *\n     * ```ts\n     * const trx = await db.startTransaction().execute()\n     *\n     * try {\n     *   const jennifer = await trx.insertInto('person')\n     *     .values({\n     *       first_name: 'Jennifer',\n     *       last_name: 'Aniston',\n     *       age: 40,\n     *     })\n     *     .returning('id')\n     *     .executeTakeFirstOrThrow()\n     *\n     *   const catto = await trx.insertInto('pet')\n     *     .values({\n     *       owner_id: jennifer.id,\n     *       name: 'Catto',\n     *       species: 'cat',\n     *       is_favorite: false,\n     *     })\n     *     .returningAll()\n     *     .executeTakeFirstOrThrow()\n     *\n     *   await trx.commit().execute()\n     *\n     *   // ...\n     * } catch (error) {\n     *   await trx.rollback().execute()\n     * }\n     * ```\n     *\n     * <!-- siteExample(\"transactions\", \"Controlled transaction /w savepoints\", 12) -->\n     *\n     * A controlled transaction allows you to commit and rollback manually, execute\n     * savepoint commands, and queries in general.\n     *\n     * In this example we start a transaction, insert a person, create a savepoint,\n     * try inserting a toy and a pet, and if an error is thrown, we rollback to the\n     * savepoint. Eventually we release the savepoint, insert an audit record and\n     * commit the transaction. If an error is thrown, we catch it and rollback the\n     * transaction.\n     *\n     * ```ts\n     * const trx = await db.startTransaction().execute()\n     *\n     * try {\n     *   const jennifer = await trx\n     *     .insertInto('person')\n     *     .values({\n     *       first_name: 'Jennifer',\n     *       last_name: 'Aniston',\n     *       age: 40,\n     *     })\n     *     .returning('id')\n     *     .executeTakeFirstOrThrow()\n     *\n     *   const trxAfterJennifer = await trx.savepoint('after_jennifer').execute()\n     *\n     *   try {\n     *     const catto = await trxAfterJennifer\n     *       .insertInto('pet')\n     *       .values({\n     *         owner_id: jennifer.id,\n     *         name: 'Catto',\n     *         species: 'cat',\n     *       })\n     *       .returning('id')\n     *       .executeTakeFirstOrThrow()\n     *\n     *     await trxAfterJennifer\n     *       .insertInto('toy')\n     *       .values({ name: 'Bone', price: 1.99, pet_id: catto.id })\n     *       .execute()\n     *   } catch (error) {\n     *     await trxAfterJennifer.rollbackToSavepoint('after_jennifer').execute()\n     *   }\n     *\n     *   await trxAfterJennifer.releaseSavepoint('after_jennifer').execute()\n     *\n     *   await trx.insertInto('audit').values({ action: 'added Jennifer' }).execute()\n     *\n     *   await trx.commit().execute()\n     * } catch (error) {\n     *   await trx.rollback().execute()\n     * }\n     * ```\n     */\n    startTransaction() {\n        return new ControlledTransactionBuilder({ ...this.#props });\n    }\n    /**\n     * Provides a kysely instance bound to a single database connection.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * await db\n     *   .connection()\n     *   .execute(async (db) => {\n     *     // `db` is an instance of `Kysely` that's bound to a single\n     *     // database connection. All queries executed through `db` use\n     *     // the same connection.\n     *     await doStuff(db)\n     *   })\n     *\n     * async function doStuff(kysely: typeof db) {\n     *   // ...\n     * }\n     * ```\n     */\n    connection() {\n        return new ConnectionBuilder({ ...this.#props });\n    }\n    /**\n     * Returns a copy of this Kysely instance with the given plugin installed.\n     */\n    withPlugin(plugin) {\n        return new Kysely({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    /**\n     * Returns a copy of this Kysely instance without any plugins.\n     */\n    withoutPlugins() {\n        return new Kysely({\n            ...this.#props,\n            executor: this.#props.executor.withoutPlugins(),\n        });\n    }\n    /**\n     * @override\n     */\n    withSchema(schema) {\n        return new Kysely({\n            ...this.#props,\n            executor: this.#props.executor.withPluginAtFront(new WithSchemaPlugin(schema)),\n        });\n    }\n    /**\n     * Returns a copy of this Kysely instance with tables added to its\n     * database type.\n     *\n     * This method only modifies the types and doesn't affect any of the\n     * executed queries in any way.\n     *\n     * ### Examples\n     *\n     * The following example adds and uses a temporary table:\n     *\n     * ```ts\n     * await db.schema\n     *   .createTable('temp_table')\n     *   .temporary()\n     *   .addColumn('some_column', 'integer')\n     *   .execute()\n     *\n     * const tempDb = db.withTables<{\n     *   temp_table: {\n     *     some_column: number\n     *   }\n     * }>()\n     *\n     * await tempDb\n     *   .insertInto('temp_table')\n     *   .values({ some_column: 100 })\n     *   .execute()\n     * ```\n     */\n    withTables() {\n        return new Kysely({ ...this.#props });\n    }\n    /**\n     * Releases all resources and disconnects from the database.\n     *\n     * You need to call this when you are done using the `Kysely` instance.\n     */\n    async destroy() {\n        await this.#props.driver.destroy();\n    }\n    /**\n     * Returns true if this `Kysely` instance is a transaction.\n     *\n     * You can also use `db instanceof Transaction`.\n     */\n    get isTransaction() {\n        return false;\n    }\n    /**\n     * @internal\n     * @private\n     */\n    getExecutor() {\n        return this.#props.executor;\n    }\n    /**\n     * Executes a given compiled query or query builder.\n     *\n     * See {@link https://github.com/kysely-org/kysely/blob/master/site/docs/recipes/0004-splitting-query-building-and-execution.md#execute-compiled-queries splitting build, compile and execute code recipe} for more information.\n     */\n    executeQuery(query, queryId = createQueryId()) {\n        const compiledQuery = isCompilable(query) ? query.compile() : query;\n        return this.getExecutor().executeQuery(compiledQuery, queryId);\n    }\n    async [Symbol.asyncDispose]() {\n        await this.destroy();\n    }\n}\nexport class Transaction extends Kysely {\n    #props;\n    constructor(props) {\n        super(props);\n        this.#props = props;\n    }\n    // The return type is `true` instead of `boolean` to make Kysely<DB>\n    // unassignable to Transaction<DB> while allowing assignment the\n    // other way around.\n    get isTransaction() {\n        return true;\n    }\n    transaction() {\n        throw new Error('calling the transaction method for a Transaction is not supported');\n    }\n    connection() {\n        throw new Error('calling the connection method for a Transaction is not supported');\n    }\n    async destroy() {\n        throw new Error('calling the destroy method for a Transaction is not supported');\n    }\n    withPlugin(plugin) {\n        return new Transaction({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    withoutPlugins() {\n        return new Transaction({\n            ...this.#props,\n            executor: this.#props.executor.withoutPlugins(),\n        });\n    }\n    withSchema(schema) {\n        return new Transaction({\n            ...this.#props,\n            executor: this.#props.executor.withPluginAtFront(new WithSchemaPlugin(schema)),\n        });\n    }\n    withTables() {\n        return new Transaction({ ...this.#props });\n    }\n}\nexport function isKyselyProps(obj) {\n    return (isObject(obj) &&\n        isObject(obj.config) &&\n        isObject(obj.driver) &&\n        isObject(obj.executor) &&\n        isObject(obj.dialect));\n}\nexport class ConnectionBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    async execute(callback) {\n        return this.#props.executor.provideConnection(async (connection) => {\n            const executor = this.#props.executor.withConnectionProvider(new SingleConnectionProvider(connection));\n            const db = new Kysely({\n                ...this.#props,\n                executor,\n            });\n            return await callback(db);\n        });\n    }\n}\nexport class TransactionBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    setAccessMode(accessMode) {\n        return new TransactionBuilder({\n            ...this.#props,\n            accessMode,\n        });\n    }\n    setIsolationLevel(isolationLevel) {\n        return new TransactionBuilder({\n            ...this.#props,\n            isolationLevel,\n        });\n    }\n    async execute(callback) {\n        const { isolationLevel, accessMode, ...kyselyProps } = this.#props;\n        const settings = { isolationLevel, accessMode };\n        validateTransactionSettings(settings);\n        return this.#props.executor.provideConnection(async (connection) => {\n            const executor = this.#props.executor.withConnectionProvider(new SingleConnectionProvider(connection));\n            const transaction = new Transaction({\n                ...kyselyProps,\n                executor,\n            });\n            try {\n                await this.#props.driver.beginTransaction(connection, settings);\n                const result = await callback(transaction);\n                await this.#props.driver.commitTransaction(connection);\n                return result;\n            }\n            catch (error) {\n                await this.#props.driver.rollbackTransaction(connection);\n                throw error;\n            }\n        });\n    }\n}\nexport class ControlledTransactionBuilder {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    setAccessMode(accessMode) {\n        return new ControlledTransactionBuilder({\n            ...this.#props,\n            accessMode,\n        });\n    }\n    setIsolationLevel(isolationLevel) {\n        return new ControlledTransactionBuilder({\n            ...this.#props,\n            isolationLevel,\n        });\n    }\n    async execute() {\n        const { isolationLevel, accessMode, ...props } = this.#props;\n        const settings = { isolationLevel, accessMode };\n        validateTransactionSettings(settings);\n        const connection = await provideControlledConnection(this.#props.executor);\n        await this.#props.driver.beginTransaction(connection.connection, settings);\n        return new ControlledTransaction({\n            ...props,\n            connection,\n            executor: this.#props.executor.withConnectionProvider(new SingleConnectionProvider(connection.connection)),\n        });\n    }\n}\nexport class ControlledTransaction extends Transaction {\n    #props;\n    #compileQuery;\n    #state;\n    constructor(props) {\n        const state = { isCommitted: false, isRolledBack: false };\n        props = {\n            ...props,\n            executor: new NotCommittedOrRolledBackAssertingExecutor(props.executor, state),\n        };\n        const { connection, ...transactionProps } = props;\n        super(transactionProps);\n        this.#props = freeze(props);\n        this.#state = state;\n        const queryId = createQueryId();\n        this.#compileQuery = (node) => props.executor.compileQuery(node, queryId);\n    }\n    get isCommitted() {\n        return this.#state.isCommitted;\n    }\n    get isRolledBack() {\n        return this.#state.isRolledBack;\n    }\n    /**\n     * Commits the transaction.\n     *\n     * See {@link rollback}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { Kysely } from 'kysely'\n     * import type { Database } from 'type-editor' // imaginary module\n     *\n     * const trx = await db.startTransaction().execute()\n     *\n     * try {\n     *   await doSomething(trx)\n     *\n     *   await trx.commit().execute()\n     * } catch (error) {\n     *   await trx.rollback().execute()\n     * }\n     *\n     * async function doSomething(kysely: Kysely<Database>) {}\n     * ```\n     */\n    commit() {\n        assertNotCommittedOrRolledBack(this.#state);\n        return new Command(async () => {\n            await this.#props.driver.commitTransaction(this.#props.connection.connection);\n            this.#state.isCommitted = true;\n            this.#props.connection.release();\n        });\n    }\n    /**\n     * Rolls back the transaction.\n     *\n     * See {@link commit} and {@link rollbackToSavepoint}.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { Kysely } from 'kysely'\n     * import type { Database } from 'type-editor' // imaginary module\n     *\n     * const trx = await db.startTransaction().execute()\n     *\n     * try {\n     *   await doSomething(trx)\n     *\n     *   await trx.commit().execute()\n     * } catch (error) {\n     *   await trx.rollback().execute()\n     * }\n     *\n     * async function doSomething(kysely: Kysely<Database>) {}\n     * ```\n     */\n    rollback() {\n        assertNotCommittedOrRolledBack(this.#state);\n        return new Command(async () => {\n            await this.#props.driver.rollbackTransaction(this.#props.connection.connection);\n            this.#state.isRolledBack = true;\n            this.#props.connection.release();\n        });\n    }\n    /**\n     * Creates a savepoint with a given name.\n     *\n     * See {@link rollbackToSavepoint} and {@link releaseSavepoint}.\n     *\n     * For a type-safe experience, you should use the returned instance from now on.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { Kysely } from 'kysely'\n     * import type { Database } from 'type-editor' // imaginary module\n     *\n     * const trx = await db.startTransaction().execute()\n     *\n     * await insertJennifer(trx)\n     *\n     * const trxAfterJennifer = await trx.savepoint('after_jennifer').execute()\n     *\n     * try {\n     *   await doSomething(trxAfterJennifer)\n     * } catch (error) {\n     *   await trxAfterJennifer.rollbackToSavepoint('after_jennifer').execute()\n     * }\n     *\n     * async function insertJennifer(kysely: Kysely<Database>) {}\n     * async function doSomething(kysely: Kysely<Database>) {}\n     * ```\n     */\n    savepoint(savepointName) {\n        assertNotCommittedOrRolledBack(this.#state);\n        return new Command(async () => {\n            await this.#props.driver.savepoint?.(this.#props.connection.connection, savepointName, this.#compileQuery);\n            return new ControlledTransaction({ ...this.#props });\n        });\n    }\n    /**\n     * Rolls back to a savepoint with a given name.\n     *\n     * See {@link savepoint} and {@link releaseSavepoint}.\n     *\n     * You must use the same instance returned by {@link savepoint}, or\n     * escape the type-check by using `as any`.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { Kysely } from 'kysely'\n     * import type { Database } from 'type-editor' // imaginary module\n     *\n     * const trx = await db.startTransaction().execute()\n     *\n     * await insertJennifer(trx)\n     *\n     * const trxAfterJennifer = await trx.savepoint('after_jennifer').execute()\n     *\n     * try {\n     *   await doSomething(trxAfterJennifer)\n     * } catch (error) {\n     *   await trxAfterJennifer.rollbackToSavepoint('after_jennifer').execute()\n     * }\n     *\n     * async function insertJennifer(kysely: Kysely<Database>) {}\n     * async function doSomething(kysely: Kysely<Database>) {}\n     * ```\n     */\n    rollbackToSavepoint(savepointName) {\n        assertNotCommittedOrRolledBack(this.#state);\n        return new Command(async () => {\n            await this.#props.driver.rollbackToSavepoint?.(this.#props.connection.connection, savepointName, this.#compileQuery);\n            return new ControlledTransaction({ ...this.#props });\n        });\n    }\n    /**\n     * Releases a savepoint with a given name.\n     *\n     * See {@link savepoint} and {@link rollbackToSavepoint}.\n     *\n     * You must use the same instance returned by {@link savepoint}, or\n     * escape the type-check by using `as any`.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import type { Kysely } from 'kysely'\n     * import type { Database } from 'type-editor' // imaginary module\n     *\n     * const trx = await db.startTransaction().execute()\n     *\n     * await insertJennifer(trx)\n     *\n     * const trxAfterJennifer = await trx.savepoint('after_jennifer').execute()\n     *\n     * try {\n     *   await doSomething(trxAfterJennifer)\n     * } catch (error) {\n     *   await trxAfterJennifer.rollbackToSavepoint('after_jennifer').execute()\n     * }\n     *\n     * await trxAfterJennifer.releaseSavepoint('after_jennifer').execute()\n     *\n     * await doSomethingElse(trx)\n     *\n     * async function insertJennifer(kysely: Kysely<Database>) {}\n     * async function doSomething(kysely: Kysely<Database>) {}\n     * async function doSomethingElse(kysely: Kysely<Database>) {}\n     * ```\n     */\n    releaseSavepoint(savepointName) {\n        assertNotCommittedOrRolledBack(this.#state);\n        return new Command(async () => {\n            await this.#props.driver.releaseSavepoint?.(this.#props.connection.connection, savepointName, this.#compileQuery);\n            return new ControlledTransaction({ ...this.#props });\n        });\n    }\n    withPlugin(plugin) {\n        return new ControlledTransaction({\n            ...this.#props,\n            executor: this.#props.executor.withPlugin(plugin),\n        });\n    }\n    withoutPlugins() {\n        return new ControlledTransaction({\n            ...this.#props,\n            executor: this.#props.executor.withoutPlugins(),\n        });\n    }\n    withSchema(schema) {\n        return new ControlledTransaction({\n            ...this.#props,\n            executor: this.#props.executor.withPluginAtFront(new WithSchemaPlugin(schema)),\n        });\n    }\n    withTables() {\n        return new ControlledTransaction({ ...this.#props });\n    }\n}\nexport class Command {\n    #cb;\n    constructor(cb) {\n        this.#cb = cb;\n    }\n    /**\n     * Executes the command.\n     */\n    async execute() {\n        return await this.#cb();\n    }\n}\nfunction assertNotCommittedOrRolledBack(state) {\n    if (state.isCommitted) {\n        throw new Error('Transaction is already committed');\n    }\n    if (state.isRolledBack) {\n        throw new Error('Transaction is already rolled back');\n    }\n}\n/**\n * An executor wrapper that asserts that the transaction state is not committed\n * or rolled back when a query is executed.\n *\n * @internal\n */\nclass NotCommittedOrRolledBackAssertingExecutor {\n    #executor;\n    #state;\n    constructor(executor, state) {\n        if (executor instanceof NotCommittedOrRolledBackAssertingExecutor) {\n            this.#executor = executor.#executor;\n        }\n        else {\n            this.#executor = executor;\n        }\n        this.#state = state;\n    }\n    get adapter() {\n        return this.#executor.adapter;\n    }\n    get plugins() {\n        return this.#executor.plugins;\n    }\n    transformQuery(node, queryId) {\n        return this.#executor.transformQuery(node, queryId);\n    }\n    compileQuery(node, queryId) {\n        return this.#executor.compileQuery(node, queryId);\n    }\n    provideConnection(consumer) {\n        return this.#executor.provideConnection(consumer);\n    }\n    executeQuery(compiledQuery, queryId) {\n        assertNotCommittedOrRolledBack(this.#state);\n        return this.#executor.executeQuery(compiledQuery, queryId);\n    }\n    stream(compiledQuery, chunkSize, queryId) {\n        assertNotCommittedOrRolledBack(this.#state);\n        return this.#executor.stream(compiledQuery, chunkSize, queryId);\n    }\n    withConnectionProvider(connectionProvider) {\n        return new NotCommittedOrRolledBackAssertingExecutor(this.#executor.withConnectionProvider(connectionProvider), this.#state);\n    }\n    withPlugin(plugin) {\n        return new NotCommittedOrRolledBackAssertingExecutor(this.#executor.withPlugin(plugin), this.#state);\n    }\n    withPlugins(plugins) {\n        return new NotCommittedOrRolledBackAssertingExecutor(this.#executor.withPlugins(plugins), this.#state);\n    }\n    withPluginAtFront(plugin) {\n        return new NotCommittedOrRolledBackAssertingExecutor(this.#executor.withPluginAtFront(plugin), this.#state);\n    }\n    withoutPlugins() {\n        return new NotCommittedOrRolledBackAssertingExecutor(this.#executor.withoutPlugins(), this.#state);\n    }\n}\n", "/// <reference types=\"./where-interface.d.ts\" />\nexport {};\n", "/// <reference types=\"./returning-interface.d.ts\" />\nexport {};\n", "/// <reference types=\"./output-interface.d.ts\" />\nexport {};\n", "/// <reference types=\"./having-interface.d.ts\" />\nexport {};\n", "/// <reference types=\"./order-by-interface.d.ts\" />\nexport {};\n", "/// <reference types=\"./raw-builder.d.ts\" />\nimport { AliasNode } from '../operation-node/alias-node.js';\nimport { freeze } from '../util/object-utils.js';\nimport { NOOP_QUERY_EXECUTOR } from '../query-executor/noop-query-executor.js';\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nclass RawBuilderImpl {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    get expressionType() {\n        return undefined;\n    }\n    get isRawBuilder() {\n        return true;\n    }\n    as(alias) {\n        return new AliasedRawBuilderImpl(this, alias);\n    }\n    $castTo() {\n        return new RawBuilderImpl({ ...this.#props });\n    }\n    $notNull() {\n        return new RawBuilderImpl(this.#props);\n    }\n    withPlugin(plugin) {\n        return new RawBuilderImpl({\n            ...this.#props,\n            plugins: this.#props.plugins !== undefined\n                ? freeze([...this.#props.plugins, plugin])\n                : freeze([plugin]),\n        });\n    }\n    toOperationNode() {\n        return this.#toOperationNode(this.#getExecutor());\n    }\n    compile(executorProvider) {\n        return this.#compile(this.#getExecutor(executorProvider));\n    }\n    async execute(executorProvider) {\n        const executor = this.#getExecutor(executorProvider);\n        return executor.executeQuery(this.#compile(executor), this.#props.queryId);\n    }\n    #getExecutor(executorProvider) {\n        const executor = executorProvider !== undefined\n            ? executorProvider.getExecutor()\n            : NOOP_QUERY_EXECUTOR;\n        return this.#props.plugins !== undefined\n            ? executor.withPlugins(this.#props.plugins)\n            : executor;\n    }\n    #toOperationNode(executor) {\n        return executor.transformQuery(this.#props.rawNode, this.#props.queryId);\n    }\n    #compile(executor) {\n        return executor.compileQuery(this.#toOperationNode(executor), this.#props.queryId);\n    }\n}\nexport function createRawBuilder(props) {\n    return new RawBuilderImpl(props);\n}\nclass AliasedRawBuilderImpl {\n    #rawBuilder;\n    #alias;\n    constructor(rawBuilder, alias) {\n        this.#rawBuilder = rawBuilder;\n        this.#alias = alias;\n    }\n    get expression() {\n        return this.#rawBuilder;\n    }\n    get alias() {\n        return this.#alias;\n    }\n    get rawBuilder() {\n        return this.#rawBuilder;\n    }\n    toOperationNode() {\n        return AliasNode.create(this.#rawBuilder.toOperationNode(), isOperationNodeSource(this.#alias)\n            ? this.#alias.toOperationNode()\n            : IdentifierNode.create(this.#alias));\n    }\n}\n", "/// <reference types=\"./sql.d.ts\" />\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { isOperationNodeSource } from '../operation-node/operation-node-source.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { ValueNode } from '../operation-node/value-node.js';\nimport { parseStringReference } from '../parser/reference-parser.js';\nimport { parseTable } from '../parser/table-parser.js';\nimport { parseValueExpression } from '../parser/value-parser.js';\nimport { createQueryId } from '../util/query-id.js';\nimport { createRawBuilder } from './raw-builder.js';\nexport const sql = Object.assign((sqlFragments, ...parameters) => {\n    return createRawBuilder({\n        queryId: createQueryId(),\n        rawNode: RawNode.create(sqlFragments, parameters?.map(parseParameter) ?? []),\n    });\n}, {\n    ref(columnReference) {\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.createWithChild(parseStringReference(columnReference)),\n        });\n    },\n    val(value) {\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.createWithChild(parseValueExpression(value)),\n        });\n    },\n    value(value) {\n        return this.val(value);\n    },\n    table(tableReference) {\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.createWithChild(parseTable(tableReference)),\n        });\n    },\n    id(...ids) {\n        const fragments = new Array(ids.length + 1).fill('.');\n        fragments[0] = '';\n        fragments[fragments.length - 1] = '';\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.create(fragments, ids.map(IdentifierNode.create)),\n        });\n    },\n    lit(value) {\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.createWithChild(ValueNode.createImmediate(value)),\n        });\n    },\n    literal(value) {\n        return this.lit(value);\n    },\n    raw(sql) {\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.createWithSql(sql),\n        });\n    },\n    join(array, separator = sql `, `) {\n        const nodes = new Array(Math.max(2 * array.length - 1, 0));\n        const sep = separator.toOperationNode();\n        for (let i = 0; i < array.length; ++i) {\n            nodes[2 * i] = parseParameter(array[i]);\n            if (i !== array.length - 1) {\n                nodes[2 * i + 1] = sep;\n            }\n        }\n        return createRawBuilder({\n            queryId: createQueryId(),\n            rawNode: RawNode.createWithChildren(nodes),\n        });\n    },\n});\nfunction parseParameter(param) {\n    if (isOperationNodeSource(param)) {\n        return param.toOperationNode();\n    }\n    return parseValueExpression(param);\n}\n", "/// <reference types=\"./query-executor.d.ts\" />\nexport {};\n", "/// <reference types=\"./query-executor-provider.d.ts\" />\nexport {};\n", "/// <reference types=\"./operation-node-visitor.d.ts\" />\nimport { freeze } from '../util/object-utils.js';\nexport class OperationNodeVisitor {\n    nodeStack = [];\n    get parentNode() {\n        return this.nodeStack[this.nodeStack.length - 2];\n    }\n    #visitors = freeze({\n        AliasNode: this.visitAlias.bind(this),\n        ColumnNode: this.visitColumn.bind(this),\n        IdentifierNode: this.visitIdentifier.bind(this),\n        SchemableIdentifierNode: this.visitSchemableIdentifier.bind(this),\n        RawNode: this.visitRaw.bind(this),\n        ReferenceNode: this.visitReference.bind(this),\n        SelectQueryNode: this.visitSelectQuery.bind(this),\n        SelectionNode: this.visitSelection.bind(this),\n        TableNode: this.visitTable.bind(this),\n        FromNode: this.visitFrom.bind(this),\n        SelectAllNode: this.visitSelectAll.bind(this),\n        AndNode: this.visitAnd.bind(this),\n        OrNode: this.visitOr.bind(this),\n        ValueNode: this.visitValue.bind(this),\n        ValueListNode: this.visitValueList.bind(this),\n        PrimitiveValueListNode: this.visitPrimitiveValueList.bind(this),\n        ParensNode: this.visitParens.bind(this),\n        JoinNode: this.visitJoin.bind(this),\n        OperatorNode: this.visitOperator.bind(this),\n        WhereNode: this.visitWhere.bind(this),\n        InsertQueryNode: this.visitInsertQuery.bind(this),\n        DeleteQueryNode: this.visitDeleteQuery.bind(this),\n        ReturningNode: this.visitReturning.bind(this),\n        CreateTableNode: this.visitCreateTable.bind(this),\n        AddColumnNode: this.visitAddColumn.bind(this),\n        ColumnDefinitionNode: this.visitColumnDefinition.bind(this),\n        DropTableNode: this.visitDropTable.bind(this),\n        DataTypeNode: this.visitDataType.bind(this),\n        OrderByNode: this.visitOrderBy.bind(this),\n        OrderByItemNode: this.visitOrderByItem.bind(this),\n        GroupByNode: this.visitGroupBy.bind(this),\n        GroupByItemNode: this.visitGroupByItem.bind(this),\n        UpdateQueryNode: this.visitUpdateQuery.bind(this),\n        ColumnUpdateNode: this.visitColumnUpdate.bind(this),\n        LimitNode: this.visitLimit.bind(this),\n        OffsetNode: this.visitOffset.bind(this),\n        OnConflictNode: this.visitOnConflict.bind(this),\n        OnDuplicateKeyNode: this.visitOnDuplicateKey.bind(this),\n        CreateIndexNode: this.visitCreateIndex.bind(this),\n        DropIndexNode: this.visitDropIndex.bind(this),\n        ListNode: this.visitList.bind(this),\n        PrimaryKeyConstraintNode: this.visitPrimaryKeyConstraint.bind(this),\n        UniqueConstraintNode: this.visitUniqueConstraint.bind(this),\n        ReferencesNode: this.visitReferences.bind(this),\n        CheckConstraintNode: this.visitCheckConstraint.bind(this),\n        WithNode: this.visitWith.bind(this),\n        CommonTableExpressionNode: this.visitCommonTableExpression.bind(this),\n        CommonTableExpressionNameNode: this.visitCommonTableExpressionName.bind(this),\n        HavingNode: this.visitHaving.bind(this),\n        CreateSchemaNode: this.visitCreateSchema.bind(this),\n        DropSchemaNode: this.visitDropSchema.bind(this),\n        AlterTableNode: this.visitAlterTable.bind(this),\n        DropColumnNode: this.visitDropColumn.bind(this),\n        RenameColumnNode: this.visitRenameColumn.bind(this),\n        AlterColumnNode: this.visitAlterColumn.bind(this),\n        ModifyColumnNode: this.visitModifyColumn.bind(this),\n        AddConstraintNode: this.visitAddConstraint.bind(this),\n        DropConstraintNode: this.visitDropConstraint.bind(this),\n        RenameConstraintNode: this.visitRenameConstraint.bind(this),\n        ForeignKeyConstraintNode: this.visitForeignKeyConstraint.bind(this),\n        CreateViewNode: this.visitCreateView.bind(this),\n        RefreshMaterializedViewNode: this.visitRefreshMaterializedView.bind(this),\n        DropViewNode: this.visitDropView.bind(this),\n        GeneratedNode: this.visitGenerated.bind(this),\n        DefaultValueNode: this.visitDefaultValue.bind(this),\n        OnNode: this.visitOn.bind(this),\n        ValuesNode: this.visitValues.bind(this),\n        SelectModifierNode: this.visitSelectModifier.bind(this),\n        CreateTypeNode: this.visitCreateType.bind(this),\n        DropTypeNode: this.visitDropType.bind(this),\n        ExplainNode: this.visitExplain.bind(this),\n        DefaultInsertValueNode: this.visitDefaultInsertValue.bind(this),\n        AggregateFunctionNode: this.visitAggregateFunction.bind(this),\n        OverNode: this.visitOver.bind(this),\n        PartitionByNode: this.visitPartitionBy.bind(this),\n        PartitionByItemNode: this.visitPartitionByItem.bind(this),\n        SetOperationNode: this.visitSetOperation.bind(this),\n        BinaryOperationNode: this.visitBinaryOperation.bind(this),\n        UnaryOperationNode: this.visitUnaryOperation.bind(this),\n        UsingNode: this.visitUsing.bind(this),\n        FunctionNode: this.visitFunction.bind(this),\n        CaseNode: this.visitCase.bind(this),\n        WhenNode: this.visitWhen.bind(this),\n        JSONReferenceNode: this.visitJSONReference.bind(this),\n        JSONPathNode: this.visitJSONPath.bind(this),\n        JSONPathLegNode: this.visitJSONPathLeg.bind(this),\n        JSONOperatorChainNode: this.visitJSONOperatorChain.bind(this),\n        TupleNode: this.visitTuple.bind(this),\n        MergeQueryNode: this.visitMergeQuery.bind(this),\n        MatchedNode: this.visitMatched.bind(this),\n        AddIndexNode: this.visitAddIndex.bind(this),\n        CastNode: this.visitCast.bind(this),\n        FetchNode: this.visitFetch.bind(this),\n        TopNode: this.visitTop.bind(this),\n        OutputNode: this.visitOutput.bind(this),\n        OrActionNode: this.visitOrAction.bind(this),\n        CollateNode: this.visitCollate.bind(this),\n    });\n    visitNode = (node) => {\n        this.nodeStack.push(node);\n        this.#visitors[node.kind](node);\n        this.nodeStack.pop();\n    };\n}\n", "/// <reference types=\"./default-query-compiler.d.ts\" />\nimport { CreateTableNode } from '../operation-node/create-table-node.js';\nimport { InsertQueryNode } from '../operation-node/insert-query-node.js';\nimport { OperationNodeVisitor } from '../operation-node/operation-node-visitor.js';\nimport { OperatorNode } from '../operation-node/operator-node.js';\nimport { ParensNode } from '../operation-node/parens-node.js';\nimport { QueryNode } from '../operation-node/query-node.js';\nimport { freeze, isString, isNumber, isBoolean, isNull, isDate, isBigInt, } from '../util/object-utils.js';\nimport { CreateViewNode } from '../operation-node/create-view-node.js';\nimport { SetOperationNode } from '../operation-node/set-operation-node.js';\nimport { MergeQueryNode } from '../operation-node/merge-query-node.js';\nimport { logOnce } from '../util/log-once.js';\nconst LIT_WRAP_REGEX = /'/g;\nexport class DefaultQueryCompiler extends OperationNodeVisitor {\n    #sql = '';\n    #parameters = [];\n    get numParameters() {\n        return this.#parameters.length;\n    }\n    compileQuery(node, queryId) {\n        this.#sql = '';\n        this.#parameters = [];\n        this.nodeStack.splice(0, this.nodeStack.length);\n        this.visitNode(node);\n        return freeze({\n            query: node,\n            queryId,\n            sql: this.getSql(),\n            parameters: [...this.#parameters],\n        });\n    }\n    getSql() {\n        return this.#sql;\n    }\n    visitSelectQuery(node) {\n        const wrapInParens = this.parentNode !== undefined &&\n            !ParensNode.is(this.parentNode) &&\n            !InsertQueryNode.is(this.parentNode) &&\n            !CreateTableNode.is(this.parentNode) &&\n            !CreateViewNode.is(this.parentNode) &&\n            !SetOperationNode.is(this.parentNode);\n        if (this.parentNode === undefined && node.explain) {\n            this.visitNode(node.explain);\n            this.append(' ');\n        }\n        if (wrapInParens) {\n            this.append('(');\n        }\n        if (node.with) {\n            this.visitNode(node.with);\n            this.append(' ');\n        }\n        this.append('select');\n        if (node.distinctOn) {\n            this.append(' ');\n            this.compileDistinctOn(node.distinctOn);\n        }\n        if (node.frontModifiers?.length) {\n            this.append(' ');\n            this.compileList(node.frontModifiers, ' ');\n        }\n        if (node.top) {\n            this.append(' ');\n            this.visitNode(node.top);\n        }\n        if (node.selections) {\n            this.append(' ');\n            this.compileList(node.selections);\n        }\n        if (node.from) {\n            this.append(' ');\n            this.visitNode(node.from);\n        }\n        if (node.joins) {\n            this.append(' ');\n            this.compileList(node.joins, ' ');\n        }\n        if (node.where) {\n            this.append(' ');\n            this.visitNode(node.where);\n        }\n        if (node.groupBy) {\n            this.append(' ');\n            this.visitNode(node.groupBy);\n        }\n        if (node.having) {\n            this.append(' ');\n            this.visitNode(node.having);\n        }\n        if (node.setOperations) {\n            this.append(' ');\n            this.compileList(node.setOperations, ' ');\n        }\n        if (node.orderBy) {\n            this.append(' ');\n            this.visitNode(node.orderBy);\n        }\n        if (node.limit) {\n            this.append(' ');\n            this.visitNode(node.limit);\n        }\n        if (node.offset) {\n            this.append(' ');\n            this.visitNode(node.offset);\n        }\n        if (node.fetch) {\n            this.append(' ');\n            this.visitNode(node.fetch);\n        }\n        if (node.endModifiers?.length) {\n            this.append(' ');\n            this.compileList(this.sortSelectModifiers([...node.endModifiers]), ' ');\n        }\n        if (wrapInParens) {\n            this.append(')');\n        }\n    }\n    visitFrom(node) {\n        this.append('from ');\n        this.compileList(node.froms);\n    }\n    visitSelection(node) {\n        this.visitNode(node.selection);\n    }\n    visitColumn(node) {\n        this.visitNode(node.column);\n    }\n    compileDistinctOn(expressions) {\n        this.append('distinct on (');\n        this.compileList(expressions);\n        this.append(')');\n    }\n    compileList(nodes, separator = ', ') {\n        const lastIndex = nodes.length - 1;\n        for (let i = 0; i <= lastIndex; i++) {\n            this.visitNode(nodes[i]);\n            if (i < lastIndex) {\n                this.append(separator);\n            }\n        }\n    }\n    visitWhere(node) {\n        this.append('where ');\n        this.visitNode(node.where);\n    }\n    visitHaving(node) {\n        this.append('having ');\n        this.visitNode(node.having);\n    }\n    visitInsertQuery(node) {\n        const rootQueryNode = this.nodeStack.find(QueryNode.is);\n        const isSubQuery = rootQueryNode !== node;\n        if (!isSubQuery && node.explain) {\n            this.visitNode(node.explain);\n            this.append(' ');\n        }\n        if (isSubQuery && !MergeQueryNode.is(rootQueryNode)) {\n            this.append('(');\n        }\n        if (node.with) {\n            this.visitNode(node.with);\n            this.append(' ');\n        }\n        this.append(node.replace ? 'replace' : 'insert');\n        // TODO: remove in 0.29.\n        if (node.ignore) {\n            logOnce('`InsertQueryNode.ignore` is deprecated. Use `InsertQueryNode.orAction` instead.');\n            this.append(' ignore');\n        }\n        if (node.orAction) {\n            this.append(' ');\n            this.visitNode(node.orAction);\n        }\n        if (node.top) {\n            this.append(' ');\n            this.visitNode(node.top);\n        }\n        if (node.into) {\n            this.append(' into ');\n            this.visitNode(node.into);\n        }\n        if (node.columns) {\n            this.append(' (');\n            this.compileList(node.columns);\n            this.append(')');\n        }\n        if (node.output) {\n            this.append(' ');\n            this.visitNode(node.output);\n        }\n        if (node.values) {\n            this.append(' ');\n            this.visitNode(node.values);\n        }\n        if (node.defaultValues) {\n            this.append(' ');\n            this.append('default values');\n        }\n        if (node.onConflict) {\n            this.append(' ');\n            this.visitNode(node.onConflict);\n        }\n        if (node.onDuplicateKey) {\n            this.append(' ');\n            this.visitNode(node.onDuplicateKey);\n        }\n        if (node.returning) {\n            this.append(' ');\n            this.visitNode(node.returning);\n        }\n        if (isSubQuery && !MergeQueryNode.is(rootQueryNode)) {\n            this.append(')');\n        }\n        if (node.endModifiers?.length) {\n            this.append(' ');\n            this.compileList(node.endModifiers, ' ');\n        }\n    }\n    visitValues(node) {\n        this.append('values ');\n        this.compileList(node.values);\n    }\n    visitDeleteQuery(node) {\n        const isSubQuery = this.nodeStack.find(QueryNode.is) !== node;\n        if (!isSubQuery && node.explain) {\n            this.visitNode(node.explain);\n            this.append(' ');\n        }\n        if (isSubQuery) {\n            this.append('(');\n        }\n        if (node.with) {\n            this.visitNode(node.with);\n            this.append(' ');\n        }\n        this.append('delete ');\n        if (node.top) {\n            this.visitNode(node.top);\n            this.append(' ');\n        }\n        this.visitNode(node.from);\n        if (node.output) {\n            this.append(' ');\n            this.visitNode(node.output);\n        }\n        if (node.using) {\n            this.append(' ');\n            this.visitNode(node.using);\n        }\n        if (node.joins) {\n            this.append(' ');\n            this.compileList(node.joins, ' ');\n        }\n        if (node.where) {\n            this.append(' ');\n            this.visitNode(node.where);\n        }\n        if (node.orderBy) {\n            this.append(' ');\n            this.visitNode(node.orderBy);\n        }\n        if (node.limit) {\n            this.append(' ');\n            this.visitNode(node.limit);\n        }\n        if (node.returning) {\n            this.append(' ');\n            this.visitNode(node.returning);\n        }\n        if (isSubQuery) {\n            this.append(')');\n        }\n        if (node.endModifiers?.length) {\n            this.append(' ');\n            this.compileList(node.endModifiers, ' ');\n        }\n    }\n    visitReturning(node) {\n        this.append('returning ');\n        this.compileList(node.selections);\n    }\n    visitAlias(node) {\n        this.visitNode(node.node);\n        this.append(' as ');\n        this.visitNode(node.alias);\n    }\n    visitReference(node) {\n        if (node.table) {\n            this.visitNode(node.table);\n            this.append('.');\n        }\n        this.visitNode(node.column);\n    }\n    visitSelectAll(_) {\n        this.append('*');\n    }\n    visitIdentifier(node) {\n        this.append(this.getLeftIdentifierWrapper());\n        this.compileUnwrappedIdentifier(node);\n        this.append(this.getRightIdentifierWrapper());\n    }\n    compileUnwrappedIdentifier(node) {\n        if (!isString(node.name)) {\n            throw new Error('a non-string identifier was passed to compileUnwrappedIdentifier.');\n        }\n        this.append(this.sanitizeIdentifier(node.name));\n    }\n    visitAnd(node) {\n        this.visitNode(node.left);\n        this.append(' and ');\n        this.visitNode(node.right);\n    }\n    visitOr(node) {\n        this.visitNode(node.left);\n        this.append(' or ');\n        this.visitNode(node.right);\n    }\n    visitValue(node) {\n        if (node.immediate) {\n            this.appendImmediateValue(node.value);\n        }\n        else {\n            this.appendValue(node.value);\n        }\n    }\n    visitValueList(node) {\n        this.append('(');\n        this.compileList(node.values);\n        this.append(')');\n    }\n    visitTuple(node) {\n        this.append('(');\n        this.compileList(node.values);\n        this.append(')');\n    }\n    visitPrimitiveValueList(node) {\n        this.append('(');\n        const { values } = node;\n        for (let i = 0; i < values.length; ++i) {\n            this.appendValue(values[i]);\n            if (i !== values.length - 1) {\n                this.append(', ');\n            }\n        }\n        this.append(')');\n    }\n    visitParens(node) {\n        this.append('(');\n        this.visitNode(node.node);\n        this.append(')');\n    }\n    visitJoin(node) {\n        this.append(JOIN_TYPE_SQL[node.joinType]);\n        this.append(' ');\n        this.visitNode(node.table);\n        if (node.on) {\n            this.append(' ');\n            this.visitNode(node.on);\n        }\n    }\n    visitOn(node) {\n        this.append('on ');\n        this.visitNode(node.on);\n    }\n    visitRaw(node) {\n        const { sqlFragments, parameters: params } = node;\n        for (let i = 0; i < sqlFragments.length; ++i) {\n            this.append(sqlFragments[i]);\n            if (params.length > i) {\n                this.visitNode(params[i]);\n            }\n        }\n    }\n    visitOperator(node) {\n        this.append(node.operator);\n    }\n    visitTable(node) {\n        this.visitNode(node.table);\n    }\n    visitSchemableIdentifier(node) {\n        if (node.schema) {\n            this.visitNode(node.schema);\n            this.append('.');\n        }\n        this.visitNode(node.identifier);\n    }\n    visitCreateTable(node) {\n        this.append('create ');\n        if (node.frontModifiers && node.frontModifiers.length > 0) {\n            this.compileList(node.frontModifiers, ' ');\n            this.append(' ');\n        }\n        if (node.temporary) {\n            this.append('temporary ');\n        }\n        this.append('table ');\n        if (node.ifNotExists) {\n            this.append('if not exists ');\n        }\n        this.visitNode(node.table);\n        if (node.selectQuery) {\n            this.append(' as ');\n            this.visitNode(node.selectQuery);\n        }\n        else {\n            this.append(' (');\n            this.compileList([...node.columns, ...(node.constraints ?? [])]);\n            this.append(')');\n            if (node.onCommit) {\n                this.append(' on commit ');\n                this.append(node.onCommit);\n            }\n            if (node.endModifiers && node.endModifiers.length > 0) {\n                this.append(' ');\n                this.compileList(node.endModifiers, ' ');\n            }\n        }\n    }\n    visitColumnDefinition(node) {\n        if (node.ifNotExists) {\n            this.append('if not exists ');\n        }\n        this.visitNode(node.column);\n        this.append(' ');\n        this.visitNode(node.dataType);\n        if (node.unsigned) {\n            this.append(' unsigned');\n        }\n        if (node.frontModifiers && node.frontModifiers.length > 0) {\n            this.append(' ');\n            this.compileList(node.frontModifiers, ' ');\n        }\n        if (node.generated) {\n            this.append(' ');\n            this.visitNode(node.generated);\n        }\n        if (node.identity) {\n            this.append(' identity');\n        }\n        if (node.defaultTo) {\n            this.append(' ');\n            this.visitNode(node.defaultTo);\n        }\n        if (node.notNull) {\n            this.append(' not null');\n        }\n        if (node.unique) {\n            this.append(' unique');\n        }\n        if (node.nullsNotDistinct) {\n            this.append(' nulls not distinct');\n        }\n        if (node.primaryKey) {\n            this.append(' primary key');\n        }\n        if (node.autoIncrement) {\n            this.append(' ');\n            this.append(this.getAutoIncrement());\n        }\n        if (node.references) {\n            this.append(' ');\n            this.visitNode(node.references);\n        }\n        if (node.check) {\n            this.append(' ');\n            this.visitNode(node.check);\n        }\n        if (node.endModifiers && node.endModifiers.length > 0) {\n            this.append(' ');\n            this.compileList(node.endModifiers, ' ');\n        }\n    }\n    getAutoIncrement() {\n        return 'auto_increment';\n    }\n    visitReferences(node) {\n        this.append('references ');\n        this.visitNode(node.table);\n        this.append(' (');\n        this.compileList(node.columns);\n        this.append(')');\n        if (node.onDelete) {\n            this.append(' on delete ');\n            this.append(node.onDelete);\n        }\n        if (node.onUpdate) {\n            this.append(' on update ');\n            this.append(node.onUpdate);\n        }\n    }\n    visitDropTable(node) {\n        this.append('drop table ');\n        if (node.ifExists) {\n            this.append('if exists ');\n        }\n        this.visitNode(node.table);\n        if (node.cascade) {\n            this.append(' cascade');\n        }\n    }\n    visitDataType(node) {\n        this.append(node.dataType);\n    }\n    visitOrderBy(node) {\n        this.append('order by ');\n        this.compileList(node.items);\n    }\n    visitOrderByItem(node) {\n        this.visitNode(node.orderBy);\n        if (node.collation) {\n            this.append(' ');\n            this.visitNode(node.collation);\n        }\n        if (node.direction) {\n            this.append(' ');\n            this.visitNode(node.direction);\n        }\n        if (node.nulls) {\n            this.append(' nulls ');\n            this.append(node.nulls);\n        }\n    }\n    visitGroupBy(node) {\n        this.append('group by ');\n        this.compileList(node.items);\n    }\n    visitGroupByItem(node) {\n        this.visitNode(node.groupBy);\n    }\n    visitUpdateQuery(node) {\n        const rootQueryNode = this.nodeStack.find(QueryNode.is);\n        const isSubQuery = rootQueryNode !== node;\n        if (!isSubQuery && node.explain) {\n            this.visitNode(node.explain);\n            this.append(' ');\n        }\n        if (isSubQuery && !MergeQueryNode.is(rootQueryNode)) {\n            this.append('(');\n        }\n        if (node.with) {\n            this.visitNode(node.with);\n            this.append(' ');\n        }\n        this.append('update ');\n        if (node.top) {\n            this.visitNode(node.top);\n            this.append(' ');\n        }\n        if (node.table) {\n            this.visitNode(node.table);\n            this.append(' ');\n        }\n        this.append('set ');\n        if (node.updates) {\n            this.compileList(node.updates);\n        }\n        if (node.output) {\n            this.append(' ');\n            this.visitNode(node.output);\n        }\n        if (node.from) {\n            this.append(' ');\n            this.visitNode(node.from);\n        }\n        if (node.joins) {\n            if (!node.from) {\n                throw new Error(\"Joins in an update query are only supported as a part of a PostgreSQL 'update set from join' query. If you want to create a MySQL 'update join set' query, see https://kysely.dev/docs/examples/update/my-sql-joins\");\n            }\n            this.append(' ');\n            this.compileList(node.joins, ' ');\n        }\n        if (node.where) {\n            this.append(' ');\n            this.visitNode(node.where);\n        }\n        if (node.orderBy) {\n            this.append(' ');\n            this.visitNode(node.orderBy);\n        }\n        if (node.limit) {\n            this.append(' ');\n            this.visitNode(node.limit);\n        }\n        if (node.returning) {\n            this.append(' ');\n            this.visitNode(node.returning);\n        }\n        if (isSubQuery && !MergeQueryNode.is(rootQueryNode)) {\n            this.append(')');\n        }\n        if (node.endModifiers?.length) {\n            this.append(' ');\n            this.compileList(node.endModifiers, ' ');\n        }\n    }\n    visitColumnUpdate(node) {\n        this.visitNode(node.column);\n        this.append(' = ');\n        this.visitNode(node.value);\n    }\n    visitLimit(node) {\n        this.append('limit ');\n        this.visitNode(node.limit);\n    }\n    visitOffset(node) {\n        this.append('offset ');\n        this.visitNode(node.offset);\n    }\n    visitOnConflict(node) {\n        this.append('on conflict');\n        if (node.columns) {\n            this.append(' (');\n            this.compileList(node.columns);\n            this.append(')');\n        }\n        else if (node.constraint) {\n            this.append(' on constraint ');\n            this.visitNode(node.constraint);\n        }\n        else if (node.indexExpression) {\n            this.append(' (');\n            this.visitNode(node.indexExpression);\n            this.append(')');\n        }\n        if (node.indexWhere) {\n            this.append(' ');\n            this.visitNode(node.indexWhere);\n        }\n        if (node.doNothing === true) {\n            this.append(' do nothing');\n        }\n        else if (node.updates) {\n            this.append(' do update set ');\n            this.compileList(node.updates);\n            if (node.updateWhere) {\n                this.append(' ');\n                this.visitNode(node.updateWhere);\n            }\n        }\n    }\n    visitOnDuplicateKey(node) {\n        this.append('on duplicate key update ');\n        this.compileList(node.updates);\n    }\n    visitCreateIndex(node) {\n        this.append('create ');\n        if (node.unique) {\n            this.append('unique ');\n        }\n        this.append('index ');\n        if (node.ifNotExists) {\n            this.append('if not exists ');\n        }\n        this.visitNode(node.name);\n        if (node.table) {\n            this.append(' on ');\n            this.visitNode(node.table);\n        }\n        if (node.using) {\n            this.append(' using ');\n            this.visitNode(node.using);\n        }\n        if (node.columns) {\n            this.append(' (');\n            this.compileList(node.columns);\n            this.append(')');\n        }\n        if (node.nullsNotDistinct) {\n            this.append(' nulls not distinct');\n        }\n        if (node.where) {\n            this.append(' ');\n            this.visitNode(node.where);\n        }\n    }\n    visitDropIndex(node) {\n        this.append('drop index ');\n        if (node.ifExists) {\n            this.append('if exists ');\n        }\n        this.visitNode(node.name);\n        if (node.table) {\n            this.append(' on ');\n            this.visitNode(node.table);\n        }\n        if (node.cascade) {\n            this.append(' cascade');\n        }\n    }\n    visitCreateSchema(node) {\n        this.append('create schema ');\n        if (node.ifNotExists) {\n            this.append('if not exists ');\n        }\n        this.visitNode(node.schema);\n    }\n    visitDropSchema(node) {\n        this.append('drop schema ');\n        if (node.ifExists) {\n            this.append('if exists ');\n        }\n        this.visitNode(node.schema);\n        if (node.cascade) {\n            this.append(' cascade');\n        }\n    }\n    visitPrimaryKeyConstraint(node) {\n        if (node.name) {\n            this.append('constraint ');\n            this.visitNode(node.name);\n            this.append(' ');\n        }\n        this.append('primary key (');\n        this.compileList(node.columns);\n        this.append(')');\n        this.buildDeferrable(node);\n    }\n    buildDeferrable(node) {\n        if (node.deferrable !== undefined) {\n            if (node.deferrable) {\n                this.append(' deferrable');\n            }\n            else {\n                this.append(' not deferrable');\n            }\n        }\n        if (node.initiallyDeferred !== undefined) {\n            if (node.initiallyDeferred) {\n                this.append(' initially deferred');\n            }\n            else {\n                this.append(' initially immediate');\n            }\n        }\n    }\n    visitUniqueConstraint(node) {\n        if (node.name) {\n            this.append('constraint ');\n            this.visitNode(node.name);\n            this.append(' ');\n        }\n        this.append('unique');\n        if (node.nullsNotDistinct) {\n            this.append(' nulls not distinct');\n        }\n        this.append(' (');\n        this.compileList(node.columns);\n        this.append(')');\n        this.buildDeferrable(node);\n    }\n    visitCheckConstraint(node) {\n        if (node.name) {\n            this.append('constraint ');\n            this.visitNode(node.name);\n            this.append(' ');\n        }\n        this.append('check (');\n        this.visitNode(node.expression);\n        this.append(')');\n    }\n    visitForeignKeyConstraint(node) {\n        if (node.name) {\n            this.append('constraint ');\n            this.visitNode(node.name);\n            this.append(' ');\n        }\n        this.append('foreign key (');\n        this.compileList(node.columns);\n        this.append(') ');\n        this.visitNode(node.references);\n        if (node.onDelete) {\n            this.append(' on delete ');\n            this.append(node.onDelete);\n        }\n        if (node.onUpdate) {\n            this.append(' on update ');\n            this.append(node.onUpdate);\n        }\n        this.buildDeferrable(node);\n    }\n    visitList(node) {\n        this.compileList(node.items);\n    }\n    visitWith(node) {\n        this.append('with ');\n        if (node.recursive) {\n            this.append('recursive ');\n        }\n        this.compileList(node.expressions);\n    }\n    visitCommonTableExpression(node) {\n        this.visitNode(node.name);\n        this.append(' as ');\n        if (isBoolean(node.materialized)) {\n            if (!node.materialized) {\n                this.append('not ');\n            }\n            this.append('materialized ');\n        }\n        this.visitNode(node.expression);\n    }\n    visitCommonTableExpressionName(node) {\n        this.visitNode(node.table);\n        if (node.columns) {\n            this.append('(');\n            this.compileList(node.columns);\n            this.append(')');\n        }\n    }\n    visitAlterTable(node) {\n        this.append('alter table ');\n        this.visitNode(node.table);\n        this.append(' ');\n        if (node.renameTo) {\n            this.append('rename to ');\n            this.visitNode(node.renameTo);\n        }\n        if (node.setSchema) {\n            this.append('set schema ');\n            this.visitNode(node.setSchema);\n        }\n        if (node.addConstraint) {\n            this.visitNode(node.addConstraint);\n        }\n        if (node.dropConstraint) {\n            this.visitNode(node.dropConstraint);\n        }\n        if (node.renameConstraint) {\n            this.visitNode(node.renameConstraint);\n        }\n        if (node.columnAlterations) {\n            this.compileColumnAlterations(node.columnAlterations);\n        }\n        if (node.addIndex) {\n            this.visitNode(node.addIndex);\n        }\n        if (node.dropIndex) {\n            this.visitNode(node.dropIndex);\n        }\n    }\n    visitAddColumn(node) {\n        this.append('add column ');\n        this.visitNode(node.column);\n    }\n    visitRenameColumn(node) {\n        this.append('rename column ');\n        this.visitNode(node.column);\n        this.append(' to ');\n        this.visitNode(node.renameTo);\n    }\n    visitDropColumn(node) {\n        this.append('drop column ');\n        this.visitNode(node.column);\n    }\n    visitAlterColumn(node) {\n        this.append('alter column ');\n        this.visitNode(node.column);\n        this.append(' ');\n        if (node.dataType) {\n            if (this.announcesNewColumnDataType()) {\n                this.append('type ');\n            }\n            this.visitNode(node.dataType);\n            if (node.dataTypeExpression) {\n                this.append('using ');\n                this.visitNode(node.dataTypeExpression);\n            }\n        }\n        if (node.setDefault) {\n            this.append('set default ');\n            this.visitNode(node.setDefault);\n        }\n        if (node.dropDefault) {\n            this.append('drop default');\n        }\n        if (node.setNotNull) {\n            this.append('set not null');\n        }\n        if (node.dropNotNull) {\n            this.append('drop not null');\n        }\n    }\n    visitModifyColumn(node) {\n        this.append('modify column ');\n        this.visitNode(node.column);\n    }\n    visitAddConstraint(node) {\n        this.append('add ');\n        this.visitNode(node.constraint);\n    }\n    visitDropConstraint(node) {\n        this.append('drop constraint ');\n        if (node.ifExists) {\n            this.append('if exists ');\n        }\n        this.visitNode(node.constraintName);\n        if (node.modifier === 'cascade') {\n            this.append(' cascade');\n        }\n        else if (node.modifier === 'restrict') {\n            this.append(' restrict');\n        }\n    }\n    visitRenameConstraint(node) {\n        this.append('rename constraint ');\n        this.visitNode(node.oldName);\n        this.append(' to ');\n        this.visitNode(node.newName);\n    }\n    visitSetOperation(node) {\n        this.append(node.operator);\n        this.append(' ');\n        if (node.all) {\n            this.append('all ');\n        }\n        this.visitNode(node.expression);\n    }\n    visitCreateView(node) {\n        this.append('create ');\n        if (node.orReplace) {\n            this.append('or replace ');\n        }\n        if (node.materialized) {\n            this.append('materialized ');\n        }\n        if (node.temporary) {\n            this.append('temporary ');\n        }\n        this.append('view ');\n        if (node.ifNotExists) {\n            this.append('if not exists ');\n        }\n        this.visitNode(node.name);\n        this.append(' ');\n        if (node.columns) {\n            this.append('(');\n            this.compileList(node.columns);\n            this.append(') ');\n        }\n        if (node.as) {\n            this.append('as ');\n            this.visitNode(node.as);\n        }\n    }\n    visitRefreshMaterializedView(node) {\n        this.append('refresh materialized view ');\n        if (node.concurrently) {\n            this.append('concurrently ');\n        }\n        this.visitNode(node.name);\n        if (node.withNoData) {\n            this.append(' with no data');\n        }\n        else {\n            this.append(' with data');\n        }\n    }\n    visitDropView(node) {\n        this.append('drop ');\n        if (node.materialized) {\n            this.append('materialized ');\n        }\n        this.append('view ');\n        if (node.ifExists) {\n            this.append('if exists ');\n        }\n        this.visitNode(node.name);\n        if (node.cascade) {\n            this.append(' cascade');\n        }\n    }\n    visitGenerated(node) {\n        this.append('generated ');\n        if (node.always) {\n            this.append('always ');\n        }\n        if (node.byDefault) {\n            this.append('by default ');\n        }\n        this.append('as ');\n        if (node.identity) {\n            this.append('identity');\n        }\n        if (node.expression) {\n            this.append('(');\n            this.visitNode(node.expression);\n            this.append(')');\n        }\n        if (node.stored) {\n            this.append(' stored');\n        }\n    }\n    visitDefaultValue(node) {\n        this.append('default ');\n        this.visitNode(node.defaultValue);\n    }\n    visitSelectModifier(node) {\n        if (node.rawModifier) {\n            this.visitNode(node.rawModifier);\n        }\n        else {\n            this.append(SELECT_MODIFIER_SQL[node.modifier]);\n        }\n        if (node.of) {\n            this.append(' of ');\n            this.compileList(node.of, ', ');\n        }\n    }\n    visitCreateType(node) {\n        this.append('create type ');\n        this.visitNode(node.name);\n        if (node.enum) {\n            this.append(' as enum ');\n            this.visitNode(node.enum);\n        }\n    }\n    visitDropType(node) {\n        this.append('drop type ');\n        if (node.ifExists) {\n            this.append('if exists ');\n        }\n        this.visitNode(node.name);\n    }\n    visitExplain(node) {\n        this.append('explain');\n        if (node.options || node.format) {\n            this.append(' ');\n            this.append(this.getLeftExplainOptionsWrapper());\n            if (node.options) {\n                this.visitNode(node.options);\n                if (node.format) {\n                    this.append(this.getExplainOptionsDelimiter());\n                }\n            }\n            if (node.format) {\n                this.append('format');\n                this.append(this.getExplainOptionAssignment());\n                this.append(node.format);\n            }\n            this.append(this.getRightExplainOptionsWrapper());\n        }\n    }\n    visitDefaultInsertValue(_) {\n        this.append('default');\n    }\n    visitAggregateFunction(node) {\n        this.append(node.func);\n        this.append('(');\n        if (node.distinct) {\n            this.append('distinct ');\n        }\n        this.compileList(node.aggregated);\n        if (node.orderBy) {\n            this.append(' ');\n            this.visitNode(node.orderBy);\n        }\n        this.append(')');\n        if (node.withinGroup) {\n            this.append(' within group (');\n            this.visitNode(node.withinGroup);\n            this.append(')');\n        }\n        if (node.filter) {\n            this.append(' filter(');\n            this.visitNode(node.filter);\n            this.append(')');\n        }\n        if (node.over) {\n            this.append(' ');\n            this.visitNode(node.over);\n        }\n    }\n    visitOver(node) {\n        this.append('over(');\n        if (node.partitionBy) {\n            this.visitNode(node.partitionBy);\n            if (node.orderBy) {\n                this.append(' ');\n            }\n        }\n        if (node.orderBy) {\n            this.visitNode(node.orderBy);\n        }\n        this.append(')');\n    }\n    visitPartitionBy(node) {\n        this.append('partition by ');\n        this.compileList(node.items);\n    }\n    visitPartitionByItem(node) {\n        this.visitNode(node.partitionBy);\n    }\n    visitBinaryOperation(node) {\n        this.visitNode(node.leftOperand);\n        this.append(' ');\n        this.visitNode(node.operator);\n        this.append(' ');\n        this.visitNode(node.rightOperand);\n    }\n    visitUnaryOperation(node) {\n        this.visitNode(node.operator);\n        if (!this.isMinusOperator(node.operator)) {\n            this.append(' ');\n        }\n        this.visitNode(node.operand);\n    }\n    isMinusOperator(node) {\n        return OperatorNode.is(node) && node.operator === '-';\n    }\n    visitUsing(node) {\n        this.append('using ');\n        this.compileList(node.tables);\n    }\n    visitFunction(node) {\n        this.append(node.func);\n        this.append('(');\n        this.compileList(node.arguments);\n        this.append(')');\n    }\n    visitCase(node) {\n        this.append('case');\n        if (node.value) {\n            this.append(' ');\n            this.visitNode(node.value);\n        }\n        if (node.when) {\n            this.append(' ');\n            this.compileList(node.when, ' ');\n        }\n        if (node.else) {\n            this.append(' else ');\n            this.visitNode(node.else);\n        }\n        this.append(' end');\n        if (node.isStatement) {\n            this.append(' case');\n        }\n    }\n    visitWhen(node) {\n        this.append('when ');\n        this.visitNode(node.condition);\n        if (node.result) {\n            this.append(' then ');\n            this.visitNode(node.result);\n        }\n    }\n    visitJSONReference(node) {\n        this.visitNode(node.reference);\n        this.visitNode(node.traversal);\n    }\n    visitJSONPath(node) {\n        if (node.inOperator) {\n            this.visitNode(node.inOperator);\n        }\n        this.append(\"'$\");\n        for (const pathLeg of node.pathLegs) {\n            this.visitNode(pathLeg);\n        }\n        this.append(\"'\");\n    }\n    visitJSONPathLeg(node) {\n        const isArrayLocation = node.type === 'ArrayLocation';\n        this.append(isArrayLocation ? '[' : '.');\n        this.append(String(node.value));\n        if (isArrayLocation) {\n            this.append(']');\n        }\n    }\n    visitJSONOperatorChain(node) {\n        for (let i = 0, len = node.values.length; i < len; i++) {\n            if (i === len - 1) {\n                this.visitNode(node.operator);\n            }\n            else {\n                this.append('->');\n            }\n            this.visitNode(node.values[i]);\n        }\n    }\n    visitMergeQuery(node) {\n        if (node.with) {\n            this.visitNode(node.with);\n            this.append(' ');\n        }\n        this.append('merge ');\n        if (node.top) {\n            this.visitNode(node.top);\n            this.append(' ');\n        }\n        this.append('into ');\n        this.visitNode(node.into);\n        if (node.using) {\n            this.append(' ');\n            this.visitNode(node.using);\n        }\n        if (node.whens) {\n            this.append(' ');\n            this.compileList(node.whens, ' ');\n        }\n        if (node.returning) {\n            this.append(' ');\n            this.visitNode(node.returning);\n        }\n        if (node.output) {\n            this.append(' ');\n            this.visitNode(node.output);\n        }\n        if (node.endModifiers?.length) {\n            this.append(' ');\n            this.compileList(node.endModifiers, ' ');\n        }\n    }\n    visitMatched(node) {\n        if (node.not) {\n            this.append('not ');\n        }\n        this.append('matched');\n        if (node.bySource) {\n            this.append(' by source');\n        }\n    }\n    visitAddIndex(node) {\n        this.append('add ');\n        if (node.unique) {\n            this.append('unique ');\n        }\n        this.append('index ');\n        this.visitNode(node.name);\n        if (node.columns) {\n            this.append(' (');\n            this.compileList(node.columns);\n            this.append(')');\n        }\n        if (node.using) {\n            this.append(' using ');\n            this.visitNode(node.using);\n        }\n    }\n    visitCast(node) {\n        this.append('cast(');\n        this.visitNode(node.expression);\n        this.append(' as ');\n        this.visitNode(node.dataType);\n        this.append(')');\n    }\n    visitFetch(node) {\n        this.append('fetch next ');\n        this.visitNode(node.rowCount);\n        this.append(` rows ${node.modifier}`);\n    }\n    visitOutput(node) {\n        this.append('output ');\n        this.compileList(node.selections);\n    }\n    visitTop(node) {\n        this.append(`top(${node.expression})`);\n        if (node.modifiers) {\n            this.append(` ${node.modifiers}`);\n        }\n    }\n    visitOrAction(node) {\n        this.append(node.action);\n    }\n    visitCollate(node) {\n        this.append('collate ');\n        this.visitNode(node.collation);\n    }\n    append(str) {\n        this.#sql += str;\n    }\n    appendValue(parameter) {\n        this.addParameter(parameter);\n        this.append(this.getCurrentParameterPlaceholder());\n    }\n    getLeftIdentifierWrapper() {\n        return '\"';\n    }\n    getRightIdentifierWrapper() {\n        return '\"';\n    }\n    getCurrentParameterPlaceholder() {\n        return '$' + this.numParameters;\n    }\n    getLeftExplainOptionsWrapper() {\n        return '(';\n    }\n    getExplainOptionAssignment() {\n        return ' ';\n    }\n    getExplainOptionsDelimiter() {\n        return ', ';\n    }\n    getRightExplainOptionsWrapper() {\n        return ')';\n    }\n    sanitizeIdentifier(identifier) {\n        const leftWrap = this.getLeftIdentifierWrapper();\n        const rightWrap = this.getRightIdentifierWrapper();\n        let sanitized = '';\n        for (const c of identifier) {\n            sanitized += c;\n            if (c === leftWrap) {\n                sanitized += leftWrap;\n            }\n            else if (c === rightWrap) {\n                sanitized += rightWrap;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeStringLiteral(value) {\n        return value.replace(LIT_WRAP_REGEX, \"''\");\n    }\n    addParameter(parameter) {\n        this.#parameters.push(parameter);\n    }\n    appendImmediateValue(value) {\n        if (isString(value)) {\n            this.appendStringLiteral(value);\n        }\n        else if (isNumber(value) || isBoolean(value)) {\n            this.append(value.toString());\n        }\n        else if (isNull(value)) {\n            this.append('null');\n        }\n        else if (isDate(value)) {\n            this.appendImmediateValue(value.toISOString());\n        }\n        else if (isBigInt(value)) {\n            this.appendImmediateValue(value.toString());\n        }\n        else {\n            throw new Error(`invalid immediate value ${value}`);\n        }\n    }\n    appendStringLiteral(value) {\n        this.append(\"'\");\n        this.append(this.sanitizeStringLiteral(value));\n        this.append(\"'\");\n    }\n    sortSelectModifiers(arr) {\n        arr.sort((left, right) => left.modifier && right.modifier\n            ? SELECT_MODIFIER_PRIORITY[left.modifier] -\n                SELECT_MODIFIER_PRIORITY[right.modifier]\n            : 1);\n        return freeze(arr);\n    }\n    compileColumnAlterations(columnAlterations) {\n        this.compileList(columnAlterations);\n    }\n    /**\n     * controls whether the dialect adds a \"type\" keyword before a column's new data\n     * type in an ALTER TABLE statement.\n     */\n    announcesNewColumnDataType() {\n        return true;\n    }\n}\nconst SELECT_MODIFIER_SQL = freeze({\n    ForKeyShare: 'for key share',\n    ForNoKeyUpdate: 'for no key update',\n    ForUpdate: 'for update',\n    ForShare: 'for share',\n    NoWait: 'nowait',\n    SkipLocked: 'skip locked',\n    Distinct: 'distinct',\n});\nconst SELECT_MODIFIER_PRIORITY = freeze({\n    ForKeyShare: 1,\n    ForNoKeyUpdate: 1,\n    ForUpdate: 1,\n    ForShare: 1,\n    NoWait: 2,\n    SkipLocked: 2,\n    Distinct: 0,\n});\nconst JOIN_TYPE_SQL = freeze({\n    InnerJoin: 'inner join',\n    LeftJoin: 'left join',\n    RightJoin: 'right join',\n    FullJoin: 'full join',\n    CrossJoin: 'cross join',\n    LateralInnerJoin: 'inner join lateral',\n    LateralLeftJoin: 'left join lateral',\n    LateralCrossJoin: 'cross join lateral',\n    OuterApply: 'outer apply',\n    CrossApply: 'cross apply',\n    Using: 'using',\n});\n", "/// <reference types=\"./compiled-query.d.ts\" />\nimport { RawNode } from '../operation-node/raw-node.js';\nimport { freeze } from '../util/object-utils.js';\nimport { createQueryId } from '../util/query-id.js';\nexport const CompiledQuery = freeze({\n    raw(sql, parameters = []) {\n        return freeze({\n            sql,\n            query: RawNode.createWithSql(sql),\n            parameters: freeze(parameters),\n            queryId: createQueryId(),\n        });\n    },\n});\n", "/// <reference types=\"./database-connection.d.ts\" />\nexport {};\n", "/// <reference types=\"./connection-provider.d.ts\" />\nexport {};\n", "/// <reference types=\"./dummy-driver.d.ts\" />\n/**\n * A driver that does absolutely nothing.\n *\n * You can use this to create Kysely instances solely for building queries\n *\n * ### Examples\n *\n * This example creates a Kysely instance for building postgres queries:\n *\n * ```ts\n * import {\n *   DummyDriver,\n *   Kysely,\n *   PostgresAdapter,\n *   PostgresIntrospector,\n *   PostgresQueryCompiler\n * } from 'kysely'\n * import type { Database } from 'type-editor' // imaginary module\n *\n * const db = new Kysely<Database>({\n *   dialect: {\n *     createAdapter: () => new PostgresAdapter(),\n *     createDriver: () => new DummyDriver(),\n *     createIntrospector: (db: Kysely<any>) => new PostgresIntrospector(db),\n *     createQueryCompiler: () => new PostgresQueryCompiler(),\n *   },\n * })\n * ```\n *\n * You can use it to build a query and compile it to SQL but trying to\n * execute the query will throw an error.\n *\n * ```ts\n * const { sql } = db.selectFrom('person').selectAll().compile()\n * console.log(sql) // select * from \"person\"\n * ```\n */\nexport class DummyDriver {\n    async init() {\n        // Nothing to do here.\n    }\n    async acquireConnection() {\n        return new DummyConnection();\n    }\n    async beginTransaction() {\n        // Nothing to do here.\n    }\n    async commitTransaction() {\n        // Nothing to do here.\n    }\n    async rollbackTransaction() {\n        // Nothing to do here.\n    }\n    async releaseConnection() {\n        // Nothing to do here.\n    }\n    async destroy() {\n        // Nothing to do here.\n    }\n    async releaseSavepoint() {\n        // Nothing to do here.\n    }\n    async rollbackToSavepoint() {\n        // Nothing to do here.\n    }\n    async savepoint() {\n        // Nothing to do here.\n    }\n}\nclass DummyConnection {\n    async executeQuery() {\n        return {\n            rows: [],\n        };\n    }\n    async *streamQuery() {\n        // Nothing to do here.\n    }\n}\n", "/// <reference types=\"./dialect.d.ts\" />\nexport {};\n", "/// <reference types=\"./dialect-adapter.d.ts\" />\nexport {};\n", "/// <reference types=\"./dialect-adapter-base.d.ts\" />\n/**\n * A basic implementation of `DialectAdapter` with sensible default values.\n * Third-party dialects can extend this instead of implementing the `DialectAdapter`\n * interface from scratch. That way all new settings will get default values when\n * they are added and there will be less breaking changes.\n */\nexport class DialectAdapterBase {\n    get supportsCreateIfNotExists() {\n        return true;\n    }\n    get supportsTransactionalDdl() {\n        return false;\n    }\n    get supportsReturning() {\n        return false;\n    }\n    get supportsOutput() {\n        return false;\n    }\n}\n", "/// <reference types=\"./database-introspector.d.ts\" />\nexport {};\n", "/// <reference types=\"./savepoint-parser.d.ts\" />\nimport { IdentifierNode } from '../operation-node/identifier-node.js';\nimport { RawNode } from '../operation-node/raw-node.js';\nexport function parseSavepointCommand(command, savepointName) {\n    return RawNode.createWithChildren([\n        RawNode.createWithSql(`${command} `),\n        IdentifierNode.create(savepointName), // ensures savepointName gets sanitized\n    ]);\n}\n", "/// <reference types=\"./sqlite-driver.d.ts\" />\nimport { SelectQueryNode } from '../../operation-node/select-query-node.js';\nimport { parseSavepointCommand } from '../../parser/savepoint-parser.js';\nimport { CompiledQuery } from '../../query-compiler/compiled-query.js';\nimport { freeze, isFunction } from '../../util/object-utils.js';\nimport { createQueryId } from '../../util/query-id.js';\nexport class SqliteDriver {\n    #config;\n    #connectionMutex = new ConnectionMutex();\n    #db;\n    #connection;\n    constructor(config) {\n        this.#config = freeze({ ...config });\n    }\n    async init() {\n        this.#db = isFunction(this.#config.database)\n            ? await this.#config.database()\n            : this.#config.database;\n        this.#connection = new SqliteConnection(this.#db);\n        if (this.#config.onCreateConnection) {\n            await this.#config.onCreateConnection(this.#connection);\n        }\n    }\n    async acquireConnection() {\n        // SQLite only has one single connection. We use a mutex here to wait\n        // until the single connection has been released.\n        await this.#connectionMutex.lock();\n        return this.#connection;\n    }\n    async beginTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('begin'));\n    }\n    async commitTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('commit'));\n    }\n    async rollbackTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('rollback'));\n    }\n    async savepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('savepoint', savepointName), createQueryId()));\n    }\n    async rollbackToSavepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('rollback to', savepointName), createQueryId()));\n    }\n    async releaseSavepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('release', savepointName), createQueryId()));\n    }\n    async releaseConnection() {\n        this.#connectionMutex.unlock();\n    }\n    async destroy() {\n        this.#db?.close();\n    }\n}\nclass SqliteConnection {\n    #db;\n    constructor(db) {\n        this.#db = db;\n    }\n    executeQuery(compiledQuery) {\n        const { sql, parameters } = compiledQuery;\n        const stmt = this.#db.prepare(sql);\n        if (stmt.reader) {\n            return Promise.resolve({\n                rows: stmt.all(parameters),\n            });\n        }\n        const { changes, lastInsertRowid } = stmt.run(parameters);\n        return Promise.resolve({\n            numAffectedRows: changes !== undefined && changes !== null ? BigInt(changes) : undefined,\n            insertId: lastInsertRowid !== undefined && lastInsertRowid !== null\n                ? BigInt(lastInsertRowid)\n                : undefined,\n            rows: [],\n        });\n    }\n    async *streamQuery(compiledQuery, _chunkSize) {\n        const { sql, parameters, query } = compiledQuery;\n        const stmt = this.#db.prepare(sql);\n        if (SelectQueryNode.is(query)) {\n            const iter = stmt.iterate(parameters);\n            for (const row of iter) {\n                yield {\n                    rows: [row],\n                };\n            }\n        }\n        else {\n            throw new Error('Sqlite driver only supports streaming of select queries');\n        }\n    }\n}\nclass ConnectionMutex {\n    #promise;\n    #resolve;\n    async lock() {\n        while (this.#promise) {\n            await this.#promise;\n        }\n        this.#promise = new Promise((resolve) => {\n            this.#resolve = resolve;\n        });\n    }\n    unlock() {\n        const resolve = this.#resolve;\n        this.#promise = undefined;\n        this.#resolve = undefined;\n        resolve?.();\n    }\n}\n", "/// <reference types=\"./sqlite-query-compiler.d.ts\" />\nimport { DefaultQueryCompiler } from '../../query-compiler/default-query-compiler.js';\nconst ID_WRAP_REGEX = /\"/g;\nexport class SqliteQueryCompiler extends DefaultQueryCompiler {\n    visitOrAction(node) {\n        this.append('or ');\n        this.append(node.action);\n    }\n    getCurrentParameterPlaceholder() {\n        return '?';\n    }\n    getLeftExplainOptionsWrapper() {\n        return '';\n    }\n    getRightExplainOptionsWrapper() {\n        return '';\n    }\n    getLeftIdentifierWrapper() {\n        return '\"';\n    }\n    getRightIdentifierWrapper() {\n        return '\"';\n    }\n    getAutoIncrement() {\n        return 'autoincrement';\n    }\n    sanitizeIdentifier(identifier) {\n        return identifier.replace(ID_WRAP_REGEX, '\"\"');\n    }\n    visitDefaultInsertValue(_) {\n        // sqlite doesn't support the `default` keyword in inserts.\n        this.append('null');\n    }\n}\n", "/// <reference types=\"./migrator.d.ts\" />\nimport { NoopPlugin } from '../plugin/noop-plugin.js';\nimport { WithSchemaPlugin } from '../plugin/with-schema/with-schema-plugin.js';\nimport { freeze, getLast } from '../util/object-utils.js';\nexport const DEFAULT_MIGRATION_TABLE = 'kysely_migration';\nexport const DEFAULT_MIGRATION_LOCK_TABLE = 'kysely_migration_lock';\nexport const DEFAULT_ALLOW_UNORDERED_MIGRATIONS = false;\nexport const MIGRATION_LOCK_ID = 'migration_lock';\nexport const NO_MIGRATIONS = freeze({ __noMigrations__: true });\n/**\n * A class for running migrations.\n *\n * ### Example\n *\n * This example uses the {@link FileMigrationProvider} that reads migrations\n * files from a single folder. You can easily implement your own\n * {@link MigrationProvider} if you want to provide migrations some\n * other way.\n *\n * ```ts\n * import { promises as fs } from 'node:fs'\n * import path from 'node:path'\n * import * as Sqlite from 'better-sqlite3'\n * import {\n *   FileMigrationProvider,\n *   Kysely,\n *   Migrator,\n *   SqliteDialect\n * } from 'kysely'\n *\n * const db = new Kysely<any>({\n *   dialect: new SqliteDialect({\n *     database: Sqlite(':memory:')\n *   })\n * })\n *\n * const migrator = new Migrator({\n *   db,\n *   provider: new FileMigrationProvider({\n *     fs,\n *     // Path to the folder that contains all your migrations.\n *     migrationFolder: 'some/path/to/migrations',\n *     path,\n *   })\n * })\n * ```\n */\nexport class Migrator {\n    #props;\n    constructor(props) {\n        this.#props = freeze(props);\n    }\n    /**\n     * Returns a {@link MigrationInfo} object for each migration.\n     *\n     * The returned array is sorted by migration name.\n     */\n    async getMigrations() {\n        const executedMigrations = (await this.#doesTableExists(this.#migrationTable))\n            ? await this.#props.db\n                .withPlugin(this.#schemaPlugin)\n                .selectFrom(this.#migrationTable)\n                .select(['name', 'timestamp'])\n                .$narrowType()\n                .execute()\n            : [];\n        const migrations = await this.#resolveMigrations();\n        return migrations.map(({ name, ...migration }) => {\n            const executed = executedMigrations.find((it) => it.name === name);\n            return {\n                name,\n                migration,\n                executedAt: executed ? new Date(executed.timestamp) : undefined,\n            };\n        });\n    }\n    /**\n     * Runs all migrations that have not yet been run.\n     *\n     * This method returns a {@link MigrationResultSet} instance and _never_ throws.\n     * {@link MigrationResultSet.error} holds the error if something went wrong.\n     * {@link MigrationResultSet.results} contains information about which migrations\n     * were executed and which failed. See the examples below.\n     *\n     * This method goes through all possible migrations provided by the provider and runs the\n     * ones whose names come alphabetically after the last migration that has been run. If the\n     * list of executed migrations doesn't match the beginning of the list of possible migrations\n     * an error is returned.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { promises as fs } from 'node:fs'\n     * import path from 'node:path'\n     * import * as Sqlite from 'better-sqlite3'\n     * import { FileMigrationProvider, Migrator } from 'kysely'\n     *\n     * const migrator = new Migrator({\n     *   db,\n     *   provider: new FileMigrationProvider({\n     *     fs,\n     *     migrationFolder: 'some/path/to/migrations',\n     *     path,\n     *   })\n     * })\n     *\n     * const { error, results } = await migrator.migrateToLatest()\n     *\n     * results?.forEach((it) => {\n     *   if (it.status === 'Success') {\n     *     console.log(`migration \"${it.migrationName}\" was executed successfully`)\n     *   } else if (it.status === 'Error') {\n     *     console.error(`failed to execute migration \"${it.migrationName}\"`)\n     *   }\n     * })\n     *\n     * if (error) {\n     *   console.error('failed to run `migrateToLatest`')\n     *   console.error(error)\n     * }\n     * ```\n     */\n    async migrateToLatest() {\n        return this.#migrate(() => ({ direction: 'Up', step: Infinity }));\n    }\n    /**\n     * Migrate up/down to a specific migration.\n     *\n     * This method returns a {@link MigrationResultSet} instance and _never_ throws.\n     * {@link MigrationResultSet.error} holds the error if something went wrong.\n     * {@link MigrationResultSet.results} contains information about which migrations\n     * were executed and which failed.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { promises as fs } from 'node:fs'\n     * import path from 'node:path'\n     * import { FileMigrationProvider, Migrator } from 'kysely'\n     *\n     * const migrator = new Migrator({\n     *   db,\n     *   provider: new FileMigrationProvider({\n     *     fs,\n     *     // Path to the folder that contains all your migrations.\n     *     migrationFolder: 'some/path/to/migrations',\n     *     path,\n     *   })\n     * })\n     *\n     * await migrator.migrateTo('some_migration')\n     * ```\n     *\n     * If you specify the name of the first migration, this method migrates\n     * down to the first migration, but doesn't run the `down` method of\n     * the first migration. In case you want to migrate all the way down,\n     * you can use a special constant `NO_MIGRATIONS`:\n     *\n     * ```ts\n     * import { promises as fs } from 'node:fs'\n     * import path from 'node:path'\n     * import { FileMigrationProvider, Migrator, NO_MIGRATIONS } from 'kysely'\n     *\n     * const migrator = new Migrator({\n     *   db,\n     *   provider: new FileMigrationProvider({\n     *     fs,\n     *     // Path to the folder that contains all your migrations.\n     *     migrationFolder: 'some/path/to/migrations',\n     *     path,\n     *   })\n     * })\n     *\n     * await migrator.migrateTo(NO_MIGRATIONS)\n     * ```\n     */\n    async migrateTo(targetMigrationName) {\n        return this.#migrate(({ migrations, executedMigrations, pendingMigrations, }) => {\n            if (targetMigrationName === NO_MIGRATIONS) {\n                return { direction: 'Down', step: Infinity };\n            }\n            if (!migrations.find((m) => m.name === targetMigrationName)) {\n                throw new Error(`migration \"${targetMigrationName}\" doesn't exist`);\n            }\n            const executedIndex = executedMigrations.indexOf(targetMigrationName);\n            const pendingIndex = pendingMigrations.findIndex((m) => m.name === targetMigrationName);\n            if (executedIndex !== -1) {\n                return {\n                    direction: 'Down',\n                    step: executedMigrations.length - executedIndex - 1,\n                };\n            }\n            else if (pendingIndex !== -1) {\n                return { direction: 'Up', step: pendingIndex + 1 };\n            }\n            else {\n                throw new Error(`migration \"${targetMigrationName}\" isn't executed or pending`);\n            }\n        });\n    }\n    /**\n     * Migrate one step up.\n     *\n     * This method returns a {@link MigrationResultSet} instance and _never_ throws.\n     * {@link MigrationResultSet.error} holds the error if something went wrong.\n     * {@link MigrationResultSet.results} contains information about which migrations\n     * were executed and which failed.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { promises as fs } from 'node:fs'\n     * import path from 'node:path'\n     * import { FileMigrationProvider, Migrator } from 'kysely'\n     *\n     * const migrator = new Migrator({\n     *   db,\n     *   provider: new FileMigrationProvider({\n     *     fs,\n     *     // Path to the folder that contains all your migrations.\n     *     migrationFolder: 'some/path/to/migrations',\n     *     path,\n     *   })\n     * })\n     *\n     * await migrator.migrateUp()\n     * ```\n     */\n    async migrateUp() {\n        return this.#migrate(() => ({ direction: 'Up', step: 1 }));\n    }\n    /**\n     * Migrate one step down.\n     *\n     * This method returns a {@link MigrationResultSet} instance and _never_ throws.\n     * {@link MigrationResultSet.error} holds the error if something went wrong.\n     * {@link MigrationResultSet.results} contains information about which migrations\n     * were executed and which failed.\n     *\n     * ### Examples\n     *\n     * ```ts\n     * import { promises as fs } from 'node:fs'\n     * import path from 'node:path'\n     * import { FileMigrationProvider, Migrator } from 'kysely'\n     *\n     * const migrator = new Migrator({\n     *   db,\n     *   provider: new FileMigrationProvider({\n     *     fs,\n     *     // Path to the folder that contains all your migrations.\n     *     migrationFolder: 'some/path/to/migrations',\n     *     path,\n     *   })\n     * })\n     *\n     * await migrator.migrateDown()\n     * ```\n     */\n    async migrateDown() {\n        return this.#migrate(() => ({ direction: 'Down', step: 1 }));\n    }\n    async #migrate(getMigrationDirectionAndStep) {\n        try {\n            await this.#ensureMigrationTablesExists();\n            return await this.#runMigrations(getMigrationDirectionAndStep);\n        }\n        catch (error) {\n            if (error instanceof MigrationResultSetError) {\n                return error.resultSet;\n            }\n            return { error };\n        }\n    }\n    get #migrationTableSchema() {\n        return this.#props.migrationTableSchema;\n    }\n    get #migrationTable() {\n        return this.#props.migrationTableName ?? DEFAULT_MIGRATION_TABLE;\n    }\n    get #migrationLockTable() {\n        return this.#props.migrationLockTableName ?? DEFAULT_MIGRATION_LOCK_TABLE;\n    }\n    get #allowUnorderedMigrations() {\n        return (this.#props.allowUnorderedMigrations ?? DEFAULT_ALLOW_UNORDERED_MIGRATIONS);\n    }\n    get #schemaPlugin() {\n        if (this.#migrationTableSchema) {\n            return new WithSchemaPlugin(this.#migrationTableSchema);\n        }\n        return new NoopPlugin();\n    }\n    async #ensureMigrationTablesExists() {\n        await this.#ensureMigrationTableSchemaExists();\n        await this.#ensureMigrationTableExists();\n        await this.#ensureMigrationLockTableExists();\n        await this.#ensureLockRowExists();\n    }\n    async #ensureMigrationTableSchemaExists() {\n        if (!this.#migrationTableSchema) {\n            // Use default schema. Nothing to do.\n            return;\n        }\n        if (!(await this.#doesSchemaExists())) {\n            try {\n                await this.#createIfNotExists(this.#props.db.schema.createSchema(this.#migrationTableSchema));\n            }\n            catch (error) {\n                // At least on PostgreSQL, `if not exists` doesn't guarantee the `create schema`\n                // query doesn't throw if the schema already exits. That's why we check if\n                // the schema exist here and ignore the error if it does.\n                if (!(await this.#doesSchemaExists())) {\n                    throw error;\n                }\n            }\n        }\n    }\n    async #ensureMigrationTableExists() {\n        if (!(await this.#doesTableExists(this.#migrationTable))) {\n            try {\n                if (this.#migrationTableSchema) {\n                    await this.#createIfNotExists(this.#props.db.schema.createSchema(this.#migrationTableSchema));\n                }\n                await this.#createIfNotExists(this.#props.db.schema\n                    .withPlugin(this.#schemaPlugin)\n                    .createTable(this.#migrationTable)\n                    .addColumn('name', 'varchar(255)', (col) => col.notNull().primaryKey())\n                    // The migration run time as ISO string. This is not a real date type as we\n                    // can't know which data type is supported by all future dialects.\n                    .addColumn('timestamp', 'varchar(255)', (col) => col.notNull()));\n            }\n            catch (error) {\n                // At least on PostgreSQL, `if not exists` doesn't guarantee the `create table`\n                // query doesn't throw if the table already exits. That's why we check if\n                // the table exist here and ignore the error if it does.\n                if (!(await this.#doesTableExists(this.#migrationTable))) {\n                    throw error;\n                }\n            }\n        }\n    }\n    async #ensureMigrationLockTableExists() {\n        if (!(await this.#doesTableExists(this.#migrationLockTable))) {\n            try {\n                await this.#createIfNotExists(this.#props.db.schema\n                    .withPlugin(this.#schemaPlugin)\n                    .createTable(this.#migrationLockTable)\n                    .addColumn('id', 'varchar(255)', (col) => col.notNull().primaryKey())\n                    .addColumn('is_locked', 'integer', (col) => col.notNull().defaultTo(0)));\n            }\n            catch (error) {\n                // At least on PostgreSQL, `if not exists` doesn't guarantee the `create table`\n                // query doesn't throw if the table already exits. That's why we check if\n                // the table exist here and ignore the error if it does.\n                if (!(await this.#doesTableExists(this.#migrationLockTable))) {\n                    throw error;\n                }\n            }\n        }\n    }\n    async #ensureLockRowExists() {\n        if (!(await this.#doesLockRowExists())) {\n            try {\n                await this.#props.db\n                    .withPlugin(this.#schemaPlugin)\n                    .insertInto(this.#migrationLockTable)\n                    .values({ id: MIGRATION_LOCK_ID, is_locked: 0 })\n                    .execute();\n            }\n            catch (error) {\n                if (!(await this.#doesLockRowExists())) {\n                    throw error;\n                }\n            }\n        }\n    }\n    async #doesSchemaExists() {\n        const schemas = await this.#props.db.introspection.getSchemas();\n        return schemas.some((it) => it.name === this.#migrationTableSchema);\n    }\n    async #doesTableExists(tableName) {\n        const schema = this.#migrationTableSchema;\n        const tables = await this.#props.db.introspection.getTables({\n            withInternalKyselyTables: true,\n        });\n        return tables.some((it) => it.name === tableName && (!schema || it.schema === schema));\n    }\n    async #doesLockRowExists() {\n        const lockRow = await this.#props.db\n            .withPlugin(this.#schemaPlugin)\n            .selectFrom(this.#migrationLockTable)\n            .where('id', '=', MIGRATION_LOCK_ID)\n            .select('id')\n            .executeTakeFirst();\n        return !!lockRow;\n    }\n    async #runMigrations(getMigrationDirectionAndStep) {\n        const adapter = this.#props.db.getExecutor().adapter;\n        const lockOptions = freeze({\n            lockTable: this.#props.migrationLockTableName ?? DEFAULT_MIGRATION_LOCK_TABLE,\n            lockRowId: MIGRATION_LOCK_ID,\n            lockTableSchema: this.#props.migrationTableSchema,\n        });\n        const run = async (db) => {\n            try {\n                await adapter.acquireMigrationLock(db, lockOptions);\n                const state = await this.#getState(db);\n                if (state.migrations.length === 0) {\n                    return { results: [] };\n                }\n                const { direction, step } = getMigrationDirectionAndStep(state);\n                if (step <= 0) {\n                    return { results: [] };\n                }\n                if (direction === 'Down') {\n                    return await this.#migrateDown(db, state, step);\n                }\n                else if (direction === 'Up') {\n                    return await this.#migrateUp(db, state, step);\n                }\n                return { results: [] };\n            }\n            finally {\n                await adapter.releaseMigrationLock(db, lockOptions);\n            }\n        };\n        if (adapter.supportsTransactionalDdl && !this.#props.disableTransactions) {\n            return this.#props.db.transaction().execute(run);\n        }\n        else {\n            return this.#props.db.connection().execute(run);\n        }\n    }\n    async #getState(db) {\n        const migrations = await this.#resolveMigrations();\n        const executedMigrations = await this.#getExecutedMigrations(db);\n        this.#ensureNoMissingMigrations(migrations, executedMigrations);\n        if (!this.#allowUnorderedMigrations) {\n            this.#ensureMigrationsInOrder(migrations, executedMigrations);\n        }\n        const pendingMigrations = this.#getPendingMigrations(migrations, executedMigrations);\n        return freeze({\n            migrations,\n            executedMigrations,\n            lastMigration: getLast(executedMigrations),\n            pendingMigrations,\n        });\n    }\n    #getPendingMigrations(migrations, executedMigrations) {\n        return migrations.filter((migration) => {\n            return !executedMigrations.includes(migration.name);\n        });\n    }\n    async #resolveMigrations() {\n        const allMigrations = await this.#props.provider.getMigrations();\n        return Object.keys(allMigrations)\n            .sort()\n            .map((name) => ({\n            ...allMigrations[name],\n            name,\n        }));\n    }\n    async #getExecutedMigrations(db) {\n        const executedMigrations = await db\n            .withPlugin(this.#schemaPlugin)\n            .selectFrom(this.#migrationTable)\n            .select(['name', 'timestamp'])\n            .$narrowType()\n            .execute();\n        const nameComparator = this.#props.nameComparator || ((a, b) => a.localeCompare(b));\n        return (executedMigrations\n            // https://github.com/kysely-org/kysely/issues/843\n            .sort((a, b) => {\n            if (a.timestamp === b.timestamp) {\n                return nameComparator(a.name, b.name);\n            }\n            return (new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n        })\n            .map((it) => it.name));\n    }\n    #ensureNoMissingMigrations(migrations, executedMigrations) {\n        // Ensure all executed migrations exist in the `migrations` list.\n        for (const executed of executedMigrations) {\n            if (!migrations.some((it) => it.name === executed)) {\n                throw new Error(`corrupted migrations: previously executed migration ${executed} is missing`);\n            }\n        }\n    }\n    #ensureMigrationsInOrder(migrations, executedMigrations) {\n        // Ensure the executed migrations are the first ones in the migration list.\n        for (let i = 0; i < executedMigrations.length; ++i) {\n            if (migrations[i].name !== executedMigrations[i]) {\n                throw new Error(`corrupted migrations: expected previously executed migration ${executedMigrations[i]} to be at index ${i} but ${migrations[i].name} was found in its place. New migrations must always have a name that comes alphabetically after the last executed migration.`);\n            }\n        }\n    }\n    async #migrateDown(db, state, step) {\n        const migrationsToRollback = state.executedMigrations\n            .slice()\n            .reverse()\n            .slice(0, step)\n            .map((name) => {\n            return state.migrations.find((it) => it.name === name);\n        });\n        const results = migrationsToRollback.map((migration) => {\n            return {\n                migrationName: migration.name,\n                direction: 'Down',\n                status: 'NotExecuted',\n            };\n        });\n        for (let i = 0; i < results.length; ++i) {\n            const migration = migrationsToRollback[i];\n            try {\n                if (migration.down) {\n                    await migration.down(db);\n                    await db\n                        .withPlugin(this.#schemaPlugin)\n                        .deleteFrom(this.#migrationTable)\n                        .where('name', '=', migration.name)\n                        .execute();\n                    results[i] = {\n                        migrationName: migration.name,\n                        direction: 'Down',\n                        status: 'Success',\n                    };\n                }\n            }\n            catch (error) {\n                results[i] = {\n                    migrationName: migration.name,\n                    direction: 'Down',\n                    status: 'Error',\n                };\n                throw new MigrationResultSetError({\n                    error,\n                    results,\n                });\n            }\n        }\n        return { results };\n    }\n    async #migrateUp(db, state, step) {\n        const migrationsToRun = state.pendingMigrations.slice(0, step);\n        const results = migrationsToRun.map((migration) => {\n            return {\n                migrationName: migration.name,\n                direction: 'Up',\n                status: 'NotExecuted',\n            };\n        });\n        for (let i = 0; i < results.length; i++) {\n            const migration = state.pendingMigrations[i];\n            try {\n                await migration.up(db);\n                await db\n                    .withPlugin(this.#schemaPlugin)\n                    .insertInto(this.#migrationTable)\n                    .values({\n                    name: migration.name,\n                    timestamp: new Date().toISOString(),\n                })\n                    .execute();\n                results[i] = {\n                    migrationName: migration.name,\n                    direction: 'Up',\n                    status: 'Success',\n                };\n            }\n            catch (error) {\n                results[i] = {\n                    migrationName: migration.name,\n                    direction: 'Up',\n                    status: 'Error',\n                };\n                throw new MigrationResultSetError({\n                    error,\n                    results,\n                });\n            }\n        }\n        return { results };\n    }\n    async #createIfNotExists(qb) {\n        if (this.#props.db.getExecutor().adapter.supportsCreateIfNotExists) {\n            qb = qb.ifNotExists();\n        }\n        await qb.execute();\n    }\n}\nclass MigrationResultSetError extends Error {\n    #resultSet;\n    constructor(result) {\n        super();\n        this.#resultSet = result;\n    }\n    get resultSet() {\n        return this.#resultSet;\n    }\n}\n", "/// <reference types=\"./sqlite-introspector.d.ts\" />\nimport { DEFAULT_MIGRATION_LOCK_TABLE, DEFAULT_MIGRATION_TABLE, } from '../../migration/migrator.js';\nimport { sql } from '../../raw-builder/sql.js';\nexport class SqliteIntrospector {\n    #db;\n    constructor(db) {\n        this.#db = db;\n    }\n    async getSchemas() {\n        // Sqlite doesn't support schemas.\n        return [];\n    }\n    async getTables(options = { withInternalKyselyTables: false }) {\n        return await this.#getTableMetadata(options);\n    }\n    async getMetadata(options) {\n        return {\n            tables: await this.getTables(options),\n        };\n    }\n    #tablesQuery(qb, options) {\n        let tablesQuery = qb\n            .selectFrom('sqlite_master')\n            .where('type', 'in', ['table', 'view'])\n            .where('name', 'not like', 'sqlite_%')\n            .select(['name', 'sql', 'type'])\n            .orderBy('name');\n        if (!options.withInternalKyselyTables) {\n            tablesQuery = tablesQuery\n                .where('name', '!=', DEFAULT_MIGRATION_TABLE)\n                .where('name', '!=', DEFAULT_MIGRATION_LOCK_TABLE);\n        }\n        return tablesQuery;\n    }\n    async #getTableMetadata(options) {\n        const tablesResult = await this.#tablesQuery(this.#db, options).execute();\n        const tableMetadata = await this.#db\n            .with('table_list', (qb) => this.#tablesQuery(qb, options))\n            .selectFrom([\n            'table_list as tl',\n            sql `pragma_table_info(tl.name)`.as('p'),\n        ])\n            .select([\n            'tl.name as table',\n            'p.cid',\n            'p.name',\n            'p.type',\n            'p.notnull',\n            'p.dflt_value',\n            'p.pk',\n        ])\n            .orderBy('tl.name')\n            .orderBy('p.cid')\n            .execute();\n        const columnsByTable = {};\n        for (const row of tableMetadata) {\n            columnsByTable[row.table] ??= [];\n            columnsByTable[row.table].push(row);\n        }\n        return tablesResult.map(({ name, sql, type }) => {\n            // // Try to find the name of the column that has `autoincrement` \uD83E\uDD26\n            let autoIncrementCol = sql\n                ?.split(/[\\(\\),]/)\n                ?.find((it) => it.toLowerCase().includes('autoincrement'))\n                ?.trimStart()\n                ?.split(/\\s+/)?.[0]\n                ?.replace(/[\"`]/g, '');\n            const columns = columnsByTable[name] ?? [];\n            // Otherwise, check for an INTEGER PRIMARY KEY\n            // https://www.sqlite.org/autoinc.html\n            if (!autoIncrementCol) {\n                const pkCols = columns.filter((r) => r.pk > 0);\n                if (pkCols.length === 1 && pkCols[0].type.toLowerCase() === 'integer') {\n                    autoIncrementCol = pkCols[0].name;\n                }\n            }\n            return {\n                name: name,\n                isView: type === 'view',\n                columns: columns.map((col) => ({\n                    name: col.name,\n                    dataType: col.type,\n                    isNullable: !col.notnull,\n                    isAutoIncrementing: col.name === autoIncrementCol,\n                    hasDefaultValue: col.dflt_value != null,\n                    comment: undefined,\n                })),\n            };\n        });\n    }\n}\n", "/// <reference types=\"./sqlite-adapter.d.ts\" />\nimport { DialectAdapterBase } from '../dialect-adapter-base.js';\nexport class SqliteAdapter extends DialectAdapterBase {\n    get supportsTransactionalDdl() {\n        return false;\n    }\n    get supportsReturning() {\n        return true;\n    }\n    async acquireMigrationLock(_db, _opt) {\n        // SQLite only has one connection that's reserved by the migration system\n        // for the whole time between acquireMigrationLock and releaseMigrationLock.\n        // We don't need to do anything here.\n    }\n    async releaseMigrationLock(_db, _opt) {\n        // SQLite only has one connection that's reserved by the migration system\n        // for the whole time between acquireMigrationLock and releaseMigrationLock.\n        // We don't need to do anything here.\n    }\n}\n", "/// <reference types=\"./sqlite-dialect.d.ts\" />\nimport { SqliteDriver } from './sqlite-driver.js';\nimport { SqliteQueryCompiler } from './sqlite-query-compiler.js';\nimport { SqliteIntrospector } from './sqlite-introspector.js';\nimport { SqliteAdapter } from './sqlite-adapter.js';\nimport { freeze } from '../../util/object-utils.js';\n/**\n * SQLite dialect that uses the [better-sqlite3](https://github.com/JoshuaWise/better-sqlite3) library.\n *\n * The constructor takes an instance of {@link SqliteDialectConfig}.\n *\n * ```ts\n * import Database from 'better-sqlite3'\n *\n * new SqliteDialect({\n *   database: new Database('db.sqlite')\n * })\n * ```\n *\n * If you want the pool to only be created once it's first used, `database`\n * can be a function:\n *\n * ```ts\n * import Database from 'better-sqlite3'\n *\n * new SqliteDialect({\n *   database: async () => new Database('db.sqlite')\n * })\n * ```\n */\nexport class SqliteDialect {\n    #config;\n    constructor(config) {\n        this.#config = freeze({ ...config });\n    }\n    createDriver() {\n        return new SqliteDriver(this.#config);\n    }\n    createQueryCompiler() {\n        return new SqliteQueryCompiler();\n    }\n    createAdapter() {\n        return new SqliteAdapter();\n    }\n    createIntrospector(db) {\n        return new SqliteIntrospector(db);\n    }\n}\n", "/// <reference types=\"./sqlite-dialect-config.d.ts\" />\nexport {};\n", "/// <reference types=\"./postgres-query-compiler.d.ts\" />\nimport { DefaultQueryCompiler } from '../../query-compiler/default-query-compiler.js';\nconst ID_WRAP_REGEX = /\"/g;\nexport class PostgresQueryCompiler extends DefaultQueryCompiler {\n    sanitizeIdentifier(identifier) {\n        return identifier.replace(ID_WRAP_REGEX, '\"\"');\n    }\n}\n", "/// <reference types=\"./postgres-introspector.d.ts\" />\nimport { DEFAULT_MIGRATION_LOCK_TABLE, DEFAULT_MIGRATION_TABLE, } from '../../migration/migrator.js';\nimport { freeze } from '../../util/object-utils.js';\nimport { sql } from '../../raw-builder/sql.js';\nexport class PostgresIntrospector {\n    #db;\n    constructor(db) {\n        this.#db = db;\n    }\n    async getSchemas() {\n        let rawSchemas = await this.#db\n            .selectFrom('pg_catalog.pg_namespace')\n            .select('nspname')\n            .$castTo()\n            .execute();\n        return rawSchemas.map((it) => ({ name: it.nspname }));\n    }\n    async getTables(options = { withInternalKyselyTables: false }) {\n        let query = this.#db\n            // column\n            .selectFrom('pg_catalog.pg_attribute as a')\n            // table\n            .innerJoin('pg_catalog.pg_class as c', 'a.attrelid', 'c.oid')\n            // table schema\n            .innerJoin('pg_catalog.pg_namespace as ns', 'c.relnamespace', 'ns.oid')\n            // column data type\n            .innerJoin('pg_catalog.pg_type as typ', 'a.atttypid', 'typ.oid')\n            // column data type schema\n            .innerJoin('pg_catalog.pg_namespace as dtns', 'typ.typnamespace', 'dtns.oid')\n            .select([\n            'a.attname as column',\n            'a.attnotnull as not_null',\n            'a.atthasdef as has_default',\n            'c.relname as table',\n            'c.relkind as table_type',\n            'ns.nspname as schema',\n            'typ.typname as type',\n            'dtns.nspname as type_schema',\n            sql `col_description(a.attrelid, a.attnum)`.as('column_description'),\n            sql `pg_get_serial_sequence(quote_ident(ns.nspname) || '.' || quote_ident(c.relname), a.attname)`.as('auto_incrementing'),\n        ])\n            .where('c.relkind', 'in', [\n            'r' /*regular table*/,\n            'v' /*view*/,\n            'p' /*partitioned table*/,\n        ])\n            .where('ns.nspname', '!~', '^pg_')\n            .where('ns.nspname', '!=', 'information_schema')\n            // No system columns\n            .where('a.attnum', '>=', 0)\n            .where('a.attisdropped', '!=', true)\n            .orderBy('ns.nspname')\n            .orderBy('c.relname')\n            .orderBy('a.attnum')\n            .$castTo();\n        if (!options.withInternalKyselyTables) {\n            query = query\n                .where('c.relname', '!=', DEFAULT_MIGRATION_TABLE)\n                .where('c.relname', '!=', DEFAULT_MIGRATION_LOCK_TABLE);\n        }\n        const rawColumns = await query.execute();\n        return this.#parseTableMetadata(rawColumns);\n    }\n    async getMetadata(options) {\n        return {\n            tables: await this.getTables(options),\n        };\n    }\n    #parseTableMetadata(columns) {\n        return columns.reduce((tables, it) => {\n            let table = tables.find((tbl) => tbl.name === it.table && tbl.schema === it.schema);\n            if (!table) {\n                table = freeze({\n                    name: it.table,\n                    isView: it.table_type === 'v',\n                    schema: it.schema,\n                    columns: [],\n                });\n                tables.push(table);\n            }\n            table.columns.push(freeze({\n                name: it.column,\n                dataType: it.type,\n                dataTypeSchema: it.type_schema,\n                isNullable: !it.not_null,\n                isAutoIncrementing: it.auto_incrementing !== null,\n                hasDefaultValue: it.has_default,\n                comment: it.column_description ?? undefined,\n            }));\n            return tables;\n        }, []);\n    }\n}\n", "/// <reference types=\"./postgres-adapter.d.ts\" />\nimport { sql } from '../../raw-builder/sql.js';\nimport { DialectAdapterBase } from '../dialect-adapter-base.js';\n// Random id for our transaction lock.\nconst LOCK_ID = BigInt('3853314791062309107');\nexport class PostgresAdapter extends DialectAdapterBase {\n    get supportsTransactionalDdl() {\n        return true;\n    }\n    get supportsReturning() {\n        return true;\n    }\n    async acquireMigrationLock(db, _opt) {\n        // Acquire a transaction level advisory lock.\n        await sql `select pg_advisory_xact_lock(${sql.lit(LOCK_ID)})`.execute(db);\n    }\n    async releaseMigrationLock(_db, _opt) {\n        // Nothing to do here. `pg_advisory_xact_lock` is automatically released at the\n        // end of the transaction and since `supportsTransactionalDdl` true, we know\n        // the `db` instance passed to acquireMigrationLock is actually a transaction.\n    }\n}\n", "/// <reference types=\"./stack-trace-utils.d.ts\" />\nimport { isObject, isString } from './object-utils.js';\nexport function extendStackTrace(err, stackError) {\n    if (isStackHolder(err) && stackError.stack) {\n        // Remove the first line that just says `Error`.\n        const stackExtension = stackError.stack.split('\\n').slice(1).join('\\n');\n        err.stack += `\\n${stackExtension}`;\n        return err;\n    }\n    return err;\n}\nfunction isStackHolder(obj) {\n    return isObject(obj) && isString(obj.stack);\n}\n", "/// <reference types=\"./mysql-driver.d.ts\" />\nimport { parseSavepointCommand } from '../../parser/savepoint-parser.js';\nimport { CompiledQuery } from '../../query-compiler/compiled-query.js';\nimport { isFunction, isObject, freeze } from '../../util/object-utils.js';\nimport { createQueryId } from '../../util/query-id.js';\nimport { extendStackTrace } from '../../util/stack-trace-utils.js';\nconst PRIVATE_RELEASE_METHOD = Symbol();\nexport class MysqlDriver {\n    #config;\n    #connections = new WeakMap();\n    #pool;\n    constructor(configOrPool) {\n        this.#config = freeze({ ...configOrPool });\n    }\n    async init() {\n        this.#pool = isFunction(this.#config.pool)\n            ? await this.#config.pool()\n            : this.#config.pool;\n    }\n    async acquireConnection() {\n        const rawConnection = await this.#acquireConnection();\n        let connection = this.#connections.get(rawConnection);\n        if (!connection) {\n            connection = new MysqlConnection(rawConnection);\n            this.#connections.set(rawConnection, connection);\n            // The driver must take care of calling `onCreateConnection` when a new\n            // connection is created. The `mysql2` module doesn't provide an async hook\n            // for the connection creation. We need to call the method explicitly.\n            if (this.#config?.onCreateConnection) {\n                await this.#config.onCreateConnection(connection);\n            }\n        }\n        if (this.#config?.onReserveConnection) {\n            await this.#config.onReserveConnection(connection);\n        }\n        return connection;\n    }\n    async #acquireConnection() {\n        return new Promise((resolve, reject) => {\n            this.#pool.getConnection(async (err, rawConnection) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(rawConnection);\n                }\n            });\n        });\n    }\n    async beginTransaction(connection, settings) {\n        if (settings.isolationLevel || settings.accessMode) {\n            const parts = [];\n            if (settings.isolationLevel) {\n                parts.push(`isolation level ${settings.isolationLevel}`);\n            }\n            if (settings.accessMode) {\n                parts.push(settings.accessMode);\n            }\n            const sql = `set transaction ${parts.join(', ')}`;\n            // On MySQL this sets the isolation level of the next transaction.\n            await connection.executeQuery(CompiledQuery.raw(sql));\n        }\n        await connection.executeQuery(CompiledQuery.raw('begin'));\n    }\n    async commitTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('commit'));\n    }\n    async rollbackTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('rollback'));\n    }\n    async savepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('savepoint', savepointName), createQueryId()));\n    }\n    async rollbackToSavepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('rollback to', savepointName), createQueryId()));\n    }\n    async releaseSavepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('release savepoint', savepointName), createQueryId()));\n    }\n    async releaseConnection(connection) {\n        connection[PRIVATE_RELEASE_METHOD]();\n    }\n    async destroy() {\n        return new Promise((resolve, reject) => {\n            this.#pool.end((err) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            });\n        });\n    }\n}\nfunction isOkPacket(obj) {\n    return isObject(obj) && 'insertId' in obj && 'affectedRows' in obj;\n}\nclass MysqlConnection {\n    #rawConnection;\n    constructor(rawConnection) {\n        this.#rawConnection = rawConnection;\n    }\n    async executeQuery(compiledQuery) {\n        try {\n            const result = await this.#executeQuery(compiledQuery);\n            if (isOkPacket(result)) {\n                const { insertId, affectedRows, changedRows } = result;\n                return {\n                    insertId: insertId !== undefined &&\n                        insertId !== null &&\n                        insertId.toString() !== '0'\n                        ? BigInt(insertId)\n                        : undefined,\n                    numAffectedRows: affectedRows !== undefined && affectedRows !== null\n                        ? BigInt(affectedRows)\n                        : undefined,\n                    numChangedRows: changedRows !== undefined && changedRows !== null\n                        ? BigInt(changedRows)\n                        : undefined,\n                    rows: [],\n                };\n            }\n            else if (Array.isArray(result)) {\n                return {\n                    rows: result,\n                };\n            }\n            return {\n                rows: [],\n            };\n        }\n        catch (err) {\n            throw extendStackTrace(err, new Error());\n        }\n    }\n    #executeQuery(compiledQuery) {\n        return new Promise((resolve, reject) => {\n            this.#rawConnection.query(compiledQuery.sql, compiledQuery.parameters, (err, result) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        });\n    }\n    async *streamQuery(compiledQuery, _chunkSize) {\n        const stream = this.#rawConnection\n            .query(compiledQuery.sql, compiledQuery.parameters)\n            .stream({\n            objectMode: true,\n        });\n        try {\n            for await (const row of stream) {\n                yield {\n                    rows: [row],\n                };\n            }\n        }\n        catch (ex) {\n            if (ex &&\n                typeof ex === 'object' &&\n                'code' in ex &&\n                // @ts-ignore\n                ex.code === 'ERR_STREAM_PREMATURE_CLOSE') {\n                // Most likely because of https://github.com/mysqljs/mysql/blob/master/lib/protocol/sequences/Query.js#L220\n                return;\n            }\n            throw ex;\n        }\n    }\n    [PRIVATE_RELEASE_METHOD]() {\n        this.#rawConnection.release();\n    }\n}\n", "/// <reference types=\"./mysql-query-compiler.d.ts\" />\nimport { DefaultQueryCompiler } from '../../query-compiler/default-query-compiler.js';\nconst ID_WRAP_REGEX = /`/g;\nexport class MysqlQueryCompiler extends DefaultQueryCompiler {\n    getCurrentParameterPlaceholder() {\n        return '?';\n    }\n    getLeftExplainOptionsWrapper() {\n        return '';\n    }\n    getExplainOptionAssignment() {\n        return '=';\n    }\n    getExplainOptionsDelimiter() {\n        return ' ';\n    }\n    getRightExplainOptionsWrapper() {\n        return '';\n    }\n    getLeftIdentifierWrapper() {\n        return '`';\n    }\n    getRightIdentifierWrapper() {\n        return '`';\n    }\n    sanitizeIdentifier(identifier) {\n        return identifier.replace(ID_WRAP_REGEX, '``');\n    }\n    visitCreateIndex(node) {\n        this.append('create ');\n        if (node.unique) {\n            this.append('unique ');\n        }\n        this.append('index ');\n        if (node.ifNotExists) {\n            this.append('if not exists ');\n        }\n        this.visitNode(node.name);\n        if (node.using) {\n            this.append(' using ');\n            this.visitNode(node.using);\n        }\n        if (node.table) {\n            this.append(' on ');\n            this.visitNode(node.table);\n        }\n        if (node.columns) {\n            this.append(' (');\n            this.compileList(node.columns);\n            this.append(')');\n        }\n        if (node.where) {\n            this.append(' ');\n            this.visitNode(node.where);\n        }\n    }\n}\n", "/// <reference types=\"./mysql-introspector.d.ts\" />\nimport { DEFAULT_MIGRATION_LOCK_TABLE, DEFAULT_MIGRATION_TABLE, } from '../../migration/migrator.js';\nimport { freeze } from '../../util/object-utils.js';\nimport { sql } from '../../raw-builder/sql.js';\nexport class MysqlIntrospector {\n    #db;\n    constructor(db) {\n        this.#db = db;\n    }\n    async getSchemas() {\n        let rawSchemas = await this.#db\n            .selectFrom('information_schema.schemata')\n            .select('schema_name')\n            .$castTo()\n            .execute();\n        return rawSchemas.map((it) => ({ name: it.SCHEMA_NAME }));\n    }\n    async getTables(options = { withInternalKyselyTables: false }) {\n        let query = this.#db\n            .selectFrom('information_schema.columns as columns')\n            .innerJoin('information_schema.tables as tables', (b) => b\n            .onRef('columns.TABLE_CATALOG', '=', 'tables.TABLE_CATALOG')\n            .onRef('columns.TABLE_SCHEMA', '=', 'tables.TABLE_SCHEMA')\n            .onRef('columns.TABLE_NAME', '=', 'tables.TABLE_NAME'))\n            .select([\n            'columns.COLUMN_NAME',\n            'columns.COLUMN_DEFAULT',\n            'columns.TABLE_NAME',\n            'columns.TABLE_SCHEMA',\n            'tables.TABLE_TYPE',\n            'columns.IS_NULLABLE',\n            'columns.DATA_TYPE',\n            'columns.EXTRA',\n            'columns.COLUMN_COMMENT',\n        ])\n            .where('columns.TABLE_SCHEMA', '=', sql `database()`)\n            .orderBy('columns.TABLE_NAME')\n            .orderBy('columns.ORDINAL_POSITION')\n            .$castTo();\n        if (!options.withInternalKyselyTables) {\n            query = query\n                .where('columns.TABLE_NAME', '!=', DEFAULT_MIGRATION_TABLE)\n                .where('columns.TABLE_NAME', '!=', DEFAULT_MIGRATION_LOCK_TABLE);\n        }\n        const rawColumns = await query.execute();\n        return this.#parseTableMetadata(rawColumns);\n    }\n    async getMetadata(options) {\n        return {\n            tables: await this.getTables(options),\n        };\n    }\n    #parseTableMetadata(columns) {\n        return columns.reduce((tables, it) => {\n            let table = tables.find((tbl) => tbl.name === it.TABLE_NAME);\n            if (!table) {\n                table = freeze({\n                    name: it.TABLE_NAME,\n                    isView: it.TABLE_TYPE === 'VIEW',\n                    schema: it.TABLE_SCHEMA,\n                    columns: [],\n                });\n                tables.push(table);\n            }\n            table.columns.push(freeze({\n                name: it.COLUMN_NAME,\n                dataType: it.DATA_TYPE,\n                isNullable: it.IS_NULLABLE === 'YES',\n                isAutoIncrementing: it.EXTRA.toLowerCase().includes('auto_increment'),\n                hasDefaultValue: it.COLUMN_DEFAULT !== null,\n                comment: it.COLUMN_COMMENT === '' ? undefined : it.COLUMN_COMMENT,\n            }));\n            return tables;\n        }, []);\n    }\n}\n", "/// <reference types=\"./mysql-adapter.d.ts\" />\nimport { sql } from '../../raw-builder/sql.js';\nimport { DialectAdapterBase } from '../dialect-adapter-base.js';\nconst LOCK_ID = 'ea586330-2c93-47c8-908d-981d9d270f9d';\nconst LOCK_TIMEOUT_SECONDS = 60 * 60;\nexport class MysqlAdapter extends DialectAdapterBase {\n    get supportsTransactionalDdl() {\n        return false;\n    }\n    get supportsReturning() {\n        return false;\n    }\n    async acquireMigrationLock(db, _opt) {\n        // Kysely uses a single connection to run the migrations. Because of that, we\n        // can take a lock using `get_lock`. Locks acquired using `get_lock` get\n        // released when the connection is destroyed (session ends) or when the lock\n        // is released using `release_lock`. This way we know that the lock is either\n        // released by us after successfull or failed migrations OR it's released by\n        // MySQL if the process gets killed for some reason.\n        await sql `select get_lock(${sql.lit(LOCK_ID)}, ${sql.lit(LOCK_TIMEOUT_SECONDS)})`.execute(db);\n    }\n    async releaseMigrationLock(db, _opt) {\n        await sql `select release_lock(${sql.lit(LOCK_ID)})`.execute(db);\n    }\n}\n", "/// <reference types=\"./mysql-dialect.d.ts\" />\nimport { MysqlDriver } from './mysql-driver.js';\nimport { MysqlQueryCompiler } from './mysql-query-compiler.js';\nimport { MysqlIntrospector } from './mysql-introspector.js';\nimport { MysqlAdapter } from './mysql-adapter.js';\n/**\n * MySQL dialect that uses the [mysql2](https://github.com/sidorares/node-mysql2#readme) library.\n *\n * The constructor takes an instance of {@link MysqlDialectConfig}.\n *\n * ```ts\n * import { createPool } from 'mysql2'\n *\n * new MysqlDialect({\n *   pool: createPool({\n *     database: 'some_db',\n *     host: 'localhost',\n *   })\n * })\n * ```\n *\n * If you want the pool to only be created once it's first used, `pool`\n * can be a function:\n *\n * ```ts\n * import { createPool } from 'mysql2'\n *\n * new MysqlDialect({\n *   pool: async () => createPool({\n *     database: 'some_db',\n *     host: 'localhost',\n *   })\n * })\n * ```\n */\nexport class MysqlDialect {\n    #config;\n    constructor(config) {\n        this.#config = config;\n    }\n    createDriver() {\n        return new MysqlDriver(this.#config);\n    }\n    createQueryCompiler() {\n        return new MysqlQueryCompiler();\n    }\n    createAdapter() {\n        return new MysqlAdapter();\n    }\n    createIntrospector(db) {\n        return new MysqlIntrospector(db);\n    }\n}\n", "/// <reference types=\"./mysql-dialect-config.d.ts\" />\nexport {};\n", "/// <reference types=\"./postgres-driver.d.ts\" />\nimport { parseSavepointCommand } from '../../parser/savepoint-parser.js';\nimport { CompiledQuery } from '../../query-compiler/compiled-query.js';\nimport { isFunction, freeze } from '../../util/object-utils.js';\nimport { createQueryId } from '../../util/query-id.js';\nimport { extendStackTrace } from '../../util/stack-trace-utils.js';\nconst PRIVATE_RELEASE_METHOD = Symbol();\nexport class PostgresDriver {\n    #config;\n    #connections = new WeakMap();\n    #pool;\n    constructor(config) {\n        this.#config = freeze({ ...config });\n    }\n    async init() {\n        this.#pool = isFunction(this.#config.pool)\n            ? await this.#config.pool()\n            : this.#config.pool;\n    }\n    async acquireConnection() {\n        const client = await this.#pool.connect();\n        let connection = this.#connections.get(client);\n        if (!connection) {\n            connection = new PostgresConnection(client, {\n                cursor: this.#config.cursor ?? null,\n            });\n            this.#connections.set(client, connection);\n            // The driver must take care of calling `onCreateConnection` when a new\n            // connection is created. The `pg` module doesn't provide an async hook\n            // for the connection creation. We need to call the method explicitly.\n            if (this.#config.onCreateConnection) {\n                await this.#config.onCreateConnection(connection);\n            }\n        }\n        if (this.#config.onReserveConnection) {\n            await this.#config.onReserveConnection(connection);\n        }\n        return connection;\n    }\n    async beginTransaction(connection, settings) {\n        if (settings.isolationLevel || settings.accessMode) {\n            let sql = 'start transaction';\n            if (settings.isolationLevel) {\n                sql += ` isolation level ${settings.isolationLevel}`;\n            }\n            if (settings.accessMode) {\n                sql += ` ${settings.accessMode}`;\n            }\n            await connection.executeQuery(CompiledQuery.raw(sql));\n        }\n        else {\n            await connection.executeQuery(CompiledQuery.raw('begin'));\n        }\n    }\n    async commitTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('commit'));\n    }\n    async rollbackTransaction(connection) {\n        await connection.executeQuery(CompiledQuery.raw('rollback'));\n    }\n    async savepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('savepoint', savepointName), createQueryId()));\n    }\n    async rollbackToSavepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('rollback to', savepointName), createQueryId()));\n    }\n    async releaseSavepoint(connection, savepointName, compileQuery) {\n        await connection.executeQuery(compileQuery(parseSavepointCommand('release', savepointName), createQueryId()));\n    }\n    async releaseConnection(connection) {\n        connection[PRIVATE_RELEASE_METHOD]();\n    }\n    async destroy() {\n        if (this.#pool) {\n            const pool = this.#pool;\n            this.#pool = undefined;\n            await pool.end();\n        }\n    }\n}\nclass PostgresConnection {\n    #client;\n    #options;\n    constructor(client, options) {\n        this.#client = client;\n        this.#options = options;\n    }\n    async executeQuery(compiledQuery) {\n        try {\n            const { command, rowCount, rows } = await this.#client.query(compiledQuery.sql, [...compiledQuery.parameters]);\n            return {\n                numAffectedRows: command === 'INSERT' ||\n                    command === 'UPDATE' ||\n                    command === 'DELETE' ||\n                    command === 'MERGE'\n                    ? BigInt(rowCount)\n                    : undefined,\n                rows: rows ?? [],\n            };\n        }\n        catch (err) {\n            throw extendStackTrace(err, new Error());\n        }\n    }\n    async *streamQuery(compiledQuery, chunkSize) {\n        if (!this.#options.cursor) {\n            throw new Error(\"'cursor' is not present in your postgres dialect config. It's required to make streaming work in postgres.\");\n        }\n        if (!Number.isInteger(chunkSize) || chunkSize <= 0) {\n            throw new Error('chunkSize must be a positive integer');\n        }\n        const cursor = this.#client.query(new this.#options.cursor(compiledQuery.sql, compiledQuery.parameters.slice()));\n        try {\n            while (true) {\n                const rows = await cursor.read(chunkSize);\n                if (rows.length === 0) {\n                    break;\n                }\n                yield {\n                    rows,\n                };\n            }\n        }\n        finally {\n            await cursor.close();\n        }\n    }\n    [PRIVATE_RELEASE_METHOD]() {\n        this.#client.release();\n    }\n}\n", "/// <reference types=\"./postgres-dialect-config.d.ts\" />\nexport {};\n", "/// <reference types=\"./postgres-dialect.d.ts\" />\nimport { PostgresDriver } from './postgres-driver.js';\nimport { PostgresIntrospector } from './postgres-introspector.js';\nimport { PostgresQueryCompiler } from './postgres-query-compiler.js';\nimport { PostgresAdapter } from './postgres-adapter.js';\n/**\n * PostgreSQL dialect that uses the [pg](https://node-postgres.com/) library.\n *\n * The constructor takes an instance of {@link PostgresDialectConfig}.\n *\n * ```ts\n * import {\u00A0Pool } from 'pg'\n *\n * new PostgresDialect({\n *   pool: new Pool({\n *     database: 'some_db',\n *     host: 'localhost',\n *   })\n * })\n * ```\n *\n * If you want the pool to only be created once it's first used, `pool`\n * can be a function:\n *\n * ```ts\n * import {\u00A0Pool } from 'pg'\n *\n * new PostgresDialect({\n *   pool: async () => new Pool({\n *     database: 'some_db',\n *     host: 'localhost',\n *   })\n * })\n * ```\n */\nexport class PostgresDialect {\n    #config;\n    constructor(config) {\n        this.#config = config;\n    }\n    createDriver() {\n        return new PostgresDriver(this.#config);\n    }\n    createQueryCompiler() {\n        return new PostgresQueryCompiler();\n    }\n    createAdapter() {\n        return new PostgresAdapter();\n    }\n    createIntrospector(db) {\n        return new PostgresIntrospector(db);\n    }\n}\n", "/// <reference types=\"./mssql-adapter.d.ts\" />\nimport { DEFAULT_MIGRATION_TABLE } from '../../migration/migrator.js';\nimport { sql } from '../../raw-builder/sql.js';\nimport { DialectAdapterBase } from '../dialect-adapter-base.js';\nexport class MssqlAdapter extends DialectAdapterBase {\n    get supportsCreateIfNotExists() {\n        return false;\n    }\n    get supportsTransactionalDdl() {\n        return true;\n    }\n    get supportsOutput() {\n        return true;\n    }\n    async acquireMigrationLock(db) {\n        // Acquire a transaction-level exclusive lock on the migrations table.\n        // https://learn.microsoft.com/en-us/sql/relational-databases/system-stored-procedures/sp-getapplock-transact-sql?view=sql-server-ver16\n        await sql `exec sp_getapplock @DbPrincipal = ${sql.lit('dbo')}, @Resource = ${sql.lit(DEFAULT_MIGRATION_TABLE)}, @LockMode = ${sql.lit('Exclusive')}`.execute(db);\n    }\n    async releaseMigrationLock() {\n        // Nothing to do here. `sp_getapplock` is automatically released at the\n        // end of the transaction and since `supportsTransactionalDdl` true, we know\n        // the `db` instance passed to acquireMigrationLock is actually a transaction.\n    }\n}\n", "/// <reference types=\"./mssql-dialect-config.d.ts\" />\nexport {};\n", "/// <reference types=\"./mssql-driver.d.ts\" />\nimport { freeze, isBigInt, isBoolean, isBuffer, isDate, isNull, isNumber, isString, isUndefined, } from '../../util/object-utils.js';\nimport { CompiledQuery } from '../../query-compiler/compiled-query.js';\nimport { extendStackTrace } from '../../util/stack-trace-utils.js';\nimport { randomString } from '../../util/random-string.js';\nimport { Deferred } from '../../util/deferred.js';\nconst PRIVATE_RESET_METHOD = Symbol();\nconst PRIVATE_DESTROY_METHOD = Symbol();\nexport class MssqlDriver {\n    #config;\n    #pool;\n    constructor(config) {\n        this.#config = freeze({ ...config });\n        const { tarn, tedious, validateConnections } = this.#config;\n        const { validateConnections: deprecatedValidateConnections, ...poolOptions } = tarn.options;\n        this.#pool = new tarn.Pool({\n            ...poolOptions,\n            create: async () => {\n                const connection = await tedious.connectionFactory();\n                return await new MssqlConnection(connection, tedious).connect();\n            },\n            destroy: async (connection) => {\n                await connection[PRIVATE_DESTROY_METHOD]();\n            },\n            // @ts-ignore `tarn` accepts a function that returns a promise here, but\n            // the types are not aligned and it type errors.\n            validate: validateConnections === false ||\n                deprecatedValidateConnections === false\n                ? undefined\n                : (connection) => connection.validate(),\n        });\n    }\n    async init() {\n        // noop\n    }\n    async acquireConnection() {\n        return await this.#pool.acquire().promise;\n    }\n    async beginTransaction(connection, settings) {\n        await connection.beginTransaction(settings);\n    }\n    async commitTransaction(connection) {\n        await connection.commitTransaction();\n    }\n    async rollbackTransaction(connection) {\n        await connection.rollbackTransaction();\n    }\n    async savepoint(connection, savepointName) {\n        await connection.savepoint(savepointName);\n    }\n    async rollbackToSavepoint(connection, savepointName) {\n        await connection.rollbackTransaction(savepointName);\n    }\n    async releaseConnection(connection) {\n        if (this.#config.resetConnectionsOnRelease ||\n            this.#config.tedious.resetConnectionOnRelease) {\n            await connection[PRIVATE_RESET_METHOD]();\n        }\n        this.#pool.release(connection);\n    }\n    async destroy() {\n        await this.#pool.destroy();\n    }\n}\nclass MssqlConnection {\n    #connection;\n    #tedious;\n    constructor(connection, tedious) {\n        this.#connection = connection;\n        this.#tedious = tedious;\n        this.#connection.on('error', console.error);\n        this.#connection.once('end', () => {\n            this.#connection.off('error', console.error);\n        });\n    }\n    async beginTransaction(settings) {\n        const { isolationLevel } = settings;\n        await new Promise((resolve, reject) => this.#connection.beginTransaction((error) => {\n            if (error)\n                reject(error);\n            else\n                resolve(undefined);\n        }, isolationLevel ? randomString(8) : undefined, isolationLevel\n            ? this.#getTediousIsolationLevel(isolationLevel)\n            : undefined));\n    }\n    async commitTransaction() {\n        await new Promise((resolve, reject) => this.#connection.commitTransaction((error) => {\n            if (error)\n                reject(error);\n            else\n                resolve(undefined);\n        }));\n    }\n    async connect() {\n        await new Promise((resolve, reject) => {\n            this.#connection.connect((error) => {\n                if (error) {\n                    console.error(error);\n                    reject(error);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n        });\n        return this;\n    }\n    async executeQuery(compiledQuery) {\n        try {\n            const deferred = new Deferred();\n            const request = new MssqlRequest({\n                compiledQuery,\n                tedious: this.#tedious,\n                onDone: deferred,\n            });\n            this.#connection.execSql(request.request);\n            const { rowCount, rows } = await deferred.promise;\n            return {\n                numAffectedRows: rowCount !== undefined ? BigInt(rowCount) : undefined,\n                rows,\n            };\n        }\n        catch (err) {\n            throw extendStackTrace(err, new Error());\n        }\n    }\n    async rollbackTransaction(savepointName) {\n        await new Promise((resolve, reject) => this.#connection.rollbackTransaction((error) => {\n            if (error)\n                reject(error);\n            else\n                resolve(undefined);\n        }, savepointName));\n    }\n    async savepoint(savepointName) {\n        await new Promise((resolve, reject) => this.#connection.saveTransaction((error) => {\n            if (error)\n                reject(error);\n            else\n                resolve(undefined);\n        }, savepointName));\n    }\n    async *streamQuery(compiledQuery, chunkSize) {\n        if (!Number.isInteger(chunkSize) || chunkSize <= 0) {\n            throw new Error('chunkSize must be a positive integer');\n        }\n        const request = new MssqlRequest({\n            compiledQuery,\n            streamChunkSize: chunkSize,\n            tedious: this.#tedious,\n        });\n        this.#connection.execSql(request.request);\n        try {\n            while (true) {\n                const rows = await request.readChunk();\n                if (rows.length === 0) {\n                    break;\n                }\n                yield { rows };\n                if (rows.length < chunkSize) {\n                    break;\n                }\n            }\n        }\n        finally {\n            await this.#cancelRequest(request);\n        }\n    }\n    async validate() {\n        try {\n            const deferred = new Deferred();\n            const request = new MssqlRequest({\n                compiledQuery: CompiledQuery.raw('select 1'),\n                onDone: deferred,\n                tedious: this.#tedious,\n            });\n            this.#connection.execSql(request.request);\n            await deferred.promise;\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    #getTediousIsolationLevel(isolationLevel) {\n        const { ISOLATION_LEVEL } = this.#tedious;\n        const mapper = {\n            'read committed': ISOLATION_LEVEL.READ_COMMITTED,\n            'read uncommitted': ISOLATION_LEVEL.READ_UNCOMMITTED,\n            'repeatable read': ISOLATION_LEVEL.REPEATABLE_READ,\n            serializable: ISOLATION_LEVEL.SERIALIZABLE,\n            snapshot: ISOLATION_LEVEL.SNAPSHOT,\n        };\n        const tediousIsolationLevel = mapper[isolationLevel];\n        if (tediousIsolationLevel === undefined) {\n            throw new Error(`Unknown isolation level: ${isolationLevel}`);\n        }\n        return tediousIsolationLevel;\n    }\n    #cancelRequest(request) {\n        return new Promise((resolve) => {\n            request.request.once('requestCompleted', resolve);\n            const wasCanceled = this.#connection.cancel();\n            if (!wasCanceled) {\n                request.request.off('requestCompleted', resolve);\n                resolve(undefined);\n            }\n        });\n    }\n    async [PRIVATE_RESET_METHOD]() {\n        await new Promise((resolve, reject) => {\n            this.#connection.reset((error) => {\n                if (error)\n                    reject(error);\n                else\n                    resolve(undefined);\n            });\n        });\n    }\n    [PRIVATE_DESTROY_METHOD]() {\n        return new Promise((resolve) => {\n            this.#connection.once('end', () => {\n                resolve(undefined);\n            });\n            this.#connection.close();\n        });\n    }\n}\nclass MssqlRequest {\n    #request;\n    #rows;\n    #streamChunkSize;\n    #subscribers;\n    #tedious;\n    #rowCount;\n    constructor(props) {\n        const { compiledQuery, onDone, streamChunkSize, tedious } = props;\n        this.#rows = [];\n        this.#streamChunkSize = streamChunkSize;\n        this.#subscribers = {};\n        this.#tedious = tedious;\n        if (onDone) {\n            const subscriptionKey = 'onDone';\n            this.#subscribers[subscriptionKey] = (event, error) => {\n                if (event === 'chunkReady') {\n                    return;\n                }\n                delete this.#subscribers[subscriptionKey];\n                if (event === 'error') {\n                    onDone.reject(error);\n                }\n                else {\n                    onDone.resolve({\n                        rowCount: this.#rowCount,\n                        rows: this.#rows,\n                    });\n                }\n            };\n        }\n        this.#request = new this.#tedious.Request(compiledQuery.sql, (err, rowCount) => {\n            if (err) {\n                Object.values(this.#subscribers).forEach((subscriber) => subscriber('error', err instanceof AggregateError ? err.errors : err));\n            }\n            else {\n                this.#rowCount = rowCount;\n            }\n        });\n        this.#addParametersToRequest(compiledQuery.parameters);\n        this.#attachListeners();\n    }\n    get request() {\n        return this.#request;\n    }\n    readChunk() {\n        const subscriptionKey = this.readChunk.name;\n        return new Promise((resolve, reject) => {\n            this.#subscribers[subscriptionKey] = (event, error) => {\n                delete this.#subscribers[subscriptionKey];\n                if (event === 'error') {\n                    reject(error);\n                }\n                else {\n                    resolve(this.#rows.splice(0, this.#streamChunkSize));\n                }\n            };\n            this.#request.resume();\n        });\n    }\n    #addParametersToRequest(parameters) {\n        for (let i = 0; i < parameters.length; i++) {\n            const parameter = parameters[i];\n            this.#request.addParameter(String(i + 1), this.#getTediousDataType(parameter), parameter);\n        }\n    }\n    #attachListeners() {\n        const pauseAndEmitChunkReady = this.#streamChunkSize\n            ? () => {\n                if (this.#streamChunkSize <= this.#rows.length) {\n                    this.#request.pause();\n                    Object.values(this.#subscribers).forEach((subscriber) => subscriber('chunkReady'));\n                }\n            }\n            : () => { };\n        const rowListener = (columns) => {\n            const row = {};\n            for (const column of columns) {\n                row[column.metadata.colName] = column.value;\n            }\n            this.#rows.push(row);\n            pauseAndEmitChunkReady();\n        };\n        this.#request.on('row', rowListener);\n        this.#request.once('requestCompleted', () => {\n            Object.values(this.#subscribers).forEach((subscriber) => subscriber('completed'));\n            this.#request.off('row', rowListener);\n        });\n    }\n    #getTediousDataType(value) {\n        if (isNull(value) || isUndefined(value) || isString(value)) {\n            return this.#tedious.TYPES.NVarChar;\n        }\n        if (isBigInt(value) || (isNumber(value) && value % 1 === 0)) {\n            if (value < -2147483648 || value > 2147483647) {\n                return this.#tedious.TYPES.BigInt;\n            }\n            else {\n                return this.#tedious.TYPES.Int;\n            }\n        }\n        if (isNumber(value)) {\n            return this.#tedious.TYPES.Float;\n        }\n        if (isBoolean(value)) {\n            return this.#tedious.TYPES.Bit;\n        }\n        if (isDate(value)) {\n            return this.#tedious.TYPES.DateTime;\n        }\n        if (isBuffer(value)) {\n            return this.#tedious.TYPES.VarBinary;\n        }\n        return this.#tedious.TYPES.NVarChar;\n    }\n}\n", "/// <reference types=\"./mssql-introspector.d.ts\" />\nimport { DEFAULT_MIGRATION_LOCK_TABLE, DEFAULT_MIGRATION_TABLE, } from '../../migration/migrator.js';\nimport { freeze } from '../../util/object-utils.js';\nexport class MssqlIntrospector {\n    #db;\n    constructor(db) {\n        this.#db = db;\n    }\n    async getSchemas() {\n        return await this.#db.selectFrom('sys.schemas').select('name').execute();\n    }\n    async getTables(options = { withInternalKyselyTables: false }) {\n        const rawColumns = await this.#db\n            .selectFrom('sys.tables as tables')\n            .leftJoin('sys.schemas as table_schemas', 'table_schemas.schema_id', 'tables.schema_id')\n            .innerJoin('sys.columns as columns', 'columns.object_id', 'tables.object_id')\n            .innerJoin('sys.types as types', 'types.user_type_id', 'columns.user_type_id')\n            .leftJoin('sys.schemas as type_schemas', 'type_schemas.schema_id', 'types.schema_id')\n            .leftJoin('sys.extended_properties as comments', (join) => join\n            .onRef('comments.major_id', '=', 'tables.object_id')\n            .onRef('comments.minor_id', '=', 'columns.column_id')\n            .on('comments.name', '=', 'MS_Description'))\n            .$if(!options.withInternalKyselyTables, (qb) => qb\n            .where('tables.name', '!=', DEFAULT_MIGRATION_TABLE)\n            .where('tables.name', '!=', DEFAULT_MIGRATION_LOCK_TABLE))\n            .select([\n            'tables.name as table_name',\n            (eb) => eb\n                .ref('tables.type')\n                .$castTo()\n                .as('table_type'),\n            'table_schemas.name as table_schema_name',\n            'columns.default_object_id as column_default_object_id',\n            'columns.generated_always_type_desc as column_generated_always_type',\n            'columns.is_computed as column_is_computed',\n            'columns.is_identity as column_is_identity',\n            'columns.is_nullable as column_is_nullable',\n            'columns.is_rowguidcol as column_is_rowguidcol',\n            'columns.name as column_name',\n            'types.is_nullable as type_is_nullable',\n            'types.name as type_name',\n            'type_schemas.name as type_schema_name',\n            'comments.value as column_comment',\n        ])\n            .unionAll(this.#db\n            .selectFrom('sys.views as views')\n            .leftJoin('sys.schemas as view_schemas', 'view_schemas.schema_id', 'views.schema_id')\n            .innerJoin('sys.columns as columns', 'columns.object_id', 'views.object_id')\n            .innerJoin('sys.types as types', 'types.user_type_id', 'columns.user_type_id')\n            .leftJoin('sys.schemas as type_schemas', 'type_schemas.schema_id', 'types.schema_id')\n            .leftJoin('sys.extended_properties as comments', (join) => join\n            .onRef('comments.major_id', '=', 'views.object_id')\n            .onRef('comments.minor_id', '=', 'columns.column_id')\n            .on('comments.name', '=', 'MS_Description'))\n            .select([\n            'views.name as table_name',\n            'views.type as table_type',\n            'view_schemas.name as table_schema_name',\n            'columns.default_object_id as column_default_object_id',\n            'columns.generated_always_type_desc as column_generated_always_type',\n            'columns.is_computed as column_is_computed',\n            'columns.is_identity as column_is_identity',\n            'columns.is_nullable as column_is_nullable',\n            'columns.is_rowguidcol as column_is_rowguidcol',\n            'columns.name as column_name',\n            'types.is_nullable as type_is_nullable',\n            'types.name as type_name',\n            'type_schemas.name as type_schema_name',\n            'comments.value as column_comment',\n        ]))\n            .orderBy('table_schema_name')\n            .orderBy('table_name')\n            .orderBy('column_name')\n            .execute();\n        const tableDictionary = {};\n        for (const rawColumn of rawColumns) {\n            const key = `${rawColumn.table_schema_name}.${rawColumn.table_name}`;\n            const table = (tableDictionary[key] =\n                tableDictionary[key] ||\n                    freeze({\n                        columns: [],\n                        isView: rawColumn.table_type === 'V ',\n                        name: rawColumn.table_name,\n                        schema: rawColumn.table_schema_name ?? undefined,\n                    }));\n            table.columns.push(freeze({\n                dataType: rawColumn.type_name,\n                dataTypeSchema: rawColumn.type_schema_name ?? undefined,\n                hasDefaultValue: rawColumn.column_default_object_id > 0 ||\n                    rawColumn.column_generated_always_type !== 'NOT_APPLICABLE' ||\n                    rawColumn.column_is_identity ||\n                    rawColumn.column_is_computed ||\n                    rawColumn.column_is_rowguidcol,\n                isAutoIncrementing: rawColumn.column_is_identity,\n                isNullable: rawColumn.column_is_nullable && rawColumn.type_is_nullable,\n                name: rawColumn.column_name,\n                comment: rawColumn.column_comment ?? undefined,\n            }));\n        }\n        return Object.values(tableDictionary);\n    }\n    async getMetadata(options) {\n        return {\n            tables: await this.getTables(options),\n        };\n    }\n}\n", "/// <reference types=\"./mssql-query-compiler.d.ts\" />\nimport { DefaultQueryCompiler } from '../../query-compiler/default-query-compiler.js';\nconst COLLATION_CHAR_REGEX = /^[a-z0-9_]$/i;\nexport class MssqlQueryCompiler extends DefaultQueryCompiler {\n    getCurrentParameterPlaceholder() {\n        return `@${this.numParameters}`;\n    }\n    visitOffset(node) {\n        super.visitOffset(node);\n        this.append(' rows');\n    }\n    // mssql allows multi-column alterations in a single statement,\n    // but you can only use the command keyword/s once.\n    // it also doesn't support multiple kinds of commands in the same\n    // alter table statement, but we compile that anyway for the sake\n    // of WYSIWYG.\n    compileColumnAlterations(columnAlterations) {\n        const nodesByKind = {};\n        for (const columnAlteration of columnAlterations) {\n            if (!nodesByKind[columnAlteration.kind]) {\n                nodesByKind[columnAlteration.kind] = [];\n            }\n            nodesByKind[columnAlteration.kind].push(columnAlteration);\n        }\n        let first = true;\n        if (nodesByKind.AddColumnNode) {\n            this.append('add ');\n            this.compileList(nodesByKind.AddColumnNode);\n            first = false;\n        }\n        // multiple of these are not really supported by mssql,\n        // but for the sake of WYSIWYG.\n        if (nodesByKind.AlterColumnNode) {\n            if (!first)\n                this.append(', ');\n            this.compileList(nodesByKind.AlterColumnNode);\n        }\n        if (nodesByKind.DropColumnNode) {\n            if (!first)\n                this.append(', ');\n            this.append('drop column ');\n            this.compileList(nodesByKind.DropColumnNode);\n        }\n        // not really supported by mssql, but for the sake of WYSIWYG.\n        if (nodesByKind.ModifyColumnNode) {\n            if (!first)\n                this.append(', ');\n            this.compileList(nodesByKind.ModifyColumnNode);\n        }\n        // not really supported by mssql, but for the sake of WYSIWYG.\n        if (nodesByKind.RenameColumnNode) {\n            if (!first)\n                this.append(', ');\n            this.compileList(nodesByKind.RenameColumnNode);\n        }\n    }\n    visitAddColumn(node) {\n        this.visitNode(node.column);\n    }\n    visitDropColumn(node) {\n        this.visitNode(node.column);\n    }\n    visitMergeQuery(node) {\n        super.visitMergeQuery(node);\n        this.append(';');\n    }\n    visitCollate(node) {\n        this.append('collate ');\n        const { name } = node.collation;\n        for (const char of name) {\n            if (!COLLATION_CHAR_REGEX.test(char)) {\n                throw new Error(`Invalid collation: ${name}`);\n            }\n        }\n        this.append(name);\n    }\n    announcesNewColumnDataType() {\n        return false;\n    }\n}\n", "/// <reference types=\"./mssql-dialect.d.ts\" />\nimport { MssqlAdapter } from './mssql-adapter.js';\nimport { MssqlDriver } from './mssql-driver.js';\nimport { MssqlIntrospector } from './mssql-introspector.js';\nimport { MssqlQueryCompiler } from './mssql-query-compiler.js';\n/**\n * MS SQL Server dialect that uses the [tedious](https://tediousjs.github.io/tedious)\n * library.\n *\n * The constructor takes an instance of {@link MssqlDialectConfig}.\n *\n * ```ts\n * import * as Tedious from 'tedious'\n * import * as Tarn from 'tarn'\n *\n * const dialect = new MssqlDialect({\n *   tarn: {\n *     ...Tarn,\n *     options: {\n *       min: 0,\n *       max: 10,\n *     },\n *   },\n *   tedious: {\n *     ...Tedious,\n *     connectionFactory: () => new Tedious.Connection({\n *       authentication: {\n *         options: {\n *           password: 'password',\n *           userName: 'username',\n *         },\n *         type: 'default',\n *       },\n *       options: {\n *         database: 'some_db',\n *         port: 1433,\n *         trustServerCertificate: true,\n *       },\n *       server: 'localhost',\n *     }),\n *   },\n * })\n * ```\n */\nexport class MssqlDialect {\n    #config;\n    constructor(config) {\n        this.#config = config;\n    }\n    createDriver() {\n        return new MssqlDriver(this.#config);\n    }\n    createQueryCompiler() {\n        return new MssqlQueryCompiler();\n    }\n    createAdapter() {\n        return new MssqlAdapter();\n    }\n    createIntrospector(db) {\n        return new MssqlIntrospector(db);\n    }\n}\n", "/// <reference types=\"./query-compiler.d.ts\" />\nexport {};\n", "/// <reference types=\"./file-migration-provider.d.ts\" />\nimport { isFunction, isObject } from '../util/object-utils.js';\n/**\n * Reads all migrations from a folder in node.js.\n *\n * ### Examples\n *\n * ```ts\n * import { promises as fs } from 'node:fs'\n * import path from 'node:path'\n *\n * new FileMigrationProvider({\n *   fs,\n *   path,\n *   migrationFolder: 'path/to/migrations/folder'\n * })\n * ```\n */\nexport class FileMigrationProvider {\n    #props;\n    constructor(props) {\n        this.#props = props;\n    }\n    async getMigrations() {\n        const migrations = {};\n        const files = await this.#props.fs.readdir(this.#props.migrationFolder);\n        for (const fileName of files) {\n            if (fileName.endsWith('.js') ||\n                (fileName.endsWith('.ts') && !fileName.endsWith('.d.ts')) ||\n                fileName.endsWith('.mjs') ||\n                (fileName.endsWith('.mts') && !fileName.endsWith('.d.mts'))) {\n                const migration = await import(\n                /* webpackIgnore: true */ this.#props.path.join(this.#props.migrationFolder, fileName));\n                const migrationKey = fileName.substring(0, fileName.lastIndexOf('.'));\n                // Handle esModuleInterop export's `default` prop...\n                if (isMigration(migration?.default)) {\n                    migrations[migrationKey] = migration.default;\n                }\n                else if (isMigration(migration)) {\n                    migrations[migrationKey] = migration;\n                }\n            }\n        }\n        return migrations;\n    }\n}\nfunction isMigration(obj) {\n    return isObject(obj) && isFunction(obj.up);\n}\n", "/// <reference types=\"./kysely-plugin.d.ts\" />\nexport {};\n", "/// <reference types=\"./camel-case-plugin.d.ts\" />\nimport { isPlainObject } from '../../util/object-utils.js';\nimport { SnakeCaseTransformer } from './camel-case-transformer.js';\nimport { createCamelCaseMapper, createSnakeCaseMapper, } from './camel-case.js';\n/**\n * A plugin that converts snake_case identifiers in the database into\n * camelCase in the JavaScript side.\n *\n * For example let's assume we have a table called `person_table`\n * with columns `first_name` and `last_name` in the database. When\n * using `CamelCasePlugin` we would setup Kysely like this:\n *\n * ```ts\n * import * as Sqlite from 'better-sqlite3'\n * import { CamelCasePlugin, Kysely, SqliteDialect } from 'kysely'\n *\n * interface CamelCasedDatabase {\n *   userMetadata: {\n *     firstName: string\n *     lastName: string\n *   }\n * }\n *\n * const db = new Kysely<CamelCasedDatabase>({\n *   dialect: new SqliteDialect({\n *     database: new Sqlite(':memory:'),\n *   }),\n *   plugins: [new CamelCasePlugin()],\n * })\n *\n * const person = await db.selectFrom('userMetadata')\n *   .where('firstName', '=', 'Arnold')\n *   .select(['firstName', 'lastName'])\n *   .executeTakeFirst()\n *\n * if (person) {\n *   console.log(person.firstName)\n * }\n * ```\n *\n * The generated SQL (SQLite):\n *\n * ```sql\n * select \"first_name\", \"last_name\" from \"user_metadata\" where \"first_name\" = ?\n * ```\n *\n * As you can see from the example, __everything__ needs to be defined\n * in camelCase in the TypeScript code: table names, columns, schemas,\n * __everything__. When using the `CamelCasePlugin` Kysely works as if\n * the database was defined in camelCase.\n *\n * There are various options you can give to the plugin to modify\n * the way identifiers are converted. See {@link CamelCasePluginOptions}.\n * If those options are not enough, you can override this plugin's\n * `snakeCase` and `camelCase` methods to make the conversion exactly\n * the way you like:\n *\n * ```ts\n * class MyCamelCasePlugin extends CamelCasePlugin {\n *   protected override snakeCase(str: string): string {\n *     // ...\n *\n *     return str\n *   }\n *\n *   protected override camelCase(str: string): string {\n *     // ...\n *\n *     return str\n *   }\n * }\n * ```\n */\nexport class CamelCasePlugin {\n    opt;\n    #camelCase;\n    #snakeCase;\n    #snakeCaseTransformer;\n    constructor(opt = {}) {\n        this.opt = opt;\n        this.#camelCase = createCamelCaseMapper(opt);\n        this.#snakeCase = createSnakeCaseMapper(opt);\n        this.#snakeCaseTransformer = new SnakeCaseTransformer(this.snakeCase.bind(this));\n    }\n    transformQuery(args) {\n        return this.#snakeCaseTransformer.transformNode(args.node, args.queryId);\n    }\n    async transformResult(args) {\n        if (args.result.rows && Array.isArray(args.result.rows)) {\n            return {\n                ...args.result,\n                rows: args.result.rows.map((row) => this.mapRow(row)),\n            };\n        }\n        return args.result;\n    }\n    mapRow(row) {\n        return Object.keys(row).reduce((obj, key) => {\n            let value = row[key];\n            if (Array.isArray(value)) {\n                value = value.map((it) => (canMap(it, this.opt) ? this.mapRow(it) : it));\n            }\n            else if (canMap(value, this.opt)) {\n                value = this.mapRow(value);\n            }\n            obj[this.camelCase(key)] = value;\n            return obj;\n        }, {});\n    }\n    snakeCase(str) {\n        return this.#snakeCase(str);\n    }\n    camelCase(str) {\n        return this.#camelCase(str);\n    }\n}\nfunction canMap(obj, opt) {\n    return isPlainObject(obj) && !opt?.maintainNestedObjectKeys;\n}\n", "/// <reference types=\"./deduplicate-joins-plugin.d.ts\" />\nimport { DeduplicateJoinsTransformer } from './deduplicate-joins-transformer.js';\n/**\n * Plugin that removes duplicate joins from queries.\n *\n * See [this recipe](https://github.com/kysely-org/kysely/blob/master/site/docs/recipes/0008-deduplicate-joins.md)\n */\nexport class DeduplicateJoinsPlugin {\n    #transformer = new DeduplicateJoinsTransformer();\n    transformQuery(args) {\n        return this.#transformer.transformNode(args.node, args.queryId);\n    }\n    transformResult(args) {\n        return Promise.resolve(args.result);\n    }\n}\n", "/// <reference types=\"./parse-json-results-plugin.d.ts\" />\nimport { isPlainObject, isString } from '../../util/object-utils.js';\n/**\n * Parses JSON strings in query results into JSON objects.\n *\n * This plugin can be useful with dialects that don't automatically parse\n * JSON into objects and arrays but return JSON strings instead.\n *\n * To apply this plugin globally, pass an instance of it to the `plugins` option\n * when creating a new `Kysely` instance:\n *\n * ```ts\n * import * as Sqlite from 'better-sqlite3'\n * import { Kysely, ParseJSONResultsPlugin, SqliteDialect } from 'kysely'\n * import type { Database } from 'type-editor' // imaginary module\n *\n * const db = new Kysely<Database>({\n *   dialect: new SqliteDialect({\n *     database: new Sqlite(':memory:'),\n *   }),\n *   plugins: [new ParseJSONResultsPlugin()],\n * })\n * ```\n *\n * To apply this plugin to a single query:\n *\n * ```ts\n * import { ParseJSONResultsPlugin } from 'kysely'\n * import { jsonArrayFrom } from 'kysely/helpers/sqlite'\n *\n * const result = await db\n *   .selectFrom('person')\n *   .select((eb) => [\n *     'id',\n *     'first_name',\n *     'last_name',\n *     jsonArrayFrom(\n *       eb.selectFrom('pet')\n *         .whereRef('owner_id', '=', 'person.id')\n *         .select(['name', 'species'])\n *     ).as('pets')\n *   ])\n *   .withPlugin(new ParseJSONResultsPlugin())\n *   .execute()\n * ```\n */\nexport class ParseJSONResultsPlugin {\n    opt;\n    #objectStrategy;\n    constructor(opt = {}) {\n        this.opt = opt;\n        this.#objectStrategy = opt.objectStrategy || 'in-place';\n    }\n    // noop\n    transformQuery(args) {\n        return args.node;\n    }\n    async transformResult(args) {\n        return {\n            ...args.result,\n            rows: parseArray(args.result.rows, this.#objectStrategy),\n        };\n    }\n}\nfunction parseArray(arr, objectStrategy) {\n    const target = objectStrategy === 'create' ? new Array(arr.length) : arr;\n    for (let i = 0; i < arr.length; ++i) {\n        target[i] = parse(arr[i], objectStrategy);\n    }\n    return target;\n}\nfunction parse(obj, objectStrategy) {\n    if (isString(obj)) {\n        return parseString(obj);\n    }\n    if (Array.isArray(obj)) {\n        return parseArray(obj, objectStrategy);\n    }\n    if (isPlainObject(obj)) {\n        return parseObject(obj, objectStrategy);\n    }\n    return obj;\n}\nfunction parseString(str) {\n    if (maybeJson(str)) {\n        try {\n            return parse(JSON.parse(str), 'in-place');\n        }\n        catch (err) {\n            // this catch block is intentionally empty.\n        }\n    }\n    return str;\n}\nfunction maybeJson(value) {\n    return value.match(/^[\\[\\{]/) != null;\n}\nfunction parseObject(obj, objectStrategy) {\n    const target = objectStrategy === 'create' ? {} : obj;\n    for (const key in obj) {\n        target[key] = parse(obj[key], objectStrategy);\n    }\n    return target;\n}\n", "/// <reference types=\"./handle-empty-in-lists-plugin.d.ts\" />\nimport { HandleEmptyInListsTransformer } from './handle-empty-in-lists-transformer.js';\n/**\n * A plugin that allows handling `in ()` and `not in ()` expressions.\n *\n * These expressions are invalid SQL syntax for many databases, and result in runtime\n * database errors.\n *\n * The workarounds used by other libraries always involve modifying the query under\n * the hood, which is not aligned with Kysely's philosophy of WYSIWYG. We recommend manually checking\n * for empty arrays before passing them as arguments to `in` and `not in` expressions\n * instead, but understand that this can be cumbersome. Hence we're going with an\n * opt-in approach where you can choose if and how to handle these cases. We do\n * not want to make this the default behavior, as it can lead to unexpected behavior.\n * Use it at your own risk. Test it. Make sure it works as expected for you.\n *\n * Using this plugin also allows you to throw an error (thus avoiding unnecessary\n * requests to the database) or print a warning in these cases.\n *\n * ### Examples\n *\n * The following strategy replaces the `in`/`not in` expression with a noncontingent\n * expression. A contradiction (falsy) `1 = 0` for `in`, and a tautology (truthy) `1 = 1` for `not in`),\n * similarily to how {@link https://github.com/knex/knex/blob/176151d8048b2a7feeb89a3d649a5580786d4f4e/docs/src/guide/query-builder.md#L1763 | Knex.js},\n * {@link https://github.com/prisma/prisma-engines/blob/99168c54187178484dae45d9478aa40cfd1866d2/quaint/src/visitor.rs#L804-L823 | PrismaORM},\n * {@link https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Query/Grammars/Grammar.php#L284-L291 | Laravel},\n * {@link https://docs.sqlalchemy.org/en/13/core/engines.html#sqlalchemy.create_engine.params.empty_in_strategy | SQLAlchemy}\n * handle this.\n *\n * ```ts\n * import Sqlite from 'better-sqlite3'\n * import {\n *   HandleEmptyInListsPlugin,\n *   Kysely,\n *   replaceWithNoncontingentExpression,\n *   SqliteDialect,\n * } from 'kysely'\n * import type { Database } from 'type-editor' // imaginary module\n *\n * const db = new Kysely<Database>({\n *   dialect: new SqliteDialect({\n *     database: new Sqlite(':memory:'),\n *   }),\n *   plugins: [\n *     new HandleEmptyInListsPlugin({\n *       strategy: replaceWithNoncontingentExpression\n *     })\n *   ],\n * })\n *\n * const results = await db\n *   .selectFrom('person')\n *   .where('id', 'in', [])\n *   .where('first_name', 'not in', [])\n *   .selectAll()\n *   .execute()\n * ```\n *\n * The generated SQL (SQLite):\n *\n * ```sql\n * select * from \"person\" where 1 = 0 and 1 = 1\n * ```\n *\n * The following strategy does the following:\n *\n * When `in`, pushes a `null` value into the empty list resulting in `in (null)`,\n * similiarly to how {@link https://github.com/typeorm/typeorm/blob/0280cdc451c35ef73c830eb1191c95d34f6ce06e/src/query-builder/QueryBuilder.ts#L919-L922 | TypeORM}\n * and {@link https://github.com/sequelize/sequelize/blob/0f2891c6897e12bf9bf56df344aae5b698f58c7d/packages/core/src/abstract-dialect/where-sql-builder.ts#L368-L379 | Sequelize}\n * handle `in ()`. `in (null)` is logically the equivalent of `= null`, which returns\n * `null`, which is a falsy expression in most SQL databases. We recommend NOT\n * using this strategy if you plan to use `in` in `select`, `returning`, or `output`\n * clauses, as the return type differs from the `SqlBool` default type for comparisons.\n *\n * When `not in`, casts the left operand as `char` and pushes a unique value into\n * the empty list resulting in `cast({{lhs}} as char) not in ({{VALUE}})`. Casting\n * is required to avoid database errors with non-string values.\n *\n * ```ts\n * import Sqlite from 'better-sqlite3'\n * import {\n *   HandleEmptyInListsPlugin,\n *   Kysely,\n *   pushValueIntoList,\n *   SqliteDialect\n * } from 'kysely'\n * import type { Database } from 'type-editor' // imaginary module\n *\n * const db = new Kysely<Database>({\n *   dialect: new SqliteDialect({\n *     database: new Sqlite(':memory:'),\n *   }),\n *   plugins: [\n *     new HandleEmptyInListsPlugin({\n *       strategy: pushValueIntoList('__kysely_no_values_were_provided__') // choose a unique value for not in. has to be something with zero chance being in the data.\n *     })\n *   ],\n * })\n *\n * const results = await db\n *   .selectFrom('person')\n *   .where('id', 'in', [])\n *   .where('first_name', 'not in', [])\n *   .selectAll()\n *   .execute()\n * ```\n *\n * The generated SQL (SQLite):\n *\n * ```sql\n * select * from \"person\" where \"id\" in (null) and cast(\"first_name\" as char) not in ('__kysely_no_values_were_provided__')\n * ```\n *\n * The following custom strategy throws an error when an empty list is encountered\n * to avoid unnecessary requests to the database:\n *\n * ```ts\n * import Sqlite from 'better-sqlite3'\n * import {\n *   HandleEmptyInListsPlugin,\n *   Kysely,\n *   SqliteDialect\n * } from 'kysely'\n * import type { Database } from 'type-editor' // imaginary module\n *\n * const db = new Kysely<Database>({\n *   dialect: new SqliteDialect({\n *     database: new Sqlite(':memory:'),\n *   }),\n *   plugins: [\n *     new HandleEmptyInListsPlugin({\n *       strategy: () => {\n *         throw new Error('Empty in/not-in is not allowed')\n *       }\n *     })\n *   ],\n * })\n *\n * const results = await db\n *   .selectFrom('person')\n *   .where('id', 'in', [])\n *   .selectAll()\n *   .execute() // throws an error with 'Empty in/not-in is not allowed' message!\n * ```\n */\nexport class HandleEmptyInListsPlugin {\n    opt;\n    #transformer;\n    constructor(opt) {\n        this.opt = opt;\n        this.#transformer = new HandleEmptyInListsTransformer(opt.strategy);\n    }\n    transformQuery(args) {\n        return this.#transformer.transformNode(args.node, args.queryId);\n    }\n    async transformResult(args) {\n        return args.result;\n    }\n}\n", "/// <reference types=\"./handle-empty-in-lists.d.ts\" />\nimport { BinaryOperationNode } from '../../operation-node/binary-operation-node.js';\nimport { CastNode } from '../../operation-node/cast-node.js';\nimport { DataTypeNode } from '../../operation-node/data-type-node.js';\nimport { OperatorNode } from '../../operation-node/operator-node.js';\nimport { ValueListNode } from '../../operation-node/value-list-node.js';\nimport { ValueNode } from '../../operation-node/value-node.js';\nimport { freeze } from '../../util/object-utils.js';\nlet contradiction;\nlet eq;\nlet one;\nlet tautology;\n/**\n * Replaces the `in`/`not in` expression with a noncontingent expression (always true or always\n * false) depending on the original operator.\n *\n * This is how Knex.js, PrismaORM, Laravel, and SQLAlchemy handle `in ()` and `not in ()`.\n *\n * See {@link pushValueIntoList} for an alternative strategy.\n */\nexport function replaceWithNoncontingentExpression(node) {\n    const _one = (one ||= ValueNode.createImmediate(1));\n    const _eq = (eq ||= OperatorNode.create('='));\n    if (node.operator.operator === 'in') {\n        return (contradiction ||= BinaryOperationNode.create(_one, _eq, ValueNode.createImmediate(0)));\n    }\n    return (tautology ||= BinaryOperationNode.create(_one, _eq, _one));\n}\nlet char;\nlet listNull;\nlet listVal;\n/**\n * When `in`, pushes a `null` value into the list resulting in `in (null)`. This\n * is how TypeORM and Sequelize handle `in ()`. `in (null)` is logically the equivalent\n * of `= null`, which returns `null`, which is a falsy expression in most SQL databases.\n * We recommend NOT using this strategy if you plan to use `in` in `select`, `returning`,\n * or `output` clauses, as the return type differs from the `SqlBool` default type.\n *\n * When `not in`, casts the left operand as `char` and pushes a literal value into\n * the list resulting in `cast({{lhs}} as char) not in ({{VALUE}})`. Casting\n * is required to avoid database errors with non-string columns.\n *\n * See {@link replaceWithNoncontingentExpression} for an alternative strategy.\n */\nexport function pushValueIntoList(uniqueNotInLiteral) {\n    return function pushValueIntoList(node) {\n        if (node.operator.operator === 'in') {\n            return freeze({\n                ...node,\n                rightOperand: (listNull ||= ValueListNode.create([\n                    ValueNode.createImmediate(null),\n                ])),\n            });\n        }\n        return freeze({\n            ...node,\n            leftOperand: CastNode.create(node.leftOperand, (char ||= DataTypeNode.create('char'))),\n            rightOperand: (listVal ||= ValueListNode.create([\n                ValueNode.createImmediate(uniqueNotInLiteral),\n            ])),\n        });\n    };\n}\n", "/// <reference types=\"./constraint-node.d.ts\" />\nexport {};\n", "/// <reference types=\"./operation-node.d.ts\" />\nexport {};\n", "/// <reference types=\"./simple-reference-expression-node.d.ts\" />\nexport {};\n", "/// <reference types=\"./column-type.d.ts\" />\nexport {};\n", "/// <reference types=\"./explainable.d.ts\" />\nexport {};\n", "/// <reference types=\"./streamable.d.ts\" />\nexport {};\n", "/// <reference types=\"./infer-result.d.ts\" />\nexport {};\n", "/// <reference types=\"./index.d.ts\" />\nexport * from './kysely.js';\nexport * from './query-creator.js';\nexport * from './expression/expression.js';\nexport { expressionBuilder, } from './expression/expression-builder.js';\nexport * from './expression/expression-wrapper.js';\nexport * from './query-builder/where-interface.js';\nexport * from './query-builder/returning-interface.js';\nexport * from './query-builder/output-interface.js';\nexport * from './query-builder/having-interface.js';\nexport * from './query-builder/order-by-interface.js';\nexport * from './query-builder/select-query-builder.js';\nexport * from './query-builder/insert-query-builder.js';\nexport * from './query-builder/update-query-builder.js';\nexport * from './query-builder/delete-query-builder.js';\nexport * from './query-builder/no-result-error.js';\nexport * from './query-builder/join-builder.js';\nexport * from './query-builder/function-module.js';\nexport * from './query-builder/insert-result.js';\nexport * from './query-builder/delete-result.js';\nexport * from './query-builder/update-result.js';\nexport * from './query-builder/on-conflict-builder.js';\nexport * from './query-builder/aggregate-function-builder.js';\nexport * from './query-builder/case-builder.js';\nexport * from './query-builder/json-path-builder.js';\nexport * from './query-builder/merge-query-builder.js';\nexport * from './query-builder/merge-result.js';\nexport * from './query-builder/order-by-item-builder.js';\nexport * from './raw-builder/raw-builder.js';\nexport * from './raw-builder/sql.js';\nexport * from './query-executor/query-executor.js';\nexport * from './query-executor/default-query-executor.js';\nexport * from './query-executor/noop-query-executor.js';\nexport * from './query-executor/query-executor-provider.js';\nexport * from './query-compiler/default-query-compiler.js';\nexport * from './query-compiler/compiled-query.js';\nexport * from './schema/schema.js';\nexport * from './schema/create-table-builder.js';\nexport * from './schema/create-type-builder.js';\nexport * from './schema/drop-table-builder.js';\nexport * from './schema/drop-type-builder.js';\nexport * from './schema/create-index-builder.js';\nexport * from './schema/drop-index-builder.js';\nexport * from './schema/create-schema-builder.js';\nexport * from './schema/drop-schema-builder.js';\nexport * from './schema/column-definition-builder.js';\nexport * from './schema/foreign-key-constraint-builder.js';\nexport * from './schema/alter-table-builder.js';\nexport * from './schema/create-view-builder.js';\nexport * from './schema/refresh-materialized-view-builder.js';\nexport * from './schema/drop-view-builder.js';\nexport * from './schema/alter-column-builder.js';\nexport * from './dynamic/dynamic.js';\nexport * from './driver/driver.js';\nexport * from './driver/database-connection.js';\nexport * from './driver/connection-provider.js';\nexport * from './driver/default-connection-provider.js';\nexport * from './driver/single-connection-provider.js';\nexport * from './driver/dummy-driver.js';\nexport * from './dialect/dialect.js';\nexport * from './dialect/dialect-adapter.js';\nexport * from './dialect/dialect-adapter-base.js';\nexport * from './dialect/database-introspector.js';\nexport * from './dialect/sqlite/sqlite-dialect.js';\nexport * from './dialect/sqlite/sqlite-dialect-config.js';\nexport * from './dialect/sqlite/sqlite-driver.js';\nexport * from './dialect/postgres/postgres-query-compiler.js';\nexport * from './dialect/postgres/postgres-introspector.js';\nexport * from './dialect/postgres/postgres-adapter.js';\nexport * from './dialect/mysql/mysql-dialect.js';\nexport * from './dialect/mysql/mysql-dialect-config.js';\nexport * from './dialect/mysql/mysql-driver.js';\nexport * from './dialect/mysql/mysql-query-compiler.js';\nexport * from './dialect/mysql/mysql-introspector.js';\nexport * from './dialect/mysql/mysql-adapter.js';\nexport * from './dialect/postgres/postgres-driver.js';\nexport * from './dialect/postgres/postgres-dialect-config.js';\nexport * from './dialect/postgres/postgres-dialect.js';\nexport * from './dialect/sqlite/sqlite-query-compiler.js';\nexport * from './dialect/sqlite/sqlite-introspector.js';\nexport * from './dialect/sqlite/sqlite-adapter.js';\nexport * from './dialect/mssql/mssql-adapter.js';\nexport * from './dialect/mssql/mssql-dialect-config.js';\nexport * from './dialect/mssql/mssql-dialect.js';\nexport * from './dialect/mssql/mssql-driver.js';\nexport * from './dialect/mssql/mssql-introspector.js';\nexport * from './dialect/mssql/mssql-query-compiler.js';\nexport * from './query-compiler/default-query-compiler.js';\nexport * from './query-compiler/query-compiler.js';\nexport * from './migration/migrator.js';\nexport * from './migration/file-migration-provider.js';\nexport * from './plugin/kysely-plugin.js';\nexport * from './plugin/camel-case/camel-case-plugin.js';\nexport * from './plugin/deduplicate-joins/deduplicate-joins-plugin.js';\nexport * from './plugin/with-schema/with-schema-plugin.js';\nexport * from './plugin/parse-json-results/parse-json-results-plugin.js';\nexport * from './plugin/handle-empty-in-lists/handle-empty-in-lists-plugin.js';\nexport * from './plugin/handle-empty-in-lists/handle-empty-in-lists.js';\nexport * from './operation-node/add-column-node.js';\nexport * from './operation-node/add-constraint-node.js';\nexport * from './operation-node/add-index-node.js';\nexport * from './operation-node/aggregate-function-node.js';\nexport * from './operation-node/alias-node.js';\nexport * from './operation-node/alter-column-node.js';\nexport * from './operation-node/alter-table-node.js';\nexport * from './operation-node/and-node.js';\nexport * from './operation-node/binary-operation-node.js';\nexport * from './operation-node/case-node.js';\nexport * from './operation-node/cast-node.js';\nexport * from './operation-node/check-constraint-node.js';\nexport * from './operation-node/collate-node.js';\nexport * from './operation-node/column-definition-node.js';\nexport * from './operation-node/column-node.js';\nexport * from './operation-node/column-update-node.js';\nexport * from './operation-node/common-table-expression-name-node.js';\nexport * from './operation-node/common-table-expression-node.js';\nexport * from './operation-node/constraint-node.js';\nexport * from './operation-node/create-index-node.js';\nexport * from './operation-node/create-schema-node.js';\nexport * from './operation-node/create-table-node.js';\nexport * from './operation-node/create-type-node.js';\nexport * from './operation-node/create-view-node.js';\nexport * from './operation-node/refresh-materialized-view-node.js';\nexport * from './operation-node/data-type-node.js';\nexport * from './operation-node/default-insert-value-node.js';\nexport * from './operation-node/default-value-node.js';\nexport * from './operation-node/delete-query-node.js';\nexport * from './operation-node/drop-column-node.js';\nexport * from './operation-node/drop-constraint-node.js';\nexport * from './operation-node/drop-index-node.js';\nexport * from './operation-node/drop-schema-node.js';\nexport * from './operation-node/drop-table-node.js';\nexport * from './operation-node/drop-type-node.js';\nexport * from './operation-node/drop-view-node.js';\nexport * from './operation-node/explain-node.js';\nexport * from './operation-node/fetch-node.js';\nexport * from './operation-node/foreign-key-constraint-node.js';\nexport * from './operation-node/from-node.js';\nexport * from './operation-node/function-node.js';\nexport * from './operation-node/generated-node.js';\nexport * from './operation-node/group-by-item-node.js';\nexport * from './operation-node/group-by-node.js';\nexport * from './operation-node/having-node.js';\nexport * from './operation-node/identifier-node.js';\nexport * from './operation-node/insert-query-node.js';\nexport * from './operation-node/join-node.js';\nexport * from './operation-node/json-operator-chain-node.js';\nexport * from './operation-node/json-path-leg-node.js';\nexport * from './operation-node/json-path-node.js';\nexport * from './operation-node/json-reference-node.js';\nexport * from './operation-node/limit-node.js';\nexport * from './operation-node/list-node.js';\nexport * from './operation-node/matched-node.js';\nexport * from './operation-node/merge-query-node.js';\nexport * from './operation-node/modify-column-node.js';\nexport * from './operation-node/offset-node.js';\nexport * from './operation-node/on-conflict-node.js';\nexport * from './operation-node/on-duplicate-key-node.js';\nexport * from './operation-node/on-node.js';\nexport * from './operation-node/operation-node-source.js';\nexport * from './operation-node/operation-node-transformer.js';\nexport * from './operation-node/operation-node-visitor.js';\nexport * from './operation-node/operation-node.js';\nexport * from './operation-node/operator-node.js';\nexport * from './operation-node/or-action-node.js';\nexport * from './operation-node/or-node.js';\nexport * from './operation-node/order-by-item-node.js';\nexport * from './operation-node/order-by-node.js';\nexport * from './operation-node/output-node.js';\nexport * from './operation-node/over-node.js';\nexport * from './operation-node/parens-node.js';\nexport * from './operation-node/partition-by-item-node.js';\nexport * from './operation-node/partition-by-node.js';\nexport * from './operation-node/primary-key-constraint-node.js';\nexport * from './operation-node/primitive-value-list-node.js';\nexport * from './operation-node/query-node.js';\nexport * from './operation-node/raw-node.js';\nexport * from './operation-node/reference-node.js';\nexport * from './operation-node/references-node.js';\nexport * from './operation-node/rename-column-node.js';\nexport * from './operation-node/rename-constraint-node.js';\nexport * from './operation-node/returning-node.js';\nexport * from './operation-node/schemable-identifier-node.js';\nexport * from './operation-node/select-all-node.js';\nexport * from './operation-node/select-modifier-node.js';\nexport * from './operation-node/select-query-node.js';\nexport * from './operation-node/selection-node.js';\nexport * from './operation-node/set-operation-node.js';\nexport * from './operation-node/simple-reference-expression-node.js';\nexport * from './operation-node/table-node.js';\nexport * from './operation-node/top-node.js';\nexport * from './operation-node/tuple-node.js';\nexport * from './operation-node/unary-operation-node.js';\nexport * from './operation-node/unique-constraint-node.js';\nexport * from './operation-node/update-query-node.js';\nexport * from './operation-node/using-node.js';\nexport * from './operation-node/value-list-node.js';\nexport * from './operation-node/value-node.js';\nexport * from './operation-node/values-node.js';\nexport * from './operation-node/when-node.js';\nexport * from './operation-node/where-node.js';\nexport * from './operation-node/with-node.js';\nexport * from './util/column-type.js';\nexport * from './util/compilable.js';\nexport * from './util/explainable.js';\nexport * from './util/streamable.js';\nexport * from './util/log.js';\nexport * from './util/infer-result.js';\nexport { logOnce } from './util/log-once.js';\nexport { createQueryId } from './util/query-id.js';\n", "import * as libsql from \"@libsql/client\";\nimport * as kysely from \"kysely\";\nexport * as libsql from \"@libsql/client\";\nexport class LibsqlDialect {\n    #config;\n    constructor(config) {\n        this.#config = config;\n    }\n    createAdapter() {\n        return new kysely.SqliteAdapter();\n    }\n    createDriver() {\n        let client;\n        let closeClient;\n        if (\"client\" in this.#config) {\n            client = this.#config.client;\n            closeClient = false;\n        }\n        else if (this.#config.url !== undefined) {\n            client = libsql.createClient(this.#config);\n            closeClient = true;\n        }\n        else {\n            throw new Error(\"Please specify either `client` or `url` in the LibsqlDialect config\");\n        }\n        return new LibsqlDriver(client, closeClient);\n    }\n    createIntrospector(db) {\n        return new kysely.SqliteIntrospector(db);\n    }\n    createQueryCompiler() {\n        return new kysely.SqliteQueryCompiler();\n    }\n}\nexport class LibsqlDriver {\n    client;\n    #closeClient;\n    constructor(client, closeClient) {\n        this.client = client;\n        this.#closeClient = closeClient;\n    }\n    async init() { }\n    async acquireConnection() {\n        return new LibsqlConnection(this.client);\n    }\n    async beginTransaction(connection, _settings) {\n        await connection.beginTransaction();\n    }\n    async commitTransaction(connection) {\n        await connection.commitTransaction();\n    }\n    async rollbackTransaction(connection) {\n        await connection.rollbackTransaction();\n    }\n    async releaseConnection(_conn) { }\n    async destroy() {\n        if (this.#closeClient) {\n            this.client.close();\n        }\n    }\n}\nexport class LibsqlConnection {\n    client;\n    #transaction;\n    constructor(client) {\n        this.client = client;\n    }\n    async executeQuery(compiledQuery) {\n        const target = this.#transaction ?? this.client;\n        const result = await target.execute({\n            sql: compiledQuery.sql,\n            args: compiledQuery.parameters,\n        });\n        return {\n            insertId: result.lastInsertRowid,\n            numAffectedRows: BigInt(result.rowsAffected),\n            rows: result.rows,\n        };\n    }\n    async beginTransaction() {\n        if (this.#transaction) {\n            throw new Error(\"Transaction already in progress\");\n        }\n        this.#transaction = await this.client.transaction();\n    }\n    async commitTransaction() {\n        if (!this.#transaction) {\n            throw new Error(\"No transaction to commit\");\n        }\n        await this.#transaction.commit();\n        this.#transaction = undefined;\n    }\n    async rollbackTransaction() {\n        if (!this.#transaction) {\n            throw new Error(\"No transaction to rollback\");\n        }\n        await this.#transaction.rollback();\n        this.#transaction = undefined;\n    }\n    async *streamQuery(_compiledQuery, _chunkSize) {\n        throw new Error(\"Libsql Driver does not support streaming yet\");\n    }\n}\n", "const webCrypto = globalThis.crypto;\nconst subtle = webCrypto.subtle;\nconst randomUUID = () => {\n  return webCrypto.randomUUID();\n};\nconst getRandomValues = (array) => {\n  return webCrypto.getRandomValues(array);\n};\nconst _crypto = {\n  randomUUID,\n  getRandomValues,\n  subtle\n};\n\nexport { _crypto as default, getRandomValues, randomUUID, subtle };\n", "const EmptyObject = /* @__PURE__ */ (() => {\n  const C = function() {\n  };\n  C.prototype = /* @__PURE__ */ Object.create(null);\n  return C;\n})();\n\nfunction createRouter() {\n  const ctx = {\n    root: { key: \"\" },\n    static: new EmptyObject()\n  };\n  return ctx;\n}\n\nfunction splitPath(path) {\n  return path.split(\"/\").filter(Boolean);\n}\nfunction getMatchParams(segments, paramsMap) {\n  const params = new EmptyObject();\n  for (const [index, name] of paramsMap) {\n    const segment = index < 0 ? segments.slice(-1 * index).join(\"/\") : segments[index];\n    if (typeof name === \"string\") {\n      params[name] = segment;\n    } else {\n      const match = segment.match(name);\n      if (match) {\n        for (const key in match.groups) {\n          params[key] = match.groups[key];\n        }\n      }\n    }\n  }\n  return params;\n}\n\nfunction addRoute(ctx, method = \"\", path, data) {\n  const segments = splitPath(path);\n  let node = ctx.root;\n  let _unnamedParamIndex = 0;\n  const paramsMap = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (segment.startsWith(\"**\")) {\n      if (!node.wildcard) {\n        node.wildcard = { key: \"**\" };\n      }\n      node = node.wildcard;\n      paramsMap.push([\n        -i,\n        segment.split(\":\")[1] || \"_\",\n        segment.length === 2\n      ]);\n      break;\n    }\n    if (segment === \"*\" || segment.includes(\":\")) {\n      if (!node.param) {\n        node.param = { key: \"*\" };\n      }\n      node = node.param;\n      const isOptional = segment === \"*\";\n      paramsMap.push([\n        i,\n        isOptional ? `_${_unnamedParamIndex++}` : _getParamMatcher(segment),\n        isOptional\n      ]);\n      continue;\n    }\n    const child = node.static?.[segment];\n    if (child) {\n      node = child;\n    } else {\n      const staticNode = { key: segment };\n      if (!node.static) {\n        node.static = new EmptyObject();\n      }\n      node.static[segment] = staticNode;\n      node = staticNode;\n    }\n  }\n  const hasParams = paramsMap.length > 0;\n  if (!node.methods) {\n    node.methods = new EmptyObject();\n  }\n  if (!node.methods[method]) {\n    node.methods[method] = [];\n  }\n  node.methods[method].push({\n    data: data || null,\n    paramsMap: hasParams ? paramsMap : void 0\n  });\n  if (!hasParams) {\n    ctx.static[path] = node;\n  }\n}\nfunction _getParamMatcher(segment) {\n  if (!segment.includes(\":\", 1)) {\n    return segment.slice(1);\n  }\n  const regex = segment.replace(/:(\\w+)/g, (_, id) => `(?<${id}>\\\\w+)`);\n  return new RegExp(`^${regex}$`);\n}\n\nfunction findRoute(ctx, method = \"\", path, opts) {\n  if (path[path.length - 1] === \"/\") {\n    path = path.slice(0, -1);\n  }\n  const staticNode = ctx.static[path];\n  if (staticNode && staticNode.methods) {\n    const staticMatch = staticNode.methods[method] || staticNode.methods[\"\"];\n    if (staticMatch !== void 0) {\n      return staticMatch[0];\n    }\n  }\n  const segments = splitPath(path);\n  const match = _lookupTree(ctx, ctx.root, method, segments, 0)?.[0];\n  if (match === void 0) {\n    return;\n  }\n  if (opts?.params === false) {\n    return match;\n  }\n  return {\n    data: match.data,\n    params: match.paramsMap ? getMatchParams(segments, match.paramsMap) : void 0\n  };\n}\nfunction _lookupTree(ctx, node, method, segments, index) {\n  if (index === segments.length) {\n    if (node.methods) {\n      const match = node.methods[method] || node.methods[\"\"];\n      if (match) {\n        return match;\n      }\n    }\n    if (node.param && node.param.methods) {\n      const match = node.param.methods[method] || node.param.methods[\"\"];\n      if (match) {\n        const pMap = match[0].paramsMap;\n        if (pMap?.[pMap?.length - 1]?.[2]) {\n          return match;\n        }\n      }\n    }\n    if (node.wildcard && node.wildcard.methods) {\n      const match = node.wildcard.methods[method] || node.wildcard.methods[\"\"];\n      if (match) {\n        const pMap = match[0].paramsMap;\n        if (pMap?.[pMap?.length - 1]?.[2]) {\n          return match;\n        }\n      }\n    }\n    return void 0;\n  }\n  const segment = segments[index];\n  if (node.static) {\n    const staticChild = node.static[segment];\n    if (staticChild) {\n      const match = _lookupTree(ctx, staticChild, method, segments, index + 1);\n      if (match) {\n        return match;\n      }\n    }\n  }\n  if (node.param) {\n    const match = _lookupTree(ctx, node.param, method, segments, index + 1);\n    if (match) {\n      return match;\n    }\n  }\n  if (node.wildcard && node.wildcard.methods) {\n    return node.wildcard.methods[method] || node.wildcard.methods[\"\"];\n  }\n  return;\n}\n\nfunction removeRoute(ctx, method, path) {\n  const segments = splitPath(path);\n  return _remove(ctx.root, method || \"\", segments, 0);\n}\nfunction _remove(node, method, segments, index) {\n  if (index === segments.length) {\n    if (node.methods && method in node.methods) {\n      delete node.methods[method];\n      if (Object.keys(node.methods).length === 0) {\n        node.methods = void 0;\n      }\n    }\n    return;\n  }\n  const segment = segments[index];\n  if (segment === \"*\") {\n    if (node.param) {\n      _remove(node.param, method, segments, index + 1);\n      if (_isEmptyNode(node.param)) {\n        node.param = void 0;\n      }\n    }\n    return;\n  }\n  if (segment === \"**\") {\n    if (node.wildcard) {\n      _remove(node.wildcard, method, segments, index + 1);\n      if (_isEmptyNode(node.wildcard)) {\n        node.wildcard = void 0;\n      }\n    }\n    return;\n  }\n  const childNode = node.static?.[segment];\n  if (childNode) {\n    _remove(childNode, method, segments, index + 1);\n    if (_isEmptyNode(childNode)) {\n      delete node.static[segment];\n      if (Object.keys(node.static).length === 0) {\n        node.static = void 0;\n      }\n    }\n  }\n}\nfunction _isEmptyNode(node) {\n  return node.methods === void 0 && node.static === void 0 && node.param === void 0 && node.wildcard === void 0;\n}\n\nfunction findAllRoutes(ctx, method = \"\", path, opts) {\n  if (path[path.length - 1] === \"/\") {\n    path = path.slice(0, -1);\n  }\n  const segments = splitPath(path);\n  const matches = _findAll(ctx, ctx.root, method, segments, 0);\n  if (opts?.params === false) {\n    return matches;\n  }\n  return matches.map((m) => {\n    return {\n      data: m.data,\n      params: m.paramsMap ? getMatchParams(segments, m.paramsMap) : void 0\n    };\n  });\n}\nfunction _findAll(ctx, node, method, segments, index, matches = []) {\n  const segment = segments[index];\n  if (node.wildcard && node.wildcard.methods) {\n    const match = node.wildcard.methods[method] || node.wildcard.methods[\"\"];\n    if (match) {\n      matches.push(...match);\n    }\n  }\n  if (node.param) {\n    _findAll(ctx, node.param, method, segments, index + 1, matches);\n    if (index === segments.length && node.param.methods) {\n      const match = node.param.methods[method] || node.param.methods[\"\"];\n      if (match) {\n        matches.push(...match);\n      }\n    }\n  }\n  const staticChild = node.static?.[segment];\n  if (staticChild) {\n    _findAll(ctx, staticChild, method, segments, index + 1, matches);\n  }\n  if (index === segments.length && node.methods) {\n    const match = node.methods[method] || node.methods[\"\"];\n    if (match) {\n      matches.push(...match);\n    }\n  }\n  return matches;\n}\n\nexport { addRoute, createRouter, findAllRoutes, findRoute, removeRoute };\n", "export const _statusCode = {\n\tOK: 200,\n\tCREATED: 201,\n\tACCEPTED: 202,\n\tNO_CONTENT: 204,\n\tMULTIPLE_CHOICES: 300,\n\tMOVED_PERMANENTLY: 301,\n\tFOUND: 302,\n\tSEE_OTHER: 303,\n\tNOT_MODIFIED: 304,\n\tTEMPORARY_REDIRECT: 307,\n\tBAD_REQUEST: 400,\n\tUNAUTHORIZED: 401,\n\tPAYMENT_REQUIRED: 402,\n\tFORBIDDEN: 403,\n\tNOT_FOUND: 404,\n\tMETHOD_NOT_ALLOWED: 405,\n\tNOT_ACCEPTABLE: 406,\n\tPROXY_AUTHENTICATION_REQUIRED: 407,\n\tREQUEST_TIMEOUT: 408,\n\tCONFLICT: 409,\n\tGONE: 410,\n\tLENGTH_REQUIRED: 411,\n\tPRECONDITION_FAILED: 412,\n\tPAYLOAD_TOO_LARGE: 413,\n\tURI_TOO_LONG: 414,\n\tUNSUPPORTED_MEDIA_TYPE: 415,\n\tRANGE_NOT_SATISFIABLE: 416,\n\tEXPECTATION_FAILED: 417,\n\t\"I'M_A_TEAPOT\": 418,\n\tMISDIRECTED_REQUEST: 421,\n\tUNPROCESSABLE_ENTITY: 422,\n\tLOCKED: 423,\n\tFAILED_DEPENDENCY: 424,\n\tTOO_EARLY: 425,\n\tUPGRADE_REQUIRED: 426,\n\tPRECONDITION_REQUIRED: 428,\n\tTOO_MANY_REQUESTS: 429,\n\tREQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n\tUNAVAILABLE_FOR_LEGAL_REASONS: 451,\n\tINTERNAL_SERVER_ERROR: 500,\n\tNOT_IMPLEMENTED: 501,\n\tBAD_GATEWAY: 502,\n\tSERVICE_UNAVAILABLE: 503,\n\tGATEWAY_TIMEOUT: 504,\n\tHTTP_VERSION_NOT_SUPPORTED: 505,\n\tVARIANT_ALSO_NEGOTIATES: 506,\n\tINSUFFICIENT_STORAGE: 507,\n\tLOOP_DETECTED: 508,\n\tNOT_EXTENDED: 510,\n\tNETWORK_AUTHENTICATION_REQUIRED: 511,\n};\n\nexport type Status =\n\t| 100\n\t| 101\n\t| 102\n\t| 103\n\t| 200\n\t| 201\n\t| 202\n\t| 203\n\t| 204\n\t| 205\n\t| 206\n\t| 207\n\t| 208\n\t| 226\n\t| 300\n\t| 301\n\t| 302\n\t| 303\n\t| 304\n\t| 305\n\t| 306\n\t| 307\n\t| 308\n\t| 400\n\t| 401\n\t| 402\n\t| 403\n\t| 404\n\t| 405\n\t| 406\n\t| 407\n\t| 408\n\t| 409\n\t| 410\n\t| 411\n\t| 412\n\t| 413\n\t| 414\n\t| 415\n\t| 416\n\t| 417\n\t| 418\n\t| 421\n\t| 422\n\t| 423\n\t| 424\n\t| 425\n\t| 426\n\t| 428\n\t| 429\n\t| 431\n\t| 451\n\t| 500\n\t| 501\n\t| 502\n\t| 503\n\t| 504\n\t| 505\n\t| 506\n\t| 507\n\t| 508\n\t| 510\n\t| 511;\n\nexport class APIError extends Error {\n\tconstructor(\n\t\tpublic status: keyof typeof _statusCode | Status = \"INTERNAL_SERVER_ERROR\",\n\t\tpublic body:\n\t\t\t| ({\n\t\t\t\t\tmessage?: string;\n\t\t\t\t\tcode?: string;\n\t\t\t  } & Record<string, any>)\n\t\t\t| undefined = undefined,\n\t\tpublic headers: HeadersInit = {},\n\t\tpublic statusCode = typeof status === \"number\" ? status : _statusCode[status],\n\t) {\n\t\tsuper(body?.message);\n\t\tthis.name = \"APIError\";\n\t\tthis.status = status;\n\t\tthis.headers = headers;\n\t\tthis.statusCode = statusCode;\n\t\tthis.body = body\n\t\t\t? {\n\t\t\t\t\tcode: body?.message\n\t\t\t\t\t\t?.toUpperCase()\n\t\t\t\t\t\t.replace(/ /g, \"_\")\n\t\t\t\t\t\t.replace(/[^A-Z0-9_]/g, \"\"),\n\t\t\t\t\t...body,\n\t\t\t\t}\n\t\t\t: undefined;\n\t\tthis.stack = \"\";\n\t}\n}\n", "import { APIError } from \"./error\";\n\nexport async function getBody(request: Request) {\n\tconst contentType = request.headers.get(\"content-type\") || \"\";\n\n\tif (!request.body) {\n\t\treturn undefined;\n\t}\n\n\tif (contentType.includes(\"application/json\")) {\n\t\treturn await request.json();\n\t}\n\n\tif (contentType.includes(\"application/x-www-form-urlencoded\")) {\n\t\tconst formData = await request.formData();\n\t\tconst result: Record<string, string> = {};\n\t\tformData.forEach((value, key) => {\n\t\t\tresult[key] = value.toString();\n\t\t});\n\t\treturn result;\n\t}\n\n\tif (contentType.includes(\"multipart/form-data\")) {\n\t\tconst formData = await request.formData();\n\t\tconst result: Record<string, any> = {};\n\t\tformData.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t\treturn result;\n\t}\n\n\tif (contentType.includes(\"text/plain\")) {\n\t\treturn await request.text();\n\t}\n\n\tif (contentType.includes(\"application/octet-stream\")) {\n\t\treturn await request.arrayBuffer();\n\t}\n\n\tif (\n\t\tcontentType.includes(\"application/pdf\") ||\n\t\tcontentType.includes(\"image/\") ||\n\t\tcontentType.includes(\"video/\")\n\t) {\n\t\tconst blob = await request.blob();\n\t\treturn blob;\n\t}\n\n\tif (contentType.includes(\"application/stream\") || request.body instanceof ReadableStream) {\n\t\treturn request.body;\n\t}\n\n\treturn await request.text();\n}\n\nexport function isAPIError(error: any) {\n\treturn error instanceof APIError || error?.name === \"APIError\";\n}\n\nexport function tryDecode(str: string) {\n\ttry {\n\t\treturn str.includes(\"%\") ? decodeURIComponent(str) : str;\n\t} catch {\n\t\treturn str;\n\t}\n}\n", "import { APIError } from \"./error\";\nimport { isAPIError } from \"./utils\";\n\nfunction isJSONSerializable(value: any) {\n\tif (value === undefined) {\n\t\treturn false;\n\t}\n\tconst t = typeof value;\n\tif (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n\t\treturn true;\n\t}\n\tif (t !== \"object\") {\n\t\treturn false;\n\t}\n\tif (Array.isArray(value)) {\n\t\treturn true;\n\t}\n\tif (value.buffer) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t(value.constructor && value.constructor.name === \"Object\") ||\n\t\ttypeof value.toJSON === \"function\"\n\t);\n}\n\nexport function toResponse(data?: any, init?: ResponseInit): Response {\n\tif (data instanceof Response) {\n\t\tif (init?.headers instanceof Headers) {\n\t\t\tinit.headers.forEach((value, key) => {\n\t\t\t\tdata.headers.set(key, value);\n\t\t\t});\n\t\t}\n\t\treturn data;\n\t}\n\tif (data?._flag === \"json\") {\n\t\tconst routerResponse = data.routerResponse;\n\t\tif (routerResponse instanceof Response) {\n\t\t\treturn routerResponse;\n\t\t}\n\t\treturn toResponse(data.body, {\n\t\t\theaders: data.headers,\n\t\t\tstatus: data.status,\n\t\t});\n\t}\n\tif (isAPIError(data)) {\n\t\treturn toResponse(data.body, {\n\t\t\tstatus: data.statusCode,\n\t\t\tstatusText: data.status.toString(),\n\t\t\theaders: init?.headers || data.headers,\n\t\t});\n\t}\n\tlet body = data;\n\tlet headers = new Headers(init?.headers);\n\tif (!data) {\n\t\tif (data === null) {\n\t\t\tbody = JSON.stringify(null);\n\t\t}\n\t\theaders.set(\"content-type\", \"application/json\");\n\t} else if (typeof data === \"string\") {\n\t\tbody = data;\n\t\theaders.set(\"Content-Type\", \"text/plain\");\n\t} else if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n\t\tbody = data;\n\t\theaders.set(\"Content-Type\", \"application/octet-stream\");\n\t} else if (data instanceof Blob) {\n\t\tbody = data;\n\t\theaders.set(\"Content-Type\", data.type || \"application/octet-stream\");\n\t} else if (data instanceof FormData) {\n\t\tbody = data;\n\t} else if (data instanceof URLSearchParams) {\n\t\tbody = data;\n\t\theaders.set(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\t} else if (data instanceof ReadableStream) {\n\t\tbody = data;\n\t\theaders.set(\"Content-Type\", \"application/octet-stream\");\n\t} else if (isJSONSerializable(data)) {\n\t\tbody = JSON.stringify(data);\n\t\theaders.set(\"Content-Type\", \"application/json\");\n\t}\n\n\treturn new Response(body, {\n\t\t...init,\n\t\theaders,\n\t});\n}\n", "import type { EndpointOptions } from \"./endpoint\";\nimport type { InputContext } from \"./context\";\nimport type { StandardSchemaV1 } from \"./standard-schema\";\n\ntype ValidationResponse =\n\t| {\n\t\t\tdata: {\n\t\t\t\tbody: any;\n\t\t\t\tquery: any;\n\t\t\t};\n\t\t\terror: null;\n\t  }\n\t| {\n\t\t\tdata: null;\n\t\t\terror: {\n\t\t\t\tmessage: string;\n\t\t\t};\n\t  };\n\n/**\n * Runs validation on body and query\n * @returns error and data object\n */\nexport async function runValidation(\n\toptions: EndpointOptions,\n\tcontext: InputContext<any, any> = {},\n): Promise<ValidationResponse> {\n\tlet request = {\n\t\tbody: context.body,\n\t\tquery: context.query,\n\t} as {\n\t\tbody: any;\n\t\tquery: any;\n\t};\n\tif (options.body) {\n\t\tconst result = await options.body[\"~standard\"].validate(context.body);\n\t\tif (result.issues) {\n\t\t\treturn {\n\t\t\t\tdata: null,\n\t\t\t\terror: fromError(result.issues, \"body\"),\n\t\t\t};\n\t\t}\n\t\trequest.body = result.value;\n\t}\n\n\tif (options.query) {\n\t\tconst result = await options.query[\"~standard\"].validate(context.query);\n\t\tif (result.issues) {\n\t\t\treturn {\n\t\t\t\tdata: null,\n\t\t\t\terror: fromError(result.issues, \"query\"),\n\t\t\t};\n\t\t}\n\t\trequest.query = result.value;\n\t}\n\tif (options.requireHeaders && !context.headers) {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: { message: \"Headers is required\" },\n\t\t};\n\t}\n\tif (options.requireRequest && !context.request) {\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: { message: \"Request is required\" },\n\t\t};\n\t}\n\treturn {\n\t\tdata: request,\n\t\terror: null,\n\t};\n}\n\nexport function fromError(error: readonly StandardSchemaV1.Issue[], validating: string) {\n\tconst errorMessages: string[] = [];\n\n\tfor (const issue of error) {\n\t\tconst message = issue.message;\n\t\terrorMessages.push(message);\n\t}\n\treturn {\n\t\tmessage: `Invalid ${validating} parameters`,\n\t};\n}\n", "import { subtle } from \"uncrypto\";\n\nconst algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\n\nexport const getCryptoKey = async (secret: string | BufferSource) => {\n\tconst secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\n\treturn await subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\n};\n\nexport const verifySignature = async (\n\tbase64Signature: string,\n\tvalue: string,\n\tsecret: CryptoKey,\n): Promise<boolean> => {\n\ttry {\n\t\tconst signatureBinStr = atob(base64Signature);\n\t\tconst signature = new Uint8Array(signatureBinStr.length);\n\t\tfor (let i = 0, len = signatureBinStr.length; i < len; i++) {\n\t\t\tsignature[i] = signatureBinStr.charCodeAt(i);\n\t\t}\n\t\treturn await subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nconst makeSignature = async (value: string, secret: string | BufferSource): Promise<string> => {\n\tconst key = await getCryptoKey(secret);\n\tconst signature = await subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\n\t// the returned base64 encoded signature will always be 44 characters long and end with one or two equal signs\n\treturn btoa(String.fromCharCode(...new Uint8Array(signature)));\n};\n\nexport const signCookieValue = async (value: string, secret: string | BufferSource) => {\n\tconst signature = await makeSignature(value, secret);\n\tvalue = `${value}.${signature}`;\n\tvalue = encodeURIComponent(value);\n\treturn value;\n};\n", "import { signCookieValue } from \"./crypto\";\nimport { tryDecode } from \"./utils\";\n\nexport type CookiePrefixOptions = \"host\" | \"secure\";\n\nexport type CookieOptions = {\n\t/**\n\t * Domain of the cookie\n\t *\n\t * The Domain attribute specifies which server can receive a cookie. If specified, cookies are\n\t * available on the specified server and its subdomains. If the it is not\n\t * specified, the cookies are available on the server that sets it but not on\n\t * its subdomains.\n\t *\n\t * @example\n\t * `domain: \"example.com\"`\n\t */\n\tdomain?: string;\n\t/**\n\t * A lifetime of a cookie. Permanent cookies are deleted after the date specified in the\n\t * Expires attribute:\n\t *\n\t * Expires has been available for longer than Max-Age, however Max-Age is less error-prone, and\n\t * takes precedence when both are set. The rationale behind this is that when you set an\n\t * Expires date and time, they're relative to the client the cookie is being set on. If the\n\t * server is set to a different time, this could cause errors\n\t */\n\texpires?: Date;\n\t/**\n\t * Forbids JavaScript from accessing the cookie, for example, through the Document.cookie\n\t * property. Note that a cookie that has been created with HttpOnly will still be sent with\n\t * JavaScript-initiated requests, for example, when calling XMLHttpRequest.send() or fetch().\n\t * This mitigates attacks against cross-site scripting\n\t */\n\thttpOnly?: boolean;\n\t/**\n\t * Indicates the number of seconds until the cookie expires. A zero or negative number will\n\t * expire the cookie immediately. If both Expires and Max-Age are set, Max-Age has precedence.\n\t *\n\t * @example 604800 - 7 days\n\t */\n\tmaxAge?: number;\n\t/**\n\t * Indicates the path that must exist in the requested URL for the browser to send the Cookie\n\t * header.\n\t *\n\t * @example\n\t * \"/docs\"\n\t * // -> the request paths /docs, /docs/, /docs/Web/, and /docs/Web/HTTP will all match. the request paths /, /fr/docs will not match.\n\t */\n\tpath?: string;\n\t/**\n\t * Indicates that the cookie is sent to the server only when a request is made with the https:\n\t * scheme (except on localhost), and therefore, is more resistant to man-in-the-middle attacks.\n\t */\n\tsecure?: boolean;\n\t/**\n\t * Controls whether or not a cookie is sent with cross-site requests, providing some protection\n\t * against cross-site request forgery attacks (CSRF).\n\t *\n\t * Strict -  Means that the browser sends the cookie only for same-site requests, that is,\n\t * requests originating from the same site that set the cookie. If a request originates from a\n\t * different domain or scheme (even with the same domain), no cookies with the SameSite=Strict\n\t * attribute are sent.\n\t *\n\t * Lax - Means that the cookie is not sent on cross-site requests, such as on requests to load\n\t * images or frames, but is sent when a user is navigating to the origin site from an external\n\t * site (for example, when following a link). This is the default behavior if the SameSite\n\t * attribute is not specified.\n\t *\n\t * None - Means that the browser sends the cookie with both cross-site and same-site requests.\n\t * The Secure attribute must also be set when setting this value.\n\t */\n\tsameSite?: \"Strict\" | \"Lax\" | \"None\" | \"strict\" | \"lax\" | \"none\";\n\t/**\n\t * Indicates that the cookie should be stored using partitioned storage. Note that if this is\n\t * set, the Secure directive must also be set.\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/Privacy/Privacy_sandbox/Partitioned_cookies\n\t */\n\tpartitioned?: boolean;\n\t/**\n\t * Cooke Prefix\n\t *\n\t * - secure: `__Secure-` -> `__Secure-cookie-name`\n\t * - host: `__Host-` -> `__Host-cookie-name`\n\t *\n\t * `secure` must be set to true to use prefixes\n\t */\n\tprefix?: CookiePrefixOptions;\n};\n\nexport const getCookieKey = (key: string, prefix?: CookiePrefixOptions) => {\n\tlet finalKey = key;\n\tif (prefix) {\n\t\tif (prefix === \"secure\") {\n\t\t\tfinalKey = \"__Secure-\" + key;\n\t\t} else if (prefix === \"host\") {\n\t\t\tfinalKey = \"__Host-\" + key;\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\treturn finalKey;\n};\n\n/**\n * Parse an HTTP Cookie header string and returning an object of all cookie\n * name-value pairs.\n *\n * Inspired by https://github.com/unjs/cookie-es/blob/main/src/cookie/parse.ts\n *\n * @param str the string representing a `Cookie` header value\n */\nexport function parseCookies(str: string) {\n\tif (typeof str !== \"string\") {\n\t\tthrow new TypeError(\"argument str must be a string\");\n\t}\n\n\tconst cookies: Map<string, string> = new Map();\n\n\tlet index = 0;\n\twhile (index < str.length) {\n\t\tconst eqIdx = str.indexOf(\"=\", index);\n\n\t\tif (eqIdx === -1) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlet endIdx = str.indexOf(\";\", index);\n\n\t\tif (endIdx === -1) {\n\t\t\tendIdx = str.length;\n\t\t} else if (endIdx < eqIdx) {\n\t\t\tindex = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst key = str.slice(index, eqIdx).trim();\n\t\tif (!cookies.has(key)) {\n\t\t\tlet val = str.slice(eqIdx + 1, endIdx).trim();\n\t\t\tif (val.codePointAt(0) === 0x22) {\n\t\t\t\tval = val.slice(1, -1);\n\t\t\t}\n\t\t\tcookies.set(key, tryDecode(val));\n\t\t}\n\n\t\tindex = endIdx + 1;\n\t}\n\n\treturn cookies;\n}\n\nconst _serialize = (key: string, value: string, opt: CookieOptions = {}) => {\n\tlet cookie: string;\n\n\tif (opt?.prefix === \"secure\") {\n\t\tcookie = `${`__Secure-${key}`}=${value}`;\n\t} else if (opt?.prefix === \"host\") {\n\t\tcookie = `${`__Host-${key}`}=${value}`;\n\t} else {\n\t\tcookie = `${key}=${value}`;\n\t}\n\n\tif (key.startsWith(\"__Secure-\") && !opt.secure) {\n\t\topt.secure = true;\n\t}\n\n\tif (key.startsWith(\"__Host-\")) {\n\t\tif (!opt.secure) {\n\t\t\topt.secure = true;\n\t\t}\n\n\t\tif (opt.path !== \"/\") {\n\t\t\topt.path = \"/\";\n\t\t}\n\n\t\tif (opt.domain) {\n\t\t\topt.domain = undefined;\n\t\t}\n\t}\n\n\tif (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\n\t\tif (opt.maxAge > 34560000) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\",\n\t\t\t);\n\t\t}\n\t\tcookie += `; Max-Age=${Math.floor(opt.maxAge)}`;\n\t}\n\n\tif (opt.domain && opt.prefix !== \"host\") {\n\t\tcookie += `; Domain=${opt.domain}`;\n\t}\n\n\tif (opt.path) {\n\t\tcookie += `; Path=${opt.path}`;\n\t}\n\n\tif (opt.expires) {\n\t\tif (opt.expires.getTime() - Date.now() > 34560000_000) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\",\n\t\t\t);\n\t\t}\n\t\tcookie += `; Expires=${opt.expires.toUTCString()}`;\n\t}\n\n\tif (opt.httpOnly) {\n\t\tcookie += \"; HttpOnly\";\n\t}\n\n\tif (opt.secure) {\n\t\tcookie += \"; Secure\";\n\t}\n\n\tif (opt.sameSite) {\n\t\tcookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\n\t}\n\n\tif (opt.partitioned) {\n\t\tif (!opt.secure) {\n\t\t\topt.secure = true;\n\t\t}\n\t\tcookie += \"; Partitioned\";\n\t}\n\n\treturn cookie;\n};\n\nexport const serializeCookie = (key: string, value: string, opt?: CookieOptions) => {\n\tvalue = encodeURIComponent(value);\n\treturn _serialize(key, value, opt);\n};\n\nexport const serializeSignedCookie = async (\n\tkey: string,\n\tvalue: string,\n\tsecret: string,\n\topt?: CookieOptions,\n) => {\n\tvalue = await signCookieValue(value, secret);\n\treturn _serialize(key, value, opt);\n};\n", "import type { EndpointOptions } from \"./endpoint\";\nimport { _statusCode, APIError, type Status } from \"./error\";\nimport type {\n\tInferParamPath,\n\tInferParamWildCard,\n\tIsEmptyObject,\n\tPrettify,\n\tUnionToIntersection,\n} from \"./helper\";\nimport type { Middleware, MiddlewareOptions } from \"./middleware\";\nimport { runValidation } from \"./validator\";\nimport {\n\tgetCookieKey,\n\tparseCookies,\n\tserializeCookie,\n\tserializeSignedCookie,\n\ttype CookieOptions,\n\ttype CookiePrefixOptions,\n} from \"./cookies\";\nimport { getCryptoKey, verifySignature } from \"./crypto\";\nimport type { StandardSchemaV1 } from \"./standard-schema\";\n\nexport type HTTPMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\";\nexport type Method = HTTPMethod | \"*\";\n\nexport type InferBodyInput<\n\tOptions extends EndpointOptions | MiddlewareOptions,\n\tBody = Options[\"metadata\"] extends {\n\t\t$Infer: {\n\t\t\tbody: infer B;\n\t\t};\n\t}\n\t\t? B\n\t\t: Options[\"body\"] extends StandardSchemaV1\n\t\t\t? StandardSchemaV1.InferInput<Options[\"body\"]>\n\t\t\t: undefined,\n> = undefined extends Body\n\t? {\n\t\t\tbody?: Body;\n\t\t}\n\t: {\n\t\t\tbody: Body;\n\t\t};\n\nexport type InferBody<Options extends EndpointOptions | MiddlewareOptions> =\n\tOptions[\"metadata\"] extends {\n\t\t$Infer: {\n\t\t\tbody: infer Body;\n\t\t};\n\t}\n\t\t? Body\n\t\t: Options[\"body\"] extends StandardSchemaV1\n\t\t\t? StandardSchemaV1.InferOutput<Options[\"body\"]>\n\t\t\t: any;\n\nexport type InferQueryInput<\n\tOptions extends EndpointOptions | MiddlewareOptions,\n\tQuery = Options[\"metadata\"] extends {\n\t\t$Infer: {\n\t\t\tquery: infer Query;\n\t\t};\n\t}\n\t\t? Query\n\t\t: Options[\"query\"] extends StandardSchemaV1\n\t\t\t? StandardSchemaV1.InferInput<Options[\"query\"]>\n\t\t\t: Record<string, any> | undefined,\n> = undefined extends Query\n\t? {\n\t\t\tquery?: Query;\n\t\t}\n\t: {\n\t\t\tquery: Query;\n\t\t};\n\nexport type InferQuery<Options extends EndpointOptions | MiddlewareOptions> =\n\tOptions[\"metadata\"] extends {\n\t\t$Infer: {\n\t\t\tquery: infer Query;\n\t\t};\n\t}\n\t\t? Query\n\t\t: Options[\"query\"] extends StandardSchemaV1\n\t\t\t? StandardSchemaV1.InferOutput<Options[\"query\"]>\n\t\t\t: Record<string, any> | undefined;\n\nexport type InferMethod<Options extends EndpointOptions> = Options[\"method\"] extends Array<Method>\n\t? Options[\"method\"][number]\n\t: Options[\"method\"] extends \"*\"\n\t\t? HTTPMethod\n\t\t: Options[\"method\"];\n\nexport type InferInputMethod<\n\tOptions extends EndpointOptions,\n\tMethod = Options[\"method\"] extends Array<any>\n\t\t? Options[\"method\"][number]\n\t\t: Options[\"method\"] extends \"*\"\n\t\t\t? HTTPMethod\n\t\t\t: Options[\"method\"] | undefined,\n> = undefined extends Method\n\t? {\n\t\t\tmethod?: Method;\n\t\t}\n\t: {\n\t\t\tmethod: Method;\n\t\t};\n\nexport type InferParam<Path extends string> = IsEmptyObject<\n\tInferParamPath<Path> & InferParamWildCard<Path>\n> extends true\n\t? Record<string, any> | undefined\n\t: Prettify<InferParamPath<Path> & InferParamWildCard<Path>>;\n\nexport type InferParamInput<Path extends string> = IsEmptyObject<\n\tInferParamPath<Path> & InferParamWildCard<Path>\n> extends true\n\t? {\n\t\t\tparams?: Record<string, any>;\n\t\t}\n\t: {\n\t\t\tparams: Prettify<InferParamPath<Path> & InferParamWildCard<Path>>;\n\t\t};\n\nexport type InferRequest<Option extends EndpointOptions | MiddlewareOptions> =\n\tOption[\"requireRequest\"] extends true ? Request : Request | undefined;\n\nexport type InferRequestInput<Option extends EndpointOptions | MiddlewareOptions> =\n\tOption[\"requireRequest\"] extends true\n\t\t? {\n\t\t\t\trequest: Request;\n\t\t\t}\n\t\t: {\n\t\t\t\trequest?: Request;\n\t\t\t};\n\nexport type InferHeaders<Option extends EndpointOptions | MiddlewareOptions> =\n\tOption[\"requireHeaders\"] extends true ? Headers : Headers | undefined;\n\nexport type InferHeadersInput<Option extends EndpointOptions | MiddlewareOptions> =\n\tOption[\"requireHeaders\"] extends true\n\t\t? {\n\t\t\t\theaders: HeadersInit;\n\t\t\t}\n\t\t: {\n\t\t\t\theaders?: HeadersInit;\n\t\t\t};\n\nexport type InferUse<Opts extends EndpointOptions[\"use\"]> = Opts extends Middleware[]\n\t? UnionToIntersection<Awaited<ReturnType<Opts[number]>>>\n\t: {};\n\nexport type InferMiddlewareBody<Options extends MiddlewareOptions> =\n\tOptions[\"body\"] extends StandardSchemaV1<infer T> ? T : any;\n\nexport type InferMiddlewareQuery<Options extends MiddlewareOptions> =\n\tOptions[\"query\"] extends StandardSchemaV1<infer T> ? T : Record<string, any> | undefined;\n\ntype StrictKeys<T, U extends T = T> = Exclude<keyof U, keyof T> extends never ? U : never;\nexport type InputContext<\n\tPath extends string,\n\tOptions extends EndpointOptions,\n> = InferBodyInput<Options> &\n\tInferInputMethod<Options> &\n\tInferQueryInput<Options> &\n\tInferParamInput<Path> &\n\tInferRequestInput<Options> &\n\tInferHeadersInput<Options> & {\n\t\tasResponse?: boolean;\n\t\treturnHeaders?: boolean;\n\t\tuse?: Middleware[];\n\t\tpath?: string;\n\t};\n\nexport const createInternalContext = async (\n\tcontext: InputContext<any, any>,\n\t{\n\t\toptions,\n\t\tpath,\n\t}: {\n\t\toptions: EndpointOptions;\n\t\tpath: string;\n\t},\n) => {\n\tconst headers = new Headers();\n\tconst { data, error } = await runValidation(options, context);\n\tif (error) {\n\t\tthrow new APIError(400, {\n\t\t\tmessage: error.message,\n\t\t\tcode: \"VALIDATION_ERROR\",\n\t\t});\n\t}\n\tconst requestHeaders: Headers | null =\n\t\t\"headers\" in context\n\t\t\t? context.headers instanceof Headers\n\t\t\t\t? context.headers\n\t\t\t\t: new Headers(context.headers)\n\t\t\t: \"request\" in context && context.request instanceof Request\n\t\t\t\t? context.request.headers\n\t\t\t\t: null;\n\tconst requestCookies = requestHeaders?.get(\"cookie\");\n\tconst parsedCookies = requestCookies ? parseCookies(requestCookies) : undefined;\n\tconst internalContext = {\n\t\t...context,\n\t\tbody: data.body,\n\t\tquery: data.query,\n\t\tpath: context.path || path,\n\t\tcontext: \"context\" in context && context.context ? context.context : {},\n\t\treturned: undefined as any,\n\t\theaders: context?.headers,\n\t\trequest: context?.request,\n\t\tparams: \"params\" in context ? context.params : undefined,\n\t\tmethod: context.method,\n\t\tsetHeader: (key: string, value: string) => {\n\t\t\theaders.set(key, value);\n\t\t},\n\t\tgetHeader: (key: string) => {\n\t\t\tif (!requestHeaders) return null;\n\t\t\treturn requestHeaders.get(key);\n\t\t},\n\t\tgetCookie: (key: string, prefix?: CookiePrefixOptions) => {\n\t\t\tconst finalKey = getCookieKey(key, prefix);\n\t\t\tif (!finalKey) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn parsedCookies?.get(finalKey) || null;\n\t\t},\n\t\tgetSignedCookie: async (key: string, secret: string, prefix?: CookiePrefixOptions) => {\n\t\t\tconst finalKey = getCookieKey(key, prefix);\n\t\t\tif (!finalKey) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst value = parsedCookies?.get(finalKey);\n\t\t\tif (!value) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst signatureStartPos = value.lastIndexOf(\".\");\n\t\t\tif (signatureStartPos < 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst signedValue = value.substring(0, signatureStartPos);\n\t\t\tconst signature = value.substring(signatureStartPos + 1);\n\t\t\tif (signature.length !== 44 || !signature.endsWith(\"=\")) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst secretKey = await getCryptoKey(secret);\n\t\t\tconst isVerified = await verifySignature(signature, signedValue, secretKey);\n\t\t\treturn isVerified ? signedValue : false;\n\t\t},\n\t\tsetCookie: (key: string, value: string, options?: CookieOptions) => {\n\t\t\tconst cookie = serializeCookie(key, value, options);\n\t\t\theaders.append(\"set-cookie\", cookie);\n\t\t\treturn cookie;\n\t\t},\n\t\tsetSignedCookie: async (\n\t\t\tkey: string,\n\t\t\tvalue: string,\n\t\t\tsecret: string,\n\t\t\toptions?: CookieOptions,\n\t\t) => {\n\t\t\tconst cookie = await serializeSignedCookie(key, value, secret, options);\n\t\t\theaders.append(\"set-cookie\", cookie);\n\t\t\treturn cookie;\n\t\t},\n\t\tredirect: (url: string) => {\n\t\t\theaders.set(\"location\", url);\n\t\t\treturn new APIError(\"FOUND\", undefined, headers);\n\t\t},\n\t\terror: (\n\t\t\tstatus: keyof typeof _statusCode | Status,\n\t\t\tbody?:\n\t\t\t\t| {\n\t\t\t\t\t\tmessage?: string;\n\t\t\t\t\t\tcode?: string;\n\t\t\t\t  }\n\t\t\t\t| undefined,\n\t\t\theaders?: HeadersInit,\n\t\t) => {\n\t\t\treturn new APIError(status, body, headers);\n\t\t},\n\t\tjson: (\n\t\t\tjson: Record<string, any>,\n\t\t\trouterResponse?:\n\t\t\t\t| {\n\t\t\t\t\t\tstatus?: number;\n\t\t\t\t\t\theaders?: Record<string, string>;\n\t\t\t\t\t\tresponse?: Response;\n\t\t\t\t\t\tbody?: Record<string, any>;\n\t\t\t\t  }\n\t\t\t\t| Response,\n\t\t) => {\n\t\t\tif (!context.asResponse) {\n\t\t\t\treturn json;\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbody: routerResponse?.body || json,\n\t\t\t\trouterResponse,\n\t\t\t\t_flag: \"json\",\n\t\t\t};\n\t\t},\n\t\tresponseHeaders: headers,\n\t};\n\t//if context was shimmed through the input we want to apply it\n\tfor (const middleware of options.use || []) {\n\t\tconst response = (await middleware({\n\t\t\t...internalContext,\n\t\t\treturnHeaders: true,\n\t\t\tasResponse: false,\n\t\t})) as {\n\t\t\tresponse?: any;\n\t\t\theaders?: Headers;\n\t\t};\n\t\tif (response.response) {\n\t\t\tObject.assign(internalContext.context, response.response);\n\t\t}\n\t\t/**\n\t\t * Apply headers from the middleware to the endpoint headers\n\t\t */\n\t\tif (response.headers) {\n\t\t\tresponse.headers.forEach((value, key) => {\n\t\t\t\tinternalContext.responseHeaders.set(key, value);\n\t\t\t});\n\t\t}\n\t}\n\treturn internalContext;\n};\n", "import {\n\tcreateEndpoint,\n\ttype Endpoint,\n\ttype EndpointContext,\n\ttype EndpointOptions,\n} from \"./endpoint\";\nimport {\n\tcreateInternalContext,\n\ttype InferBody,\n\ttype InferBodyInput,\n\ttype InferHeaders,\n\ttype InferHeadersInput,\n\ttype InferMiddlewareBody,\n\ttype InferMiddlewareQuery,\n\ttype InferQuery,\n\ttype InferQueryInput,\n\ttype InferRequest,\n\ttype InferRequestInput,\n\ttype InferUse,\n\ttype InputContext,\n} from \"./context\";\nimport type { Prettify } from \"./helper\";\n\nexport interface MiddlewareOptions extends Omit<EndpointOptions, \"method\"> {}\n\nexport type MiddlewareResponse = null | void | undefined | Record<string, any>;\n\nexport type MiddlewareContext<Options extends MiddlewareOptions, Context = {}> = EndpointContext<\n\tstring,\n\tOptions & {\n\t\tmethod: \"*\";\n\t}\n> & {\n\t/**\n\t * Method\n\t *\n\t * The request method\n\t */\n\tmethod: string;\n\t/**\n\t * Path\n\t *\n\t * The path of the endpoint\n\t */\n\tpath: string;\n\t/**\n\t * Body\n\t *\n\t * The body object will be the parsed JSON from the request and validated\n\t * against the body schema if it exists\n\t */\n\tbody: InferMiddlewareBody<Options>;\n\t/**\n\t * Query\n\t *\n\t * The query object will be the parsed query string from the request\n\t * and validated against the query schema if it exists\n\t */\n\tquery: InferMiddlewareQuery<Options>;\n\t/**\n\t * Params\n\t *\n\t * If the path is `/user/:id` and the request is `/user/1` then the\n\t * params will\n\t * be `{ id: \"1\" }` and if the path includes a wildcard like `/user/*`\n\t * then the\n\t * params will be `{ _: \"1\" }` where `_` is the wildcard key. If the\n\t * wildcard\n\t * is named like `/user/**:name` then the params will be `{ name: string }`\n\t */\n\tparams: string;\n\t/**\n\t * Request object\n\t *\n\t * If `requireRequest` is set to true in the endpoint options this will be\n\t * required\n\t */\n\trequest: InferRequest<Options>;\n\t/**\n\t * Headers\n\t *\n\t * If `requireHeaders` is set to true in the endpoint options this will be\n\t * required\n\t */\n\theaders: InferHeaders<Options>;\n\t/**\n\t * Set header\n\t *\n\t * If it's called outside of a request it will just be ignored.\n\t */\n\tsetHeader: (key: string, value: string) => void;\n\t/**\n\t * Get header\n\t *\n\t * If it's called outside of a request it will just return null\n\t *\n\t * @param key  - The key of the header\n\t * @returns\n\t */\n\tgetHeader: (key: string) => string | null;\n\t/**\n\t * JSON\n\t *\n\t * a helper function to create a JSON response with\n\t * the correct headers\n\t * and status code. If `asResponse` is set to true in\n\t * the context then\n\t * it will return a Response object instead of the\n\t * JSON object.\n\t *\n\t * @param json - The JSON object to return\n\t * @param routerResponse - The response object to\n\t * return if `asResponse` is\n\t * true in the context this will take precedence\n\t */\n\tjson: <R extends Record<string, any> | null>(\n\t\tjson: R,\n\t\trouterResponse?:\n\t\t\t| {\n\t\t\t\t\tstatus?: number;\n\t\t\t\t\theaders?: Record<string, string>;\n\t\t\t\t\tresponse?: Response;\n\t\t\t  }\n\t\t\t| Response,\n\t) => Promise<R>;\n\t/**\n\t * Middleware context\n\t */\n\tcontext: Prettify<Context>;\n};\n\nexport function createMiddleware<Options extends MiddlewareOptions, R>(\n\toptions: Options,\n\thandler: (context: MiddlewareContext<Options>) => Promise<R>,\n): <InputCtx extends MiddlewareInputContext<Options>>(inputContext: InputCtx) => Promise<R>;\nexport function createMiddleware<Options extends MiddlewareOptions, R>(\n\thandler: (context: MiddlewareContext<Options>) => Promise<R>,\n): <InputCtx extends MiddlewareInputContext<Options>>(inputContext: InputCtx) => Promise<R>;\nexport function createMiddleware(optionsOrHandler: any, handler?: any) {\n\tconst internalHandler = async (inputCtx: InputContext<any, any>) => {\n\t\tconst context = inputCtx as InputContext<any, any>;\n\t\tconst _handler = typeof optionsOrHandler === \"function\" ? optionsOrHandler : handler;\n\t\tconst options = typeof optionsOrHandler === \"function\" ? {} : optionsOrHandler;\n\t\tconst internalContext = await createInternalContext(context, {\n\t\t\toptions,\n\t\t\tpath: \"/\",\n\t\t});\n\n\t\tif (!_handler) {\n\t\t\tthrow new Error(\"handler must be defined\");\n\t\t}\n\t\tconst response = await _handler(internalContext as any);\n\t\tconst headers = internalContext.responseHeaders;\n\t\treturn context.returnHeaders\n\t\t\t? {\n\t\t\t\t\theaders,\n\t\t\t\t\tresponse,\n\t\t\t\t}\n\t\t\t: response;\n\t};\n\tinternalHandler.options = typeof optionsOrHandler === \"function\" ? {} : optionsOrHandler;\n\treturn internalHandler;\n}\n\nexport type MiddlewareInputContext<Options extends MiddlewareOptions> = InferBodyInput<Options> &\n\tInferQueryInput<Options> &\n\tInferRequestInput<Options> &\n\tInferHeadersInput<Options> & {\n\t\tasResponse?: boolean;\n\t\treturnHeaders?: boolean;\n\t\tuse?: Middleware[];\n\t};\n\nexport type Middleware<\n\tOptions extends MiddlewareOptions = MiddlewareOptions,\n\tHandler extends (inputCtx: any) => Promise<any> = any,\n> = Handler & {\n\toptions: Options;\n};\n\ncreateMiddleware.create = <\n\tE extends {\n\t\tuse?: Middleware[];\n\t},\n>(\n\topts?: E,\n) => {\n\ttype InferredContext = InferUse<E[\"use\"]>;\n\tfunction fn<Options extends MiddlewareOptions, R>(\n\t\toptions: Options,\n\t\thandler: (ctx: MiddlewareContext<Options, InferredContext>) => Promise<R>,\n\t): (inputContext: MiddlewareInputContext<Options>) => Promise<R>;\n\tfunction fn<Options extends MiddlewareOptions, R>(\n\t\thandler: (ctx: MiddlewareContext<Options, InferredContext>) => Promise<R>,\n\t): (inputContext: MiddlewareInputContext<Options>) => Promise<R>;\n\tfunction fn(optionsOrHandler: any, handler?: any) {\n\t\tif (typeof optionsOrHandler === \"function\") {\n\t\t\treturn createMiddleware(\n\t\t\t\t{\n\t\t\t\t\tuse: opts?.use,\n\t\t\t\t},\n\t\t\t\toptionsOrHandler,\n\t\t\t);\n\t\t}\n\t\tif (!handler) {\n\t\t\tthrow new Error(\"Middleware handler is required\");\n\t\t}\n\t\tconst middleware = createMiddleware(\n\t\t\t{\n\t\t\t\t...optionsOrHandler,\n\t\t\t\tmethod: \"*\",\n\t\t\t\tuse: [...(opts?.use || []), ...(optionsOrHandler.use || [])],\n\t\t\t},\n\t\t\thandler,\n\t\t);\n\t\treturn middleware as any;\n\t}\n\treturn fn;\n};\n", "import type { HasRequiredKeys, Prettify } from \"./helper\";\nimport { toResponse } from \"./to-response\";\nimport { type Middleware } from \"./middleware\";\nimport {\n\tcreateInternalContext,\n\ttype InferBody,\n\ttype InferHeaders,\n\ttype InferMethod,\n\ttype InferParam,\n\ttype InferQuery,\n\ttype InferRequest,\n\ttype InferUse,\n\ttype InputContext,\n\ttype Method,\n} from \"./context\";\nimport type { CookieOptions, CookiePrefixOptions } from \"./cookies\";\nimport { APIError, type _statusCode, type Status } from \"./error\";\nimport type { OpenAPIParameter, OpenAPISchemaType } from \"./openapi\";\nimport type { StandardSchemaV1 } from \"./standard-schema\";\nimport { isAPIError } from \"./utils\";\n\nexport interface EndpointOptions {\n\t/**\n\t * Request Method\n\t */\n\tmethod: Method | Method[];\n\t/**\n\t * Body Schema\n\t */\n\tbody?: StandardSchemaV1;\n\t/**\n\t * Query Schema\n\t */\n\tquery?: StandardSchemaV1;\n\t/**\n\t * If true headers will be required to be passed in the context\n\t */\n\trequireHeaders?: boolean;\n\t/**\n\t * If true request object will be required\n\t */\n\trequireRequest?: boolean;\n\t/**\n\t * Clone the request object from the router\n\t */\n\tcloneRequest?: boolean;\n\t/**\n\t * Endpoint metadata\n\t */\n\tmetadata?: {\n\t\t/**\n\t\t * Open API definition\n\t\t */\n\t\topenapi?: {\n\t\t\tsummary?: string;\n\t\t\tdescription?: string;\n\t\t\ttags?: string[];\n\t\t\toperationId?: string;\n\t\t\tparameters?: OpenAPIParameter[];\n\t\t\trequestBody?: {\n\t\t\t\tcontent: {\n\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t\tresponses?: {\n\t\t\t\t[status: string]: {\n\t\t\t\t\tdescription: string;\n\t\t\t\t\tcontent?: {\n\t\t\t\t\t\t\"application/json\"?: {\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\"text/plain\"?: {\n\t\t\t\t\t\t\tschema?: {\n\t\t\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t\t\"text/html\"?: {\n\t\t\t\t\t\t\tschema?: {\n\t\t\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * Infer body and query type from ts interface\n\t\t *\n\t\t * useful for generic and dynamic types\n\t\t *\n\t\t * @example\n\t\t * ```ts\n\t\t * const endpoint = createEndpoint(\"/path\", {\n\t\t * \t\tmethod: \"POST\",\n\t\t * \t\tbody: z.record(z.string()),\n\t\t * \t\t$Infer: {\n\t\t * \t\t\tbody: {} as {\n\t\t * \t\t\t\ttype: InferTypeFromOptions<Option> // custom type inference\n\t\t * \t\t\t}\n\t\t * \t\t}\n\t\t * \t}, async(ctx)=>{\n\t\t * \t\tconst body = ctx.body\n\t\t * \t})\n\t\t * ```\n\t\t */\n\t\t$Infer?: {\n\t\t\t/**\n\t\t\t * Body\n\t\t\t */\n\t\t\tbody?: any;\n\t\t\t/**\n\t\t\t * Query\n\t\t\t */\n\t\t\tquery?: Record<string, any>;\n\t\t};\n\t\t/**\n\t\t * If enabled, endpoint won't be exposed over a router\n\t\t */\n\t\tSERVER_ONLY?: boolean;\n\t\t/**\n\t\t * Extra metadata\n\t\t */\n\t\t[key: string]: any;\n\t};\n\t/**\n\t * List of middlewares to use\n\t */\n\tuse?: Middleware[];\n\t/**\n\t * A callback to run before any API error is throw or returned\n\t *\n\t * @param e - The API error\n\t * @returns - The response to return\n\t */\n\tonAPIError?: (e: APIError) => void | Promise<void>;\n}\n\nexport type EndpointContext<Path extends string, Options extends EndpointOptions, Context = {}> = {\n\t/**\n\t * Method\n\t *\n\t * The request method\n\t */\n\tmethod: InferMethod<Options>;\n\t/**\n\t * Path\n\t *\n\t * The path of the endpoint\n\t */\n\tpath: Path;\n\t/**\n\t * Body\n\t *\n\t * The body object will be the parsed JSON from the request and validated\n\t * against the body schema if it exists.\n\t */\n\tbody: InferBody<Options>;\n\t/**\n\t * Query\n\t *\n\t * The query object will be the parsed query string from the request\n\t * and validated against the query schema if it exists\n\t */\n\tquery: InferQuery<Options>;\n\t/**\n\t * Params\n\t *\n\t * If the path is `/user/:id` and the request is `/user/1` then the params will\n\t * be `{ id: \"1\" }` and if the path includes a wildcard like `/user/*` then the\n\t * params will be `{ _: \"1\" }` where `_` is the wildcard key. If the wildcard\n\t * is named like `/user/**:name` then the params will be `{ name: string }`\n\t */\n\tparams: InferParam<Path>;\n\t/**\n\t * Request object\n\t *\n\t * If `requireRequest` is set to true in the endpoint options this will be\n\t * required\n\t */\n\trequest: InferRequest<Options>;\n\t/**\n\t * Headers\n\t *\n\t * If `requireHeaders` is set to true in the endpoint options this will be\n\t * required\n\t */\n\theaders: InferHeaders<Options>;\n\t/**\n\t * Set header\n\t *\n\t * If it's called outside of a request it will just be ignored.\n\t */\n\tsetHeader: (key: string, value: string) => void;\n\t/**\n\t * Get header\n\t *\n\t * If it's called outside of a request it will just return null\n\t *\n\t * @param key  - The key of the header\n\t * @returns\n\t */\n\tgetHeader: (key: string) => string | null;\n\t/**\n\t * Get a cookie value from the request\n\t *\n\t * @param key - The key of the cookie\n\t * @param prefix - The prefix of the cookie between `__Secure-` and `__Host-`\n\t * @returns - The value of the cookie\n\t */\n\tgetCookie: (key: string, prefix?: CookiePrefixOptions) => string | null;\n\t/**\n\t * Get a signed cookie value from the request\n\t *\n\t * @param key - The key of the cookie\n\t * @param secret - The secret of the signed cookie\n\t * @param prefix - The prefix of the cookie between `__Secure-` and `__Host-`\n\t * @returns\n\t */\n\tgetSignedCookie: (\n\t\tkey: string,\n\t\tsecret: string,\n\t\tprefix?: CookiePrefixOptions,\n\t) => Promise<string | null>;\n\t/**\n\t * Set a cookie value in the response\n\t *\n\t * @param key - The key of the cookie\n\t * @param value - The value to set\n\t * @param options - The options of the cookie\n\t * @returns - The cookie string\n\t */\n\tsetCookie: (key: string, value: string, options?: CookieOptions) => string;\n\t/**\n\t * Set signed cookie\n\t *\n\t * @param key - The key of the cookie\n\t * @param value  - The value to set\n\t * @param secret - The secret to sign the cookie with\n\t * @param options - The options of the cookie\n\t * @returns - The cookie string\n\t */\n\tsetSignedCookie: (\n\t\tkey: string,\n\t\tvalue: string,\n\t\tsecret: string,\n\t\toptions?: CookieOptions,\n\t) => Promise<string>;\n\t/**\n\t * JSON\n\t *\n\t * a helper function to create a JSON response with\n\t * the correct headers\n\t * and status code. If `asResponse` is set to true in\n\t * the context then\n\t * it will return a Response object instead of the\n\t * JSON object.\n\t *\n\t * @param json - The JSON object to return\n\t * @param routerResponse - The response object to\n\t * return if `asResponse` is\n\t * true in the context this will take precedence\n\t */\n\tjson: <R extends Record<string, any> | null>(\n\t\tjson: R,\n\t\trouterResponse?:\n\t\t\t| {\n\t\t\t\t\tstatus?: number;\n\t\t\t\t\theaders?: Record<string, string>;\n\t\t\t\t\tresponse?: Response;\n\t\t\t\t\tbody?: Record<string, string>;\n\t\t\t  }\n\t\t\t| Response,\n\t) => Promise<R>;\n\t/**\n\t * Middleware context\n\t */\n\tcontext: Prettify<Context & InferUse<Options[\"use\"]>>;\n\t/**\n\t * Redirect to a new URL\n\t */\n\tredirect: (url: string) => APIError;\n\t/**\n\t * Return error\n\t */\n\terror: (\n\t\tstatus: keyof typeof _statusCode | Status,\n\t\tbody?: {\n\t\t\tmessage?: string;\n\t\t\tcode?: string;\n\t\t} & Record<string, any>,\n\t\theaders?: HeadersInit,\n\t) => APIError;\n};\n\nexport const createEndpoint = <Path extends string, Options extends EndpointOptions, R>(\n\tpath: Path,\n\toptions: Options,\n\thandler: (context: EndpointContext<Path, Options>) => Promise<R>,\n) => {\n\ttype Context = InputContext<Path, Options>;\n\tconst internalHandler = async <\n\t\tAsResponse extends boolean = false,\n\t\tReturnHeaders extends boolean = false,\n\t>(\n\t\t...inputCtx: HasRequiredKeys<Context> extends true\n\t\t\t? [Context & { asResponse?: AsResponse; returnHeaders?: ReturnHeaders }]\n\t\t\t: [(Context & { asResponse?: AsResponse; returnHeaders?: ReturnHeaders })?]\n\t) => {\n\t\tconst context = (inputCtx[0] || {}) as InputContext<any, any>;\n\t\tconst internalContext = await createInternalContext(context, {\n\t\t\toptions,\n\t\t\tpath,\n\t\t});\n\t\tconst response = await handler(internalContext as any).catch(async (e) => {\n\t\t\tif (isAPIError(e)) {\n\t\t\t\tconst onAPIError = options.onAPIError;\n\t\t\t\tif (onAPIError) {\n\t\t\t\t\tawait onAPIError(e);\n\t\t\t\t}\n\t\t\t\tif (context.asResponse) {\n\t\t\t\t\treturn e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t});\n\t\tconst headers = internalContext.responseHeaders;\n\t\ttype ResultType = [AsResponse] extends [true]\n\t\t\t? Response\n\t\t\t: [ReturnHeaders] extends [true]\n\t\t\t\t? { headers: Headers; response: R }\n\t\t\t\t: R;\n\n\t\treturn (\n\t\t\tcontext.asResponse\n\t\t\t\t? toResponse(response, {\n\t\t\t\t\t\theaders,\n\t\t\t\t\t})\n\t\t\t\t: context.returnHeaders\n\t\t\t\t\t? {\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\tresponse,\n\t\t\t\t\t\t}\n\t\t\t\t\t: response\n\t\t) as ResultType;\n\t};\n\tinternalHandler.options = options;\n\tinternalHandler.path = path;\n\treturn internalHandler;\n};\n\ncreateEndpoint.create = <E extends { use?: Middleware[] }>(opts?: E) => {\n\treturn <Path extends string, Opts extends EndpointOptions, R>(\n\t\tpath: Path,\n\t\toptions: Opts,\n\t\thandler: (ctx: EndpointContext<Path, Opts, InferUse<E[\"use\"]>>) => Promise<R>,\n\t) => {\n\t\treturn createEndpoint(\n\t\t\tpath,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tuse: [...(options?.use || []), ...(opts?.use || [])],\n\t\t\t},\n\t\t\thandler,\n\t\t);\n\t};\n};\n\nexport type Endpoint<\n\tPath extends string = string,\n\tOptions extends EndpointOptions = EndpointOptions,\n\tHandler extends (inputCtx: any) => Promise<any> = (inputCtx: any) => Promise<any>,\n> = Handler & {\n\toptions: Options;\n\tpath: Path;\n};\n", "import { createRouter as createRou3Router, addRoute, findRoute, findAllRoutes } from \"rou3\";\nimport { createEndpoint, type Endpoint } from \"./endpoint\";\nimport { generator, getHTML } from \"./openapi\";\nimport type { Middleware } from \"./middleware\";\nimport { getBody, isAPIError } from \"./utils\";\nimport { APIError } from \"./error\";\nimport { toResponse } from \"./to-response\";\n\nexport interface RouterConfig {\n\tthrowError?: boolean;\n\tonError?: (e: unknown) => void | Promise<void> | Response | Promise<Response>;\n\tbasePath?: string;\n\trouterMiddleware?: Array<{\n\t\tpath: string;\n\t\tmiddleware: Middleware;\n\t}>;\n\t/**\n\t * additional Context that needs to passed to endpoints\n\t *\n\t * this will be available on `ctx.context` on endpoints\n\t */\n\trouterContext?: Record<string, any>;\n\t/**\n\t * A callback to run before any response\n\t */\n\tonResponse?: (res: Response) => any | Promise<any>;\n\t/**\n\t * A callback to run before any request\n\t */\n\tonRequest?: (req: Request) => any | Promise<any>;\n\t/**\n\t * Open API route configuration\n\t */\n\topenapi?: {\n\t\t/**\n\t\t * Disable openapi route\n\t\t *\n\t\t * @default false\n\t\t */\n\t\tdisabled?: boolean;\n\t\t/**\n\t\t * A path to display open api using scalar\n\t\t *\n\t\t * @default \"/api/reference\"\n\t\t */\n\t\tpath?: string;\n\t\t/**\n\t\t * Scalar Configuration\n\t\t */\n\t\tscalar?: {\n\t\t\t/**\n\t\t\t * Title\n\t\t\t * @default \"Open API Reference\"\n\t\t\t */\n\t\t\ttitle?: string;\n\t\t\t/**\n\t\t\t * Description\n\t\t\t *\n\t\t\t * @default \"Better Call Open API Reference\"\n\t\t\t */\n\t\t\tdescription?: string;\n\t\t\t/**\n\t\t\t * Logo URL\n\t\t\t */\n\t\t\tlogo?: string;\n\t\t\t/**\n\t\t\t * Scalar theme\n\t\t\t * @default \"saturn\"\n\t\t\t */\n\t\t\ttheme?: string;\n\t\t};\n\t};\n}\n\nexport const createRouter = <E extends Record<string, Endpoint>, Config extends RouterConfig>(\n\tendpoints: E,\n\tconfig?: Config,\n) => {\n\tif (!config?.openapi?.disabled) {\n\t\tconst openapi = {\n\t\t\tpath: \"/api/reference\",\n\t\t\t...config?.openapi,\n\t\t};\n\t\t//@ts-expect-error\n\t\tendpoints[\"openapi\"] = createEndpoint(\n\t\t\topenapi.path,\n\t\t\t{\n\t\t\t\tmethod: \"GET\",\n\t\t\t},\n\t\t\tasync (c) => {\n\t\t\t\tconst schema = await generator(endpoints);\n\t\t\t\treturn new Response(getHTML(schema, openapi.scalar), {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"text/html\",\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t);\n\t}\n\tconst router = createRou3Router();\n\tconst middlewareRouter = createRou3Router();\n\n\tfor (const endpoint of Object.values(endpoints)) {\n\t\tif (!endpoint.options) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (endpoint.options?.metadata?.SERVER_ONLY) continue;\n\n\t\tconst methods = Array.isArray(endpoint.options?.method)\n\t\t\t? endpoint.options.method\n\t\t\t: [endpoint.options?.method];\n\n\t\tfor (const method of methods) {\n\t\t\taddRoute(router, method, endpoint.path, endpoint);\n\t\t}\n\t}\n\n\tif (config?.routerMiddleware?.length) {\n\t\tfor (const { path, middleware } of config.routerMiddleware) {\n\t\t\taddRoute(middlewareRouter, \"*\", path, middleware);\n\t\t}\n\t}\n\n\tconst processRequest = async (request: Request) => {\n\t\tconst url = new URL(request.url);\n\t\tconst path = config?.basePath ? url.pathname.split(config.basePath)[1] : url.pathname;\n\n\t\tif (!path?.length) {\n\t\t\tconfig?.onError?.(new Error(\"NOT_FOUND\"));\n\t\t\treturn new Response(null, { status: 404, statusText: \"Not Found\" });\n\t\t}\n\n\t\tconst route = findRoute(router, request.method, path);\n\t\tif (!route?.data) {\n\t\t\treturn new Response(null, { status: 404, statusText: \"Not Found\" });\n\t\t}\n\n\t\tconst query: Record<string, string | string[]> = {};\n\t\turl.searchParams.forEach((value, key) => {\n\t\t\tif (key in query) {\n\t\t\t\tif (Array.isArray(query[key])) {\n\t\t\t\t\t(query[key] as string[]).push(value);\n\t\t\t\t} else {\n\t\t\t\t\tquery[key] = [query[key] as string, value];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tquery[key] = value;\n\t\t\t}\n\t\t});\n\n\t\tconst handler = route.data as Endpoint;\n\t\tconst context = {\n\t\t\tpath,\n\t\t\tmethod: request.method as \"GET\",\n\t\t\theaders: request.headers,\n\t\t\tparams: route.params ? (JSON.parse(JSON.stringify(route.params)) as any) : {},\n\t\t\trequest: request,\n\t\t\tbody: await getBody(handler.options.cloneRequest ? request.clone() : request),\n\t\t\tquery,\n\t\t\t_flag: \"router\" as const,\n\t\t\tasResponse: true,\n\t\t\tcontext: config?.routerContext,\n\t\t};\n\n\t\ttry {\n\t\t\tconst middlewareRoutes = findAllRoutes(middlewareRouter, \"*\", path);\n\t\t\tif (middlewareRoutes?.length) {\n\t\t\t\tfor (const { data: middleware, params } of middlewareRoutes) {\n\t\t\t\t\tconst res = await (middleware as Endpoint)({\n\t\t\t\t\t\t...context,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tasResponse: false,\n\t\t\t\t\t});\n\n\t\t\t\t\tif (res instanceof Response) return res;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst response = (await handler(context)) as Response;\n\t\t\treturn response;\n\t\t} catch (error) {\n\t\t\tif (isAPIError(error)) {\n\t\t\t\treturn toResponse(error);\n\t\t\t}\n\t\t\tconsole.error(`# SERVER_ERROR: `, error);\n\t\t\treturn new Response(null, {\n\t\t\t\tstatus: 500,\n\t\t\t\tstatusText: \"Internal Server Error\",\n\t\t\t});\n\t\t}\n\t};\n\n\treturn {\n\t\thandler: async (request: Request) => {\n\t\t\tconst onReq = await config?.onRequest?.(request);\n\t\t\tif (onReq instanceof Response) {\n\t\t\t\treturn onReq;\n\t\t\t}\n\t\t\tconst req = onReq instanceof Request ? onReq : request;\n\t\t\tconst res = await processRequest(req);\n\t\t\tconst onRes = await config?.onResponse?.(res);\n\t\t\tif (onRes instanceof Response) {\n\t\t\t\treturn onRes;\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\tendpoints,\n\t};\n};\n\nexport type Router = ReturnType<typeof createRouter>;\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === errorMap ? undefined : errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        var _a, _b;\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message !== null && message !== void 0 ? message : ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: (_a = message !== null && message !== void 0 ? message : required_error) !== null && _a !== void 0 ? _a : ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: (_b = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b !== void 0 ? _b : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        var _a, _b;\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if ((_b = (_a = err === null || err === void 0 ? void 0 : err.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === null || _b === void 0 ? void 0 : _b.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    // let regex = `\\\\d{2}:\\\\d{2}:\\\\d{2}`;\n    let regex = `([01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d`;\n    if (args.precision) {\n        regex = `${regex}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        regex = `${regex}(\\\\.\\\\d+)?`;\n    }\n    return regex;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nfunction datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (!decoded.typ || !decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a, _b;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            local: (_b = options === null || options === void 0 ? void 0 : options.local) !== null && _b !== void 0 ? _b : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch (_a) {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result)\n            ? result.then((data) => freeze(data))\n            : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nfunction custom(check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n}\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    datetimeRegex: datetimeRegex,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    ZodReadonly: ZodReadonly,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodReadonly, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, datetimeRegex, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { ZodObject, ZodOptional, ZodSchema } from \"zod\";\nimport type { Endpoint, EndpointOptions } from \"./endpoint\";\n\nexport type OpenAPISchemaType = \"string\" | \"number\" | \"integer\" | \"boolean\" | \"array\" | \"object\";\n\nexport interface OpenAPIParameter {\n\tin: \"query\" | \"path\" | \"header\" | \"cookie\";\n\tname?: string;\n\tdescription?: string;\n\trequired?: boolean;\n\tschema?: {\n\t\ttype: OpenAPISchemaType;\n\t\tformat?: string;\n\t\titems?: {\n\t\t\ttype: OpenAPISchemaType;\n\t\t};\n\t\tenum?: string[];\n\t\tminLength?: number;\n\t\tdescription?: string;\n\t\tdefault?: string;\n\t\texample?: string;\n\t};\n}\n\nexport interface Path {\n\tget?: {\n\t\ttags?: string[];\n\t\toperationId?: string;\n\t\tdescription?: string;\n\t\tsecurity?: [{ bearerAuth: string[] }];\n\t\tparameters?: OpenAPIParameter[];\n\t\tresponses?: {\n\t\t\t[key in string]: {\n\t\t\t\tdescription?: string;\n\t\t\t\tcontent: {\n\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n\tpost?: {\n\t\ttags?: string[];\n\t\toperationId?: string;\n\t\tdescription?: string;\n\t\tsecurity?: [{ bearerAuth: string[] }];\n\t\tparameters?: OpenAPIParameter[];\n\t\trequestBody?: {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\tresponses?: {\n\t\t\t[key in string]: {\n\t\t\t\tdescription?: string;\n\t\t\t\tcontent: {\n\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\ttype?: OpenAPISchemaType;\n\t\t\t\t\t\t\tproperties?: Record<string, any>;\n\t\t\t\t\t\t\trequired?: string[];\n\t\t\t\t\t\t\t$ref?: string;\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t};\n}\nconst paths: Record<string, Path> = {};\n\nfunction getTypeFromZodType(zodType: ZodSchema) {\n\tswitch (zodType.constructor.name) {\n\t\tcase \"ZodString\":\n\t\t\treturn \"string\";\n\t\tcase \"ZodNumber\":\n\t\t\treturn \"number\";\n\t\tcase \"ZodBoolean\":\n\t\t\treturn \"boolean\";\n\t\tcase \"ZodObject\":\n\t\t\treturn \"object\";\n\t\tcase \"ZodArray\":\n\t\t\treturn \"array\";\n\t\tdefault:\n\t\t\treturn \"string\";\n\t}\n}\n\nfunction getParameters(options: EndpointOptions) {\n\tconst parameters: OpenAPIParameter[] = [];\n\tif (options.metadata?.openapi?.parameters) {\n\t\tparameters.push(...options.metadata.openapi.parameters);\n\t\treturn parameters;\n\t}\n\tif (options.query instanceof ZodObject) {\n\t\tObject.entries(options.query.shape).forEach(([key, value]) => {\n\t\t\tif (value instanceof ZodSchema) {\n\t\t\t\tparameters.push({\n\t\t\t\t\tname: key,\n\t\t\t\t\tin: \"query\",\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: getTypeFromZodType(value),\n\t\t\t\t\t\t...(\"minLength\" in value && value.minLength\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tminLength: value.minLength as number,\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: {}),\n\t\t\t\t\t\tdescription: value.description,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\treturn parameters;\n}\n\nfunction getRequestBody(options: EndpointOptions): any {\n\tif (options.metadata?.openapi?.requestBody) {\n\t\treturn options.metadata.openapi.requestBody;\n\t}\n\tif (!options.body) return undefined;\n\tif (options.body instanceof ZodObject || options.body instanceof ZodOptional) {\n\t\t// @ts-ignore\n\t\tconst shape = options.body.shape;\n\t\tif (!shape) return undefined;\n\t\tconst properties: Record<string, any> = {};\n\t\tconst required: string[] = [];\n\t\tObject.entries(shape).forEach(([key, value]) => {\n\t\t\tif (value instanceof ZodSchema) {\n\t\t\t\tproperties[key] = {\n\t\t\t\t\ttype: getTypeFromZodType(value),\n\t\t\t\t\tdescription: value.description,\n\t\t\t\t};\n\t\t\t\tif (!(value instanceof ZodOptional)) {\n\t\t\t\t\trequired.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn {\n\t\t\trequired: options.body instanceof ZodOptional ? false : options.body ? true : false,\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties,\n\t\t\t\t\t\trequired,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t}\n\treturn undefined;\n}\n\nfunction getResponse(responses?: Record<string, any>) {\n\treturn {\n\t\t\"400\": {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"message\"],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription: \"Bad Request. Usually due to missing parameters, or invalid parameters.\",\n\t\t},\n\t\t\"401\": {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequired: [\"message\"],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription: \"Unauthorized. Due to missing or invalid authentication.\",\n\t\t},\n\t\t\"403\": {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription:\n\t\t\t\t\"Forbidden. You do not have permission to access this resource or to perform this action.\",\n\t\t},\n\t\t\"404\": {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription: \"Not Found. The requested resource was not found.\",\n\t\t},\n\t\t\"429\": {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription: \"Too Many Requests. You have exceeded the rate limit. Try again later.\",\n\t\t},\n\t\t\"500\": {\n\t\t\tcontent: {\n\t\t\t\t\"application/json\": {\n\t\t\t\t\tschema: {\n\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdescription:\n\t\t\t\t\"Internal Server Error. This is a problem with the server that you cannot fix.\",\n\t\t},\n\t\t...responses,\n\t} as any;\n}\n\nexport async function generator(\n\tendpoints: Record<string, Endpoint>,\n\tconfig?: {\n\t\turl: string;\n\t},\n) {\n\tconst components = {\n\t\tschemas: {},\n\t};\n\n\tObject.entries(endpoints).forEach(([_, value]) => {\n\t\tconst options = value.options as EndpointOptions;\n\t\tif (options.metadata?.SERVER_ONLY) return;\n\t\tif (options.method === \"GET\") {\n\t\t\tpaths[value.path] = {\n\t\t\t\tget: {\n\t\t\t\t\ttags: [\"Default\", ...(options.metadata?.openapi?.tags || [])],\n\t\t\t\t\tdescription: options.metadata?.openapi?.description,\n\t\t\t\t\toperationId: options.metadata?.openapi?.operationId,\n\t\t\t\t\tsecurity: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbearerAuth: [],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tparameters: getParameters(options),\n\t\t\t\t\tresponses: getResponse(options.metadata?.openapi?.responses),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tif (options.method === \"POST\") {\n\t\t\tconst body = getRequestBody(options);\n\t\t\tpaths[value.path] = {\n\t\t\t\tpost: {\n\t\t\t\t\ttags: [\"Default\", ...(options.metadata?.openapi?.tags || [])],\n\t\t\t\t\tdescription: options.metadata?.openapi?.description,\n\t\t\t\t\toperationId: options.metadata?.openapi?.operationId,\n\t\t\t\t\tsecurity: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbearerAuth: [],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\tparameters: getParameters(options),\n\t\t\t\t\t...(body\n\t\t\t\t\t\t? { requestBody: body }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\trequestBody: {\n\t\t\t\t\t\t\t\t\t//set body none\n\t\t\t\t\t\t\t\t\tcontent: {\n\t\t\t\t\t\t\t\t\t\t\"application/json\": {\n\t\t\t\t\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"object\",\n\t\t\t\t\t\t\t\t\t\t\t\tproperties: {},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t}),\n\t\t\t\t\tresponses: getResponse(options.metadata?.openapi?.responses),\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\t});\n\n\tconst res = {\n\t\topenapi: \"3.1.1\",\n\t\tinfo: {\n\t\t\ttitle: \"Better Auth\",\n\t\t\tdescription: \"API Reference for your Better Auth Instance\",\n\t\t\tversion: \"1.1.0\",\n\t\t},\n\t\tcomponents,\n\t\tsecurity: [\n\t\t\t{\n\t\t\t\tapiKeyCookie: [],\n\t\t\t},\n\t\t],\n\t\tservers: [\n\t\t\t{\n\t\t\t\turl: config?.url,\n\t\t\t},\n\t\t],\n\t\ttags: [\n\t\t\t{\n\t\t\t\tname: \"Default\",\n\t\t\t\tdescription:\n\t\t\t\t\t\"Default endpoints that are included with Better Auth by default. These endpoints are not part of any plugin.\",\n\t\t\t},\n\t\t],\n\t\tpaths,\n\t};\n\treturn res;\n}\n\nexport const getHTML = (\n\tapiReference: Record<string, any>,\n\tconfig?: {\n\t\tlogo?: string;\n\t\ttheme?: string;\n\t\ttitle?: string;\n\t\tdescription?: string;\n\t},\n) => `<!doctype html>\n<html>\n  <head>\n    <title>Scalar API Reference</title>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1\" />\n  </head>\n  <body>\n    <script\n      id=\"api-reference\"\n      type=\"application/json\">\n    ${JSON.stringify(apiReference)}\n    </script>\n\t <script>\n      var configuration = {\n\t  \tfavicon: ${config?.logo ? `data:image/svg+xml;utf8,${encodeURIComponent(config.logo)}` : undefined} ,\n\t   \ttheme: ${config?.theme || \"saturn\"},\n        metaData: {\n\t\t\ttitle: ${config?.title || \"Open API Reference\"},\n\t\t\tdescription: ${config?.description || \"Better Call Open API\"},\n\t\t}\n      }\n      document.getElementById('api-reference').dataset.configuration =\n        JSON.stringify(configuration)\n    </script>\n\t  <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n  </body>\n</html>`;\n", "export var util;\n(function (util) {\n    util.assertEqual = (_) => { };\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && Number.isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array.map((val) => (typeof val === \"string\" ? `'${val}'` : val)).join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nexport var objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nexport const ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return Number.isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n", "import { util } from \"./helpers/util.js\";\nexport const ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nexport const quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexport class ZodError extends Error {\n    get errors() {\n        return this.issues;\n    }\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    static assert(value) {\n        if (!(value instanceof ZodError)) {\n            throw new Error(`Not a ZodError: ${value}`);\n        }\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "import { ZodIssueCode } from \"../ZodError.js\";\nimport { util, ZodParsedType } from \"../helpers/util.js\";\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly equal to ` : issue.inclusive ? `greater than or equal to ` : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact ? `exactly` : issue.inclusive ? `less than or equal to` : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact ? `exactly` : issue.inclusive ? `smaller than or equal to` : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\nexport default errorMap;\n", "import defaultErrorMap from \"./locales/en.js\";\nlet overrideErrorMap = defaultErrorMap;\nexport { defaultErrorMap };\nexport function setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexport function getErrorMap() {\n    return overrideErrorMap;\n}\n", "import { getErrorMap } from \"../errors.js\";\nimport defaultErrorMap from \"../locales/en.js\";\nexport const makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    if (issueData.message !== undefined) {\n        return {\n            ...issueData,\n            path: fullPath,\n            message: issueData.message,\n        };\n    }\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: errorMessage,\n    };\n};\nexport const EMPTY_PATH = [];\nexport function addIssueToContext(ctx, issueData) {\n    const overrideMap = getErrorMap();\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap, // contextual error map is first priority\n            ctx.schemaErrorMap, // then schema-bound map if available\n            overrideMap, // then global override map\n            overrideMap === defaultErrorMap ? undefined : defaultErrorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexport class ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            const key = await pair.key;\n            const value = await pair.value;\n            syncPairs.push({\n                key,\n                value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" && (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexport const INVALID = Object.freeze({\n    status: \"aborted\",\n});\nexport const DIRTY = (value) => ({ status: \"dirty\", value });\nexport const OK = (value) => ({ status: \"valid\", value });\nexport const isAborted = (x) => x.status === \"aborted\";\nexport const isDirty = (x) => x.status === \"dirty\";\nexport const isValid = (x) => x.status === \"valid\";\nexport const isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n", "export {};\n", "export var errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    // biome-ignore lint:\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message?.message;\n})(errorUtil || (errorUtil = {}));\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ZodEnum_cache, _ZodNativeEnum_cache;\nimport { ZodError, ZodIssueCode, } from \"./ZodError.js\";\nimport { defaultErrorMap, getErrorMap } from \"./errors.js\";\nimport { errorUtil } from \"./helpers/errorUtil.js\";\nimport { DIRTY, INVALID, OK, ParseStatus, addIssueToContext, isAborted, isAsync, isDirty, isValid, makeIssue, } from \"./helpers/parseUtil.js\";\nimport { util, ZodParsedType, getParsedType } from \"./helpers/util.js\";\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (Array.isArray(this._key)) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        const { message } = params;\n        if (iss.code === \"invalid_enum_value\") {\n            return { message: message ?? ctx.defaultError };\n        }\n        if (typeof ctx.data === \"undefined\") {\n            return { message: message ?? required_error ?? ctx.defaultError };\n        }\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        return { message: message ?? invalid_type_error ?? ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nexport class ZodType {\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: params?.async ?? false,\n                contextualErrorMap: params?.errorMap,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    \"~validate\"(data) {\n        const ctx = {\n            common: {\n                issues: [],\n                async: !!this[\"~standard\"].async,\n            },\n            path: [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        if (!this[\"~standard\"].async) {\n            try {\n                const result = this._parseSync({ data, path: [], parent: ctx });\n                return isValid(result)\n                    ? {\n                        value: result.value,\n                    }\n                    : {\n                        issues: ctx.common.issues,\n                    };\n            }\n            catch (err) {\n                if (err?.message?.toLowerCase()?.includes(\"encountered\")) {\n                    this[\"~standard\"].async = true;\n                }\n                ctx.common = {\n                    issues: [],\n                    async: true,\n                };\n            }\n        }\n        return this._parseAsync({ data, path: [], parent: ctx }).then((result) => isValid(result)\n            ? {\n                value: result.value,\n            }\n            : {\n                issues: ctx.common.issues,\n            });\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params?.errorMap,\n                async: true,\n            },\n            path: params?.path || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult) ? maybeAsyncResult : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\" ? refinementData(val, ctx) : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n        this[\"~standard\"] = {\n            version: 1,\n            vendor: \"zod\",\n            validate: (data) => this[\"~validate\"](data),\n        };\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[0-9a-z]+$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/i;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\nconst nanoidRegex = /^[a-z0-9_-]{21}$/i;\nconst jwtRegex = /^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]*$/;\nconst durationRegex = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_'+\\-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\n// faster, simpler, safer\nconst ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nconst ipv4CidrRegex = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/(3[0-2]|[12]?[0-9])$/;\n// const ipv6Regex =\n// /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst ipv6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\nconst ipv6CidrRegex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nconst base64Regex = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;\n// https://base64.guru/standards/base64url\nconst base64urlRegex = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/;\n// simple\n// const dateRegexSource = `\\\\d{4}-\\\\d{2}-\\\\d{2}`;\n// no leap year validation\n// const dateRegexSource = `\\\\d{4}-((0[13578]|10|12)-31|(0[13-9]|1[0-2])-30|(0[1-9]|1[0-2])-(0[1-9]|1\\\\d|2\\\\d))`;\n// with leap year validation\nconst dateRegexSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateRegex = new RegExp(`^${dateRegexSource}$`);\nfunction timeRegexSource(args) {\n    let secondsRegexSource = `[0-5]\\\\d`;\n    if (args.precision) {\n        secondsRegexSource = `${secondsRegexSource}\\\\.\\\\d{${args.precision}}`;\n    }\n    else if (args.precision == null) {\n        secondsRegexSource = `${secondsRegexSource}(\\\\.\\\\d+)?`;\n    }\n    const secondsQuantifier = args.precision ? \"+\" : \"?\"; // require seconds if precision is nonzero\n    return `([01]\\\\d|2[0-3]):[0-5]\\\\d(:${secondsRegexSource})${secondsQuantifier}`;\n}\nfunction timeRegex(args) {\n    return new RegExp(`^${timeRegexSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetimeRegex(args) {\n    let regex = `${dateRegexSource}T${timeRegexSource(args)}`;\n    const opts = [];\n    opts.push(args.local ? `Z?` : `Z`);\n    if (args.offset)\n        opts.push(`([+-]\\\\d{2}:?\\\\d{2})`);\n    regex = `${regex}(${opts.join(\"|\")})`;\n    return new RegExp(`^${regex}$`);\n}\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nfunction isValidJWT(jwt, alg) {\n    if (!jwtRegex.test(jwt))\n        return false;\n    try {\n        const [header] = jwt.split(\".\");\n        // Convert base64url to base64\n        const base64 = header\n            .replace(/-/g, \"+\")\n            .replace(/_/g, \"/\")\n            .padEnd(header.length + ((4 - (header.length % 4)) % 4), \"=\");\n        const decoded = JSON.parse(atob(base64));\n        if (typeof decoded !== \"object\" || decoded === null)\n            return false;\n        if (\"typ\" in decoded && decoded?.typ !== \"JWT\")\n            return false;\n        if (!decoded.alg)\n            return false;\n        if (alg && decoded.alg !== alg)\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nfunction isValidCidr(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4CidrRegex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6CidrRegex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nexport class ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"nanoid\") {\n                if (!nanoidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"nanoid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"date\") {\n                const regex = dateRegex;\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"date\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"time\") {\n                const regex = timeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"time\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"duration\") {\n                if (!durationRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"duration\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"jwt\") {\n                if (!isValidJWT(input.data, check.alg)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"jwt\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cidr\") {\n                if (!isValidCidr(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cidr\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64\") {\n                if (!base64Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"base64url\") {\n                if (!base64urlRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"base64url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    nanoid(message) {\n        return this._addCheck({ kind: \"nanoid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    base64(message) {\n        return this._addCheck({ kind: \"base64\", ...errorUtil.errToObj(message) });\n    }\n    base64url(message) {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return this._addCheck({\n            kind: \"base64url\",\n            ...errorUtil.errToObj(message),\n        });\n    }\n    jwt(options) {\n        return this._addCheck({ kind: \"jwt\", ...errorUtil.errToObj(options) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    cidr(options) {\n        return this._addCheck({ kind: \"cidr\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                local: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            offset: options?.offset ?? false,\n            local: options?.local ?? false,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    date(message) {\n        return this._addCheck({ kind: \"date\", message });\n    }\n    time(options) {\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"time\",\n                precision: null,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"time\",\n            precision: typeof options?.precision === \"undefined\" ? null : options?.precision,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    duration(message) {\n        return this._addCheck({ kind: \"duration\", ...errorUtil.errToObj(message) });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options?.position,\n            ...errorUtil.errToObj(options?.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * Equivalent to `.min(1)`\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isDate() {\n        return !!this._def.checks.find((ch) => ch.kind === \"date\");\n    }\n    get isTime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"time\");\n    }\n    get isDuration() {\n        return !!this._def.checks.find((ch) => ch.kind === \"duration\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isNANOID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"nanoid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get isCIDR() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cidr\");\n    }\n    get isBase64() {\n        return !!this._def.checks.find((ch) => ch.kind === \"base64\");\n    }\n    get isBase64url() {\n        // base64url encoding is a modification of base64 that can safely be used in URLs and filenames\n        return !!this._def.checks.find((ch) => ch.kind === \"base64url\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nexport class ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" || (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null;\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" || ch.kind === \"int\" || ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            try {\n                input.data = BigInt(input.data);\n            }\n            catch {\n                return this._getInvalidInput(input);\n            }\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            return this._getInvalidInput(input);\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive ? input.data < check.value : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive ? input.data > check.value : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _getInvalidInput(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.bigint,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: params?.coerce ?? false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: params?.coerce || false,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (Number.isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: params?.coerce || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nexport class ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        this._cached = { shape, keys };\n        return this._cached;\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever && this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    syncPairs.push({\n                        key,\n                        value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        const defaultError = this._def.errorMap?.(issue, ctx).message ?? ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: errorUtil.errToObj(message).message ?? defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(mask)) {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        for (const key of util.objectKeys(this.shape)) {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return util.objectValues(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else if (type instanceof ZodOptional) {\n        return [undefined, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodNullable) {\n        return [null, ...getDiscriminator(type.unwrap())];\n    }\n    else if (type instanceof ZodBranded) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodReadonly) {\n        return getDiscriminator(type.unwrap());\n    }\n    else if (type instanceof ZodCatch) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else {\n        return [];\n    }\n};\nexport class ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues.length) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util.objectKeys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date && bType === ZodParsedType.date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nexport class ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\n// type ZodTupleItems = [ZodTypeAny, ...ZodTypeAny[]];\nexport class ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexport class ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [ctx.common.contextualErrorMap, ctx.schemaErrorMap, getErrorMap(), defaultErrorMap].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(async function (...args) {\n                const error = new ZodError([]);\n                const parsedArgs = await me._def.args.parseAsync(args, params).catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return OK(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args ? args : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexport class ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nexport class ZodEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodEnum_cache, new Set(this._def.values), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodEnum_cache, \"f\").has(input.data)) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values, newDef = this._def) {\n        return ZodEnum.create(values, {\n            ...this._def,\n            ...newDef,\n        });\n    }\n    exclude(values, newDef = this._def) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)), {\n            ...this._def,\n            ...newDef,\n        });\n    }\n}\n_ZodEnum_cache = new WeakMap();\nZodEnum.create = createZodEnum;\nexport class ZodNativeEnum extends ZodType {\n    constructor() {\n        super(...arguments);\n        _ZodNativeEnum_cache.set(this, void 0);\n    }\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string && ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\")) {\n            __classPrivateFieldSet(this, _ZodNativeEnum_cache, new Set(util.getValidEnumValues(this._def.values)), \"f\");\n        }\n        if (!__classPrivateFieldGet(this, _ZodNativeEnum_cache, \"f\").has(input.data)) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\n_ZodNativeEnum_cache = new WeakMap();\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise && ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise ? ctx.data : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then(async (processed) => {\n                    if (status.value === \"aborted\")\n                        return INVALID;\n                    const result = await this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                    if (result.status === \"aborted\")\n                        return INVALID;\n                    if (result.status === \"dirty\")\n                        return DIRTY(result.value);\n                    if (status.value === \"dirty\")\n                        return DIRTY(result.value);\n                    return result;\n                });\n            }\n            else {\n                if (status.value === \"aborted\")\n                    return INVALID;\n                const result = this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (result.status === \"aborted\")\n                    return INVALID;\n                if (result.status === \"dirty\")\n                    return DIRTY(result.value);\n                if (status.value === \"dirty\")\n                    return DIRTY(result.value);\n                return result;\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx }).then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({\n                        status: status.value,\n                        value: result,\n                    }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nexport { ZodEffects as ZodTransformer };\nexport class ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\" ? params.default : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nexport class ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexport const BRAND = Symbol(\"zod_brand\");\nexport class ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexport class ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexport class ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        const freeze = (data) => {\n            if (isValid(data)) {\n                data.value = Object.freeze(data.value);\n            }\n            return data;\n        };\n        return isAsync(result) ? result.then((data) => freeze(data)) : freeze(result);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\n////////////////////////////////////////\n////////////////////////////////////////\n//////////                    //////////\n//////////      z.custom      //////////\n//////////                    //////////\n////////////////////////////////////////\n////////////////////////////////////////\nfunction cleanParams(params, data) {\n    const p = typeof params === \"function\" ? params(data) : typeof params === \"string\" ? { message: params } : params;\n    const p2 = typeof p === \"string\" ? { message: p } : p;\n    return p2;\n}\nexport function custom(check, _params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            const r = check(data);\n            if (r instanceof Promise) {\n                return r.then((r) => {\n                    if (!r) {\n                        const params = cleanParams(_params, data);\n                        const _fatal = params.fatal ?? fatal ?? true;\n                        ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n                    }\n                });\n            }\n            if (!r) {\n                const params = cleanParams(_params, data);\n                const _fatal = params.fatal ?? fatal ?? true;\n                ctx.addIssue({ code: \"custom\", ...params, fatal: _fatal });\n            }\n            return;\n        });\n    return ZodAny.create();\n}\nexport { ZodType as Schema, ZodType as ZodSchema };\nexport const late = {\n    object: ZodObject.lazycreate,\n};\nexport var ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nexport const coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexport { anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, dateType as date, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, instanceOfType as instanceof, intersectionType as intersection, lazyType as lazy, literalType as literal, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, recordType as record, setType as set, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, voidType as void, };\nexport const NEVER = INVALID;\n", "export * from \"./errors.js\";\nexport * from \"./helpers/parseUtil.js\";\nexport * from \"./helpers/typeAliases.js\";\nexport * from \"./helpers/util.js\";\nexport * from \"./types.js\";\nexport * from \"./ZodError.js\";\n", "import * as z from \"./external.js\";\nexport * from \"./external.js\";\nexport { z };\nexport default z;\n", "import z3 from \"./v3/index.js\";\nexport * from \"./v3/index.js\";\nexport default z3;\n", "class BetterAuthError extends Error {\n  constructor(message, cause) {\n    super(message);\n    this.name = \"BetterAuthError\";\n    this.message = message;\n    this.cause = cause;\n    this.stack = \"\";\n  }\n}\nclass MissingDependencyError extends BetterAuthError {\n  constructor(pkgName) {\n    super(\n      `The package \"${pkgName}\" is required. Make sure it is installed.`,\n      pkgName\n    );\n  }\n}\n\nexport { BetterAuthError as B, MissingDependencyError as M };\n", "const getDate = (span, unit = \"ms\") => {\n  return new Date(Date.now() + (unit === \"sec\" ? span * 1e3 : span));\n};\n\nexport { getDate as g };\n", "const _envShim = /* @__PURE__ */ Object.create(null);\nconst _getEnv = (useShim) => globalThis.process?.env || //@ts-expect-error\nglobalThis.Deno?.env.toObject() || //@ts-expect-error\nglobalThis.__env__ || (useShim ? _envShim : globalThis);\nconst env = new Proxy(_envShim, {\n  get(_, prop) {\n    const env2 = _getEnv();\n    return env2[prop] ?? _envShim[prop];\n  },\n  has(_, prop) {\n    const env2 = _getEnv();\n    return prop in env2 || prop in _envShim;\n  },\n  set(_, prop, value) {\n    const env2 = _getEnv(true);\n    env2[prop] = value;\n    return true;\n  },\n  deleteProperty(_, prop) {\n    if (!prop) {\n      return false;\n    }\n    const env2 = _getEnv(true);\n    delete env2[prop];\n    return true;\n  },\n  ownKeys() {\n    const env2 = _getEnv(true);\n    return Object.keys(env2);\n  }\n});\nfunction toBoolean(val) {\n  return val ? val !== \"false\" : false;\n}\nconst nodeENV = typeof process !== \"undefined\" && process.env && process.env.NODE_ENV || \"\";\nconst isProduction = nodeENV === \"production\";\nconst isDevelopment = nodeENV === \"dev\" || nodeENV === \"development\";\nconst isTest = nodeENV === \"test\" || toBoolean(env.TEST);\n\nexport { isProduction as a, isDevelopment as b, env as e, isTest as i };\n", "function getAlphabet(urlSafe) {\n  return urlSafe ? \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\" : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n}\nfunction base64Encode(data, alphabet, padding) {\n  let result = \"\";\n  let buffer = 0;\n  let shift = 0;\n  for (const byte of data) {\n    buffer = buffer << 8 | byte;\n    shift += 8;\n    while (shift >= 6) {\n      shift -= 6;\n      result += alphabet[buffer >> shift & 63];\n    }\n  }\n  if (shift > 0) {\n    result += alphabet[buffer << 6 - shift & 63];\n  }\n  if (padding) {\n    const padCount = (4 - result.length % 4) % 4;\n    result += \"=\".repeat(padCount);\n  }\n  return result;\n}\nfunction base64Decode(data, alphabet) {\n  const decodeMap = /* @__PURE__ */ new Map();\n  for (let i = 0; i < alphabet.length; i++) {\n    decodeMap.set(alphabet[i], i);\n  }\n  const result = [];\n  let buffer = 0;\n  let bitsCollected = 0;\n  for (const char of data) {\n    if (char === \"=\")\n      break;\n    const value = decodeMap.get(char);\n    if (value === void 0) {\n      throw new Error(`Invalid Base64 character: ${char}`);\n    }\n    buffer = buffer << 6 | value;\n    bitsCollected += 6;\n    if (bitsCollected >= 8) {\n      bitsCollected -= 8;\n      result.push(buffer >> bitsCollected & 255);\n    }\n  }\n  return Uint8Array.from(result);\n}\nconst base64 = {\n  encode(data, options = {}) {\n    const alphabet = getAlphabet(false);\n    const buffer = typeof data === \"string\" ? new TextEncoder().encode(data) : new Uint8Array(data);\n    return base64Encode(buffer, alphabet, options.padding ?? true);\n  },\n  decode(data) {\n    if (typeof data !== \"string\") {\n      data = new TextDecoder().decode(data);\n    }\n    const urlSafe = data.includes(\"-\") || data.includes(\"_\");\n    const alphabet = getAlphabet(urlSafe);\n    return base64Decode(data, alphabet);\n  }\n};\nconst base64Url = {\n  encode(data, options = {}) {\n    const alphabet = getAlphabet(true);\n    const buffer = typeof data === \"string\" ? new TextEncoder().encode(data) : new Uint8Array(data);\n    return base64Encode(buffer, alphabet, options.padding ?? true);\n  },\n  decode(data) {\n    const urlSafe = data.includes(\"-\") || data.includes(\"_\");\n    const alphabet = getAlphabet(urlSafe);\n    return base64Decode(data, alphabet);\n  }\n};\n\nexport { base64, base64Url };\n", "const hexadecimal = \"0123456789abcdef\";\nconst hex = {\n  encode: (data) => {\n    if (typeof data === \"string\") {\n      data = new TextEncoder().encode(data);\n    }\n    if (data.byteLength === 0) {\n      return \"\";\n    }\n    const buffer = new Uint8Array(data);\n    let result = \"\";\n    for (const byte of buffer) {\n      result += byte.toString(16).padStart(2, \"0\");\n    }\n    return result;\n  },\n  decode: (data) => {\n    if (!data) {\n      return \"\";\n    }\n    if (typeof data === \"string\") {\n      if (data.length % 2 !== 0) {\n        throw new Error(\"Invalid hexadecimal string\");\n      }\n      if (!new RegExp(`^[${hexadecimal}]+$`).test(data)) {\n        throw new Error(\"Invalid hexadecimal string\");\n      }\n      const result = new Uint8Array(data.length / 2);\n      for (let i = 0; i < data.length; i += 2) {\n        result[i / 2] = parseInt(data.slice(i, i + 2), 16);\n      }\n      return new TextDecoder().decode(result);\n    }\n    return new TextDecoder().decode(data);\n  }\n};\n\nexport { hex };\n", "import { subtle } from 'uncrypto';\nimport { hex } from './hex.mjs';\nimport { base64Url, base64 } from './base64.mjs';\n\nconst createHMAC = (algorithm = \"SHA-256\", encoding = \"none\") => {\n  const hmac = {\n    importKey: async (key, keyUsage) => {\n      return subtle.importKey(\n        \"raw\",\n        typeof key === \"string\" ? new TextEncoder().encode(key) : key,\n        { name: \"HMAC\", hash: { name: algorithm } },\n        false,\n        [keyUsage]\n      );\n    },\n    sign: async (hmacKey, data) => {\n      if (typeof hmacKey === \"string\") {\n        hmacKey = await hmac.importKey(hmacKey, \"sign\");\n      }\n      const signature = await subtle.sign(\n        \"HMAC\",\n        hmacKey,\n        typeof data === \"string\" ? new TextEncoder().encode(data) : data\n      );\n      if (encoding === \"hex\") {\n        return hex.encode(signature);\n      }\n      if (encoding === \"base64\" || encoding === \"base64url\" || encoding === \"base64urlnopad\") {\n        return base64Url.encode(signature, {\n          padding: encoding !== \"base64urlnopad\"\n        });\n      }\n      return signature;\n    },\n    verify: async (hmacKey, data, signature) => {\n      if (typeof hmacKey === \"string\") {\n        hmacKey = await hmac.importKey(hmacKey, \"verify\");\n      }\n      if (encoding === \"hex\") {\n        signature = hex.decode(signature);\n      }\n      if (encoding === \"base64\" || encoding === \"base64url\" || encoding === \"base64urlnopad\") {\n        signature = await base64.decode(signature);\n      }\n      return subtle.verify(\n        \"HMAC\",\n        hmacKey,\n        typeof signature === \"string\" ? new TextEncoder().encode(signature) : signature,\n        typeof data === \"string\" ? new TextEncoder().encode(data) : data\n      );\n    }\n  };\n  return hmac;\n};\n\nexport { createHMAC };\n", "function safeJSONParse(data) {\n  function reviver(_, value) {\n    if (typeof value === \"string\") {\n      const iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$/;\n      if (iso8601Regex.test(value)) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          return date;\n        }\n      }\n    }\n    return value;\n  }\n  try {\n    return JSON.parse(data, reviver);\n  } catch {\n    return null;\n  }\n}\n\nexport { safeJSONParse as s };\n", "import { e as env } from './better-auth.8zoxzg-F.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\n\nfunction checkHasPath(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.pathname !== \"/\";\n  } catch (error) {\n    throw new BetterAuthError(\n      `Invalid base URL: ${url}. Please provide a valid base URL.`\n    );\n  }\n}\nfunction withPath(url, path = \"/api/auth\") {\n  const hasPath = checkHasPath(url);\n  if (hasPath) {\n    return url;\n  }\n  path = path.startsWith(\"/\") ? path : `/${path}`;\n  return `${url.replace(/\\/+$/, \"\")}${path}`;\n}\nfunction getBaseURL(url, path, request) {\n  if (url) {\n    return withPath(url, path);\n  }\n  const fromEnv = env.BETTER_AUTH_URL || env.NEXT_PUBLIC_BETTER_AUTH_URL || env.PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_AUTH_URL || (env.BASE_URL !== \"/\" ? env.BASE_URL : void 0);\n  if (fromEnv) {\n    return withPath(fromEnv, path);\n  }\n  const fromRequest = request?.headers.get(\"x-forwarded-host\");\n  const fromRequestProto = request?.headers.get(\"x-forwarded-proto\");\n  if (fromRequest && fromRequestProto) {\n    return withPath(`${fromRequestProto}://${fromRequest}`, path);\n  }\n  if (request) {\n    const url2 = getOrigin(request.url);\n    if (!url2) {\n      throw new BetterAuthError(\n        \"Could not get origin from request. Please provide a valid base URL.\"\n      );\n    }\n    return withPath(url2, path);\n  }\n  if (typeof window !== \"undefined\" && window.location) {\n    return withPath(window.location.origin, path);\n  }\n  return void 0;\n}\nfunction getOrigin(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.origin;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getProtocol(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getHost(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.host;\n  } catch (error) {\n    return url;\n  }\n}\n\nexport { getBaseURL as a, getHost as b, getProtocol as c, getOrigin as g };\n", "import { B as BetterAuthError } from '../shared/better-auth.DdzSJf-n.mjs';\nimport { g as getDate } from '../shared/better-auth.CW6D9eSx.mjs';\nimport { a as isProduction } from '../shared/better-auth.8zoxzg-F.mjs';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { s as safeJSONParse } from '../shared/better-auth.tB5eU6EY.mjs';\nimport { a as getBaseURL } from '../shared/better-auth.VTXNLFMT.mjs';\n\nconst createTime = (value, format) => {\n  const toMilliseconds = () => {\n    switch (format) {\n      case \"ms\":\n        return value;\n      case \"s\":\n        return value * 1e3;\n      case \"m\":\n        return value * 1e3 * 60;\n      case \"h\":\n        return value * 1e3 * 60 * 60;\n      case \"d\":\n        return value * 1e3 * 60 * 60 * 24;\n      case \"w\":\n        return value * 1e3 * 60 * 60 * 24 * 7;\n      case \"y\":\n        return value * 1e3 * 60 * 60 * 24 * 365;\n    }\n  };\n  const time = {\n    t: `${value}${format}`,\n    value,\n    tFormat: format,\n    toMilliseconds,\n    toSeconds: () => time.toMilliseconds() / 1e3,\n    toMinutes: () => time.toSeconds() / 60,\n    toHours: () => time.toMinutes() / 60,\n    toDays: () => time.toHours() / 24,\n    toWeeks: () => time.toDays() / 7,\n    toYears: () => time.toDays() / 365,\n    getDate: () => new Date(Date.now() + time.toMilliseconds()),\n    add: (other) => {\n      const otherMs = typeof other === \"string\" ? parseTime(other).toMilliseconds() : other.toMilliseconds();\n      return createTime(time.toMilliseconds() + otherMs, \"ms\");\n    },\n    subtract: (other) => {\n      const otherMs = typeof other === \"string\" ? parseTime(other).toMilliseconds() : other.toMilliseconds();\n      return createTime(time.toMilliseconds() - otherMs, \"ms\");\n    },\n    multiply: (factor) => createTime(time.toMilliseconds() * factor, \"ms\"),\n    divide: (divisor) => createTime(time.toMilliseconds() / divisor, \"ms\"),\n    equals: (other) => {\n      const otherMs = typeof other === \"string\" ? parseTime(other).toMilliseconds() : other.toMilliseconds();\n      return time.toMilliseconds() === otherMs;\n    },\n    lessThan: (other) => {\n      const otherMs = typeof other === \"string\" ? parseTime(other).toMilliseconds() : other.toMilliseconds();\n      return time.toMilliseconds() < otherMs;\n    },\n    greaterThan: (other) => {\n      const otherMs = typeof other === \"string\" ? parseTime(other).toMilliseconds() : other.toMilliseconds();\n      return time.toMilliseconds() > otherMs;\n    },\n    format: (pattern) => {\n      const date = time.getDate();\n      return pattern.replace(/YYYY|MM|DD|HH|mm|ss/g, (match) => {\n        switch (match) {\n          case \"YYYY\":\n            return date.getFullYear().toString();\n          case \"MM\":\n            return (date.getMonth() + 1).toString().padStart(2, \"0\");\n          case \"DD\":\n            return date.getDate().toString().padStart(2, \"0\");\n          case \"HH\":\n            return date.getHours().toString().padStart(2, \"0\");\n          case \"mm\":\n            return date.getMinutes().toString().padStart(2, \"0\");\n          case \"ss\":\n            return date.getSeconds().toString().padStart(2, \"0\");\n          default:\n            return match;\n        }\n      });\n    },\n    fromNow: () => {\n      const ms = time.toMilliseconds();\n      if (ms < 0) return time.ago();\n      if (ms < 1e3) return \"in a few seconds\";\n      if (ms < 6e4) return `in ${Math.round(ms / 1e3)} seconds`;\n      if (ms < 36e5) return `in ${Math.round(ms / 6e4)} minutes`;\n      if (ms < 864e5) return `in ${Math.round(ms / 36e5)} hours`;\n      if (ms < 6048e5) return `in ${Math.round(ms / 864e5)} days`;\n      if (ms < 26298e5) return `in ${Math.round(ms / 6048e5)} weeks`;\n      if (ms < 315576e5) return `in ${Math.round(ms / 26298e5)} months`;\n      return `in ${Math.round(ms / 315576e5)} years`;\n    },\n    ago: () => {\n      const ms = -time.toMilliseconds();\n      if (ms < 0) return time.fromNow();\n      if (ms < 1e3) return \"a few seconds ago\";\n      if (ms < 6e4) return `${Math.round(ms / 1e3)} seconds ago`;\n      if (ms < 36e5) return `${Math.round(ms / 6e4)} minutes ago`;\n      if (ms < 864e5) return `${Math.round(ms / 36e5)} hours ago`;\n      if (ms < 6048e5) return `${Math.round(ms / 864e5)} days ago`;\n      if (ms < 26298e5) return `${Math.round(ms / 6048e5)} weeks ago`;\n      if (ms < 315576e5) return `${Math.round(ms / 26298e5)} months ago`;\n      return `${Math.round(ms / 315576e5)} years ago`;\n    }\n  };\n  return time;\n};\nconst parseTime = (time) => {\n  const match = time.match(/^(\\d+)(ms|s|m|h|d|w|y)$/);\n  if (!match) throw new Error(\"Invalid time format\");\n  return createTime(parseInt(match[1]), match[2]);\n};\n\nfunction parseSetCookieHeader(setCookie) {\n  const cookies = /* @__PURE__ */ new Map();\n  const cookieArray = setCookie.split(\", \");\n  cookieArray.forEach((cookieString) => {\n    const parts = cookieString.split(\";\").map((part) => part.trim());\n    const [nameValue, ...attributes] = parts;\n    const [name, ...valueParts] = nameValue.split(\"=\");\n    const value = valueParts.join(\"=\");\n    if (!name || value === void 0) {\n      return;\n    }\n    const attrObj = { value };\n    attributes.forEach((attribute) => {\n      const [attrName, ...attrValueParts] = attribute.split(\"=\");\n      const attrValue = attrValueParts.join(\"=\");\n      const normalizedAttrName = attrName.trim().toLowerCase();\n      switch (normalizedAttrName) {\n        case \"max-age\":\n          attrObj[\"max-age\"] = attrValue ? parseInt(attrValue.trim(), 10) : void 0;\n          break;\n        case \"expires\":\n          attrObj.expires = attrValue ? new Date(attrValue.trim()) : void 0;\n          break;\n        case \"domain\":\n          attrObj.domain = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"path\":\n          attrObj.path = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"secure\":\n          attrObj.secure = true;\n          break;\n        case \"httponly\":\n          attrObj.httponly = true;\n          break;\n        case \"samesite\":\n          attrObj.samesite = attrValue ? attrValue.trim().toLowerCase() : void 0;\n          break;\n        default:\n          attrObj[normalizedAttrName] = attrValue ? attrValue.trim() : true;\n          break;\n      }\n    });\n    cookies.set(name, attrObj);\n  });\n  return cookies;\n}\nfunction setCookieToHeader(headers) {\n  return (context) => {\n    const setCookieHeader = context.response.headers.get(\"set-cookie\");\n    if (!setCookieHeader) {\n      return;\n    }\n    const cookieMap = /* @__PURE__ */ new Map();\n    const existingCookiesHeader = headers.get(\"cookie\") || \"\";\n    existingCookiesHeader.split(\";\").forEach((cookie) => {\n      const [name, ...rest] = cookie.trim().split(\"=\");\n      if (name && rest.length > 0) {\n        cookieMap.set(name, rest.join(\"=\"));\n      }\n    });\n    const setCookieHeaders = setCookieHeader.split(\",\");\n    setCookieHeaders.forEach((header) => {\n      const cookies = parseSetCookieHeader(header);\n      cookies.forEach((value, name) => {\n        cookieMap.set(name, value.value);\n      });\n    });\n    const updatedCookies = Array.from(cookieMap.entries()).map(([name, value]) => `${name}=${value}`).join(\"; \");\n    headers.set(\"cookie\", updatedCookies);\n  };\n}\n\nfunction createCookieGetter(options) {\n  const secure = options.advanced?.useSecureCookies !== void 0 ? options.advanced?.useSecureCookies : options.baseURL !== void 0 ? options.baseURL.startsWith(\"https://\") ? true : false : isProduction;\n  const secureCookiePrefix = secure ? \"__Secure-\" : \"\";\n  const crossSubdomainEnabled = !!options.advanced?.crossSubDomainCookies?.enabled;\n  const domain = crossSubdomainEnabled ? options.advanced?.crossSubDomainCookies?.domain || (options.baseURL ? new URL(options.baseURL).hostname : void 0) : void 0;\n  if (crossSubdomainEnabled && !domain) {\n    throw new BetterAuthError(\n      \"baseURL is required when crossSubdomainCookies are enabled\"\n    );\n  }\n  function createCookie(cookieName, overrideAttributes = {}) {\n    const prefix = options.advanced?.cookiePrefix || \"better-auth\";\n    const name = options.advanced?.cookies?.[cookieName]?.name || `${prefix}.${cookieName}`;\n    const attributes = options.advanced?.cookies?.[cookieName]?.attributes;\n    return {\n      name: `${secureCookiePrefix}${name}`,\n      attributes: {\n        secure: !!secureCookiePrefix,\n        sameSite: \"lax\",\n        path: \"/\",\n        httpOnly: true,\n        ...crossSubdomainEnabled ? { domain } : {},\n        ...options.advanced?.defaultCookieAttributes,\n        ...overrideAttributes,\n        ...attributes\n      }\n    };\n  }\n  return createCookie;\n}\nfunction getCookies(options) {\n  const createCookie = createCookieGetter(options);\n  const sessionMaxAge = options.session?.expiresIn || createTime(7, \"d\").toSeconds();\n  const sessionToken = createCookie(\"session_token\", {\n    maxAge: sessionMaxAge\n  });\n  const sessionData = createCookie(\"session_data\", {\n    maxAge: options.session?.cookieCache?.maxAge || 60 * 5\n  });\n  const dontRememberToken = createCookie(\"dont_remember\");\n  return {\n    sessionToken: {\n      name: sessionToken.name,\n      options: sessionToken.attributes\n    },\n    /**\n     * This cookie is used to store the session data in the cookie\n     * This is useful for when you want to cache the session in the cookie\n     */\n    sessionData: {\n      name: sessionData.name,\n      options: sessionData.attributes\n    },\n    dontRememberToken: {\n      name: dontRememberToken.name,\n      options: dontRememberToken.attributes\n    }\n  };\n}\nasync function setCookieCache(ctx, session) {\n  const shouldStoreSessionDataInCookie = ctx.context.options.session?.cookieCache?.enabled;\n  if (shouldStoreSessionDataInCookie) {\n    const filteredSession = Object.entries(session.session).reduce(\n      (acc, [key, value]) => {\n        const fieldConfig = ctx.context.options.session?.additionalFields?.[key];\n        if (!fieldConfig || fieldConfig.returned !== false) {\n          acc[key] = value;\n        }\n        return acc;\n      },\n      {}\n    );\n    const sessionData = { session: filteredSession, user: session.user };\n    const data = base64Url.encode(\n      JSON.stringify({\n        session: sessionData,\n        expiresAt: getDate(\n          ctx.context.authCookies.sessionData.options.maxAge || 60,\n          \"sec\"\n        ).getTime(),\n        signature: await createHMAC(\"SHA-256\", \"base64urlnopad\").sign(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionData,\n            expiresAt: getDate(\n              ctx.context.authCookies.sessionData.options.maxAge || 60,\n              \"sec\"\n            ).getTime()\n          })\n        )\n      }),\n      {\n        padding: false\n      }\n    );\n    if (data.length > 4093) {\n      throw new BetterAuthError(\n        \"Session data is too large to store in the cookie. Please disable session cookie caching or reduce the size of the session data\"\n      );\n    }\n    ctx.setCookie(\n      ctx.context.authCookies.sessionData.name,\n      data,\n      ctx.context.authCookies.sessionData.options\n    );\n  }\n}\nasync function setSessionCookie(ctx, session, dontRememberMe, overrides) {\n  const dontRememberMeCookie = await ctx.getSignedCookie(\n    ctx.context.authCookies.dontRememberToken.name,\n    ctx.context.secret\n  );\n  dontRememberMe = dontRememberMe !== void 0 ? dontRememberMe : !!dontRememberMeCookie;\n  const options = ctx.context.authCookies.sessionToken.options;\n  const maxAge = dontRememberMe ? void 0 : ctx.context.sessionConfig.expiresIn;\n  await ctx.setSignedCookie(\n    ctx.context.authCookies.sessionToken.name,\n    session.session.token,\n    ctx.context.secret,\n    {\n      ...options,\n      maxAge,\n      ...overrides\n    }\n  );\n  if (dontRememberMe) {\n    await ctx.setSignedCookie(\n      ctx.context.authCookies.dontRememberToken.name,\n      \"true\",\n      ctx.context.secret,\n      ctx.context.authCookies.dontRememberToken.options\n    );\n  }\n  await setCookieCache(ctx, session);\n  ctx.context.setNewSession(session);\n  if (ctx.context.options.secondaryStorage) {\n    await ctx.context.secondaryStorage?.set(\n      session.session.token,\n      JSON.stringify({\n        user: session.user,\n        session: session.session\n      }),\n      Math.floor(\n        (new Date(session.session.expiresAt).getTime() - Date.now()) / 1e3\n      )\n    );\n  }\n}\nfunction deleteSessionCookie(ctx, skipDontRememberMe) {\n  ctx.setCookie(ctx.context.authCookies.sessionToken.name, \"\", {\n    ...ctx.context.authCookies.sessionToken.options,\n    maxAge: 0\n  });\n  ctx.setCookie(ctx.context.authCookies.sessionData.name, \"\", {\n    ...ctx.context.authCookies.sessionData.options,\n    maxAge: 0\n  });\n  if (!skipDontRememberMe) {\n    ctx.setCookie(ctx.context.authCookies.dontRememberToken.name, \"\", {\n      ...ctx.context.authCookies.dontRememberToken.options,\n      maxAge: 0\n    });\n  }\n}\nfunction parseCookies(cookieHeader) {\n  const cookies = cookieHeader.split(\"; \");\n  const cookieMap = /* @__PURE__ */ new Map();\n  cookies.forEach((cookie) => {\n    const [name, value] = cookie.split(\"=\");\n    cookieMap.set(name, value);\n  });\n  return cookieMap;\n}\nconst getSessionCookie = (request, config) => {\n  if (config?.cookiePrefix) {\n    if (config.cookieName) {\n      config.cookiePrefix = `${config.cookiePrefix}-`;\n    } else {\n      config.cookiePrefix = `${config.cookiePrefix}.`;\n    }\n  }\n  const headers = \"headers\" in request ? request.headers : request;\n  const req = request instanceof Request ? request : void 0;\n  getBaseURL(req?.url, config?.path, req);\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_token\", cookiePrefix = \"better-auth.\" } = config || {};\n  const name = `${cookiePrefix}${cookieName}`;\n  const secureCookieName = `__Secure-${name}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionToken = parsedCookie.get(name) || parsedCookie.get(secureCookieName);\n  if (sessionToken) {\n    return sessionToken;\n  }\n  return null;\n};\nconst getCookieCache = (request, config) => {\n  const headers = request instanceof Headers ? request : request.headers;\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_data\", cookiePrefix = \"better-auth\" } = config || {};\n  const name = isProduction ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionData = parsedCookie.get(name);\n  if (sessionData) {\n    return safeJSONParse(sessionData);\n  }\n  return null;\n};\n\nexport { createCookieGetter, deleteSessionCookie, getCookieCache, getCookies, getSessionCookie, parseCookies, parseSetCookieHeader, setCookieCache, setCookieToHeader, setSessionCookie };\n", "export class BetterFetchError extends Error {\n\tconstructor(\n\t\tpublic status: number,\n\t\tpublic statusText: string,\n\t\tpublic error: any,\n\t) {\n\t\tsuper(statusText || status.toString(), {\n\t\t\tcause: error,\n\t\t});\n\t}\n}\n", "import type { StandardSchemaV1 } from \"./standard-schema\";\nimport { Schema } from \"./create-fetch\";\nimport { BetterFetchError } from \"./error\";\nimport type { BetterFetchOption } from \"./types\";\n\nexport type RequestContext<T extends Record<string, any> = any> = {\n\turl: URL | string;\n\theaders: Headers;\n\tbody: any;\n\tmethod: string;\n\tsignal: AbortSignal;\n} & BetterFetchOption<any, any, any, T>;\nexport type ResponseContext = {\n\tresponse: Response;\n\trequest: RequestContext;\n};\nexport type SuccessContext<Res = any> = {\n\tdata: Res;\n\tresponse: Response;\n\trequest: RequestContext;\n};\nexport type ErrorContext = {\n\tresponse: Response;\n\trequest: RequestContext;\n\terror: BetterFetchError & Record<string, any>;\n};\nexport interface FetchHooks<Res = any> {\n\t/**\n\t * a callback function that will be called when a\n\t * request is made.\n\t *\n\t * The returned context object will be reassigned to\n\t * the original request context.\n\t */\n\tonRequest?: <T extends Record<string, any>>(\n\t\tcontext: RequestContext<T>,\n\t) => Promise<RequestContext | void> | RequestContext | void;\n\t/**\n\t * a callback function that will be called when\n\t * response is received. This will be called before\n\t * the response is parsed and returned.\n\t *\n\t * The returned response will be reassigned to the\n\t * original response if it's changed.\n\t */\n\tonResponse?: (\n\t\tcontext: ResponseContext,\n\t) =>\n\t\t| Promise<Response | void | ResponseContext>\n\t\t| Response\n\t\t| ResponseContext\n\t\t| void;\n\t/**\n\t * a callback function that will be called when a\n\t * response is successful.\n\t */\n\tonSuccess?: (context: SuccessContext<Res>) => Promise<void> | void;\n\t/**\n\t * a callback function that will be called when an\n\t * error occurs.\n\t */\n\tonError?: (context: ErrorContext) => Promise<void> | void;\n\t/**\n\t * a callback function that will be called when a\n\t * request is retried.\n\t */\n\tonRetry?: (response: ResponseContext) => Promise<void> | void;\n\t/**\n\t * Options for the hooks\n\t */\n\thookOptions?: {\n\t\t/**\n\t\t * Clone the response\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Response/clone\n\t\t */\n\t\tcloneResponse?: boolean;\n\t};\n}\n\n/**\n * A plugin that returns an id and hooks\n */\nexport type BetterFetchPlugin = {\n\t/**\n\t * A unique id for the plugin\n\t */\n\tid: string;\n\t/**\n\t * A name for the plugin\n\t */\n\tname: string;\n\t/**\n\t * A description for the plugin\n\t */\n\tdescription?: string;\n\t/**\n\t * A version for the plugin\n\t */\n\tversion?: string;\n\t/**\n\t * Hooks for the plugin\n\t */\n\thooks?: FetchHooks;\n\t/**\n\t * A function that will be called when the plugin is\n\t * initialized. This will be called before the any\n\t * of the other internal functions.\n\t *\n\t * The returned options will be merged with the\n\t * original options.\n\t */\n\tinit?: (\n\t\turl: string,\n\t\toptions?: BetterFetchOption,\n\t) =>\n\t\t| Promise<{\n\t\t\t\turl: string;\n\t\t\t\toptions?: BetterFetchOption;\n\t\t  }>\n\t\t| {\n\t\t\t\turl: string;\n\t\t\t\toptions?: BetterFetchOption;\n\t\t  };\n\t/**\n\t * A schema for the plugin\n\t */\n\tschema?: Schema;\n\t/**\n\t * Additional options that can be passed to the plugin\n\t */\n\tgetOptions?: () => StandardSchemaV1;\n};\n\nexport const initializePlugins = async (\n\turl: string,\n\toptions?: BetterFetchOption,\n) => {\n\tlet opts = options || {};\n\tconst hooks: {\n\t\tonRequest: Array<FetchHooks[\"onRequest\"]>;\n\t\tonResponse: Array<FetchHooks[\"onResponse\"]>;\n\t\tonSuccess: Array<FetchHooks[\"onSuccess\"]>;\n\t\tonError: Array<FetchHooks[\"onError\"]>;\n\t\tonRetry: Array<FetchHooks[\"onRetry\"]>;\n\t} = {\n\t\tonRequest: [options?.onRequest],\n\t\tonResponse: [options?.onResponse],\n\t\tonSuccess: [options?.onSuccess],\n\t\tonError: [options?.onError],\n\t\tonRetry: [options?.onRetry],\n\t};\n\tif (!options || !options?.plugins) {\n\t\treturn {\n\t\t\turl,\n\t\t\toptions: opts,\n\t\t\thooks,\n\t\t};\n\t}\n\tfor (const plugin of options?.plugins || []) {\n\t\tif (plugin.init) {\n\t\t\tconst pluginRes = await plugin.init?.(url.toString(), options);\n\t\t\topts = pluginRes.options || opts;\n\t\t\turl = pluginRes.url;\n\t\t}\n\t\thooks.onRequest.push(plugin.hooks?.onRequest);\n\t\thooks.onResponse.push(plugin.hooks?.onResponse);\n\t\thooks.onSuccess.push(plugin.hooks?.onSuccess);\n\t\thooks.onError.push(plugin.hooks?.onError);\n\t\thooks.onRetry.push(plugin.hooks?.onRetry);\n\t}\n\n\treturn {\n\t\turl,\n\t\toptions: opts,\n\t\thooks,\n\t};\n};\n", "export type RetryCondition = (\n\tresponse: Response | null,\n) => boolean | Promise<boolean>;\n\nexport type LinearRetry = {\n\ttype: \"linear\";\n\tattempts: number;\n\tdelay: number;\n\tshouldRetry?: RetryCondition;\n};\n\nexport type ExponentialRetry = {\n\ttype: \"exponential\";\n\tattempts: number;\n\tbaseDelay: number;\n\tmaxDelay: number;\n\tshouldRetry?: RetryCondition;\n};\n\nexport type RetryOptions = LinearRetry | ExponentialRetry | number;\n\nexport interface RetryStrategy {\n\tshouldAttemptRetry(\n\t\tattempt: number,\n\t\tresponse: Response | null,\n\t): Promise<boolean>;\n\tgetDelay(attempt: number): number;\n}\n\nclass LinearRetryStrategy implements RetryStrategy {\n\tconstructor(private options: LinearRetry) {}\n\n\tshouldAttemptRetry(\n\t\tattempt: number,\n\t\tresponse: Response | null,\n\t): Promise<boolean> {\n\t\tif (this.options.shouldRetry) {\n\t\t\treturn Promise.resolve(\n\t\t\t\tattempt < this.options.attempts && this.options.shouldRetry(response),\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(attempt < this.options.attempts);\n\t}\n\n\tgetDelay(): number {\n\t\treturn this.options.delay;\n\t}\n}\n\nclass ExponentialRetryStrategy implements RetryStrategy {\n\tconstructor(private options: ExponentialRetry) {}\n\n\tshouldAttemptRetry(\n\t\tattempt: number,\n\t\tresponse: Response | null,\n\t): Promise<boolean> {\n\t\tif (this.options.shouldRetry) {\n\t\t\treturn Promise.resolve(\n\t\t\t\tattempt < this.options.attempts && this.options.shouldRetry(response),\n\t\t\t);\n\t\t}\n\t\treturn Promise.resolve(attempt < this.options.attempts);\n\t}\n\n\tgetDelay(attempt: number): number {\n\t\tconst delay = Math.min(\n\t\t\tthis.options.maxDelay,\n\t\t\tthis.options.baseDelay * 2 ** attempt,\n\t\t);\n\t\treturn delay;\n\t}\n}\n\nexport function createRetryStrategy(options: RetryOptions): RetryStrategy {\n\tif (typeof options === \"number\") {\n\t\treturn new LinearRetryStrategy({\n\t\t\ttype: \"linear\",\n\t\t\tattempts: options,\n\t\t\tdelay: 1000,\n\t\t});\n\t}\n\n\tswitch (options.type) {\n\t\tcase \"linear\":\n\t\t\treturn new LinearRetryStrategy(options);\n\t\tcase \"exponential\":\n\t\t\treturn new ExponentialRetryStrategy(options);\n\t\tdefault:\n\t\t\tthrow new Error(\"Invalid retry strategy\");\n\t}\n}\n", "import type { BetterFetchOption } from \"./types\";\n\nexport type typeOrTypeReturning<T> = T | (() => T);\n/**\n * Bearer token authentication\n *\n * the value of `token` will be added to a header as\n * `auth: Bearer token`,\n */\nexport type Bearer = {\n\ttype: \"Bearer\";\n\ttoken: typeOrTypeReturning<string | undefined | Promise<string | undefined>>;\n};\n\n/**\n * Basic auth\n */\nexport type Basic = {\n\ttype: \"Basic\";\n\tusername: typeOrTypeReturning<string | undefined>;\n\tpassword: typeOrTypeReturning<string | undefined>;\n};\n\n/**\n * Custom auth\n *\n * @param prefix - prefix of the header\n * @param value - value of the header\n *\n * @example\n * ```ts\n * {\n *  type: \"Custom\",\n *  prefix: \"Token\",\n *  value: \"token\"\n * }\n * ```\n */\nexport type Custom = {\n\ttype: \"Custom\";\n\tprefix: typeOrTypeReturning<string | undefined>;\n\tvalue: typeOrTypeReturning<string | undefined>;\n};\n\nexport type Auth = Bearer | Basic | Custom;\n\nexport const getAuthHeader = async (options?: BetterFetchOption) => {\n\tconst headers: Record<string, string> = {};\n\tconst getValue = async (\n\t\tvalue: typeOrTypeReturning<\n\t\t\tstring | undefined | Promise<string | undefined>\n\t\t>,\n\t) => (typeof value === \"function\" ? await value() : value);\n\tif (options?.auth) {\n\t\tif (options.auth.type === \"Bearer\") {\n\t\t\tconst token = await getValue(options.auth.token);\n\t\t\tif (!token) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\theaders[\"authorization\"] = `Bearer ${token}`;\n\t\t} else if (options.auth.type === \"Basic\") {\n\t\t\tconst username = getValue(options.auth.username);\n\t\t\tconst password = getValue(options.auth.password);\n\t\t\tif (!username || !password) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\theaders[\"authorization\"] = `Basic ${btoa(`${username}:${password}`)}`;\n\t\t} else if (options.auth.type === \"Custom\") {\n\t\t\tconst value = getValue(options.auth.value);\n\t\t\tif (!value) {\n\t\t\t\treturn headers;\n\t\t\t}\n\t\t\theaders[\"authorization\"] = `${getValue(options.auth.prefix)} ${value}`;\n\t\t}\n\t}\n\treturn headers;\n};\n", "import type { StandardSchemaV1 } from \"./standard-schema\";\nimport { getAuthHeader } from \"./auth\";\nimport { methods } from \"./create-fetch\";\nimport type { BetterFetchOption, FetchEsque } from \"./types\";\n\nconst JSON_RE = /^application\\/(?:[\\w!#$%&*.^`~-]*\\+)?json(;.+)?$/i;\n\nexport type ResponseType = \"json\" | \"text\" | \"blob\";\nexport function detectResponseType(request: Response): ResponseType {\n\tconst _contentType = request.headers.get(\"content-type\");\n\tconst textTypes = new Set([\n\t\t\"image/svg\",\n\t\t\"application/xml\",\n\t\t\"application/xhtml\",\n\t\t\"application/html\",\n\t]);\n\tif (!_contentType) {\n\t\treturn \"json\";\n\t}\n\tconst contentType = _contentType.split(\";\").shift() || \"\";\n\tif (JSON_RE.test(contentType)) {\n\t\treturn \"json\";\n\t}\n\tif (textTypes.has(contentType) || contentType.startsWith(\"text/\")) {\n\t\treturn \"text\";\n\t}\n\treturn \"blob\";\n}\n\nexport function isJSONParsable(value: any) {\n\ttry {\n\t\tJSON.parse(value);\n\t\treturn true;\n\t} catch (error) {\n\t\treturn false;\n\t}\n}\n\n//https://github.com/unjs/ofetch/blob/main/src/utils.ts\nexport function isJSONSerializable(value: any) {\n\tif (value === undefined) {\n\t\treturn false;\n\t}\n\tconst t = typeof value;\n\tif (t === \"string\" || t === \"number\" || t === \"boolean\" || t === null) {\n\t\treturn true;\n\t}\n\tif (t !== \"object\") {\n\t\treturn false;\n\t}\n\tif (Array.isArray(value)) {\n\t\treturn true;\n\t}\n\tif (value.buffer) {\n\t\treturn false;\n\t}\n\treturn (\n\t\t(value.constructor && value.constructor.name === \"Object\") ||\n\t\ttypeof value.toJSON === \"function\"\n\t);\n}\n\nexport function jsonParse(text: string) {\n\ttry {\n\t\treturn JSON.parse(text);\n\t} catch (error) {\n\t\treturn text;\n\t}\n}\n\nexport function isFunction(value: any): value is () => any {\n\treturn typeof value === \"function\";\n}\n\nexport function getFetch(options?: BetterFetchOption): FetchEsque {\n\tif (options?.customFetchImpl) {\n\t\treturn options.customFetchImpl;\n\t}\n\tif (typeof globalThis !== \"undefined\" && isFunction(globalThis.fetch)) {\n\t\treturn globalThis.fetch;\n\t}\n\tif (typeof window !== \"undefined\" && isFunction(window.fetch)) {\n\t\treturn window.fetch;\n\t}\n\tthrow new Error(\"No fetch implementation found\");\n}\n\nexport function isPayloadMethod(method?: string) {\n\tif (!method) {\n\t\treturn false;\n\t}\n\tconst payloadMethod = [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\n\treturn payloadMethod.includes(method.toUpperCase());\n}\n\nexport function isRouteMethod(method?: string) {\n\tconst routeMethod = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\n\tif (!method) {\n\t\treturn false;\n\t}\n\treturn routeMethod.includes(method.toUpperCase());\n}\n\nexport async function getHeaders(opts?: BetterFetchOption) {\n\tconst headers = new Headers(opts?.headers);\n\tconst authHeader = await getAuthHeader(opts);\n\tfor (const [key, value] of Object.entries(authHeader || {})) {\n\t\theaders.set(key, value);\n\t}\n\tif (!headers.has(\"content-type\")) {\n\t\tconst t = detectContentType(opts?.body);\n\t\tif (t) {\n\t\t\theaders.set(\"content-type\", t);\n\t\t}\n\t}\n\n\treturn headers;\n}\n\nexport function getURL(url: string, options?: BetterFetchOption) {\n\tif (url.startsWith(\"@\")) {\n\t\tconst m = url.toString().split(\"@\")[1].split(\"/\")[0];\n\t\tif (methods.includes(m)) {\n\t\t\turl = url.replace(`@${m}/`, \"/\");\n\t\t}\n\t}\n\tlet _url: string | URL;\n\ttry {\n\t\tif (url.startsWith(\"http\")) {\n\t\t\t_url = url;\n\t\t} else {\n\t\t\tlet baseURL = options?.baseURL;\n\t\t\tif (baseURL && !baseURL?.endsWith(\"/\")) {\n\t\t\t\tbaseURL = baseURL + \"/\";\n\t\t\t}\n\t\t\tif (url.startsWith(\"/\")) {\n\t\t\t\t_url = new URL(url.substring(1), baseURL);\n\t\t\t} else {\n\t\t\t\t_url = new URL(url, options?.baseURL);\n\t\t\t}\n\t\t}\n\t} catch (e) {\n\t\tif (e instanceof TypeError) {\n\t\t\tif (!options?.baseURL) {\n\t\t\t\tthrow TypeError(\n\t\t\t\t\t`Invalid URL ${url}. Are you passing in a relative url but not setting the baseURL?`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tthrow TypeError(\n\t\t\t\t`Invalid URL ${url}. Please validate that you are passing the correct input.`,\n\t\t\t);\n\t\t}\n\t\tthrow e;\n\t}\n\n\t/**\n\t * Dynamic Parameters.\n\t */\n\tif (options?.params) {\n\t\tif (Array.isArray(options?.params)) {\n\t\t\tconst params = options?.params\n\t\t\t\t? Array.isArray(options.params)\n\t\t\t\t\t? `/${options.params.join(\"/\")}`\n\t\t\t\t\t: `/${Object.values(options.params).join(\"/\")}`\n\t\t\t\t: \"\";\n\t\t\t_url = _url.toString().split(\"/:\")[0];\n\t\t\t_url = `${_url.toString()}${params}`;\n\t\t} else {\n\t\t\tfor (const [key, value] of Object.entries(options?.params)) {\n\t\t\t\t_url = _url.toString().replace(`:${key}`, String(value));\n\t\t\t}\n\t\t}\n\t}\n\tconst __url = new URL(_url);\n\t/**\n\t * Query Parameters\n\t */\n\tconst queryParams = options?.query;\n\tif (queryParams) {\n\t\tfor (const [key, value] of Object.entries(queryParams)) {\n\t\t\t__url.searchParams.append(key, String(value));\n\t\t}\n\t}\n\treturn __url;\n}\n\nexport function detectContentType(body: any) {\n\tif (isJSONSerializable(body)) {\n\t\treturn \"application/json\";\n\t}\n\n\treturn null;\n}\n\nexport function getBody(options?: BetterFetchOption) {\n\tif (!options?.body) {\n\t\treturn null;\n\t}\n\tconst headers = new Headers(options?.headers);\n\tif (isJSONSerializable(options.body) && !headers.has(\"content-type\")) {\n\t\tfor (const [key, value] of Object.entries(options?.body)) {\n\t\t\tif (value instanceof Date) {\n\t\t\t\toptions.body[key] = value.toISOString();\n\t\t\t}\n\t\t}\n\t\treturn JSON.stringify(options.body);\n\t}\n\n\treturn options.body;\n}\n\nexport function getMethod(url: string, options?: BetterFetchOption) {\n\tif (options?.method) {\n\t\treturn options.method.toUpperCase();\n\t}\n\tif (url.startsWith(\"@\")) {\n\t\tconst pMethod = url.split(\"@\")[1]?.split(\"/\")[0];\n\t\tif (!methods.includes(pMethod)) {\n\t\t\treturn options?.body ? \"POST\" : \"GET\";\n\t\t}\n\t\treturn pMethod.toUpperCase();\n\t}\n\treturn options?.body ? \"POST\" : \"GET\";\n}\n\nexport function getTimeout(\n\toptions?: BetterFetchOption,\n\tcontroller?: AbortController,\n) {\n\tlet abortTimeout: ReturnType<typeof setTimeout> | undefined;\n\tif (!options?.signal && options?.timeout) {\n\t\tabortTimeout = setTimeout(() => controller?.abort(), options?.timeout);\n\t}\n\treturn {\n\t\tabortTimeout,\n\t\tclearTimeout: () => {\n\t\t\tif (abortTimeout) {\n\t\t\t\tclearTimeout(abortTimeout);\n\t\t\t}\n\t\t},\n\t};\n}\n\nexport function bodyParser(data: any, responseType: ResponseType) {\n\tif (responseType === \"json\") {\n\t\treturn JSON.parse(data);\n\t}\n\treturn data;\n}\n\nexport class ValidationError extends Error {\n\tpublic readonly issues: ReadonlyArray<StandardSchemaV1.Issue>;\n\n\tconstructor(issues: ReadonlyArray<StandardSchemaV1.Issue>, message?: string) {\n\t\t// Default message fallback in case one isn't supplied.\n\t\tsuper(message || JSON.stringify(issues, null, 2));\n\t\tthis.issues = issues;\n\n\t\t// Set the prototype explicitly to ensure that instanceof works correctly.\n\t\tObject.setPrototypeOf(this, ValidationError.prototype);\n\t}\n}\n\nexport async function parseStandardSchema<TSchema extends StandardSchemaV1>(\n\tschema: TSchema,\n\tinput: StandardSchemaV1.InferInput<TSchema>,\n): Promise<StandardSchemaV1.InferOutput<TSchema>> {\n\tlet result = await schema[\"~standard\"].validate(input);\n\n\tif (result.issues) {\n\t\tthrow new ValidationError(result.issues);\n\t}\n\treturn result.value;\n}\n", "import type { StandardSchemaV1 } from \"../standard-schema\";\nimport type { StringLiteralUnion } from \"../type-utils\";\n\nexport type FetchSchema = {\n\tinput?: StandardSchemaV1;\n\toutput?: StandardSchemaV1;\n\tquery?: StandardSchemaV1;\n\tparams?: StandardSchemaV1<Record<string, unknown>> | undefined;\n\tmethod?: Methods;\n};\n\nexport type Methods = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\n\nexport const methods = [\"get\", \"post\", \"put\", \"patch\", \"delete\"];\n\ntype RouteKey = StringLiteralUnion<`@${Methods}/`>;\n\nexport type FetchSchemaRoutes = {\n\t[key in RouteKey]?: FetchSchema;\n};\n\nexport const createSchema = <\n\tF extends FetchSchemaRoutes,\n\tS extends SchemaConfig,\n>(\n\tschema: F,\n\tconfig?: S,\n) => {\n\treturn {\n\t\tschema: schema as F,\n\t\tconfig: config as S,\n\t};\n};\n\nexport type SchemaConfig = {\n\tstrict?: boolean;\n\t/**\n\t * A prefix that will be prepended when it's\n\t * calling the schema.\n\t *\n\t * NOTE: Make sure to handle converting\n\t * the prefix to the baseURL in the init\n\t * function if you you are defining for a\n\t * plugin.\n\t */\n\tprefix?: \"\" | (string & Record<never, never>);\n\t/**\n\t * The base url of the schema. By default it's the baseURL of the fetch instance.\n\t */\n\tbaseURL?: \"\" | (string & Record<never, never>);\n};\n\nexport type Schema = {\n\tschema: FetchSchemaRoutes;\n\tconfig: SchemaConfig;\n};\n", "import { betterFetch } from \"../fetch\";\nimport { BetterFetchPlugin } from \"../plugins\";\nimport type { BetterFetchOption } from \"../types\";\nimport { parseStandardSchema } from \"../utils\";\nimport type { BetterFetch, CreateFetchOption } from \"./types\";\n\nexport const applySchemaPlugin = (config: CreateFetchOption) =>\n\t({\n\t\tid: \"apply-schema\",\n\t\tname: \"Apply Schema\",\n\t\tversion: \"1.0.0\",\n\t\tasync init(url, options) {\n\t\t\tconst schema =\n\t\t\t\tconfig.plugins?.find((plugin) =>\n\t\t\t\t\tplugin.schema?.config\n\t\t\t\t\t\t? url.startsWith(plugin.schema.config.baseURL || \"\") ||\n\t\t\t\t\t\t\turl.startsWith(plugin.schema.config.prefix || \"\")\n\t\t\t\t\t\t: false,\n\t\t\t\t)?.schema || config.schema;\n\t\t\tif (schema) {\n\t\t\t\tlet urlKey = url;\n\t\t\t\tif (schema.config?.prefix) {\n\t\t\t\t\tif (urlKey.startsWith(schema.config.prefix)) {\n\t\t\t\t\t\turlKey = urlKey.replace(schema.config.prefix, \"\");\n\t\t\t\t\t\tif (schema.config.baseURL) {\n\t\t\t\t\t\t\turl = url.replace(schema.config.prefix, schema.config.baseURL);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (schema.config?.baseURL) {\n\t\t\t\t\tif (urlKey.startsWith(schema.config.baseURL)) {\n\t\t\t\t\t\turlKey = urlKey.replace(schema.config.baseURL, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst keySchema = schema.schema[urlKey];\n\t\t\t\tif (keySchema) {\n\t\t\t\t\tlet opts = {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\tmethod: keySchema.method,\n\t\t\t\t\t\toutput: keySchema.output,\n\t\t\t\t\t};\n\t\t\t\t\tif (!options?.disableValidation) {\n\t\t\t\t\t\topts = {\n\t\t\t\t\t\t\t...opts,\n\t\t\t\t\t\t\tbody: keySchema.input\n\t\t\t\t\t\t\t\t? await parseStandardSchema(keySchema.input, options?.body)\n\t\t\t\t\t\t\t\t: options?.body,\n\t\t\t\t\t\t\tparams: keySchema.params\n\t\t\t\t\t\t\t\t? await parseStandardSchema(keySchema.params, options?.params)\n\t\t\t\t\t\t\t\t: options?.params,\n\t\t\t\t\t\t\tquery: keySchema.query\n\t\t\t\t\t\t\t\t? await parseStandardSchema(keySchema.query, options?.query)\n\t\t\t\t\t\t\t\t: options?.query,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\turl,\n\t\t\t\t\t\toptions: opts,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\turl,\n\t\t\t\toptions,\n\t\t\t};\n\t\t},\n\t}) satisfies BetterFetchPlugin;\n\nexport const createFetch = <Option extends CreateFetchOption>(\n\tconfig?: Option,\n) => {\n\tasync function $fetch(url: string, options?: BetterFetchOption) {\n\t\tconst opts = {\n\t\t\t...config,\n\t\t\t...options,\n\t\t\tplugins: [...(config?.plugins || []), applySchemaPlugin(config || {})],\n\t\t} as BetterFetchOption;\n\n\t\tif (config?.catchAllError) {\n\t\t\ttry {\n\t\t\t\treturn await betterFetch(url, opts);\n\t\t\t} catch (error) {\n\t\t\t\treturn {\n\t\t\t\t\tdata: null,\n\t\t\t\t\terror: {\n\t\t\t\t\t\tstatus: 500,\n\t\t\t\t\t\tstatusText: \"Fetch Error\",\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\"Fetch related error. Captured by catchAllError option. See error property for more details.\",\n\t\t\t\t\t\terror,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn await betterFetch(url, opts);\n\t}\n\treturn $fetch as BetterFetch<Option>;\n};\n\nexport * from \"./schema\";\nexport * from \"./types\";\n", "import { methods } from \"./create-fetch\";\nimport { BetterFetchOption } from \"./types\";\n\n/**\n * Normalize URL\n */\nexport function getURL(url: string, option?: BetterFetchOption) {\n\tlet { baseURL, params, query } = option || {\n\t\tquery: {},\n\t\tparams: {},\n\t\tbaseURL: \"\",\n\t};\n\tlet basePath = url.startsWith(\"http\")\n\t\t? url.split(\"/\").slice(0, 3).join(\"/\")\n\t\t: baseURL || \"\";\n\n\t/**\n\t * Remove method modifiers\n\t */\n\tif (url.startsWith(\"@\")) {\n\t\tconst m = url.toString().split(\"@\")[1].split(\"/\")[0];\n\t\tif (methods.includes(m)) {\n\t\t\turl = url.replace(`@${m}/`, \"/\");\n\t\t}\n\t}\n\n\tif (!basePath.endsWith(\"/\")) basePath += \"/\";\n\tlet [path, urlQuery] = url.replace(basePath, \"\").split(\"?\");\n\tconst queryParams = new URLSearchParams(urlQuery);\n\tfor (const [key, value] of Object.entries(query || {})) {\n\t\tif (value == null) continue;\n\t\tqueryParams.set(key, String(value));\n\t}\n\tif (params) {\n\t\tif (Array.isArray(params)) {\n\t\t\tconst paramPaths = path.split(\"/\").filter((p) => p.startsWith(\":\"));\n\t\t\tfor (const [index, key] of paramPaths.entries()) {\n\t\t\t\tconst value = params[index];\n\t\t\t\tpath = path.replace(key, value);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\t\tpath = path.replace(`:${key}`, String(value));\n\t\t\t}\n\t\t}\n\t}\n\n\tpath = path.split(\"/\").map(encodeURIComponent).join(\"/\");\n\tif (path.startsWith(\"/\")) path = path.slice(1);\n\tlet queryParamString = queryParams.toString();\n\tqueryParamString =\n\t\tqueryParamString.length > 0 ? `?${queryParamString}`.replace(/\\+/g, \"%20\") : \"\";\n\tif (!basePath.startsWith(\"http\")) {\n\t\treturn `${basePath}${path}${queryParamString}`;\n\t}\n\tconst _url = new URL(`${path}${queryParamString}`, basePath);\n\treturn _url;\n}\n", "import type { StandardSchemaV1 } from \"./standard-schema\";\nimport { BetterFetchError } from \"./error\";\nimport { initializePlugins } from \"./plugins\";\nimport { createRetryStrategy } from \"./retry\";\nimport type { BetterFetchOption, BetterFetchResponse } from \"./types\";\nimport { getURL } from \"./url\";\nimport {\n\tdetectResponseType,\n\tgetBody,\n\tgetFetch,\n\tgetHeaders,\n\tgetMethod,\n\tgetTimeout,\n\tisJSONParsable,\n\tjsonParse,\n\tparseStandardSchema,\n} from \"./utils\";\n\nexport const betterFetch = async <\n\tTRes extends Option[\"output\"] extends StandardSchemaV1\n\t\t? StandardSchemaV1.InferOutput<Option[\"output\"]>\n\t\t: unknown,\n\tTErr = unknown,\n\tOption extends BetterFetchOption = BetterFetchOption<any, any, any, TRes>,\n>(\n\turl: string,\n\toptions?: Option,\n): Promise<\n\tBetterFetchResponse<\n\t\tTRes,\n\t\tTErr,\n\t\tOption[\"throw\"] extends true ? true : TErr extends false ? true : false\n\t>\n> => {\n\tconst {\n\t\thooks,\n\t\turl: __url,\n\t\toptions: opts,\n\t} = await initializePlugins(url, options);\n\tconst fetch = getFetch(opts);\n\tconst controller = new AbortController();\n\tconst signal = opts.signal ?? controller.signal;\n\tconst _url = getURL(__url, opts);\n\tconst body = getBody(opts);\n\tconst headers = await getHeaders(opts);\n\tconst method = getMethod(__url, opts);\n\tlet context = {\n\t\t...opts,\n\t\turl: _url,\n\t\theaders,\n\t\tbody,\n\t\tmethod,\n\t\tsignal,\n\t};\n\t/**\n\t * Run all on request hooks\n\t */\n\tfor (const onRequest of hooks.onRequest) {\n\t\tif (onRequest) {\n\t\t\tconst res = await onRequest(context);\n\t\t\tif (res instanceof Object) {\n\t\t\t\tcontext = res;\n\t\t\t}\n\t\t}\n\t}\n\tif (\n\t\t(\"pipeTo\" in (context as any) &&\n\t\t\ttypeof (context as any).pipeTo === \"function\") ||\n\t\ttypeof options?.body?.pipe === \"function\"\n\t) {\n\t\tif (!(\"duplex\" in context)) {\n\t\t\tcontext.duplex = \"half\";\n\t\t}\n\t}\n\n\tconst { clearTimeout } = getTimeout(opts, controller);\n\tlet response = await fetch(context.url, context);\n\tclearTimeout();\n\n\tconst responseContext = {\n\t\tresponse,\n\t\trequest: context,\n\t};\n\n\tfor (const onResponse of hooks.onResponse) {\n\t\tif (onResponse) {\n\t\t\tconst r = await onResponse({\n\t\t\t\t...responseContext,\n\t\t\t\tresponse: options?.hookOptions?.cloneResponse\n\t\t\t\t\t? response.clone()\n\t\t\t\t\t: response,\n\t\t\t});\n\t\t\tif (r instanceof Response) {\n\t\t\t\tresponse = r;\n\t\t\t} else if (r instanceof Object) {\n\t\t\t\tresponse = r.response;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * OK Branch\n\t */\n\tif (response.ok) {\n\t\tconst hasBody = context.method !== \"HEAD\";\n\t\tif (!hasBody) {\n\t\t\treturn {\n\t\t\t\tdata: \"\" as any,\n\t\t\t\terror: null,\n\t\t\t} as any;\n\t\t}\n\t\tconst responseType = detectResponseType(response);\n\t\tconst successContext = {\n\t\t\tdata: \"\" as any,\n\t\t\tresponse,\n\t\t\trequest: context,\n\t\t};\n\t\tif (responseType === \"json\" || responseType === \"text\") {\n\t\t\tconst text = await response.text();\n\t\t\tconst parser = context.jsonParser ?? jsonParse;\n\t\t\tconst data = await parser(text);\n\t\t\tsuccessContext.data = data;\n\t\t} else {\n\t\t\tsuccessContext.data = await response[responseType]();\n\t\t}\n\n\t\t/**\n\t\t * Parse the data if the output schema is defined\n\t\t */\n\t\tif (context?.output) {\n\t\t\tif (context.output && !context.disableValidation) {\n\t\t\t\tsuccessContext.data = await parseStandardSchema(\n\t\t\t\t\tcontext.output as StandardSchemaV1,\n\t\t\t\t\tsuccessContext.data,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfor (const onSuccess of hooks.onSuccess) {\n\t\t\tif (onSuccess) {\n\t\t\t\tawait onSuccess({\n\t\t\t\t\t...successContext,\n\t\t\t\t\tresponse: options?.hookOptions?.cloneResponse\n\t\t\t\t\t\t? response.clone()\n\t\t\t\t\t\t: response,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (options?.throw) {\n\t\t\treturn successContext.data as any;\n\t\t}\n\n\t\treturn {\n\t\t\tdata: successContext.data,\n\t\t\terror: null,\n\t\t} as any;\n\t}\n\tconst parser = options?.jsonParser ?? jsonParse;\n\tconst responseText = await response.text();\n\tconst isJSONResponse = isJSONParsable(responseText);\n\tconst errorObject = isJSONResponse ? await parser(responseText) : null;\n\t/**\n\t * Error Branch\n\t */\n\tconst errorContext = {\n\t\tresponse,\n\t\tresponseText,\n\t\trequest: context,\n\t\terror: {\n\t\t\t...errorObject,\n\t\t\tstatus: response.status,\n\t\t\tstatusText: response.statusText,\n\t\t},\n\t};\n\tfor (const onError of hooks.onError) {\n\t\tif (onError) {\n\t\t\tawait onError({\n\t\t\t\t...errorContext,\n\t\t\t\tresponse: options?.hookOptions?.cloneResponse\n\t\t\t\t\t? response.clone()\n\t\t\t\t\t: response,\n\t\t\t});\n\t\t}\n\t}\n\n\tif (options?.retry) {\n\t\tconst retryStrategy = createRetryStrategy(options.retry);\n\t\tconst _retryAttempt = options.retryAttempt ?? 0;\n\t\tif (await retryStrategy.shouldAttemptRetry(_retryAttempt, response)) {\n\t\t\tfor (const onRetry of hooks.onRetry) {\n\t\t\t\tif (onRetry) {\n\t\t\t\t\tawait onRetry(responseContext);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst delay = retryStrategy.getDelay(_retryAttempt);\n\t\t\tawait new Promise((resolve) => setTimeout(resolve, delay));\n\t\t\treturn await betterFetch(url, {\n\t\t\t\t...options,\n\t\t\t\tretryAttempt: _retryAttempt + 1,\n\t\t\t});\n\t\t}\n\t}\n\n\tif (options?.throw) {\n\t\tthrow new BetterFetchError(\n\t\t\tresponse.status,\n\t\t\tresponse.statusText,\n\t\t\tisJSONResponse ? errorObject : responseText,\n\t\t);\n\t}\n\treturn {\n\t\tdata: null,\n\t\terror: {\n\t\t\t...errorObject,\n\t\t\tstatus: response.status,\n\t\t\tstatusText: response.statusText,\n\t\t},\n\t} as any;\n};\n", "export default crypto;\nexport const isCryptoKey = (key) => key instanceof CryptoKey;\n", "import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "export class JOSEError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.code = 'ERR_JOSE_GENERIC';\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nJOSEError.code = 'ERR_JOSE_GENERIC';\nexport class JWTClaimValidationFailed extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTClaimValidationFailed.code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\nexport class JWTExpired extends JOSEError {\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.code = 'ERR_JWT_EXPIRED';\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nJWTExpired.code = 'ERR_JWT_EXPIRED';\nexport class JOSEAlgNotAllowed extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n}\nJOSEAlgNotAllowed.code = 'ERR_JOSE_ALG_NOT_ALLOWED';\nexport class JOSENotSupported extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JOSE_NOT_SUPPORTED';\n    }\n}\nJOSENotSupported.code = 'ERR_JOSE_NOT_SUPPORTED';\nexport class JWEDecryptionFailed extends JOSEError {\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWE_DECRYPTION_FAILED';\n    }\n}\nJWEDecryptionFailed.code = 'ERR_JWE_DECRYPTION_FAILED';\nexport class JWEInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWE_INVALID';\n    }\n}\nJWEInvalid.code = 'ERR_JWE_INVALID';\nexport class JWSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWS_INVALID';\n    }\n}\nJWSInvalid.code = 'ERR_JWS_INVALID';\nexport class JWTInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWT_INVALID';\n    }\n}\nJWTInvalid.code = 'ERR_JWT_INVALID';\nexport class JWKInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWK_INVALID';\n    }\n}\nJWKInvalid.code = 'ERR_JWK_INVALID';\nexport class JWKSInvalid extends JOSEError {\n    constructor() {\n        super(...arguments);\n        this.code = 'ERR_JWKS_INVALID';\n    }\n}\nJWKSInvalid.code = 'ERR_JWKS_INVALID';\nexport class JWKSNoMatchingKey extends JOSEError {\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n}\nJWKSNoMatchingKey.code = 'ERR_JWKS_NO_MATCHING_KEY';\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n}\nSymbol.asyncIterator;\nJWKSMultipleMatchingKeys.code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\nexport class JWKSTimeout extends JOSEError {\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n        this.code = 'ERR_JWKS_TIMEOUT';\n    }\n}\nJWKSTimeout.code = 'ERR_JWKS_TIMEOUT';\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n        this.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n}\nJWSSignatureVerificationFailed.code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n", "function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'Ed25519': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n", "function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n", "import { isCryptoKey } from './webcrypto.js';\nexport default (key) => {\n    if (isCryptoKey(key)) {\n        return true;\n    }\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nexport const types = ['CryptoKey'];\n", "const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n", "function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n", "export default (alg, key) => {\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n};\n", "import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n", "import crypto from './webcrypto.js';\nimport { JOSENotSupported } from '../util/errors.js';\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch (jwk.kty) {\n        case 'RSA': {\n            switch (jwk.alg) {\n                case 'PS256':\n                case 'PS384':\n                case 'PS512':\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RS256':\n                case 'RS384':\n                case 'RS512':\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'RSA-OAEP':\n                case 'RSA-OAEP-256':\n                case 'RSA-OAEP-384':\n                case 'RSA-OAEP-512':\n                    algorithm = {\n                        name: 'RSA-OAEP',\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\n                    };\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'EC': {\n            switch (jwk.alg) {\n                case 'ES256':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES384':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ES512':\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        case 'OKP': {\n            switch (jwk.alg) {\n                case 'Ed25519':\n                    algorithm = { name: 'Ed25519' };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'EdDSA':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\n                    break;\n                case 'ECDH-ES':\n                case 'ECDH-ES+A128KW':\n                case 'ECDH-ES+A192KW':\n                case 'ECDH-ES+A256KW':\n                    algorithm = { name: jwk.crv };\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\n                    break;\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n            }\n            break;\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return { algorithm, keyUsages };\n}\nconst parse = async (jwk) => {\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        jwk.ext ?? false,\n        jwk.key_ops ?? keyUsages,\n    ];\n    const keyData = { ...jwk };\n    delete keyData.alg;\n    delete keyData.use;\n    return crypto.subtle.importKey('jwk', keyData, ...rest);\n};\nexport default parse;\n", "import { isJWK } from '../lib/is_jwk.js';\nimport { decode } from './base64url.js';\nimport importJWK from './jwk_to_key.js';\nconst exportKeyValue = (k) => decode(k);\nlet privCache;\nlet pubCache;\nconst isKeyObject = (key) => {\n    return key?.[Symbol.toStringTag] === 'KeyObject';\n};\nconst importAndCache = async (cache, key, jwk, alg, freeze = false) => {\n    let cached = cache.get(key);\n    if (cached?.[alg]) {\n        return cached[alg];\n    }\n    const cryptoKey = await importJWK({ ...jwk, alg });\n    if (freeze)\n        Object.freeze(key);\n    if (!cached) {\n        cache.set(key, { [alg]: cryptoKey });\n    }\n    else {\n        cached[alg] = cryptoKey;\n    }\n    return cryptoKey;\n};\nconst normalizePublicKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        delete jwk.d;\n        delete jwk.dp;\n        delete jwk.dq;\n        delete jwk.p;\n        delete jwk.q;\n        delete jwk.qi;\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        pubCache || (pubCache = new WeakMap());\n        return importAndCache(pubCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        pubCache || (pubCache = new WeakMap());\n        const cryptoKey = importAndCache(pubCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nconst normalizePrivateKey = (key, alg) => {\n    if (isKeyObject(key)) {\n        let jwk = key.export({ format: 'jwk' });\n        if (jwk.k) {\n            return exportKeyValue(jwk.k);\n        }\n        privCache || (privCache = new WeakMap());\n        return importAndCache(privCache, key, jwk, alg);\n    }\n    if (isJWK(key)) {\n        if (key.k)\n            return decode(key.k);\n        privCache || (privCache = new WeakMap());\n        const cryptoKey = importAndCache(privCache, key, key, alg, true);\n        return cryptoKey;\n    }\n    return key;\n};\nexport default { normalizePublicKey, normalizePrivateKey };\n", "import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg || (alg = jwk.alg);\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n", "import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n", "const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n", "import { JOSENotSupported } from '../util/errors.js';\nexport default function subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n            return { hash, name: 'HMAC' };\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            return { hash, name: 'RSA-PSS', saltLength: alg.slice(-3) >> 3 };\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\n        case 'ES256':\n        case 'ES384':\n        case 'ES512':\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\n        case 'Ed25519':\n            return { name: 'Ed25519' };\n        case 'EdDSA':\n            return { name: algorithm.name };\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n", "import crypto, { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport normalize from './normalize_key.js';\nexport default async function getCryptoKey(alg, key, usage) {\n    if (usage === 'sign') {\n        key = await normalize.normalizePrivateKey(key, alg);\n    }\n    if (usage === 'verify') {\n        key = await normalize.normalizePublicKey(key, alg);\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst verify = async (alg, key, signature, data) => {\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\n    checkKeyLength(alg, cryptoKey);\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\n    try {\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n", "import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n", "import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "export default (date) => Math.floor(date.getTime() / 1000);\n", "const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n", "import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n", "import subtleAlgorithm from './subtle_dsa.js';\nimport crypto from './webcrypto.js';\nimport checkKeyLength from './check_key_length.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst sign = async (alg, key, data) => {\n    const cryptoKey = await getSignKey(alg, key, 'sign');\n    checkKeyLength(alg, cryptoKey);\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\nexport default sign;\n", "import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyTypeWithJwk(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n", "import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n", "import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nexport class ProduceJWT {\n    constructor(payload = {}) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', epoch(input)) };\n        }\n        else if (typeof input === 'string') {\n            this._payload = {\n                ...this._payload,\n                iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input)),\n            };\n        }\n        else {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', input) };\n        }\n        return this;\n    }\n}\n", "import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray(this._protectedHeader?.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n", "import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks) {\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                    case 'Ed25519':\n                        candidate = jwk.crv === 'Ed25519';\n                        break;\n                    case 'EdDSA':\n                        candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch { }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(localJWKSet, {\n        jwks: {\n            value: () => clone(set._jwks),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return localJWKSet;\n}\n", "import { JOSEError, JWKSTimeout } from '../util/errors.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === 'function') {\n        controller = new AbortController();\n        id = setTimeout(() => {\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: 'manual',\n        headers: options.headers,\n    }).catch((err) => {\n        if (timedOut)\n            throw new JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined)\n        clearTimeout(id);\n    if (response.status !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    try {\n        return await response.json();\n    }\n    catch {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n", "import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.10.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch || (this._pendingFetch = fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n", "import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet, jwksCache, experimental_jwksCache } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nexport * as errors from './util/errors.js';\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nexport * as base64url from './util/base64url.js';\nexport { default as cryptoRuntime } from './util/runtime.js';\n", "import { subtle } from 'uncrypto';\nimport { base64Url, base64 } from './base64.mjs';\n\nfunction createHash(algorithm, encoding) {\n  return {\n    digest: async (input) => {\n      const encoder = new TextEncoder();\n      const data = typeof input === \"string\" ? encoder.encode(input) : input;\n      const hashBuffer = await subtle.digest(algorithm, data);\n      if (encoding === \"hex\") {\n        const hashArray = Array.from(new Uint8Array(hashBuffer));\n        const hashHex = hashArray.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\n        return hashHex;\n      }\n      if (encoding === \"base64\" || encoding === \"base64url\" || encoding === \"base64urlnopad\") {\n        if (encoding.includes(\"url\")) {\n          return base64Url.encode(hashBuffer, {\n            padding: encoding !== \"base64urlnopad\"\n          });\n        }\n        const hashBase64 = base64.encode(hashBuffer);\n        return hashBase64;\n      }\n      return hashBuffer;\n    }\n  };\n}\n\nexport { createHash };\n", "import { base64Url } from '@better-auth/utils/base64';\nimport { betterFetch } from '@better-fetch/fetch';\nimport { jwtVerify } from 'jose';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { createHash } from '@better-auth/utils/hash';\n\nasync function generateCodeChallenge(codeVerifier) {\n  const codeChallengeBytes = await createHash(\"SHA-256\").digest(codeVerifier);\n  return base64Url.encode(new Uint8Array(codeChallengeBytes), {\n    padding: false\n  });\n}\nfunction getOAuth2Tokens(data) {\n  return {\n    tokenType: data.token_type,\n    accessToken: data.access_token,\n    refreshToken: data.refresh_token,\n    accessTokenExpiresAt: data.expires_in ? getDate(data.expires_in, \"sec\") : void 0,\n    scopes: data?.scope ? typeof data.scope === \"string\" ? data.scope.split(\" \") : data.scope : [],\n    idToken: data.id_token\n  };\n}\nconst encodeOAuthParameter = (value) => encodeURIComponent(value).replace(/%20/g, \"+\");\n\nasync function createAuthorizationURL({\n  id,\n  options,\n  authorizationEndpoint,\n  state,\n  codeVerifier,\n  scopes,\n  claims,\n  redirectURI,\n  duration,\n  prompt,\n  accessType,\n  responseType,\n  display,\n  loginHint,\n  hd,\n  responseMode,\n  additionalParams,\n  scopeJoiner\n}) {\n  const url = new URL(authorizationEndpoint);\n  url.searchParams.set(\"response_type\", responseType || \"code\");\n  url.searchParams.set(\"client_id\", options.clientId);\n  url.searchParams.set(\"state\", state);\n  url.searchParams.set(\"scope\", scopes.join(scopeJoiner || \" \"));\n  url.searchParams.set(\"redirect_uri\", options.redirectURI || redirectURI);\n  duration && url.searchParams.set(\"duration\", duration);\n  display && url.searchParams.set(\"display\", display);\n  loginHint && url.searchParams.set(\"login_hint\", loginHint);\n  prompt && url.searchParams.set(\"prompt\", prompt);\n  hd && url.searchParams.set(\"hd\", hd);\n  accessType && url.searchParams.set(\"access_type\", accessType);\n  responseMode && url.searchParams.set(\"response_mode\", responseMode);\n  if (codeVerifier) {\n    const codeChallenge = await generateCodeChallenge(codeVerifier);\n    url.searchParams.set(\"code_challenge_method\", \"S256\");\n    url.searchParams.set(\"code_challenge\", codeChallenge);\n  }\n  if (claims) {\n    const claimsObj = claims.reduce(\n      (acc, claim) => {\n        acc[claim] = null;\n        return acc;\n      },\n      {}\n    );\n    url.searchParams.set(\n      \"claims\",\n      JSON.stringify({\n        id_token: { email: null, email_verified: null, ...claimsObj }\n      })\n    );\n  }\n  if (additionalParams) {\n    Object.entries(additionalParams).forEach(([key, value]) => {\n      url.searchParams.set(key, value);\n    });\n  }\n  return url;\n}\n\nasync function validateAuthorizationCode({\n  code,\n  codeVerifier,\n  redirectURI,\n  options,\n  tokenEndpoint,\n  authentication,\n  deviceId,\n  headers\n}) {\n  const body = new URLSearchParams();\n  const requestHeaders = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n    accept: \"application/json\",\n    \"user-agent\": \"better-auth\",\n    ...headers\n  };\n  body.set(\"grant_type\", \"authorization_code\");\n  body.set(\"code\", code);\n  codeVerifier && body.set(\"code_verifier\", codeVerifier);\n  options.clientKey && body.set(\"client_key\", options.clientKey);\n  deviceId && body.set(\"device_id\", deviceId);\n  body.set(\"redirect_uri\", options.redirectURI || redirectURI);\n  if (authentication === \"basic\") {\n    const encodedCredentials = base64Url.encode(\n      `${options.clientId}:${options.clientSecret}`\n    );\n    requestHeaders[\"authorization\"] = `Basic ${encodedCredentials}`;\n  } else {\n    body.set(\"client_id\", options.clientId);\n    body.set(\"client_secret\", options.clientSecret);\n  }\n  const { data, error } = await betterFetch(tokenEndpoint, {\n    method: \"POST\",\n    body,\n    headers: requestHeaders\n  });\n  if (error) {\n    throw error;\n  }\n  const tokens = getOAuth2Tokens(data);\n  return tokens;\n}\nasync function validateToken(token, jwksEndpoint) {\n  const { data, error } = await betterFetch(jwksEndpoint, {\n    method: \"GET\",\n    headers: {\n      accept: \"application/json\",\n      \"user-agent\": \"better-auth\"\n    }\n  });\n  if (error) {\n    throw error;\n  }\n  const keys = data[\"keys\"];\n  const header = JSON.parse(atob(token.split(\".\")[0]));\n  const key = keys.find((key2) => key2.kid === header.kid);\n  if (!key) {\n    throw new Error(\"Key not found\");\n  }\n  const verified = await jwtVerify(token, key);\n  return verified;\n}\n\nasync function refreshAccessToken({\n  refreshToken,\n  options,\n  tokenEndpoint,\n  authentication,\n  extraParams,\n  grantType = \"refresh_token\"\n}) {\n  const body = new URLSearchParams();\n  const headers = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n    accept: \"application/json\"\n  };\n  body.set(\"grant_type\", grantType);\n  body.set(\"refresh_token\", refreshToken);\n  if (authentication === \"basic\") {\n    const encodedCredentials = base64Url.encode(\n      `${options.clientId}:${options.clientSecret}`\n    );\n    headers[\"authorization\"] = `Basic ${encodedCredentials}`;\n  } else {\n    body.set(\"client_id\", options.clientId);\n    body.set(\"client_secret\", options.clientSecret);\n  }\n  if (extraParams) {\n    for (const [key, value] of Object.entries(extraParams)) {\n      body.set(key, value);\n    }\n  }\n  const { data, error } = await betterFetch(tokenEndpoint, {\n    method: \"POST\",\n    body,\n    headers\n  });\n  if (error) {\n    throw error;\n  }\n  const tokens = {\n    accessToken: data.access_token,\n    refreshToken: data.refresh_token,\n    tokenType: data.token_type,\n    scopes: data.scope?.split(\" \"),\n    idToken: data.id_token\n  };\n  if (data.expires_in) {\n    const now = /* @__PURE__ */ new Date();\n    tokens.accessTokenExpiresAt = new Date(\n      now.getTime() + data.expires_in * 1e3\n    );\n  }\n  return tokens;\n}\n\nexport { validateToken as a, getOAuth2Tokens as b, createAuthorizationURL as c, encodeOAuthParameter as e, generateCodeChallenge as g, refreshAccessToken as r, validateAuthorizationCode as v };\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes, type CHash, type Input } from './utils.ts';\n\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    ahash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    clean(pad);\n  }\n  update(buf: Input): this {\n    aexists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    abytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  clone(): HMAC<T> {\n    return this._cloneInto();\n  }\n  destroy(): void {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac: {\n  (hash: CHash, key: Input, message: Input): Uint8Array;\n  create(hash: CHash, key: Input): HMAC<any>;\n} = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/**\n * PBKDF (RFC 2898). Can be used to create a key from password and salt.\n * @module\n */\nimport { hmac } from './hmac.ts';\n// prettier-ignore\nimport {\n  ahash, anumber,\n  asyncLoop, checkOpts, clean, createView, Hash, kdfInputToBytes,\n  type CHash,\n  type KDFInput\n} from './utils.ts';\n\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: KDFInput, _salt: KDFInput, _opts: Pbkdf2Opt) {\n  ahash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  anumber(c);\n  anumber(dkLen);\n  anumber(asyncTick);\n  if (c < 1) throw new Error('iterations (c) should be >= 1');\n  const password = kdfInputToBytes(_password);\n  const salt = kdfInputToBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  clean(u);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n * @example\n * const key = pbkdf2(sha256, 'password', 'salt', { dkLen: 32, c: Math.pow(2, 18) });\n */\nexport function pbkdf2(\n  hash: CHash,\n  password: KDFInput,\n  salt: KDFInput,\n  opts: Pbkdf2Opt\n): Uint8Array {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function. Async version.\n * @example\n * await pbkdf2Async(sha256, 'password', 'salt', { dkLen: 32, c: 500_000 });\n */\nexport async function pbkdf2Async(\n  hash: CHash,\n  password: KDFInput,\n  salt: KDFInput,\n  opts: Pbkdf2Opt\n): Promise<Uint8Array> {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n", "/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\nexport class SHA224 extends SHA256 {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\nexport class SHA512_224 extends SHA512 {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\n", "/**\n * RFC 7914 Scrypt KDF. Can be used to create a key from password and salt.\n * @module\n */\nimport { pbkdf2 } from './pbkdf2.ts';\nimport { sha256 } from './sha2.ts';\n// prettier-ignore\nimport {\n  anumber, asyncLoop,\n  checkOpts, clean,\n  type KDFInput, rotl,\n  swap32IfBE,\n  u32\n} from './utils.ts';\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X \u2190 B[2r\u22121]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: KDFInput, salt: KDFInput, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  anumber(N);\n  anumber(r);\n  anumber(p);\n  anumber(dkLen);\n  anumber(asyncTick);\n  anumber(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n\n  // Max N is 2^32 (Integrify is 32-bit). Real limit is 2^22: JS engines Uint8Array limit is 4GB in 2024.\n  // Spec check `N >= 2^(blockSize / 8)` is not done for compat with popular libs,\n  // which used incorrect r: 1, p: 8. Also, the check seems to be a spec error:\n  // https://www.rfc-editor.org/errata_search.php?rfc=7914\n  const pow32 = Math.pow(2, 32);\n  if (N <= 1 || (N & (N - 1)) !== 0 || N > pow32) {\n    throw new Error('Scrypt: N must be larger than 1, a power of 2, and less than 2^32');\n  }\n  if (p < 0 || p > ((pow32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (pow32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      'Scrypt: memused is bigger than maxMem. Expected 128 * r * (N + p) > maxmem of ' + maxmem\n    );\n  }\n  // [B0...Bp\u22121] \u2190 PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: KDFInput,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  clean(B, V, tmp);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n * @example\n * scrypt('password', 'salt', { N: 2**18, r: 8, p: 1, dkLen: 32 });\n */\nexport function scrypt(password: KDFInput, salt: KDFInput, opts: ScryptOpts): Uint8Array {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  swap32IfBE(B32);\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  swap32IfBE(B32);\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914. Async version.\n * @example\n * await scryptAsync('password', 'salt', { N: 2**18, r: 8, p: 1, dkLen: 32 });\n */\nexport async function scryptAsync(\n  password: KDFInput,\n  salt: KDFInput,\n  opts: ScryptOpts\n): Promise<Uint8Array> {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  swap32IfBE(B32);\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, () => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, () => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  swap32IfBE(B32);\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n", "export * from 'uncrypto';\n", "import { getRandomValues } from 'uncrypto';\n\nfunction expandAlphabet(alphabet) {\n  switch (alphabet) {\n    case \"a-z\":\n      return \"abcdefghijklmnopqrstuvwxyz\";\n    case \"A-Z\":\n      return \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    case \"0-9\":\n      return \"0123456789\";\n    case \"-_\":\n      return \"-_\";\n    default:\n      throw new Error(`Unsupported alphabet: ${alphabet}`);\n  }\n}\nfunction createRandomStringGenerator(...baseAlphabets) {\n  const baseCharSet = baseAlphabets.map(expandAlphabet).join(\"\");\n  if (baseCharSet.length === 0) {\n    throw new Error(\n      \"No valid characters provided for random string generation.\"\n    );\n  }\n  const baseCharSetLength = baseCharSet.length;\n  return (length, ...alphabets) => {\n    if (length <= 0) {\n      throw new Error(\"Length must be a positive integer.\");\n    }\n    let charSet = baseCharSet;\n    let charSetLength = baseCharSetLength;\n    if (alphabets.length > 0) {\n      charSet = alphabets.map(expandAlphabet).join(\"\");\n      charSetLength = charSet.length;\n    }\n    const maxValid = Math.floor(256 / charSetLength) * charSetLength;\n    const buf = new Uint8Array(length * 2);\n    const bufLength = buf.length;\n    let result = \"\";\n    let bufIndex = bufLength;\n    let rand;\n    while (result.length < length) {\n      if (bufIndex >= bufLength) {\n        getRandomValues(buf);\n        bufIndex = 0;\n      }\n      rand = buf[bufIndex++];\n      if (rand < maxValid) {\n        result += charSet[rand % charSetLength];\n      }\n    }\n    return result;\n  };\n}\n\nexport { createRandomStringGenerator };\n", "import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateRandomString = createRandomStringGenerator(\n  \"a-z\",\n  \"0-9\",\n  \"A-Z\",\n  \"-_\"\n);\n\nexport { generateRandomString as g };\n", "const levels = [\"info\", \"success\", \"warn\", \"error\", \"debug\"];\nfunction shouldPublishLog(currentLogLevel, logLevel) {\n  return levels.indexOf(logLevel) <= levels.indexOf(currentLogLevel);\n}\nconst colors = {\n  reset: \"\\x1B[0m\",\n  bright: \"\\x1B[1m\",\n  dim: \"\\x1B[2m\",\n  fg: {\n    red: \"\\x1B[31m\",\n    green: \"\\x1B[32m\",\n    yellow: \"\\x1B[33m\",\n    blue: \"\\x1B[34m\",\n    magenta: \"\\x1B[35m\"}};\nconst levelColors = {\n  info: colors.fg.blue,\n  success: colors.fg.green,\n  warn: colors.fg.yellow,\n  error: colors.fg.red,\n  debug: colors.fg.magenta\n};\nconst formatMessage = (level, message) => {\n  const timestamp = (/* @__PURE__ */ new Date()).toISOString();\n  return `${colors.dim}${timestamp}${colors.reset} ${levelColors[level]}${level.toUpperCase()}${colors.reset} ${colors.bright}[Better Auth]:${colors.reset} ${message}`;\n};\nconst createLogger = (options) => {\n  const enabled = options?.disabled !== true;\n  const logLevel = options?.level ?? \"error\";\n  const LogFunc = (level, message, args = []) => {\n    if (!enabled || !shouldPublishLog(logLevel, level)) {\n      return;\n    }\n    const formattedMessage = formatMessage(level, message);\n    if (!options || typeof options.log !== \"function\") {\n      if (level === \"error\") {\n        console.error(formattedMessage, ...args);\n      } else if (level === \"warn\") {\n        console.warn(formattedMessage, ...args);\n      } else {\n        console.log(formattedMessage, ...args);\n      }\n      return;\n    }\n    options.log(level === \"success\" ? \"info\" : level, message, ...args);\n  };\n  return Object.fromEntries(\n    levels.map((level) => [\n      level,\n      (...[message, ...args]) => LogFunc(level, message, args)\n    ])\n  );\n};\nconst logger = createLogger();\n\nexport { levels as a, createLogger as c, logger as l, shouldPublishLog as s };\n", "import { betterFetch } from '@better-fetch/fetch';\nimport { APIError } from 'better-call';\nimport { decodeJwt, decodeProtectedHeader, jwtVerify, importJWK, createRemoteJWKSet } from 'jose';\nimport { r as refreshAccessToken, v as validateAuthorizationCode, c as createAuthorizationURL, b as getOAuth2Tokens, g as generateCodeChallenge } from '../shared/better-auth.DufyW0qf.mjs';\nimport '@better-auth/utils/hash';\nimport { base64 } from '@better-auth/utils/base64';\nimport { z } from 'zod';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\nimport { B as BetterAuthError } from '../shared/better-auth.DdzSJf-n.mjs';\nimport { l as logger } from '../shared/better-auth.Cqykj82J.mjs';\nimport '@better-auth/utils/random';\nimport '../shared/better-auth.CW6D9eSx.mjs';\n\nconst apple = (options) => {\n  const tokenEndpoint = \"https://appleid.apple.com/auth/token\";\n  return {\n    id: \"apple\",\n    name: \"Apple\",\n    async createAuthorizationURL({ state, scopes, redirectURI }) {\n      const _scope = options.disableDefaultScope ? [] : [\"email\", \"name\"];\n      options.scope && _scope.push(...options.scope);\n      scopes && _scope.push(...scopes);\n      const url = await createAuthorizationURL({\n        id: \"apple\",\n        options,\n        authorizationEndpoint: \"https://appleid.apple.com/auth/authorize\",\n        scopes: _scope,\n        state,\n        redirectURI,\n        responseMode: \"form_post\"\n      });\n      return url;\n    },\n    validateAuthorizationCode: async ({ code, codeVerifier, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        codeVerifier,\n        redirectURI,\n        options,\n        tokenEndpoint\n      });\n    },\n    async verifyIdToken(token, nonce) {\n      if (options.disableIdTokenSignIn) {\n        return false;\n      }\n      if (options.verifyIdToken) {\n        return options.verifyIdToken(token, nonce);\n      }\n      const decodedHeader = decodeProtectedHeader(token);\n      const { kid, alg: jwtAlg } = decodedHeader;\n      if (!kid || !jwtAlg) return false;\n      const publicKey = await getApplePublicKey(kid);\n      const { payload: jwtClaims } = await jwtVerify(token, publicKey, {\n        algorithms: [jwtAlg],\n        issuer: \"https://appleid.apple.com\",\n        audience: options.appBundleIdentifier || options.clientId,\n        maxTokenAge: \"1h\"\n      });\n      [\"email_verified\", \"is_private_email\"].forEach((field) => {\n        if (jwtClaims[field] !== void 0) {\n          jwtClaims[field] = Boolean(jwtClaims[field]);\n        }\n      });\n      if (nonce && jwtClaims.nonce !== nonce) {\n        return false;\n      }\n      return !!jwtClaims;\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://appleid.apple.com/auth/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      if (!token.idToken) {\n        return null;\n      }\n      const profile = decodeJwt(token.idToken);\n      if (!profile) {\n        return null;\n      }\n      const name = token.user ? `${token.user.name?.firstName} ${token.user.name?.lastName}` : profile.name || profile.email;\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.sub,\n          name,\n          emailVerified: false,\n          email: profile.email,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\nconst getApplePublicKey = async (kid) => {\n  const APPLE_BASE_URL = \"https://appleid.apple.com\";\n  const JWKS_APPLE_URI = \"/auth/keys\";\n  const { data } = await betterFetch(`${APPLE_BASE_URL}${JWKS_APPLE_URI}`);\n  if (!data?.keys) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Keys not found\"\n    });\n  }\n  const jwk = data.keys.find((key) => key.kid === kid);\n  if (!jwk) {\n    throw new Error(`JWK with kid ${kid} not found`);\n  }\n  return await importJWK(jwk, jwk.alg);\n};\n\nconst discord = (options) => {\n  return {\n    id: \"discord\",\n    name: \"Discord\",\n    createAuthorizationURL({ state, scopes, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"identify\", \"email\"];\n      scopes && _scopes.push(...scopes);\n      options.scope && _scopes.push(...options.scope);\n      return new URL(\n        `https://discord.com/api/oauth2/authorize?scope=${_scopes.join(\n          \"+\"\n        )}&response_type=code&client_id=${options.clientId}&redirect_uri=${encodeURIComponent(\n          options.redirectURI || redirectURI\n        )}&state=${state}&prompt=${options.prompt || \"none\"}`\n      );\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://discord.com/api/oauth2/token\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://discord.com/api/oauth2/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://discord.com/api/users/@me\",\n        {\n          headers: {\n            authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      if (profile.avatar === null) {\n        const defaultAvatarNumber = profile.discriminator === \"0\" ? Number(BigInt(profile.id) >> BigInt(22)) % 6 : parseInt(profile.discriminator) % 5;\n        profile.image_url = `https://cdn.discordapp.com/embed/avatars/${defaultAvatarNumber}.png`;\n      } else {\n        const format = profile.avatar.startsWith(\"a_\") ? \"gif\" : \"png\";\n        profile.image_url = `https://cdn.discordapp.com/avatars/${profile.id}/${profile.avatar}.${format}`;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id,\n          name: profile.global_name || profile.username || \"\",\n          email: profile.email,\n          emailVerified: profile.verified,\n          image: profile.image_url,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst facebook = (options) => {\n  return {\n    id: \"facebook\",\n    name: \"Facebook\",\n    async createAuthorizationURL({ state, scopes, redirectURI, loginHint }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"email\", \"public_profile\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return await createAuthorizationURL({\n        id: \"facebook\",\n        options,\n        authorizationEndpoint: \"https://www.facebook.com/v21.0/dialog/oauth\",\n        scopes: _scopes,\n        state,\n        redirectURI,\n        loginHint,\n        additionalParams: options.configId ? {\n          config_id: options.configId\n        } : {}\n      });\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://graph.facebook.com/oauth/access_token\"\n      });\n    },\n    async verifyIdToken(token, nonce) {\n      if (options.disableIdTokenSignIn) {\n        return false;\n      }\n      if (options.verifyIdToken) {\n        return options.verifyIdToken(token, nonce);\n      }\n      if (token.split(\".\").length) {\n        try {\n          const { payload: jwtClaims } = await jwtVerify(\n            token,\n            createRemoteJWKSet(\n              new URL(\"https://www.facebook.com/.well-known/oauth/openid/jwks\")\n            ),\n            {\n              algorithms: [\"RS256\"],\n              audience: options.clientId,\n              issuer: \"https://www.facebook.com\"\n            }\n          );\n          if (nonce && jwtClaims.nonce !== nonce) {\n            return false;\n          }\n          return !!jwtClaims;\n        } catch (error) {\n          return false;\n        }\n      }\n      return true;\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://graph.facebook.com/v18.0/oauth/access_token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      if (token.idToken) {\n        const profile2 = decodeJwt(token.idToken);\n        const user = {\n          id: profile2.sub,\n          name: profile2.name,\n          email: profile2.email,\n          picture: {\n            data: {\n              url: profile2.picture,\n              height: 100,\n              width: 100,\n              is_silhouette: false\n            }\n          }\n        };\n        const userMap2 = await options.mapProfileToUser?.({\n          ...user,\n          email_verified: true\n        });\n        return {\n          user: {\n            ...user,\n            emailVerified: true,\n            ...userMap2\n          },\n          data: profile2\n        };\n      }\n      const fields = [\n        \"id\",\n        \"name\",\n        \"email\",\n        \"picture\",\n        ...options?.fields || []\n      ];\n      const { data: profile, error } = await betterFetch(\n        \"https://graph.facebook.com/me?fields=\" + fields.join(\",\"),\n        {\n          auth: {\n            type: \"Bearer\",\n            token: token.accessToken\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id,\n          name: profile.name,\n          email: profile.email,\n          image: profile.picture.data.url,\n          emailVerified: profile.email_verified,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst github = (options) => {\n  const tokenEndpoint = \"https://github.com/login/oauth/access_token\";\n  return {\n    id: \"github\",\n    name: \"GitHub\",\n    createAuthorizationURL({ state, scopes, loginHint, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"read:user\", \"user:email\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return createAuthorizationURL({\n        id: \"github\",\n        options,\n        authorizationEndpoint: \"https://github.com/login/oauth/authorize\",\n        scopes: _scopes,\n        state,\n        redirectURI,\n        loginHint\n      });\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        tokenEndpoint\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://github.com/login/oauth/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://api.github.com/user\",\n        {\n          headers: {\n            \"User-Agent\": \"better-auth\",\n            authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const { data: emails } = await betterFetch(\"https://api.github.com/user/emails\", {\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`,\n          \"User-Agent\": \"better-auth\"\n        }\n      });\n      if (!profile.email && emails) {\n        profile.email = (emails.find((e) => e.primary) ?? emails[0])?.email;\n      }\n      const emailVerified = emails?.find((e) => e.email === profile.email)?.verified ?? false;\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id.toString(),\n          name: profile.name || profile.login,\n          email: profile.email,\n          image: profile.avatar_url,\n          emailVerified,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst google = (options) => {\n  return {\n    id: \"google\",\n    name: \"Google\",\n    async createAuthorizationURL({\n      state,\n      scopes,\n      codeVerifier,\n      redirectURI,\n      loginHint,\n      display\n    }) {\n      if (!options.clientId || !options.clientSecret) {\n        logger.error(\n          \"Client Id and Client Secret is required for Google. Make sure to provide them in the options.\"\n        );\n        throw new BetterAuthError(\"CLIENT_ID_AND_SECRET_REQUIRED\");\n      }\n      if (!codeVerifier) {\n        throw new BetterAuthError(\"codeVerifier is required for Google\");\n      }\n      const _scopes = options.disableDefaultScope ? [] : [\"email\", \"profile\", \"openid\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      const url = await createAuthorizationURL({\n        id: \"google\",\n        options,\n        authorizationEndpoint: \"https://accounts.google.com/o/oauth2/auth\",\n        scopes: _scopes,\n        state,\n        codeVerifier,\n        redirectURI,\n        prompt: options.prompt,\n        accessType: options.accessType,\n        display: display || options.display,\n        loginHint,\n        hd: options.hd\n      });\n      return url;\n    },\n    validateAuthorizationCode: async ({ code, codeVerifier, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        codeVerifier,\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://oauth2.googleapis.com/token\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://www.googleapis.com/oauth2/v4/token\"\n      });\n    },\n    async verifyIdToken(token, nonce) {\n      if (options.disableIdTokenSignIn) {\n        return false;\n      }\n      if (options.verifyIdToken) {\n        return options.verifyIdToken(token, nonce);\n      }\n      const googlePublicKeyUrl = `https://www.googleapis.com/oauth2/v3/tokeninfo?id_token=${token}`;\n      const { data: tokenInfo } = await betterFetch(googlePublicKeyUrl);\n      if (!tokenInfo) {\n        return false;\n      }\n      const isValid = tokenInfo.aud === options.clientId && (tokenInfo.iss === \"https://accounts.google.com\" || tokenInfo.iss === \"accounts.google.com\");\n      return isValid;\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      if (!token.idToken) {\n        return null;\n      }\n      const user = decodeJwt(token.idToken);\n      const userMap = await options.mapProfileToUser?.(user);\n      return {\n        user: {\n          id: user.sub,\n          name: user.name,\n          email: user.email,\n          image: user.picture,\n          emailVerified: user.email_verified,\n          ...userMap\n        },\n        data: user\n      };\n    },\n    options\n  };\n};\n\nconst microsoft = (options) => {\n  const tenant = options.tenantId || \"common\";\n  const authorizationEndpoint = `https://login.microsoftonline.com/${tenant}/oauth2/v2.0/authorize`;\n  const tokenEndpoint = `https://login.microsoftonline.com/${tenant}/oauth2/v2.0/token`;\n  return {\n    id: \"microsoft\",\n    name: \"Microsoft EntraID\",\n    createAuthorizationURL(data) {\n      const scopes = options.disableDefaultScope ? [] : [\"openid\", \"profile\", \"email\", \"User.Read\"];\n      options.scope && scopes.push(...options.scope);\n      data.scopes && scopes.push(...scopes);\n      return createAuthorizationURL({\n        id: \"microsoft\",\n        options,\n        authorizationEndpoint,\n        state: data.state,\n        codeVerifier: data.codeVerifier,\n        scopes,\n        redirectURI: data.redirectURI,\n        prompt: options.prompt\n      });\n    },\n    validateAuthorizationCode({ code, codeVerifier, redirectURI }) {\n      return validateAuthorizationCode({\n        code,\n        codeVerifier,\n        redirectURI,\n        options,\n        tokenEndpoint\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      if (!token.idToken) {\n        return null;\n      }\n      const user = decodeJwt(token.idToken);\n      const profilePhotoSize = options.profilePhotoSize || 48;\n      await betterFetch(\n        `https://graph.microsoft.com/v1.0/me/photos/${profilePhotoSize}x${profilePhotoSize}/$value`,\n        {\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`\n          },\n          async onResponse(context) {\n            if (options.disableProfilePhoto || !context.response.ok) {\n              return;\n            }\n            try {\n              const response = context.response.clone();\n              const pictureBuffer = await response.arrayBuffer();\n              const pictureBase64 = base64.encode(pictureBuffer);\n              user.picture = `data:image/jpeg;base64, ${pictureBase64}`;\n            } catch (e) {\n              logger.error(\n                e && typeof e === \"object\" && \"name\" in e ? e.name : \"\",\n                e\n              );\n            }\n          }\n        }\n      );\n      const userMap = await options.mapProfileToUser?.(user);\n      return {\n        user: {\n          id: user.sub,\n          name: user.name,\n          email: user.email,\n          image: user.picture,\n          emailVerified: true,\n          ...userMap\n        },\n        data: user\n      };\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint\n      });\n    },\n    options\n  };\n};\n\nconst spotify = (options) => {\n  return {\n    id: \"spotify\",\n    name: \"Spotify\",\n    createAuthorizationURL({ state, scopes, codeVerifier, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"user-read-email\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return createAuthorizationURL({\n        id: \"spotify\",\n        options,\n        authorizationEndpoint: \"https://accounts.spotify.com/authorize\",\n        scopes: _scopes,\n        state,\n        codeVerifier,\n        redirectURI\n      });\n    },\n    validateAuthorizationCode: async ({ code, codeVerifier, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        codeVerifier,\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://accounts.spotify.com/api/token\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://accounts.spotify.com/api/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://api.spotify.com/v1/me\",\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id,\n          name: profile.display_name,\n          email: profile.email,\n          image: profile.images[0]?.url,\n          emailVerified: false,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst twitch = (options) => {\n  return {\n    id: \"twitch\",\n    name: \"Twitch\",\n    createAuthorizationURL({ state, scopes, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"user:read:email\", \"openid\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return createAuthorizationURL({\n        id: \"twitch\",\n        redirectURI,\n        options,\n        authorizationEndpoint: \"https://id.twitch.tv/oauth2/authorize\",\n        scopes: _scopes,\n        state,\n        claims: options.claims || [\n          \"email\",\n          \"email_verified\",\n          \"preferred_username\",\n          \"picture\"\n        ]\n      });\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://id.twitch.tv/oauth2/token\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://id.twitch.tv/oauth2/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const idToken = token.idToken;\n      if (!idToken) {\n        logger.error(\"No idToken found in token\");\n        return null;\n      }\n      const profile = decodeJwt(idToken);\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.sub,\n          name: profile.preferred_username,\n          email: profile.email,\n          image: profile.picture,\n          emailVerified: false,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst twitter = (options) => {\n  return {\n    id: \"twitter\",\n    name: \"Twitter\",\n    createAuthorizationURL(data) {\n      const _scopes = options.disableDefaultScope ? [] : [\"users.read\", \"tweet.read\", \"offline.access\", \"users.email\"];\n      options.scope && _scopes.push(...options.scope);\n      data.scopes && _scopes.push(...data.scopes);\n      return createAuthorizationURL({\n        id: \"twitter\",\n        options,\n        authorizationEndpoint: \"https://x.com/i/oauth2/authorize\",\n        scopes: _scopes,\n        state: data.state,\n        codeVerifier: data.codeVerifier,\n        redirectURI: data.redirectURI\n      });\n    },\n    validateAuthorizationCode: async ({ code, codeVerifier, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        codeVerifier,\n        authentication: \"basic\",\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://api.x.com/2/oauth2/token\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://api.twitter.com/2/oauth2/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error: profileError } = await betterFetch(\n        \"https://api.x.com/2/users/me?user.fields=profile_image_url\",\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (profileError) {\n        return null;\n      }\n      const { data: emailData, error: emailError } = await betterFetch(\"https://api.x.com/2/users/me?user.fields=confirmed_email\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`\n        }\n      });\n      if (!emailError && emailData?.data?.confirmed_email) {\n        profile.data.email = emailData.data.confirmed_email;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.data.id,\n          name: profile.data.name,\n          email: profile.data.email || profile.data.username || null,\n          image: profile.data.profile_image_url,\n          emailVerified: profile.data.verified || false,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst dropbox = (options) => {\n  const tokenEndpoint = \"https://api.dropboxapi.com/oauth2/token\";\n  return {\n    id: \"dropbox\",\n    name: \"Dropbox\",\n    createAuthorizationURL: async ({\n      state,\n      scopes,\n      codeVerifier,\n      redirectURI\n    }) => {\n      const _scopes = options.disableDefaultScope ? [] : [\"account_info.read\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return await createAuthorizationURL({\n        id: \"dropbox\",\n        options,\n        authorizationEndpoint: \"https://www.dropbox.com/oauth2/authorize\",\n        scopes: _scopes,\n        state,\n        redirectURI,\n        codeVerifier\n      });\n    },\n    validateAuthorizationCode: async ({ code, codeVerifier, redirectURI }) => {\n      return await validateAuthorizationCode({\n        code,\n        codeVerifier,\n        redirectURI,\n        options,\n        tokenEndpoint\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://api.dropbox.com/oauth2/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://api.dropboxapi.com/2/users/get_current_account\",\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.account_id,\n          name: profile.name?.display_name,\n          email: profile.email,\n          emailVerified: profile.email_verified || false,\n          image: profile.profile_photo_url,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst linkedin = (options) => {\n  const authorizationEndpoint = \"https://www.linkedin.com/oauth/v2/authorization\";\n  const tokenEndpoint = \"https://www.linkedin.com/oauth/v2/accessToken\";\n  return {\n    id: \"linkedin\",\n    name: \"Linkedin\",\n    createAuthorizationURL: async ({\n      state,\n      scopes,\n      redirectURI,\n      loginHint\n    }) => {\n      const _scopes = options.disableDefaultScope ? [] : [\"profile\", \"email\", \"openid\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return await createAuthorizationURL({\n        id: \"linkedin\",\n        options,\n        authorizationEndpoint,\n        scopes: _scopes,\n        state,\n        loginHint,\n        redirectURI\n      });\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return await validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        tokenEndpoint\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://api.linkedin.com/v2/userinfo\",\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.sub,\n          name: profile.name,\n          email: profile.email,\n          emailVerified: profile.email_verified || false,\n          image: profile.picture,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst cleanDoubleSlashes = (input = \"\") => {\n  return input.split(\"://\").map((str) => str.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n};\nconst issuerToEndpoints = (issuer) => {\n  let baseUrl = issuer || \"https://gitlab.com\";\n  return {\n    authorizationEndpoint: cleanDoubleSlashes(`${baseUrl}/oauth/authorize`),\n    tokenEndpoint: cleanDoubleSlashes(`${baseUrl}/oauth/token`),\n    userinfoEndpoint: cleanDoubleSlashes(`${baseUrl}/api/v4/user`)\n  };\n};\nconst gitlab = (options) => {\n  const { authorizationEndpoint, tokenEndpoint, userinfoEndpoint } = issuerToEndpoints(options.issuer);\n  const issuerId = \"gitlab\";\n  const issuerName = \"Gitlab\";\n  return {\n    id: issuerId,\n    name: issuerName,\n    createAuthorizationURL: async ({\n      state,\n      scopes,\n      codeVerifier,\n      loginHint,\n      redirectURI\n    }) => {\n      const _scopes = options.disableDefaultScope ? [] : [\"read_user\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return await createAuthorizationURL({\n        id: issuerId,\n        options,\n        authorizationEndpoint,\n        scopes: _scopes,\n        state,\n        redirectURI,\n        codeVerifier,\n        loginHint\n      });\n    },\n    validateAuthorizationCode: async ({ code, redirectURI, codeVerifier }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        codeVerifier,\n        tokenEndpoint\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://gitlab.com/oauth/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        userinfoEndpoint,\n        { headers: { authorization: `Bearer ${token.accessToken}` } }\n      );\n      if (error || profile.state !== \"active\" || profile.locked) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id.toString(),\n          name: profile.name ?? profile.username,\n          email: profile.email,\n          image: profile.avatar_url,\n          emailVerified: true,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst tiktok = (options) => {\n  return {\n    id: \"tiktok\",\n    name: \"TikTok\",\n    createAuthorizationURL({ state, scopes, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"user.info.profile\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return new URL(\n        `https://www.tiktok.com/v2/auth/authorize?scope=${_scopes.join(\n          \",\"\n        )}&response_type=code&client_key=${options.clientKey}&client_secret=${options.clientSecret}&redirect_uri=${encodeURIComponent(\n          options.redirectURI || redirectURI\n        )}&state=${state}`\n      );\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI: options.redirectURI || redirectURI,\n        options,\n        tokenEndpoint: \"https://open.tiktokapis.com/v2/oauth/token/\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://open.tiktokapis.com/v2/oauth/token/\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const fields = [\n        \"open_id\",\n        \"avatar_large_url\",\n        \"display_name\",\n        \"username\"\n      ];\n      const { data: profile, error } = await betterFetch(\n        `https://open.tiktokapis.com/v2/user/info/?fields=${fields.join(\",\")}`,\n        {\n          headers: {\n            authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      return {\n        user: {\n          email: profile.data.user.email || profile.data.user.username,\n          id: profile.data.user.open_id,\n          name: profile.data.user.display_name || profile.data.user.username,\n          image: profile.data.user.avatar_large_url,\n          /** @note Tiktok does not provide emailVerified or even email*/\n          emailVerified: profile.data.user.email ? true : false\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst reddit = (options) => {\n  return {\n    id: \"reddit\",\n    name: \"Reddit\",\n    createAuthorizationURL({ state, scopes, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"identity\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return createAuthorizationURL({\n        id: \"reddit\",\n        options,\n        authorizationEndpoint: \"https://www.reddit.com/api/v1/authorize\",\n        scopes: _scopes,\n        state,\n        redirectURI,\n        duration: options.duration\n      });\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      const body = new URLSearchParams({\n        grant_type: \"authorization_code\",\n        code,\n        redirect_uri: options.redirectURI || redirectURI\n      });\n      const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n        accept: \"text/plain\",\n        \"user-agent\": \"better-auth\",\n        Authorization: `Basic ${base64.encode(\n          `${options.clientId}:${options.clientSecret}`\n        )}`\n      };\n      const { data, error } = await betterFetch(\n        \"https://www.reddit.com/api/v1/access_token\",\n        {\n          method: \"POST\",\n          headers,\n          body: body.toString()\n        }\n      );\n      if (error) {\n        throw error;\n      }\n      return getOAuth2Tokens(data);\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://www.reddit.com/api/v1/access_token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://oauth.reddit.com/api/v1/me\",\n        {\n          headers: {\n            Authorization: `Bearer ${token.accessToken}`,\n            \"User-Agent\": \"better-auth\"\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id,\n          name: profile.name,\n          email: profile.oauth_client_id,\n          emailVerified: profile.has_verified_email,\n          image: profile.icon_img?.split(\"?\")[0],\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst roblox = (options) => {\n  return {\n    id: \"roblox\",\n    name: \"Roblox\",\n    createAuthorizationURL({ state, scopes, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"openid\", \"profile\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return new URL(\n        `https://apis.roblox.com/oauth/v1/authorize?scope=${_scopes.join(\n          \"+\"\n        )}&response_type=code&client_id=${options.clientId}&redirect_uri=${encodeURIComponent(\n          options.redirectURI || redirectURI\n        )}&state=${state}&prompt=${options.prompt || \"select_account+consent\"}`\n      );\n    },\n    validateAuthorizationCode: async ({ code, redirectURI }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI: options.redirectURI || redirectURI,\n        options,\n        tokenEndpoint: \"https://apis.roblox.com/oauth/v1/token\",\n        authentication: \"post\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://apis.roblox.com/oauth/v1/token\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://apis.roblox.com/oauth/v1/userinfo\",\n        {\n          headers: {\n            authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.sub,\n          name: profile.nickname || profile.preferred_username || \"\",\n          image: profile.picture,\n          email: profile.preferred_username || null,\n          // Roblox does not provide email\n          emailVerified: true,\n          ...userMap\n        },\n        data: {\n          ...profile\n        }\n      };\n    },\n    options\n  };\n};\n\nvar LANG = /* @__PURE__ */ ((LANG2) => {\n  LANG2[LANG2[\"RUS\"] = 0] = \"RUS\";\n  LANG2[LANG2[\"UKR\"] = 1] = \"UKR\";\n  LANG2[LANG2[\"ENG\"] = 3] = \"ENG\";\n  LANG2[LANG2[\"SPA\"] = 4] = \"SPA\";\n  LANG2[LANG2[\"GERMAN\"] = 6] = \"GERMAN\";\n  LANG2[LANG2[\"POL\"] = 15] = \"POL\";\n  LANG2[LANG2[\"FRA\"] = 16] = \"FRA\";\n  LANG2[LANG2[\"TURKEY\"] = 82] = \"TURKEY\";\n  return LANG2;\n})(LANG || {});\nconst vk = (options) => {\n  return {\n    id: \"vk\",\n    name: \"VK\",\n    async createAuthorizationURL({ state, scopes, codeVerifier, redirectURI }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"email\", \"phone\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      const authorizationEndpoint = \"https://id.vk.com/authorize\";\n      return createAuthorizationURL({\n        id: \"vk\",\n        options,\n        authorizationEndpoint,\n        scopes: _scopes,\n        state,\n        redirectURI,\n        codeVerifier\n      });\n    },\n    validateAuthorizationCode: async ({\n      code,\n      codeVerifier,\n      redirectURI,\n      deviceId\n    }) => {\n      return validateAuthorizationCode({\n        code,\n        codeVerifier,\n        redirectURI: options.redirectURI || redirectURI,\n        options,\n        deviceId,\n        tokenEndpoint: \"https://id.vk.com/oauth2/auth\"\n      });\n    },\n    refreshAccessToken: options.refreshAccessToken ? options.refreshAccessToken : async (refreshToken) => {\n      return refreshAccessToken({\n        refreshToken,\n        options: {\n          clientId: options.clientId,\n          clientKey: options.clientKey,\n          clientSecret: options.clientSecret\n        },\n        tokenEndpoint: \"https://id.vk.com/oauth2/auth\"\n      });\n    },\n    async getUserInfo(data) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(data);\n      }\n      if (!data.accessToken) {\n        return null;\n      }\n      const formBody = new URLSearchParams({\n        access_token: data.accessToken,\n        client_id: options.clientId\n      }).toString();\n      const { data: profile, error } = await betterFetch(\n        \"https://id.vk.com/oauth2/user_info\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          },\n          body: formBody\n        }\n      );\n      if (error) {\n        return null;\n      }\n      if (!profile.user.email) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.user.user_id,\n          first_name: profile.user.first_name,\n          last_name: profile.user.last_name,\n          email: profile.user.email,\n          image: profile.user.avatar,\n          /** @note VK does not provide emailVerified*/\n          emailVerified: !!profile.user.email,\n          birthday: profile.user.birthday,\n          sex: profile.user.sex,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst kick = (options) => {\n  return {\n    id: \"kick\",\n    name: \"Kick\",\n    createAuthorizationURL({ state, scopes, redirectURI, codeVerifier }) {\n      const _scopes = options.disableDefaultScope ? [] : [\"user:read\"];\n      options.scope && _scopes.push(...options.scope);\n      scopes && _scopes.push(...scopes);\n      return createAuthorizationURL({\n        id: \"kick\",\n        redirectURI,\n        options,\n        authorizationEndpoint: \"https://id.kick.com/oauth/authorize\",\n        scopes: _scopes,\n        codeVerifier,\n        state\n      });\n    },\n    async validateAuthorizationCode({ code, redirectURI, codeVerifier }) {\n      return validateAuthorizationCode({\n        code,\n        redirectURI,\n        options,\n        tokenEndpoint: \"https://id.kick.com/oauth/token\",\n        codeVerifier\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data, error } = await betterFetch(\"https://api.kick.com/public/v1/users\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token.accessToken}`\n        }\n      });\n      if (error) {\n        return null;\n      }\n      const profile = data.data[0];\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.user_id,\n          name: profile.name,\n          email: profile.email,\n          image: profile.profile_picture,\n          emailVerified: true,\n          ...userMap\n        },\n        data: profile\n      };\n    },\n    options\n  };\n};\n\nconst zoom = (userOptions) => {\n  const options = {\n    pkce: true,\n    ...userOptions\n  };\n  return {\n    id: \"zoom\",\n    name: \"Zoom\",\n    createAuthorizationURL: async ({ state, redirectURI, codeVerifier }) => {\n      const params = new URLSearchParams({\n        response_type: \"code\",\n        redirect_uri: options.redirectURI ? options.redirectURI : redirectURI,\n        client_id: options.clientId,\n        state\n      });\n      if (options.pkce) {\n        const codeChallenge = await generateCodeChallenge(codeVerifier);\n        params.set(\"code_challenge_method\", \"S256\");\n        params.set(\"code_challenge\", codeChallenge);\n      }\n      const url = new URL(\"https://zoom.us/oauth/authorize\");\n      url.search = params.toString();\n      return url;\n    },\n    validateAuthorizationCode: async ({ code, redirectURI, codeVerifier }) => {\n      return validateAuthorizationCode({\n        code,\n        redirectURI: options.redirectURI || redirectURI,\n        codeVerifier,\n        options,\n        tokenEndpoint: \"https://zoom.us/oauth/token\",\n        authentication: \"post\"\n      });\n    },\n    async getUserInfo(token) {\n      if (options.getUserInfo) {\n        return options.getUserInfo(token);\n      }\n      const { data: profile, error } = await betterFetch(\n        \"https://api.zoom.us/v2/users/me\",\n        {\n          headers: {\n            authorization: `Bearer ${token.accessToken}`\n          }\n        }\n      );\n      if (error) {\n        return null;\n      }\n      const userMap = await options.mapProfileToUser?.(profile);\n      return {\n        user: {\n          id: profile.id,\n          name: profile.display_name,\n          image: profile.pic_url,\n          email: profile.email,\n          emailVerified: Boolean(profile.verified),\n          ...userMap\n        },\n        data: {\n          ...profile\n        }\n      };\n    }\n  };\n};\n\nconst socialProviders = {\n  apple,\n  discord,\n  facebook,\n  github,\n  microsoft,\n  google,\n  spotify,\n  twitch,\n  twitter,\n  dropbox,\n  kick,\n  linkedin,\n  gitlab,\n  tiktok,\n  reddit,\n  roblox,\n  vk,\n  zoom\n};\nconst socialProviderList = Object.keys(socialProviders);\nconst SocialProviderListEnum = z.enum(socialProviderList, {\n  description: \"OAuth2 provider to use\"\n});\n\nexport { LANG, SocialProviderListEnum, apple, discord, dropbox, facebook, getApplePublicKey, github, gitlab, google, kick, linkedin, microsoft, reddit, roblox, socialProviderList, socialProviders, spotify, tiktok, twitch, twitter, vk, zoom };\n", "import { z } from 'zod';\nimport { APIError } from 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\n\nasync function generateState(c, link) {\n  const callbackURL = c.body?.callbackURL || c.context.options.baseURL;\n  if (!callbackURL) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"callbackURL is required\"\n    });\n  }\n  const codeVerifier = generateRandomString(128);\n  const state = generateRandomString(32);\n  const data = JSON.stringify({\n    callbackURL,\n    codeVerifier,\n    errorURL: c.body?.errorCallbackURL,\n    newUserURL: c.body?.newUserCallbackURL,\n    link,\n    /**\n     * This is the actual expiry time of the state\n     */\n    expiresAt: Date.now() + 10 * 60 * 1e3,\n    requestSignUp: c.body?.requestSignUp\n  });\n  const expiresAt = /* @__PURE__ */ new Date();\n  expiresAt.setMinutes(expiresAt.getMinutes() + 10);\n  const verification = await c.context.internalAdapter.createVerificationValue(\n    {\n      value: data,\n      identifier: state,\n      expiresAt\n    },\n    c\n  );\n  if (!verification) {\n    c.context.logger.error(\n      \"Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database\"\n    );\n    throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n      message: \"Unable to create verification\"\n    });\n  }\n  return {\n    state: verification.identifier,\n    codeVerifier\n  };\n}\nasync function parseState(c) {\n  const state = c.query.state || c.body.state;\n  const data = await c.context.internalAdapter.findVerificationValue(state);\n  if (!data) {\n    c.context.logger.error(\"State Mismatch. Verification not found\", {\n      state\n    });\n    throw c.redirect(\n      `${c.context.baseURL}/error?error=please_restart_the_process`\n    );\n  }\n  const parsedData = z.object({\n    callbackURL: z.string(),\n    codeVerifier: z.string(),\n    errorURL: z.string().optional(),\n    newUserURL: z.string().optional(),\n    expiresAt: z.number(),\n    link: z.object({\n      email: z.string(),\n      userId: z.coerce.string()\n    }).optional(),\n    requestSignUp: z.boolean().optional()\n  }).parse(JSON.parse(data.value));\n  if (!parsedData.errorURL) {\n    parsedData.errorURL = `${c.context.baseURL}/error`;\n  }\n  if (parsedData.expiresAt < Date.now()) {\n    await c.context.internalAdapter.deleteVerificationValue(data.id);\n    throw c.redirect(\n      `${c.context.baseURL}/error?error=please_restart_the_process`\n    );\n  }\n  await c.context.internalAdapter.deleteVerificationValue(data.id);\n  return parsedData;\n}\n\nexport { generateState as g, parseState as p };\n", "import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateId = (size) => {\n  return createRandomStringGenerator(\"a-z\", \"A-Z\", \"0-9\")(size || 32);\n};\n\nexport { generateId as g };\n", "import { z } from 'zod';\nimport { APIError } from 'better-call';\n\nconst accountSchema = z.object({\n  id: z.string(),\n  providerId: z.string(),\n  accountId: z.string(),\n  userId: z.coerce.string(),\n  accessToken: z.string().nullish(),\n  refreshToken: z.string().nullish(),\n  idToken: z.string().nullish(),\n  /**\n   * Access token expires at\n   */\n  accessTokenExpiresAt: z.date().nullish(),\n  /**\n   * Refresh token expires at\n   */\n  refreshTokenExpiresAt: z.date().nullish(),\n  /**\n   * The scopes that the user has authorized\n   */\n  scope: z.string().nullish(),\n  /**\n   * Password is only stored in the credential provider\n   */\n  password: z.string().nullish(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nconst userSchema = z.object({\n  id: z.string(),\n  email: z.string().transform((val) => val.toLowerCase()),\n  emailVerified: z.boolean().default(false),\n  name: z.string(),\n  image: z.string().nullish(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nconst sessionSchema = z.object({\n  id: z.string(),\n  userId: z.coerce.string(),\n  expiresAt: z.date(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  token: z.string(),\n  ipAddress: z.string().nullish(),\n  userAgent: z.string().nullish()\n});\nconst verificationSchema = z.object({\n  id: z.string(),\n  value: z.string(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  expiresAt: z.date(),\n  identifier: z.string()\n});\nfunction parseOutputData(data, schema) {\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in data) {\n    const field = fields[key];\n    if (!field) {\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (field.returned === false) {\n      continue;\n    }\n    parsedData[key] = data[key];\n  }\n  return parsedData;\n}\nfunction getAllFields(options, table) {\n  let schema = {\n    ...table === \"user\" ? options.user?.additionalFields : {},\n    ...table === \"session\" ? options.session?.additionalFields : {}\n  };\n  for (const plugin of options.plugins || []) {\n    if (plugin.schema && plugin.schema[table]) {\n      schema = {\n        ...schema,\n        ...plugin.schema[table].fields\n      };\n    }\n  }\n  return schema;\n}\nfunction parseUserOutput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseOutputData(user, { fields: schema });\n}\nfunction parseAccountOutput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseOutputData(account, { fields: schema });\n}\nfunction parseSessionOutput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseOutputData(session, { fields: schema });\n}\nfunction parseInputData(data, schema) {\n  const action = schema.action || \"create\";\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in fields) {\n    if (key in data) {\n      if (fields[key].input === false) {\n        if (fields[key].defaultValue) {\n          parsedData[key] = fields[key].defaultValue;\n          continue;\n        }\n        continue;\n      }\n      if (fields[key].validator?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].validator.input.parse(data[key]);\n        continue;\n      }\n      if (fields[key].transform?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].transform?.input(data[key]);\n        continue;\n      }\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (fields[key].defaultValue && action === \"create\") {\n      parsedData[key] = fields[key].defaultValue;\n      continue;\n    }\n    if (fields[key].required && action === \"create\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `${key} is required`\n      });\n    }\n  }\n  return parsedData;\n}\nfunction parseUserInput(options, user, action) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema, action });\n}\nfunction parseAdditionalUserInput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema });\n}\nfunction parseAccountInput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseInputData(account, { fields: schema });\n}\nfunction parseSessionInput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseInputData(session, { fields: schema });\n}\nfunction mergeSchema(schema, newSchema) {\n  if (!newSchema) {\n    return schema;\n  }\n  for (const table in newSchema) {\n    const newModelName = newSchema[table]?.modelName;\n    if (newModelName) {\n      schema[table].modelName = newModelName;\n    }\n    for (const field in schema[table].fields) {\n      const newField = newSchema[table]?.fields?.[field];\n      if (!newField) {\n        continue;\n      }\n      schema[table].fields[field].fieldName = newField;\n    }\n  }\n  return schema;\n}\n\nexport { accountSchema as a, parseUserOutput as b, parseAccountOutput as c, parseSessionOutput as d, parseInputData as e, parseUserInput as f, getAllFields as g, parseAdditionalUserInput as h, parseAccountInput as i, parseSessionInput as j, mergeSchema as m, parseOutputData as p, sessionSchema as s, userSchema as u, verificationSchema as v };\n", "function isPlainObject(value) {\n  if (value === null || typeof value !== \"object\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  if (prototype !== null && prototype !== Object.prototype && Object.getPrototypeOf(prototype) !== null) {\n    return false;\n  }\n  if (Symbol.iterator in value) {\n    return false;\n  }\n  if (Symbol.toStringTag in value) {\n    return Object.prototype.toString.call(value) === \"[object Module]\";\n  }\n  return true;\n}\n\nfunction _defu(baseObject, defaults, namespace = \".\", merger) {\n  if (!isPlainObject(defaults)) {\n    return _defu(baseObject, {}, namespace, merger);\n  }\n  const object = Object.assign({}, defaults);\n  for (const key in baseObject) {\n    if (key === \"__proto__\" || key === \"constructor\") {\n      continue;\n    }\n    const value = baseObject[key];\n    if (value === null || value === void 0) {\n      continue;\n    }\n    if (merger && merger(object, key, value, namespace)) {\n      continue;\n    }\n    if (Array.isArray(value) && Array.isArray(object[key])) {\n      object[key] = [...value, ...object[key]];\n    } else if (isPlainObject(value) && isPlainObject(object[key])) {\n      object[key] = _defu(\n        value,\n        object[key],\n        (namespace ? `${namespace}.` : \"\") + key.toString(),\n        merger\n      );\n    } else {\n      object[key] = value;\n    }\n  }\n  return object;\n}\nfunction createDefu(merger) {\n  return (...arguments_) => (\n    // eslint-disable-next-line unicorn/no-array-reduce\n    arguments_.reduce((p, c) => _defu(p, c, \"\", merger), {})\n  );\n}\nconst defu = createDefu();\nconst defuFn = createDefu((object, key, currentValue) => {\n  if (object[key] !== void 0 && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\nconst defuArrayFn = createDefu((object, key, currentValue) => {\n  if (Array.isArray(object[key]) && typeof currentValue === \"function\") {\n    object[key] = currentValue(object[key]);\n    return true;\n  }\n});\n\nexport { createDefu, defu as default, defu, defuArrayFn, defuFn };\n", "import { SignJWT } from 'jose';\n\nasync function signJWT(payload, secret, expiresIn = 3600) {\n  const jwt = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt().setExpirationTime(Math.floor(Date.now() / 1e3) + expiresIn).sign(new TextEncoder().encode(secret));\n  return jwt;\n}\n\nexport { signJWT as s };\n", "const decoders = /* @__PURE__ */ new Map();\nconst encoder = new TextEncoder();\nconst binary = {\n  decode: (data, encoding = \"utf-8\") => {\n    if (!decoders.has(encoding)) {\n      decoders.set(encoding, new TextDecoder(encoding));\n    }\n    const decoder = decoders.get(encoding);\n    return decoder.decode(data);\n  },\n  encode: encoder.encode\n};\n\nexport { binary };\n", "import { z } from 'zod';\nimport { deleteSessionCookie, setSessionCookie, setCookieCache } from '../cookies/index.mjs';\nimport { createMiddleware, createEndpoint, APIError } from 'better-call';\nimport { SocialProviderListEnum, socialProviderList } from '../social-providers/index.mjs';\nimport '@better-auth/utils/random';\nimport { g as generateState, p as parseState } from './better-auth.dn8_oqOu.mjs';\nimport { l as logger } from './better-auth.Cqykj82J.mjs';\nimport { s as safeJSONParse } from './better-auth.tB5eU6EY.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport { base64 } from '@better-auth/utils/base64';\nimport { jwtVerify } from 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\nimport { f as parseUserInput } from './better-auth.Cc72UxUH.mjs';\nimport { b as isDevelopment } from './better-auth.8zoxzg-F.mjs';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport '@better-fetch/fetch';\nimport 'defu';\nimport { s as signJWT } from './better-auth.DDEbWX-S.mjs';\nimport { b as getHost, c as getProtocol, g as getOrigin } from './better-auth.VTXNLFMT.mjs';\nimport { JWTExpired } from 'jose/errors';\nimport { binary } from '@better-auth/utils/binary';\n\nconst optionsMiddleware = createMiddleware(async () => {\n  return {};\n});\nconst createAuthMiddleware = createMiddleware.create({\n  use: [\n    optionsMiddleware,\n    /**\n     * Only use for post hooks\n     */\n    createMiddleware(async () => {\n      return {};\n    })\n  ]\n});\nconst createAuthEndpoint = createEndpoint.create({\n  use: [optionsMiddleware]\n});\n\nfunction escapeRegExpChar(char) {\n  if (char === \"-\" || char === \"^\" || char === \"$\" || char === \"+\" || char === \".\" || char === \"(\" || char === \")\" || char === \"|\" || char === \"[\" || char === \"]\" || char === \"{\" || char === \"}\" || char === \"*\" || char === \"?\" || char === \"\\\\\") {\n    return `\\\\${char}`;\n  } else {\n    return char;\n  }\n}\nfunction escapeRegExpString(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    result += escapeRegExpChar(str[i]);\n  }\n  return result;\n}\nfunction transform(pattern, separator = true) {\n  if (Array.isArray(pattern)) {\n    let regExpPatterns = pattern.map((p) => `^${transform(p, separator)}$`);\n    return `(?:${regExpPatterns.join(\"|\")})`;\n  }\n  let separatorSplitter = \"\";\n  let separatorMatcher = \"\";\n  let wildcard = \".\";\n  if (separator === true) {\n    separatorSplitter = \"/\";\n    separatorMatcher = \"[/\\\\\\\\]\";\n    wildcard = \"[^/\\\\\\\\]\";\n  } else if (separator) {\n    separatorSplitter = separator;\n    separatorMatcher = escapeRegExpString(separatorSplitter);\n    if (separatorMatcher.length > 1) {\n      separatorMatcher = `(?:${separatorMatcher})`;\n      wildcard = `((?!${separatorMatcher}).)`;\n    } else {\n      wildcard = `[^${separatorMatcher}]`;\n    }\n  }\n  let requiredSeparator = separator ? `${separatorMatcher}+?` : \"\";\n  let optionalSeparator = separator ? `${separatorMatcher}*?` : \"\";\n  let segments = separator ? pattern.split(separatorSplitter) : [pattern];\n  let result = \"\";\n  for (let s = 0; s < segments.length; s++) {\n    let segment = segments[s];\n    let nextSegment = segments[s + 1];\n    let currentSeparator = \"\";\n    if (!segment && s > 0) {\n      continue;\n    }\n    if (separator) {\n      if (s === segments.length - 1) {\n        currentSeparator = optionalSeparator;\n      } else if (nextSegment !== \"**\") {\n        currentSeparator = requiredSeparator;\n      } else {\n        currentSeparator = \"\";\n      }\n    }\n    if (separator && segment === \"**\") {\n      if (currentSeparator) {\n        result += s === 0 ? \"\" : currentSeparator;\n        result += `(?:${wildcard}*?${currentSeparator})*?`;\n      }\n      continue;\n    }\n    for (let c = 0; c < segment.length; c++) {\n      let char = segment[c];\n      if (char === \"\\\\\") {\n        if (c < segment.length - 1) {\n          result += escapeRegExpChar(segment[c + 1]);\n          c++;\n        }\n      } else if (char === \"?\") {\n        result += wildcard;\n      } else if (char === \"*\") {\n        result += `${wildcard}*?`;\n      } else {\n        result += escapeRegExpChar(char);\n      }\n    }\n    result += currentSeparator;\n  }\n  return result;\n}\nfunction isMatch(regexp, sample) {\n  if (typeof sample !== \"string\") {\n    throw new TypeError(`Sample must be a string, but ${typeof sample} given`);\n  }\n  return regexp.test(sample);\n}\nfunction wildcardMatch(pattern, options) {\n  if (typeof pattern !== \"string\" && !Array.isArray(pattern)) {\n    throw new TypeError(\n      `The first argument must be a single pattern string or an array of patterns, but ${typeof pattern} given`\n    );\n  }\n  if (typeof options === \"string\" || typeof options === \"boolean\") {\n    options = { separator: options };\n  }\n  if (arguments.length === 2 && !(typeof options === \"undefined\" || typeof options === \"object\" && options !== null && !Array.isArray(options))) {\n    throw new TypeError(\n      `The second argument must be an options object or a string/boolean separator, but ${typeof options} given`\n    );\n  }\n  options = options || {};\n  if (options.separator === \"\\\\\") {\n    throw new Error(\n      \"\\\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead\"\n    );\n  }\n  let regexpPattern = transform(pattern, options.separator);\n  let regexp = new RegExp(`^${regexpPattern}$`, options.flags);\n  let fn = isMatch.bind(null, regexp);\n  fn.options = options;\n  fn.pattern = pattern;\n  fn.regexp = regexp;\n  return fn;\n}\n\nconst originCheckMiddleware = createAuthMiddleware(async (ctx) => {\n  if (ctx.request?.method !== \"POST\" || !ctx.request) {\n    return;\n  }\n  const { body, query, context } = ctx;\n  const originHeader = ctx.headers?.get(\"origin\") || ctx.headers?.get(\"referer\") || \"\";\n  const callbackURL = body?.callbackURL || query?.callbackURL;\n  const redirectURL = body?.redirectTo;\n  const errorCallbackURL = body?.errorCallbackURL;\n  const newUserCallbackURL = body?.newUserCallbackURL;\n  const trustedOrigins = Array.isArray(context.options.trustedOrigins) ? context.trustedOrigins : [\n    ...context.trustedOrigins,\n    ...await context.options.trustedOrigins?.(ctx.request) || []\n  ];\n  const usesCookies = ctx.headers?.has(\"cookie\");\n  const matchesPattern = (url, pattern) => {\n    if (url.startsWith(\"/\")) {\n      return false;\n    }\n    if (pattern.includes(\"*\")) {\n      return wildcardMatch(pattern)(getHost(url));\n    }\n    const protocol = getProtocol(url);\n    return protocol === \"http:\" || protocol === \"https:\" || !protocol ? pattern === getOrigin(url) : url.startsWith(pattern);\n  };\n  const validateURL = (url, label) => {\n    if (!url) {\n      return;\n    }\n    const isTrustedOrigin = trustedOrigins.some(\n      (origin) => matchesPattern(url, origin) || url?.startsWith(\"/\") && label !== \"origin\" && /^\\/(?!\\/|\\\\|%2f|%5c)[\\w\\-.\\+/@]*(?:\\?[\\w\\-.\\+/=&%@]*)?$/.test(url)\n    );\n    if (!isTrustedOrigin) {\n      ctx.context.logger.error(`Invalid ${label}: ${url}`);\n      ctx.context.logger.info(\n        `If it's a valid URL, please add ${url} to trustedOrigins in your auth config\n`,\n        `Current list of trustedOrigins: ${trustedOrigins}`\n      );\n      throw new APIError(\"FORBIDDEN\", { message: `Invalid ${label}` });\n    }\n  };\n  if (usesCookies && !ctx.context.options.advanced?.disableCSRFCheck) {\n    validateURL(originHeader, \"origin\");\n  }\n  callbackURL && validateURL(callbackURL, \"callbackURL\");\n  redirectURL && validateURL(redirectURL, \"redirectURL\");\n  errorCallbackURL && validateURL(errorCallbackURL, \"errorCallbackURL\");\n  newUserCallbackURL && validateURL(newUserCallbackURL, \"newUserCallbackURL\");\n});\nconst originCheck = (getValue) => createAuthMiddleware(async (ctx) => {\n  if (!ctx.request) {\n    return;\n  }\n  const { context } = ctx;\n  const callbackURL = getValue(ctx);\n  const trustedOrigins = Array.isArray(\n    context.options.trustedOrigins\n  ) ? context.trustedOrigins : [\n    ...context.trustedOrigins,\n    ...await context.options.trustedOrigins?.(ctx.request) || []\n  ];\n  const matchesPattern = (url, pattern) => {\n    if (url.startsWith(\"/\")) {\n      return false;\n    }\n    if (pattern.includes(\"*\")) {\n      return wildcardMatch(pattern)(getHost(url));\n    }\n    return url.startsWith(pattern);\n  };\n  const validateURL = (url, label) => {\n    if (!url) {\n      return;\n    }\n    const isTrustedOrigin = trustedOrigins.some(\n      (origin) => matchesPattern(url, origin) || url?.startsWith(\"/\") && label !== \"origin\" && /^\\/(?!\\/|\\\\|%2f|%5c)[\\w\\-.\\+/@]*(?:\\?[\\w\\-.\\+/=&%@]*)?$/.test(\n        url\n      )\n    );\n    if (!isTrustedOrigin) {\n      ctx.context.logger.error(`Invalid ${label}: ${url}`);\n      ctx.context.logger.info(\n        `If it's a valid URL, please add ${url} to trustedOrigins in your auth config\n`,\n        `Current list of trustedOrigins: ${trustedOrigins}`\n      );\n      throw new APIError(\"FORBIDDEN\", { message: `Invalid ${label}` });\n    }\n  };\n  const callbacks = Array.isArray(callbackURL) ? callbackURL : [callbackURL];\n  for (const url of callbacks) {\n    validateURL(url, \"callbackURL\");\n  }\n});\n\nconst HIDE_METADATA = {\n  isAction: false\n};\n\nconst BASE_ERROR_CODES = {\n  USER_NOT_FOUND: \"User not found\",\n  FAILED_TO_CREATE_USER: \"Failed to create user\",\n  FAILED_TO_CREATE_SESSION: \"Failed to create session\",\n  FAILED_TO_UPDATE_USER: \"Failed to update user\",\n  FAILED_TO_GET_SESSION: \"Failed to get session\",\n  INVALID_PASSWORD: \"Invalid password\",\n  INVALID_EMAIL: \"Invalid email\",\n  INVALID_EMAIL_OR_PASSWORD: \"Invalid email or password\",\n  SOCIAL_ACCOUNT_ALREADY_LINKED: \"Social account already linked\",\n  PROVIDER_NOT_FOUND: \"Provider not found\",\n  INVALID_TOKEN: \"invalid token\",\n  ID_TOKEN_NOT_SUPPORTED: \"id_token not supported\",\n  FAILED_TO_GET_USER_INFO: \"Failed to get user info\",\n  USER_EMAIL_NOT_FOUND: \"User email not found\",\n  EMAIL_NOT_VERIFIED: \"Email not verified\",\n  PASSWORD_TOO_SHORT: \"Password too short\",\n  PASSWORD_TOO_LONG: \"Password too long\",\n  USER_ALREADY_EXISTS: \"User already exists\",\n  EMAIL_CAN_NOT_BE_UPDATED: \"Email can not be updated\",\n  CREDENTIAL_ACCOUNT_NOT_FOUND: \"Credential account not found\",\n  SESSION_EXPIRED: \"Session expired. Re-authenticate to perform this action.\",\n  FAILED_TO_UNLINK_LAST_ACCOUNT: \"You can't unlink your last account\",\n  ACCOUNT_NOT_FOUND: \"Account not found\"\n};\n\nconst getSession = () => createAuthEndpoint(\n  \"/get-session\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        /**\n         * If cookie cache is enabled, it will disable the cache\n         * and fetch the session from the database\n         */\n        disableCookieCache: z.optional(\n          z.boolean({\n            description: \"Disable cookie cache and fetch session from database\"\n          }).or(z.string().transform((v) => v === \"true\"))\n        ).optional(),\n        disableRefresh: z.boolean({\n          description: \"Disable session refresh. Useful for checking session status, without updating the session\"\n        }).or(z.string().transform((v) => v === \"true\")).optional()\n      })\n    ),\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Get the current session\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    session: {\n                      $ref: \"#/components/schemas/Session\"\n                    },\n                    user: {\n                      $ref: \"#/components/schemas/User\"\n                    }\n                  },\n                  required: [\"session\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessionCookieToken = await ctx.getSignedCookie(\n        ctx.context.authCookies.sessionToken.name,\n        ctx.context.secret\n      );\n      if (!sessionCookieToken) {\n        return null;\n      }\n      const sessionDataCookie = ctx.getCookie(\n        ctx.context.authCookies.sessionData.name\n      );\n      const sessionDataPayload = sessionDataCookie ? safeJSONParse(binary.decode(base64.decode(sessionDataCookie))) : null;\n      if (sessionDataPayload) {\n        const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionDataPayload.session,\n            expiresAt: sessionDataPayload.expiresAt\n          }),\n          sessionDataPayload.signature\n        );\n        if (!isValid) {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n          return ctx.json(null);\n        }\n      }\n      const dontRememberMe = await ctx.getSignedCookie(\n        ctx.context.authCookies.dontRememberToken.name,\n        ctx.context.secret\n      );\n      if (sessionDataPayload?.session && ctx.context.options.session?.cookieCache?.enabled && !ctx.query?.disableCookieCache) {\n        const session2 = sessionDataPayload.session;\n        const hasExpired = sessionDataPayload.expiresAt < Date.now() || session2.session.expiresAt < /* @__PURE__ */ new Date();\n        if (!hasExpired) {\n          return ctx.json(\n            session2\n          );\n        } else {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n        }\n      }\n      const session = await ctx.context.internalAdapter.findSession(sessionCookieToken);\n      ctx.context.session = session;\n      if (!session || session.session.expiresAt < /* @__PURE__ */ new Date()) {\n        deleteSessionCookie(ctx);\n        if (session) {\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n        }\n        return ctx.json(null);\n      }\n      if (dontRememberMe || ctx.query?.disableRefresh) {\n        return ctx.json(\n          session\n        );\n      }\n      const expiresIn = ctx.context.sessionConfig.expiresIn;\n      const updateAge = ctx.context.sessionConfig.updateAge;\n      const sessionIsDueToBeUpdatedDate = session.session.expiresAt.valueOf() - expiresIn * 1e3 + updateAge * 1e3;\n      const shouldBeUpdated = sessionIsDueToBeUpdatedDate <= Date.now();\n      if (shouldBeUpdated && (!ctx.query?.disableRefresh || !ctx.context.options.session?.disableSessionRefresh)) {\n        const updatedSession = await ctx.context.internalAdapter.updateSession(\n          session.session.token,\n          {\n            expiresAt: getDate(ctx.context.sessionConfig.expiresIn, \"sec\")\n          }\n        );\n        if (!updatedSession) {\n          deleteSessionCookie(ctx);\n          return ctx.json(null, { status: 401 });\n        }\n        const maxAge = (updatedSession.expiresAt.valueOf() - Date.now()) / 1e3;\n        await setSessionCookie(\n          ctx,\n          {\n            session: updatedSession,\n            user: session.user\n          },\n          false,\n          {\n            maxAge\n          }\n        );\n        return ctx.json({\n          session: updatedSession,\n          user: session.user\n        });\n      }\n      await setCookieCache(ctx, session);\n      return ctx.json(\n        session\n      );\n    } catch (error) {\n      ctx.context.logger.error(\"INTERNAL_SERVER_ERROR\", error);\n      throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n  }\n);\nconst getSessionFromCtx = async (ctx, config) => {\n  if (ctx.context.session) {\n    return ctx.context.session;\n  }\n  const session = await getSession()({\n    ...ctx,\n    asResponse: false,\n    headers: ctx.headers,\n    returnHeaders: false,\n    query: {\n      ...config,\n      ...ctx.query\n    }\n  }).catch((e) => {\n    return null;\n  });\n  ctx.context.session = session;\n  return session;\n};\nconst sessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst requestOnlySessionMiddleware = createAuthMiddleware(\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session?.session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return { session };\n  }\n);\nconst freshSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  if (ctx.context.sessionConfig.freshAge === 0) {\n    return {\n      session\n    };\n  }\n  const freshAge = ctx.context.sessionConfig.freshAge;\n  const lastUpdated = session.session.updatedAt?.valueOf() || session.session.createdAt.valueOf();\n  const now = Date.now();\n  const isFresh = now - lastUpdated < freshAge * 1e3;\n  if (!isFresh) {\n    throw new APIError(\"FORBIDDEN\", {\n      message: \"Session is not fresh\"\n    });\n  }\n  return {\n    session\n  };\n});\nconst listSessions = () => createAuthEndpoint(\n  \"/list-sessions\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"List all active sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: \"#/components/schemas/Session\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessions = await ctx.context.internalAdapter.listSessions(\n        ctx.context.session.user.id\n      );\n      const activeSessions = sessions.filter((session) => {\n        return session.expiresAt > /* @__PURE__ */ new Date();\n      });\n      return ctx.json(\n        activeSessions\n      );\n    } catch (e) {\n      ctx.context.logger.error(e);\n      throw ctx.error(\"INTERNAL_SERVER_ERROR\");\n    }\n  }\n);\nconst revokeSession = createAuthEndpoint(\n  \"/revoke-session\",\n  {\n    method: \"POST\",\n    body: z.object({\n      token: z.string({\n        description: \"The token to revoke\"\n      })\n    }),\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke a single session\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  token: {\n                    type: \"string\",\n                    description: \"The token to revoke\"\n                  }\n                },\n                required: [\"token\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the session was revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token;\n    const findSession = await ctx.context.internalAdapter.findSession(token);\n    if (!findSession) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Session not found\"\n      });\n    }\n    if (findSession.session.userId !== ctx.context.session.user.id) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    try {\n      await ctx.context.internalAdapter.deleteSession(token);\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeSessions = createAuthEndpoint(\n  \"/revoke-sessions\",\n  {\n    method: \"POST\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke all sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      await ctx.context.internalAdapter.deleteSessions(\n        ctx.context.session.user.id\n      );\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeOtherSessions = createAuthEndpoint(\n  \"/revoke-other-sessions\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Revoke all other sessions for the user except the current one\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all other sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    if (!session.user) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const sessions = await ctx.context.internalAdapter.listSessions(\n      session.user.id\n    );\n    const activeSessions = sessions.filter((session2) => {\n      return session2.expiresAt > /* @__PURE__ */ new Date();\n    });\n    const otherSessions = activeSessions.filter(\n      (session2) => session2.token !== ctx.context.session.session.token\n    );\n    await Promise.all(\n      otherSessions.map(\n        (session2) => ctx.context.internalAdapter.deleteSession(session2.token)\n      )\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nasync function createEmailVerificationToken(secret, email, updateTo, expiresIn = 3600) {\n  const token = await signJWT(\n    {\n      email: email.toLowerCase(),\n      updateTo\n    },\n    secret,\n    expiresIn\n  );\n  return token;\n}\nasync function sendVerificationEmailFn(ctx, user) {\n  if (!ctx.context.options.emailVerification?.sendVerificationEmail) {\n    ctx.context.logger.error(\"Verification email isn't enabled.\");\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Verification email isn't enabled\"\n    });\n  }\n  const token = await createEmailVerificationToken(\n    ctx.context.secret,\n    user.email,\n    void 0,\n    ctx.context.options.emailVerification?.expiresIn\n  );\n  const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n  await ctx.context.options.emailVerification.sendVerificationEmail(\n    {\n      user,\n      url,\n      token\n    },\n    ctx.request\n  );\n}\nconst sendVerificationEmail = createAuthEndpoint(\n  \"/send-verification-email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      email: z.string({\n        description: \"The email to send the verification email to\"\n      }).email(),\n      callbackURL: z.string({\n        description: \"The URL to use for email verification callback\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a verification email to the user\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  email: {\n                    type: \"string\",\n                    description: \"The email to send the verification email to\",\n                    example: \"user@example.com\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\",\n                    example: \"https://example.com/callback\",\n                    nullable: true\n                  }\n                },\n                required: [\"email\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the email was sent successfully\",\n                      example: true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            description: \"Bad Request\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\",\n                      description: \"Error message\",\n                      example: \"Verification email isn't enabled\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailVerification?.sendVerificationEmail) {\n      ctx.context.logger.error(\"Verification email isn't enabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Verification email isn't enabled\"\n      });\n    }\n    const { email } = ctx.body;\n    const user = await ctx.context.internalAdapter.findUserByEmail(email);\n    if (!user) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.USER_NOT_FOUND\n      });\n    }\n    await sendVerificationEmailFn(ctx, user.user);\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst verifyEmail = createAuthEndpoint(\n  \"/verify-email\",\n  {\n    method: \"GET\",\n    query: z.object({\n      token: z.string({\n        description: \"The token to verify the email\"\n      }),\n      callbackURL: z.string({\n        description: \"The URL to redirect to after email verification\"\n      }).optional()\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Verify the email of the user\",\n        parameters: [\n          {\n            name: \"token\",\n            in: \"query\",\n            description: \"The token to verify the email\",\n            required: true,\n            schema: {\n              type: \"string\"\n            }\n          },\n          {\n            name: \"callbackURL\",\n            in: \"query\",\n            description: \"The URL to redirect to after email verification\",\n            required: false,\n            schema: {\n              type: \"string\"\n            }\n          }\n        ],\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"User ID\"\n                        },\n                        email: {\n                          type: \"string\",\n                          description: \"User email\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"User name\"\n                        },\n                        image: {\n                          type: \"string\",\n                          description: \"User image URL\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Indicates if the user email is verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          description: \"User creation date\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          description: \"User update date\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"image\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    },\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the email was verified successfully\"\n                    }\n                  },\n                  required: [\"user\", \"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    function redirectOnError(error) {\n      if (ctx.query.callbackURL) {\n        if (ctx.query.callbackURL.includes(\"?\")) {\n          throw ctx.redirect(`${ctx.query.callbackURL}&error=${error}`);\n        }\n        throw ctx.redirect(`${ctx.query.callbackURL}?error=${error}`);\n      }\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: error\n      });\n    }\n    const { token } = ctx.query;\n    let jwt;\n    try {\n      jwt = await jwtVerify(\n        token,\n        new TextEncoder().encode(ctx.context.secret),\n        {\n          algorithms: [\"HS256\"]\n        }\n      );\n    } catch (e) {\n      if (e instanceof JWTExpired) {\n        return redirectOnError(\"token_expired\");\n      }\n      return redirectOnError(\"invalid_token\");\n    }\n    const schema = z.object({\n      email: z.string().email(),\n      updateTo: z.string().optional()\n    });\n    const parsed = schema.parse(jwt.payload);\n    const user = await ctx.context.internalAdapter.findUserByEmail(\n      parsed.email\n    );\n    if (!user) {\n      return redirectOnError(\"user_not_found\");\n    }\n    if (parsed.updateTo) {\n      const session = await getSessionFromCtx(ctx);\n      if (!session) {\n        if (ctx.query.callbackURL) {\n          throw ctx.redirect(`${ctx.query.callbackURL}?error=unauthorized`);\n        }\n        return redirectOnError(\"unauthorized\");\n      }\n      if (session.user.email !== parsed.email) {\n        if (ctx.query.callbackURL) {\n          throw ctx.redirect(`${ctx.query.callbackURL}?error=unauthorized`);\n        }\n        return redirectOnError(\"unauthorized\");\n      }\n      const updatedUser = await ctx.context.internalAdapter.updateUserByEmail(\n        parsed.email,\n        {\n          email: parsed.updateTo,\n          emailVerified: false\n        },\n        ctx\n      );\n      const newToken = await createEmailVerificationToken(\n        ctx.context.secret,\n        parsed.updateTo\n      );\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        {\n          user: updatedUser,\n          url: `${ctx.context.baseURL}/verify-email?token=${newToken}&callbackURL=${ctx.query.callbackURL || \"/\"}`,\n          token: newToken\n        },\n        ctx.request\n      );\n      await setSessionCookie(ctx, {\n        session: session.session,\n        user: {\n          ...session.user,\n          email: parsed.updateTo,\n          emailVerified: false\n        }\n      });\n      if (ctx.query.callbackURL) {\n        throw ctx.redirect(ctx.query.callbackURL);\n      }\n      return ctx.json({\n        status: true,\n        user: {\n          id: updatedUser.id,\n          email: updatedUser.email,\n          name: updatedUser.name,\n          image: updatedUser.image,\n          emailVerified: updatedUser.emailVerified,\n          createdAt: updatedUser.createdAt,\n          updatedAt: updatedUser.updatedAt\n        }\n      });\n    }\n    await ctx.context.options.emailVerification?.onEmailVerification?.(\n      user.user,\n      ctx.request\n    );\n    await ctx.context.internalAdapter.updateUserByEmail(\n      parsed.email,\n      {\n        emailVerified: true\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.autoSignInAfterVerification) {\n      const currentSession = await getSessionFromCtx(ctx);\n      if (!currentSession || currentSession.user.email !== parsed.email) {\n        const session = await ctx.context.internalAdapter.createSession(\n          user.user.id,\n          ctx\n        );\n        if (!session) {\n          throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n            message: \"Failed to create session\"\n          });\n        }\n        await setSessionCookie(ctx, {\n          session,\n          user: {\n            ...user.user,\n            emailVerified: true\n          }\n        });\n      } else {\n        await setSessionCookie(ctx, {\n          session: currentSession.session,\n          user: {\n            ...currentSession.user,\n            emailVerified: true\n          }\n        });\n      }\n    }\n    if (ctx.query.callbackURL) {\n      throw ctx.redirect(ctx.query.callbackURL);\n    }\n    return ctx.json({\n      status: true,\n      user: null\n    });\n  }\n);\n\nasync function handleOAuthUserInfo(c, {\n  userInfo,\n  account,\n  callbackURL,\n  disableSignUp,\n  overrideUserInfo\n}) {\n  const dbUser = await c.context.internalAdapter.findOAuthUser(\n    userInfo.email.toLowerCase(),\n    account.accountId,\n    account.providerId\n  ).catch((e) => {\n    logger.error(\n      \"Better auth was unable to query your database.\\nError: \",\n      e\n    );\n    throw c.redirect(\n      `${c.context.baseURL}/error?error=internal_server_error`\n    );\n  });\n  let user = dbUser?.user;\n  let isRegister = !user;\n  if (dbUser) {\n    const hasBeenLinked = dbUser.accounts.find(\n      (a) => a.providerId === account.providerId\n    );\n    if (!hasBeenLinked) {\n      const trustedProviders = c.context.options.account?.accountLinking?.trustedProviders;\n      const isTrustedProvider = trustedProviders?.includes(\n        account.providerId\n      );\n      if (!isTrustedProvider && !userInfo.emailVerified || c.context.options.account?.accountLinking?.enabled === false) {\n        if (isDevelopment) {\n          logger.warn(\n            `User already exist but account isn't linked to ${account.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`\n          );\n        }\n        return {\n          error: \"account not linked\",\n          data: null\n        };\n      }\n      try {\n        await c.context.internalAdapter.linkAccount(\n          {\n            providerId: account.providerId,\n            accountId: userInfo.id.toString(),\n            userId: dbUser.user.id,\n            accessToken: account.accessToken,\n            idToken: account.idToken,\n            refreshToken: account.refreshToken,\n            accessTokenExpiresAt: account.accessTokenExpiresAt,\n            refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n            scope: account.scope\n          },\n          c\n        );\n      } catch (e) {\n        logger.error(\"Unable to link account\", e);\n        return {\n          error: \"unable to link account\",\n          data: null\n        };\n      }\n    } else {\n      if (c.context.options.account?.updateAccountOnSignIn !== false) {\n        const updateData = Object.fromEntries(\n          Object.entries({\n            accessToken: account.accessToken,\n            idToken: account.idToken,\n            refreshToken: account.refreshToken,\n            accessTokenExpiresAt: account.accessTokenExpiresAt,\n            refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n            scope: account.scope\n          }).filter(([_, value]) => value !== void 0)\n        );\n        if (Object.keys(updateData).length > 0) {\n          await c.context.internalAdapter.updateAccount(\n            hasBeenLinked.id,\n            updateData,\n            c\n          );\n        }\n      }\n    }\n    if (overrideUserInfo) {\n      const { id: _, ...restUserInfo } = userInfo;\n      await c.context.internalAdapter.updateUser(dbUser.user.id, {\n        ...restUserInfo,\n        email: userInfo.email.toLowerCase(),\n        emailVerified: userInfo.email.toLowerCase() === dbUser.user.email ? dbUser.user.emailVerified || userInfo.emailVerified : userInfo.emailVerified\n      });\n    }\n  } else {\n    if (disableSignUp) {\n      return {\n        error: \"signup disabled\",\n        data: null,\n        isRegister: false\n      };\n    }\n    try {\n      const { id: _, ...restUserInfo } = userInfo;\n      user = await c.context.internalAdapter.createOAuthUser(\n        {\n          ...restUserInfo,\n          email: userInfo.email.toLowerCase()\n        },\n        {\n          accessToken: account.accessToken,\n          idToken: account.idToken,\n          refreshToken: account.refreshToken,\n          accessTokenExpiresAt: account.accessTokenExpiresAt,\n          refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n          scope: account.scope,\n          providerId: account.providerId,\n          accountId: userInfo.id.toString()\n        },\n        c\n      ).then((res) => res?.user);\n      if (!userInfo.emailVerified && user && c.context.options.emailVerification?.sendOnSignUp) {\n        const token = await createEmailVerificationToken(\n          c.context.secret,\n          user.email,\n          void 0,\n          c.context.options.emailVerification?.expiresIn\n        );\n        const url = `${c.context.baseURL}/verify-email?token=${token}&callbackURL=${callbackURL}`;\n        await c.context.options.emailVerification?.sendVerificationEmail?.(\n          {\n            user,\n            url,\n            token\n          },\n          c.request\n        );\n      }\n    } catch (e) {\n      logger.error(e);\n      if (e instanceof APIError) {\n        return {\n          error: e.message,\n          data: null,\n          isRegister: false\n        };\n      }\n      return {\n        error: \"unable to create user\",\n        data: null,\n        isRegister: false\n      };\n    }\n  }\n  if (!user) {\n    return {\n      error: \"unable to create user\",\n      data: null,\n      isRegister: false\n    };\n  }\n  const session = await c.context.internalAdapter.createSession(user.id, c);\n  if (!session) {\n    return {\n      error: \"unable to create session\",\n      data: null,\n      isRegister: false\n    };\n  }\n  return {\n    data: {\n      session,\n      user\n    },\n    error: null,\n    isRegister\n  };\n}\n\nconst signInSocial = createAuthEndpoint(\n  \"/sign-in/social\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * Callback URL to redirect to after the user\n       * has signed in.\n       */\n      callbackURL: z.string({\n        description: \"Callback URL to redirect to after the user has signed in\"\n      }).optional(),\n      /**\n       * callback url to redirect if the user is newly registered.\n       *\n       * useful if you have different routes for existing users and new users\n       */\n      newUserCallbackURL: z.string().optional(),\n      /**\n       * Callback url to redirect to if an error happens\n       *\n       * If it's initiated from the client sdk this defaults to\n       * the current url.\n       */\n      errorCallbackURL: z.string({\n        description: \"Callback URL to redirect to if an error happens\"\n      }).optional(),\n      /**\n       * OAuth2 provider to use`\n       */\n      provider: SocialProviderListEnum,\n      /**\n       * Disable automatic redirection to the provider\n       *\n       * This is useful if you want to handle the redirection\n       * yourself like in a popup or a different tab.\n       */\n      disableRedirect: z.boolean({\n        description: \"Disable automatic redirection to the provider. Useful for handling the redirection yourself\"\n      }).optional(),\n      /**\n       * ID token from the provider\n       *\n       * This is used to sign in the user\n       * if the user is already signed in with the\n       * provider in the frontend.\n       *\n       * Only applicable if the provider supports\n       * it. Currently only `apple` and `google` is\n       * supported out of the box.\n       */\n      idToken: z.optional(\n        z.object({\n          /**\n           * ID token from the provider\n           */\n          token: z.string({\n            description: \"ID token from the provider\"\n          }),\n          /**\n           * The nonce used to generate the token\n           */\n          nonce: z.string({\n            description: \"Nonce used to generate the token\"\n          }).optional(),\n          /**\n           * Access token from the provider\n           */\n          accessToken: z.string({\n            description: \"Access token from the provider\"\n          }).optional(),\n          /**\n           * Refresh token from the provider\n           */\n          refreshToken: z.string({\n            description: \"Refresh token from the provider\"\n          }).optional(),\n          /**\n           * Expiry date of the token\n           */\n          expiresAt: z.number({\n            description: \"Expiry date of the token\"\n          }).optional()\n        }),\n        {\n          description: \"ID token from the provider to sign in the user with id token\"\n        }\n      ),\n      scopes: z.array(z.string(), {\n        description: \"Array of scopes to request from the provider. This will override the default scopes passed.\"\n      }).optional(),\n      /**\n       * Explicitly request sign-up\n       *\n       * Should be used to allow sign up when\n       * disableImplicitSignUp for this provider is\n       * true\n       */\n      requestSignUp: z.boolean({\n        description: \"Explicitly request sign-up. Useful when disableImplicitSignUp is true for this provider\"\n      }).optional(),\n      /**\n       * The login hint to use for the authorization code request\n       */\n      loginHint: z.string({\n        description: \"The login hint to use for the authorization code request\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Sign in with a social provider\",\n        operationId: \"socialSignIn\",\n        responses: {\n          \"200\": {\n            description: \"Success - Returns either session details or redirect URL\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  // todo: we need support for multiple schema\n                  type: \"object\",\n                  description: \"Session response when idToken is provided\",\n                  properties: {\n                    redirect: {\n                      type: \"boolean\",\n                      enum: [false]\n                    },\n                    token: {\n                      type: \"string\",\n                      description: \"Session token\",\n                      url: {\n                        type: \"null\",\n                        nullable: true\n                      },\n                      user: {\n                        type: \"object\",\n                        properties: {\n                          id: { type: \"string\" },\n                          email: { type: \"string\" },\n                          name: {\n                            type: \"string\",\n                            nullable: true\n                          },\n                          image: {\n                            type: \"string\",\n                            nullable: true\n                          },\n                          emailVerified: {\n                            type: \"boolean\"\n                          },\n                          createdAt: {\n                            type: \"string\",\n                            format: \"date-time\"\n                          },\n                          updatedAt: {\n                            type: \"string\",\n                            format: \"date-time\"\n                          }\n                        },\n                        required: [\n                          \"id\",\n                          \"email\",\n                          \"emailVerified\",\n                          \"createdAt\",\n                          \"updatedAt\"\n                        ]\n                      }\n                    }\n                  },\n                  required: [\"redirect\", \"token\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.body.provider\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Provider not found. Make sure to add the provider in your auth config\",\n        {\n          provider: c.body.provider\n        }\n      );\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.PROVIDER_NOT_FOUND\n      });\n    }\n    if (c.body.idToken) {\n      if (!provider.verifyIdToken) {\n        c.context.logger.error(\n          \"Provider does not support id token verification\",\n          {\n            provider: c.body.provider\n          }\n        );\n        throw new APIError(\"NOT_FOUND\", {\n          message: BASE_ERROR_CODES.ID_TOKEN_NOT_SUPPORTED\n        });\n      }\n      const { token, nonce } = c.body.idToken;\n      const valid = await provider.verifyIdToken(token, nonce);\n      if (!valid) {\n        c.context.logger.error(\"Invalid id token\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.INVALID_TOKEN\n        });\n      }\n      const userInfo = await provider.getUserInfo({\n        idToken: token,\n        accessToken: c.body.idToken.accessToken,\n        refreshToken: c.body.idToken.refreshToken\n      });\n      if (!userInfo || !userInfo?.user) {\n        c.context.logger.error(\"Failed to get user info\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n        });\n      }\n      if (!userInfo.user.email) {\n        c.context.logger.error(\"User email not found\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.USER_EMAIL_NOT_FOUND\n        });\n      }\n      const data = await handleOAuthUserInfo(c, {\n        userInfo: {\n          ...userInfo.user,\n          email: userInfo.user.email,\n          id: userInfo.user.id,\n          name: userInfo.user.name || \"\",\n          image: userInfo.user.image,\n          emailVerified: userInfo.user.emailVerified || false\n        },\n        account: {\n          providerId: provider.id,\n          accountId: userInfo.user.id,\n          accessToken: c.body.idToken.accessToken\n        },\n        disableSignUp: provider.disableImplicitSignUp && !c.body.requestSignUp || provider.disableSignUp\n      });\n      if (data.error) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: data.error\n        });\n      }\n      await setSessionCookie(c, data.data);\n      return c.json({\n        redirect: false,\n        token: data.data.session.token,\n        url: void 0,\n        user: {\n          id: data.data.user.id,\n          email: data.data.user.email,\n          name: data.data.user.name,\n          image: data.data.user.image,\n          emailVerified: data.data.user.emailVerified,\n          createdAt: data.data.user.createdAt,\n          updatedAt: data.data.user.updatedAt\n        }\n      });\n    }\n    const { codeVerifier, state } = await generateState(c);\n    const url = await provider.createAuthorizationURL({\n      state,\n      codeVerifier,\n      redirectURI: `${c.context.baseURL}/callback/${provider.id}`,\n      scopes: c.body.scopes,\n      loginHint: c.body.loginHint\n    });\n    return c.json({\n      url: url.toString(),\n      redirect: !c.body.disableRedirect\n    });\n  }\n);\nconst signInEmail = createAuthEndpoint(\n  \"/sign-in/email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * Email of the user\n       */\n      email: z.string({\n        description: \"Email of the user\"\n      }),\n      /**\n       * Password of the user\n       */\n      password: z.string({\n        description: \"Password of the user\"\n      }),\n      /**\n       * Callback URL to use as a redirect for email\n       * verification and for possible redirects\n       */\n      callbackURL: z.string({\n        description: \"Callback URL to use as a redirect for email verification\"\n      }).optional(),\n      /**\n       * If this is false, the session will not be remembered\n       * @default true\n       */\n      rememberMe: z.boolean({\n        description: \"If this is false, the session will not be remembered. Default is `true`.\"\n      }).default(true).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Sign in with email and password\",\n        responses: {\n          \"200\": {\n            description: \"Success - Returns either session details or redirect URL\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  // todo: we need support for multiple schema\n                  type: \"object\",\n                  description: \"Session response when idToken is provided\",\n                  properties: {\n                    redirect: {\n                      type: \"boolean\",\n                      enum: [false]\n                    },\n                    token: {\n                      type: \"string\",\n                      description: \"Session token\"\n                    },\n                    url: {\n                      type: \"null\",\n                      nullable: true\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: { type: \"string\" },\n                        email: { type: \"string\" },\n                        name: {\n                          type: \"string\",\n                          nullable: true\n                        },\n                        image: {\n                          type: \"string\",\n                          nullable: true\n                        },\n                        emailVerified: {\n                          type: \"boolean\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"redirect\", \"token\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options?.emailAndPassword?.enabled) {\n      ctx.context.logger.error(\n        \"Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password is not enabled\"\n      });\n    }\n    const { email, password } = ctx.body;\n    const isValidEmail = z.string().email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      await ctx.context.password.hash(password);\n      ctx.context.logger.error(\"User not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const credentialAccount = user.accounts.find(\n      (a) => a.providerId === \"credential\"\n    );\n    if (!credentialAccount) {\n      ctx.context.logger.error(\"Credential account not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const currentPassword = credentialAccount?.password;\n    if (!currentPassword) {\n      ctx.context.logger.error(\"Password not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const validPassword = await ctx.context.password.verify({\n      hash: currentPassword,\n      password\n    });\n    if (!validPassword) {\n      ctx.context.logger.error(\"Invalid password\");\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    if (ctx.context.options?.emailAndPassword?.requireEmailVerification && !user.user.emailVerified) {\n      if (!ctx.context.options?.emailVerification?.sendVerificationEmail) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: BASE_ERROR_CODES.EMAIL_NOT_VERIFIED\n        });\n      }\n      const token = await createEmailVerificationToken(\n        ctx.context.secret,\n        user.user.email,\n        void 0,\n        ctx.context.options.emailVerification?.expiresIn\n      );\n      const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n      await ctx.context.options.emailVerification.sendVerificationEmail(\n        {\n          user: user.user,\n          url,\n          token\n        },\n        ctx.request\n      );\n      throw new APIError(\"FORBIDDEN\", {\n        message: BASE_ERROR_CODES.EMAIL_NOT_VERIFIED\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      user.user.id,\n      ctx,\n      ctx.body.rememberMe === false\n    );\n    if (!session) {\n      ctx.context.logger.error(\"Failed to create session\");\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(\n      ctx,\n      {\n        session,\n        user: user.user\n      },\n      ctx.body.rememberMe === false\n    );\n    return ctx.json({\n      redirect: !!ctx.body.callbackURL,\n      token: session.token,\n      url: ctx.body.callbackURL,\n      user: {\n        id: user.user.id,\n        email: user.user.email,\n        name: user.user.name,\n        image: user.user.image,\n        emailVerified: user.user.emailVerified,\n        createdAt: user.user.createdAt,\n        updatedAt: user.user.updatedAt\n      }\n    });\n  }\n);\n\nconst schema = z.object({\n  code: z.string().optional(),\n  error: z.string().optional(),\n  device_id: z.string().optional(),\n  error_description: z.string().optional(),\n  state: z.string().optional(),\n  user: z.string().optional()\n});\nconst callbackOAuth = createAuthEndpoint(\n  \"/callback/:id\",\n  {\n    method: [\"GET\", \"POST\"],\n    body: schema.optional(),\n    query: schema.optional(),\n    metadata: HIDE_METADATA\n  },\n  async (c) => {\n    let queryOrBody;\n    const defaultErrorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    try {\n      if (c.method === \"GET\") {\n        queryOrBody = schema.parse(c.query);\n      } else if (c.method === \"POST\") {\n        queryOrBody = schema.parse(c.body);\n      } else {\n        throw new Error(\"Unsupported method\");\n      }\n    } catch (e) {\n      c.context.logger.error(\"INVALID_CALLBACK_REQUEST\", e);\n      throw c.redirect(`${defaultErrorURL}?error=invalid_callback_request`);\n    }\n    const { code, error, state, error_description, device_id } = queryOrBody;\n    if (error) {\n      throw c.redirect(\n        `${defaultErrorURL}?error=${error}&error_description=${error_description}`\n      );\n    }\n    if (!state) {\n      c.context.logger.error(\"State not found\", error);\n      throw c.redirect(`${defaultErrorURL}?error=state_not_found`);\n    }\n    const {\n      codeVerifier,\n      callbackURL,\n      link,\n      errorURL,\n      newUserURL,\n      requestSignUp\n    } = await parseState(c);\n    function redirectOnError(error2) {\n      let url = errorURL || defaultErrorURL;\n      if (url.includes(\"?\")) {\n        url = `${url}&error=${error2}`;\n      } else {\n        url = `${url}?error=${error2}`;\n      }\n      throw c.redirect(url);\n    }\n    if (!code) {\n      c.context.logger.error(\"Code not found\");\n      throw redirectOnError(\"no_code\");\n    }\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.params.id\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Oauth provider with id\",\n        c.params.id,\n        \"not found\"\n      );\n      throw redirectOnError(\"oauth_provider_not_found\");\n    }\n    let tokens;\n    try {\n      tokens = await provider.validateAuthorizationCode({\n        code,\n        codeVerifier,\n        deviceId: device_id,\n        redirectURI: `${c.context.baseURL}/callback/${provider.id}`\n      });\n    } catch (e) {\n      c.context.logger.error(\"\", e);\n      throw redirectOnError(\"invalid_code\");\n    }\n    const userInfo = await provider.getUserInfo({\n      ...tokens,\n      user: c.body?.user ? safeJSONParse(c.body.user) : void 0\n    }).then((res) => res?.user);\n    if (!userInfo) {\n      c.context.logger.error(\"Unable to get user info\");\n      return redirectOnError(\"unable_to_get_user_info\");\n    }\n    if (!userInfo.email) {\n      c.context.logger.error(\n        \"Provider did not return email. This could be due to misconfiguration in the provider settings.\"\n      );\n      return redirectOnError(\"email_not_found\");\n    }\n    if (!callbackURL) {\n      c.context.logger.error(\"No callback URL found\");\n      throw redirectOnError(\"no_callback_url\");\n    }\n    if (link) {\n      const existingAccount = await c.context.internalAdapter.findAccount(\n        userInfo.id\n      );\n      if (existingAccount) {\n        if (existingAccount.userId.toString() !== link.userId.toString()) {\n          return redirectOnError(\"account_already_linked_to_different_user\");\n        }\n        const updateData = Object.fromEntries(\n          Object.entries({\n            accessToken: tokens.accessToken,\n            idToken: tokens.idToken,\n            refreshToken: tokens.refreshToken,\n            accessTokenExpiresAt: tokens.accessTokenExpiresAt,\n            refreshTokenExpiresAt: tokens.refreshTokenExpiresAt,\n            scope: tokens.scopes?.join(\",\")\n          }).filter(([_, value]) => value !== void 0)\n        );\n        await c.context.internalAdapter.updateAccount(\n          existingAccount.id,\n          updateData\n        );\n      } else {\n        const newAccount = await c.context.internalAdapter.createAccount(\n          {\n            userId: link.userId,\n            providerId: provider.id,\n            accountId: userInfo.id,\n            ...tokens,\n            scope: tokens.scopes?.join(\",\")\n          },\n          c\n        );\n        if (!newAccount) {\n          return redirectOnError(\"unable_to_link_account\");\n        }\n      }\n      let toRedirectTo2;\n      try {\n        const url = callbackURL;\n        toRedirectTo2 = url.toString();\n      } catch {\n        toRedirectTo2 = callbackURL;\n      }\n      throw c.redirect(toRedirectTo2);\n    }\n    const result = await handleOAuthUserInfo(c, {\n      userInfo: {\n        ...userInfo,\n        email: userInfo.email,\n        name: userInfo.name || userInfo.email\n      },\n      account: {\n        providerId: provider.id,\n        accountId: userInfo.id,\n        ...tokens,\n        scope: tokens.scopes?.join(\",\")\n      },\n      callbackURL,\n      disableSignUp: provider.disableImplicitSignUp && !requestSignUp || provider.options?.disableSignUp,\n      overrideUserInfo: provider.options?.overrideUserInfoOnSignIn\n    });\n    if (result.error) {\n      c.context.logger.error(result.error.split(\" \").join(\"_\"));\n      return redirectOnError(result.error.split(\" \").join(\"_\"));\n    }\n    const { session, user } = result.data;\n    await setSessionCookie(c, {\n      session,\n      user\n    });\n    let toRedirectTo;\n    try {\n      const url = result.isRegister ? newUserURL || callbackURL : callbackURL;\n      toRedirectTo = url.toString();\n    } catch {\n      toRedirectTo = result.isRegister ? newUserURL || callbackURL : callbackURL;\n    }\n    throw c.redirect(toRedirectTo);\n  }\n);\n\nconst signOut = createAuthEndpoint(\n  \"/sign-out\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Sign out the current user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const sessionCookieToken = await ctx.getSignedCookie(\n      ctx.context.authCookies.sessionToken.name,\n      ctx.context.secret\n    );\n    if (!sessionCookieToken) {\n      deleteSessionCookie(ctx);\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n    await ctx.context.internalAdapter.deleteSession(sessionCookieToken);\n    deleteSessionCookie(ctx);\n    return ctx.json({\n      success: true\n    });\n  }\n);\n\nfunction redirectError(ctx, callbackURL, query) {\n  const url = callbackURL ? new URL(callbackURL, ctx.baseURL) : new URL(`${ctx.baseURL}/error`);\n  if (query)\n    Object.entries(query).forEach(([k, v]) => url.searchParams.set(k, v));\n  return url.href;\n}\nfunction redirectCallback(ctx, callbackURL, query) {\n  const url = new URL(callbackURL, ctx.baseURL);\n  if (query)\n    Object.entries(query).forEach(([k, v]) => url.searchParams.set(k, v));\n  return url.href;\n}\nconst forgetPassword = createAuthEndpoint(\n  \"/forget-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The email address of the user to send a password reset email to.\n       */\n      email: z.string({\n        description: \"The email address of the user to send a password reset email to\"\n      }).email(),\n      /**\n       * The URL to redirect the user to reset their password.\n       * If the token isn't valid or expired, it'll be redirected with a query parameter `?\n       * error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?\n       * token=VALID_TOKEN\n       */\n      redirectTo: z.string({\n        description: \"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a password reset email to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.sendResetPassword) {\n      ctx.context.logger.error(\n        \"Reset password isn't enabled.Please pass an emailAndPassword.sendResetPassword function in your auth config!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Reset password isn't enabled\"\n      });\n    }\n    const { email, redirectTo } = ctx.body;\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      ctx.context.logger.error(\"Reset Password: User not found\", { email });\n      return ctx.json({\n        status: true\n      });\n    }\n    const defaultExpiresIn = 60 * 60 * 1;\n    const expiresAt = getDate(\n      ctx.context.options.emailAndPassword.resetPasswordTokenExpiresIn || defaultExpiresIn,\n      \"sec\"\n    );\n    const verificationToken = generateId(24);\n    await ctx.context.internalAdapter.createVerificationValue(\n      {\n        value: user.user.id,\n        identifier: `reset-password:${verificationToken}`,\n        expiresAt\n      },\n      ctx\n    );\n    const url = `${ctx.context.baseURL}/reset-password/${verificationToken}?callbackURL=${redirectTo}`;\n    await ctx.context.options.emailAndPassword.sendResetPassword(\n      {\n        user: user.user,\n        url,\n        token: verificationToken\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst forgetPasswordCallback = createAuthEndpoint(\n  \"/reset-password/:token\",\n  {\n    method: \"GET\",\n    query: z.object({\n      callbackURL: z.string({\n        description: \"The URL to redirect the user to reset their password\"\n      })\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Redirects the user to the callback URL with the token\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { token } = ctx.params;\n    const { callbackURL } = ctx.query;\n    if (!token || !callbackURL) {\n      throw ctx.redirect(\n        redirectError(ctx.context, callbackURL, { error: \"INVALID_TOKEN\" })\n      );\n    }\n    const verification = await ctx.context.internalAdapter.findVerificationValue(\n      `reset-password:${token}`\n    );\n    if (!verification || verification.expiresAt < /* @__PURE__ */ new Date()) {\n      throw ctx.redirect(\n        redirectError(ctx.context, callbackURL, { error: \"INVALID_TOKEN\" })\n      );\n    }\n    throw ctx.redirect(redirectCallback(ctx.context, callbackURL, { token }));\n  }\n);\nconst resetPassword = createAuthEndpoint(\n  \"/reset-password\",\n  {\n    method: \"POST\",\n    query: z.object({\n      token: z.string().optional()\n    }).optional(),\n    body: z.object({\n      newPassword: z.string({\n        description: \"The new password to set\"\n      }),\n      token: z.string({\n        description: \"The token to reset the password\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Reset the password for a user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token || ctx.query?.token;\n    if (!token) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const { newPassword } = ctx.body;\n    const minLength = ctx.context.password?.config.minPasswordLength;\n    const maxLength = ctx.context.password?.config.maxPasswordLength;\n    if (newPassword.length < minLength) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    if (newPassword.length > maxLength) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const id = `reset-password:${token}`;\n    const verification = await ctx.context.internalAdapter.findVerificationValue(id);\n    if (!verification || verification.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const userId = verification.value;\n    const hashedPassword = await ctx.context.password.hash(newPassword);\n    const accounts = await ctx.context.internalAdapter.findAccounts(userId);\n    const account = accounts.find((ac) => ac.providerId === \"credential\");\n    if (!account) {\n      await ctx.context.internalAdapter.createAccount(\n        {\n          userId,\n          providerId: \"credential\",\n          password: hashedPassword,\n          accountId: userId\n        },\n        ctx\n      );\n      await ctx.context.internalAdapter.deleteVerificationValue(\n        verification.id\n      );\n      return ctx.json({\n        status: true\n      });\n    }\n    await ctx.context.internalAdapter.updatePassword(\n      userId,\n      hashedPassword,\n      ctx\n    );\n    await ctx.context.internalAdapter.deleteVerificationValue(verification.id);\n    if (ctx.context.options.emailAndPassword?.revokeSessionsOnPasswordReset) {\n      await ctx.context.internalAdapter.deleteSessions(userId);\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nconst updateUser = () => createAuthEndpoint(\n  \"/update-user\",\n  {\n    method: \"POST\",\n    body: z.record(z.string(), z.any()),\n    use: [sessionMiddleware],\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Update the current user\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  image: {\n                    type: \"string\",\n                    description: \"The image of the user\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the update was successful\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const body = ctx.body;\n    if (body.email) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.EMAIL_CAN_NOT_BE_UPDATED\n      });\n    }\n    const { name, image, ...rest } = body;\n    const session = ctx.context.session;\n    if (image === void 0 && name === void 0 && Object.keys(rest).length === 0) {\n      return ctx.json({\n        status: true\n      });\n    }\n    const additionalFields = parseUserInput(\n      ctx.context.options,\n      rest,\n      \"update\"\n    );\n    const user = await ctx.context.internalAdapter.updateUser(\n      session.user.id,\n      {\n        name,\n        image,\n        ...additionalFields\n      },\n      ctx\n    );\n    await setSessionCookie(ctx, {\n      session: session.session,\n      user\n    });\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst changePassword = createAuthEndpoint(\n  \"/change-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The new password to set\n       */\n      newPassword: z.string({\n        description: \"The new password to set\"\n      }),\n      /**\n       * The current password of the user\n       */\n      currentPassword: z.string({\n        description: \"The current password\"\n      }),\n      /**\n       * revoke all sessions that are not the\n       * current one logged in by the user\n       */\n      revokeOtherSessions: z.boolean({\n        description: \"Revoke all other sessions\"\n      }).optional()\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Change the password of the user\",\n        responses: {\n          \"200\": {\n            description: \"Password successfully changed\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\",\n                      nullable: true,\n                      // Only present if revokeOtherSessions is true\n                      description: \"New session token if other sessions were revoked\"\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"The unique identifier of the user\"\n                        },\n                        email: {\n                          type: \"string\",\n                          format: \"email\",\n                          description: \"The email address of the user\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"The name of the user\"\n                        },\n                        image: {\n                          type: \"string\",\n                          format: \"uri\",\n                          nullable: true,\n                          description: \"The profile image URL of the user\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Whether the email has been verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was created\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was last updated\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { newPassword, currentPassword, revokeOtherSessions } = ctx.body;\n    const session = ctx.context.session;\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (newPassword.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (newPassword.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const account = accounts.find(\n      (account2) => account2.providerId === \"credential\" && account2.password\n    );\n    if (!account || !account.password) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.CREDENTIAL_ACCOUNT_NOT_FOUND\n      });\n    }\n    const passwordHash = await ctx.context.password.hash(newPassword);\n    const verify = await ctx.context.password.verify({\n      hash: account.password,\n      password: currentPassword\n    });\n    if (!verify) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_PASSWORD\n      });\n    }\n    await ctx.context.internalAdapter.updateAccount(account.id, {\n      password: passwordHash\n    });\n    let token = null;\n    if (revokeOtherSessions) {\n      await ctx.context.internalAdapter.deleteSessions(session.user.id);\n      const newSession = await ctx.context.internalAdapter.createSession(\n        session.user.id,\n        ctx\n      );\n      if (!newSession) {\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n        });\n      }\n      await setSessionCookie(ctx, {\n        session: newSession,\n        user: session.user\n      });\n      token = newSession.token;\n    }\n    return ctx.json({\n      token,\n      user: {\n        id: session.user.id,\n        email: session.user.email,\n        name: session.user.name,\n        image: session.user.image,\n        emailVerified: session.user.emailVerified,\n        createdAt: session.user.createdAt,\n        updatedAt: session.user.updatedAt\n      }\n    });\n  }\n);\nconst setPassword = createAuthEndpoint(\n  \"/set-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The new password to set\n       */\n      newPassword: z.string()\n    }),\n    metadata: {\n      SERVER_ONLY: true\n    },\n    use: [sessionMiddleware]\n  },\n  async (ctx) => {\n    const { newPassword } = ctx.body;\n    const session = ctx.context.session;\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (newPassword.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (newPassword.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const account = accounts.find(\n      (account2) => account2.providerId === \"credential\" && account2.password\n    );\n    const passwordHash = await ctx.context.password.hash(newPassword);\n    if (!account) {\n      await ctx.context.internalAdapter.linkAccount(\n        {\n          userId: session.user.id,\n          providerId: \"credential\",\n          accountId: session.user.id,\n          password: passwordHash\n        },\n        ctx\n      );\n      return ctx.json({\n        status: true\n      });\n    }\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"user already has a password\"\n    });\n  }\n);\nconst deleteUser = createAuthEndpoint(\n  \"/delete-user\",\n  {\n    method: \"POST\",\n    use: [sessionMiddleware],\n    body: z.object({\n      /**\n       * The callback URL to redirect to after the user is deleted\n       * this is only used on delete user callback\n       */\n      callbackURL: z.string().optional(),\n      /**\n       * The password of the user. If the password isn't provided, session freshness\n       * will be checked.\n       */\n      password: z.string().optional(),\n      /**\n       * The token to delete the user. If the token is provided, the user will be deleted\n       */\n      token: z.string().optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Delete the user\",\n        responses: {\n          \"200\": {\n            description: \"User deletion processed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\",\n                      description: \"Indicates if the operation was successful\"\n                    },\n                    message: {\n                      type: \"string\",\n                      enum: [\"User deleted\", \"Verification email sent\"],\n                      description: \"Status message of the deletion process\"\n                    }\n                  },\n                  required: [\"success\", \"message\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.deleteUser?.enabled) {\n      ctx.context.logger.error(\n        \"Delete user is disabled. Enable it in the options\",\n        {\n          session: ctx.context.session\n        }\n      );\n      throw new APIError(\"NOT_FOUND\");\n    }\n    const session = ctx.context.session;\n    if (ctx.body.password) {\n      const accounts = await ctx.context.internalAdapter.findAccounts(\n        session.user.id\n      );\n      const account = accounts.find(\n        (account2) => account2.providerId === \"credential\" && account2.password\n      );\n      if (!account || !account.password) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.CREDENTIAL_ACCOUNT_NOT_FOUND\n        });\n      }\n      const verify = await ctx.context.password.verify({\n        hash: account.password,\n        password: ctx.body.password\n      });\n      if (!verify) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.INVALID_PASSWORD\n        });\n      }\n    } else {\n      if (ctx.context.options.session?.freshAge) {\n        const currentAge = session.session.createdAt.getTime();\n        const freshAge = ctx.context.options.session.freshAge;\n        const now = Date.now();\n        if (now - currentAge > freshAge) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: BASE_ERROR_CODES.SESSION_EXPIRED\n          });\n        }\n      }\n    }\n    if (ctx.body.token) {\n      await deleteUserCallback({\n        ...ctx,\n        query: {\n          token: ctx.body.token\n        }\n      });\n      return ctx.json({\n        success: true,\n        message: \"User deleted\"\n      });\n    }\n    if (ctx.context.options.user.deleteUser?.sendDeleteAccountVerification) {\n      const token = generateRandomString(32, \"0-9\", \"a-z\");\n      await ctx.context.internalAdapter.createVerificationValue(\n        {\n          value: session.user.id,\n          identifier: `delete-account-${token}`,\n          expiresAt: new Date(\n            Date.now() + (ctx.context.options.user.deleteUser?.deleteTokenExpiresIn || 60 * 60 * 24) * 1e3\n          )\n        },\n        ctx\n      );\n      const url = `${ctx.context.baseURL}/delete-user/callback?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n      await ctx.context.options.user.deleteUser.sendDeleteAccountVerification(\n        {\n          user: session.user,\n          url,\n          token\n        },\n        ctx.request\n      );\n      return ctx.json({\n        success: true,\n        message: \"Verification email sent\"\n      });\n    }\n    const beforeDelete = ctx.context.options.user.deleteUser?.beforeDelete;\n    if (beforeDelete) {\n      await beforeDelete(session.user, ctx.request);\n    }\n    await ctx.context.internalAdapter.deleteUser(session.user.id);\n    await ctx.context.internalAdapter.deleteSessions(session.user.id);\n    await ctx.context.internalAdapter.deleteAccounts(session.user.id);\n    deleteSessionCookie(ctx);\n    const afterDelete = ctx.context.options.user.deleteUser?.afterDelete;\n    if (afterDelete) {\n      await afterDelete(session.user, ctx.request);\n    }\n    return ctx.json({\n      success: true,\n      message: \"User deleted\"\n    });\n  }\n);\nconst deleteUserCallback = createAuthEndpoint(\n  \"/delete-user/callback\",\n  {\n    method: \"GET\",\n    query: z.object({\n      token: z.string(),\n      callbackURL: z.string().optional()\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Callback to complete user deletion with verification token\",\n        responses: {\n          \"200\": {\n            description: \"User successfully deleted\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\",\n                      description: \"Indicates if the deletion was successful\"\n                    },\n                    message: {\n                      type: \"string\",\n                      enum: [\"User deleted\"],\n                      description: \"Confirmation message\"\n                    }\n                  },\n                  required: [\"success\", \"message\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.deleteUser?.enabled) {\n      ctx.context.logger.error(\n        \"Delete user is disabled. Enable it in the options\"\n      );\n      throw new APIError(\"NOT_FOUND\");\n    }\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n      });\n    }\n    const token = await ctx.context.internalAdapter.findVerificationValue(\n      `delete-account-${ctx.query.token}`\n    );\n    if (!token || token.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    if (token.value !== session.user.id) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const beforeDelete = ctx.context.options.user.deleteUser?.beforeDelete;\n    if (beforeDelete) {\n      await beforeDelete(session.user, ctx.request);\n    }\n    await ctx.context.internalAdapter.deleteUser(session.user.id);\n    await ctx.context.internalAdapter.deleteSessions(session.user.id);\n    await ctx.context.internalAdapter.deleteAccounts(session.user.id);\n    await ctx.context.internalAdapter.deleteVerificationValue(token.id);\n    deleteSessionCookie(ctx);\n    const afterDelete = ctx.context.options.user.deleteUser?.afterDelete;\n    if (afterDelete) {\n      await afterDelete(session.user, ctx.request);\n    }\n    if (ctx.query.callbackURL) {\n      throw ctx.redirect(ctx.query.callbackURL || \"/\");\n    }\n    return ctx.json({\n      success: true,\n      message: \"User deleted\"\n    });\n  }\n);\nconst changeEmail = createAuthEndpoint(\n  \"/change-email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      newEmail: z.string({\n        description: \"The new email to set\"\n      }).email(),\n      callbackURL: z.string({\n        description: \"The URL to redirect to after email verification\"\n      }).optional()\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        responses: {\n          \"200\": {\n            description: \"Email change request processed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the request was successful\"\n                    },\n                    message: {\n                      type: \"string\",\n                      enum: [\"Email updated\", \"Verification email sent\"],\n                      description: \"Status message of the email change process\",\n                      nullable: true\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.changeEmail?.enabled) {\n      ctx.context.logger.error(\"Change email is disabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Change email is disabled\"\n      });\n    }\n    const newEmail = ctx.body.newEmail.toLowerCase();\n    if (newEmail === ctx.context.session.user.email) {\n      ctx.context.logger.error(\"Email is the same\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email is the same\"\n      });\n    }\n    const existingUser = await ctx.context.internalAdapter.findUserByEmail(newEmail);\n    if (existingUser) {\n      ctx.context.logger.error(\"Email already exists\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Couldn't update your email\"\n      });\n    }\n    if (ctx.context.session.user.emailVerified !== true) {\n      const existing = await ctx.context.internalAdapter.findUserByEmail(newEmail);\n      if (existing) {\n        throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n          message: BASE_ERROR_CODES.USER_ALREADY_EXISTS\n        });\n      }\n      await ctx.context.internalAdapter.updateUserByEmail(\n        ctx.context.session.user.email,\n        {\n          email: newEmail\n        },\n        ctx\n      );\n      await setSessionCookie(ctx, {\n        session: ctx.context.session.session,\n        user: {\n          ...ctx.context.session.user,\n          email: newEmail\n        }\n      });\n      if (ctx.context.options.emailVerification?.sendVerificationEmail) {\n        const token2 = await createEmailVerificationToken(\n          ctx.context.secret,\n          newEmail,\n          void 0,\n          ctx.context.options.emailVerification?.expiresIn\n        );\n        const url2 = `${ctx.context.baseURL}/verify-email?token=${token2}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n        await ctx.context.options.emailVerification.sendVerificationEmail(\n          {\n            user: {\n              ...ctx.context.session.user,\n              email: newEmail\n            },\n            url: url2,\n            token: token2\n          },\n          ctx.request\n        );\n      }\n      return ctx.json({\n        status: true\n      });\n    }\n    if (!ctx.context.options.user.changeEmail.sendChangeEmailVerification) {\n      ctx.context.logger.error(\"Verification email isn't enabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Verification email isn't enabled\"\n      });\n    }\n    const token = await createEmailVerificationToken(\n      ctx.context.secret,\n      ctx.context.session.user.email,\n      newEmail,\n      ctx.context.options.emailVerification?.expiresIn\n    );\n    const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n    await ctx.context.options.user.changeEmail.sendChangeEmailVerification(\n      {\n        user: ctx.context.session.user,\n        newEmail,\n        url,\n        token\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nfunction sanitize(input) {\n  return input.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n}\nconst html = (errorCode = \"Unknown\") => `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Authentication Error</title>\n    <style>\n        :root {\n            --bg-color: #f8f9fa;\n            --text-color: #212529;\n            --accent-color: #000000;\n            --error-color: #dc3545;\n            --border-color: #e9ecef;\n        }\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            background-color: var(--bg-color);\n            color: var(--text-color);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            line-height: 1.5;\n        }\n        .error-container {\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n            padding: 2.5rem;\n            text-align: center;\n            max-width: 90%;\n            width: 400px;\n        }\n        h1 {\n            color: var(--error-color);\n            font-size: 1.75rem;\n            margin-bottom: 1rem;\n            font-weight: 600;\n        }\n        p {\n            margin-bottom: 1.5rem;\n            color: #495057;\n        }\n        .btn {\n            background-color: var(--accent-color);\n            color: #ffffff;\n            text-decoration: none;\n            padding: 0.75rem 1.5rem;\n            border-radius: 6px;\n            transition: all 0.3s ease;\n            display: inline-block;\n            font-weight: 500;\n            border: 2px solid var(--accent-color);\n        }\n        .btn:hover {\n            background-color: #131721;\n        }\n        .error-code {\n            font-size: 0.875rem;\n            color: #6c757d;\n            margin-top: 1.5rem;\n            padding-top: 1.5rem;\n            border-top: 1px solid var(--border-color);\n        }\n        .icon {\n            font-size: 3rem;\n            margin-bottom: 1rem;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"error-container\">\n        <div class=\"icon\">\\u26A0\\uFE0F</div>\n        <h1>Better Auth Error</h1>\n        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>\n        <a href=\"/\" id=\"returnLink\" class=\"btn\">Return to Application</a>\n        <div class=\"error-code\">Error Code: <span id=\"errorCode\">${sanitize(\n  errorCode\n)}</span></div>\n    </div>\n</body>\n</html>`;\nconst error = createAuthEndpoint(\n  \"/error\",\n  {\n    method: \"GET\",\n    metadata: {\n      ...HIDE_METADATA,\n      openapi: {\n        description: \"Displays an error page\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"text/html\": {\n                schema: {\n                  type: \"string\",\n                  description: \"The HTML content of the error page\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const query = new URL(c.request?.url || \"\").searchParams.get(\"error\") || \"Unknown\";\n    return new Response(html(query), {\n      headers: {\n        \"Content-Type\": \"text/html\"\n      }\n    });\n  }\n);\n\nconst ok = createAuthEndpoint(\n  \"/ok\",\n  {\n    method: \"GET\",\n    metadata: {\n      ...HIDE_METADATA,\n      openapi: {\n        description: \"Check if the API is working\",\n        responses: {\n          \"200\": {\n            description: \"API is working\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    ok: {\n                      type: \"boolean\",\n                      description: \"Indicates if the API is working\"\n                    }\n                  },\n                  required: [\"ok\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    return ctx.json({\n      ok: true\n    });\n  }\n);\n\nconst listUserAccounts = createAuthEndpoint(\n  \"/list-accounts\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"List all accounts linked to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\"\n                      },\n                      provider: {\n                        type: \"string\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\"\n                      }\n                    },\n                    accountId: {\n                      type: \"string\"\n                    },\n                    scopes: {\n                      type: \"array\",\n                      items: {\n                        type: \"string\"\n                      }\n                    }\n                  },\n                  required: [\n                    \"id\",\n                    \"provider\",\n                    \"createdAt\",\n                    \"updatedAt\",\n                    \"accountId\",\n                    \"scopes\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const session = c.context.session;\n    const accounts = await c.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    return c.json(\n      accounts.map((a) => ({\n        id: a.id,\n        provider: a.providerId,\n        createdAt: a.createdAt,\n        updatedAt: a.updatedAt,\n        accountId: a.accountId,\n        scopes: a.scope?.split(\",\") || []\n      }))\n    );\n  }\n);\nconst linkSocialAccount = createAuthEndpoint(\n  \"/link-social\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    body: z.object({\n      /**\n       * Callback URL to redirect to after the user has signed in.\n       */\n      callbackURL: z.string({\n        description: \"The URL to redirect to after the user has signed in\"\n      }).optional(),\n      /**\n       * OAuth2 provider to use\n       */\n      provider: z.enum(socialProviderList, {\n        description: \"The OAuth2 provider to use\"\n      }),\n      /**\n       * Additional scopes to request when linking the account.\n       * This is useful for requesting additional permissions when\n       * linking a social account compared to the initial authentication.\n       */\n      scopes: z.array(z.string(), {\n        description: \"Additional scopes to request from the provider\"\n      }).optional()\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Link a social account to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    url: {\n                      type: \"string\",\n                      description: \"The authorization URL to redirect the user to\"\n                    },\n                    redirect: {\n                      type: \"boolean\",\n                      description: \"Indicates if the user should be redirected to the authorization URL\"\n                    }\n                  },\n                  required: [\"url\", \"redirect\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const session = c.context.session;\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.body.provider\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Provider not found. Make sure to add the provider in your auth config\",\n        {\n          provider: c.body.provider\n        }\n      );\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.PROVIDER_NOT_FOUND\n      });\n    }\n    const state = await generateState(c, {\n      userId: session.user.id,\n      email: session.user.email\n    });\n    const url = await provider.createAuthorizationURL({\n      state: state.state,\n      codeVerifier: state.codeVerifier,\n      redirectURI: `${c.context.baseURL}/callback/${provider.id}`,\n      scopes: c.body.scopes\n    });\n    return c.json({\n      url: url.toString(),\n      redirect: true\n    });\n  }\n);\nconst unlinkAccount = createAuthEndpoint(\n  \"/unlink-account\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string(),\n      accountId: z.string().optional()\n    }),\n    use: [freshSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Unlink an account\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { providerId, accountId } = ctx.body;\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      ctx.context.session.user.id\n    );\n    if (accounts.length === 1 && !ctx.context.options.account?.accountLinking?.allowUnlinkingAll) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_UNLINK_LAST_ACCOUNT\n      });\n    }\n    const accountExist = accounts.find(\n      (account) => accountId ? account.accountId === accountId && account.providerId === providerId : account.providerId === providerId\n    );\n    if (!accountExist) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.ACCOUNT_NOT_FOUND\n      });\n    }\n    await ctx.context.internalAdapter.deleteAccount(accountExist.id);\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst getAccessToken = createAuthEndpoint(\n  \"/get-access-token\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string({\n        description: \"The provider ID for the OAuth provider\"\n      }),\n      accountId: z.string({\n        description: \"The account ID associated with the refresh token\"\n      }).optional(),\n      userId: z.string({\n        description: \"The user ID associated with the account\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Get a valid access token, doing a refresh if needed\",\n        responses: {\n          200: {\n            description: \"A Valid access token\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    tokenType: {\n                      type: \"string\"\n                    },\n                    idToken: {\n                      type: \"string\"\n                    },\n                    accessToken: {\n                      type: \"string\"\n                    },\n                    refreshToken: {\n                      type: \"string\"\n                    },\n                    accessTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    },\n                    refreshTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          400: {\n            description: \"Invalid refresh token or provider configuration\"\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { providerId, accountId, userId } = ctx.body;\n    const req = ctx.request;\n    const session = await getSessionFromCtx(ctx);\n    if (req && !session) {\n      throw ctx.error(\"UNAUTHORIZED\");\n    }\n    let resolvedUserId = session?.user?.id || userId;\n    if (!resolvedUserId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Either userId or session is required`\n      });\n    }\n    if (!socialProviderList.includes(providerId)) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} is not supported.`\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(resolvedUserId);\n    const account = accounts.find(\n      (acc) => accountId ? acc.id === accountId && acc.providerId === providerId : acc.providerId === providerId\n    );\n    if (!account) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Account not found\"\n      });\n    }\n    const provider = ctx.context.socialProviders.find(\n      (p) => p.id === providerId\n    );\n    if (!provider) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} not found.`\n      });\n    }\n    if (!provider.refreshAccessToken) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} does not support token refreshing.`\n      });\n    }\n    try {\n      let newTokens = null;\n      if (!account.accessTokenExpiresAt || account.accessTokenExpiresAt.getTime() - Date.now() < 5e3) {\n        newTokens = await provider.refreshAccessToken(\n          account.refreshToken\n        );\n        await ctx.context.internalAdapter.updateAccount(account.id, {\n          accessToken: newTokens.accessToken,\n          accessTokenExpiresAt: newTokens.accessTokenExpiresAt,\n          refreshToken: newTokens.refreshToken,\n          refreshTokenExpiresAt: newTokens.refreshTokenExpiresAt\n        });\n      }\n      const tokens = {\n        accessToken: newTokens?.accessToken ?? account.accessToken ?? void 0,\n        accessTokenExpiresAt: newTokens?.accessTokenExpiresAt ?? account.accessTokenExpiresAt ?? void 0,\n        scopes: account.scope?.split(\",\") ?? [],\n        idToken: newTokens?.idToken ?? account.idToken ?? void 0\n      };\n      return ctx.json(tokens);\n    } catch (error) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Failed to get a valid access token\",\n        cause: error\n      });\n    }\n  }\n);\nconst refreshToken = createAuthEndpoint(\n  \"/refresh-token\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string({\n        description: \"The provider ID for the OAuth provider\"\n      }),\n      accountId: z.string({\n        description: \"The account ID associated with the refresh token\"\n      }).optional(),\n      userId: z.string({\n        description: \"The user ID associated with the account\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Refresh the access token using a refresh token\",\n        responses: {\n          200: {\n            description: \"Access token refreshed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    tokenType: {\n                      type: \"string\"\n                    },\n                    idToken: {\n                      type: \"string\"\n                    },\n                    accessToken: {\n                      type: \"string\"\n                    },\n                    refreshToken: {\n                      type: \"string\"\n                    },\n                    accessTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    },\n                    refreshTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          400: {\n            description: \"Invalid refresh token or provider configuration\"\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { providerId, accountId, userId } = ctx.body;\n    const req = ctx.request;\n    const session = await getSessionFromCtx(ctx);\n    if (req && !session) {\n      throw ctx.error(\"UNAUTHORIZED\");\n    }\n    let resolvedUserId = session?.user?.id || userId;\n    if (!resolvedUserId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Either userId or session is required`\n      });\n    }\n    if (!socialProviderList.includes(providerId)) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} is not supported.`\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(resolvedUserId);\n    const account = accounts.find(\n      (acc) => accountId ? acc.id === accountId && acc.providerId === providerId : acc.providerId === providerId\n    );\n    if (!account) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Account not found\"\n      });\n    }\n    const provider = ctx.context.socialProviders.find(\n      (p) => p.id === providerId\n    );\n    if (!provider) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} not found.`\n      });\n    }\n    if (!provider.refreshAccessToken) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} does not support token refreshing.`\n      });\n    }\n    try {\n      const tokens = await provider.refreshAccessToken(\n        account.refreshToken\n      );\n      await ctx.context.internalAdapter.updateAccount(account.id, {\n        accessToken: tokens.accessToken,\n        accessTokenExpiresAt: tokens.accessTokenExpiresAt,\n        refreshToken: tokens.refreshToken,\n        refreshTokenExpiresAt: tokens.refreshTokenExpiresAt\n      });\n      return ctx.json(tokens);\n    } catch (error) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Failed to refresh access token\",\n        cause: error\n      });\n    }\n  }\n);\n\nexport { deleteUser as A, BASE_ERROR_CODES as B, setPassword as C, changePassword as D, changeEmail as E, sendVerificationEmail as F, verifyEmail as G, HIDE_METADATA as H, resetPassword as I, forgetPassword as J, signInEmail as K, signOut as L, callbackOAuth as M, signInSocial as N, requestOnlySessionMiddleware as O, optionsMiddleware as P, createAuthEndpoint as a, getSession as b, createAuthMiddleware as c, sendVerificationEmailFn as d, createEmailVerificationToken as e, freshSessionMiddleware as f, getSessionFromCtx as g, handleOAuthUserInfo as h, originCheckMiddleware as i, error as j, ok as k, listSessions as l, getAccessToken as m, unlinkAccount as n, originCheck as o, deleteUserCallback as p, listUserAccounts as q, refreshToken as r, sessionMiddleware as s, linkSocialAccount as t, updateUser as u, revokeOtherSessions as v, wildcardMatch as w, revokeSessions as x, revokeSession as y, forgetPasswordCallback as z };\n", "import { i as isTest } from './better-auth.8zoxzg-F.mjs';\n\nfunction getIp(req, options) {\n  if (options.advanced?.ipAddress?.disableIpTracking) {\n    return null;\n  }\n  const testIP = \"127.0.0.1\";\n  if (isTest) {\n    return testIP;\n  }\n  const headers = \"headers\" in req ? req.headers : req;\n  const defaultHeaders = [\"x-forwarded-for\"];\n  const ipHeaders = options.advanced?.ipAddress?.ipAddressHeaders || defaultHeaders;\n  for (const key of ipHeaders) {\n    const value = \"get\" in headers ? headers.get(key) : headers[key];\n    if (typeof value === \"string\") {\n      const ip = value.split(\",\")[0].trim();\n      if (isValidIP(ip)) {\n        return ip;\n      }\n    }\n  }\n  return null;\n}\nfunction isValidIP(ip) {\n  const ipv4Regex = /^(\\d{1,3}\\.){3}\\d{1,3}$/;\n  if (ipv4Regex.test(ip)) {\n    const parts = ip.split(\".\").map(Number);\n    return parts.every((part) => part >= 0 && part <= 255);\n  }\n  const ipv6Regex = /^([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n  return ipv6Regex.test(ip);\n}\n\nexport { getIp as g };\n", "import { APIError, toResponse, createRouter } from 'better-call';\nexport { APIError } from 'better-call';\nimport { a as createAuthEndpoint, B as BASE_ERROR_CODES, e as createEmailVerificationToken, w as wildcardMatch, l as listSessions, u as updateUser, b as getSession, i as originCheckMiddleware, j as error, k as ok, m as getAccessToken, r as refreshToken, n as unlinkAccount, p as deleteUserCallback, q as listUserAccounts, t as linkSocialAccount, v as revokeOtherSessions, x as revokeSessions, y as revokeSession, z as forgetPasswordCallback, A as deleteUser, C as setPassword, D as changePassword, E as changeEmail, F as sendVerificationEmail, G as verifyEmail, I as resetPassword, J as forgetPassword, K as signInEmail, L as signOut, M as callbackOAuth, N as signInSocial } from '../shared/better-auth.Dvh-YFwT.mjs';\nexport { c as createAuthMiddleware, f as freshSessionMiddleware, g as getSessionFromCtx, P as optionsMiddleware, o as originCheck, O as requestOnlySessionMiddleware, d as sendVerificationEmailFn, s as sessionMiddleware } from '../shared/better-auth.Dvh-YFwT.mjs';\nimport { z } from 'zod';\nimport { setSessionCookie } from '../cookies/index.mjs';\nimport { f as parseUserInput } from '../shared/better-auth.Cc72UxUH.mjs';\nimport { b as isDevelopment } from '../shared/better-auth.8zoxzg-F.mjs';\nimport { l as logger } from '../shared/better-auth.Cqykj82J.mjs';\nimport { g as getIp } from '../shared/better-auth.iKoUsdFE.mjs';\nimport defu from 'defu';\nimport '../social-providers/index.mjs';\nimport '@better-fetch/fetch';\nimport 'jose';\nimport '../shared/better-auth.DufyW0qf.mjs';\nimport '@better-auth/utils/base64';\nimport '../shared/better-auth.CW6D9eSx.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\nimport '../shared/better-auth.DdzSJf-n.mjs';\nimport '../shared/better-auth.dn8_oqOu.mjs';\nimport '../shared/better-auth.tB5eU6EY.mjs';\nimport '../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hmac';\nimport '../shared/better-auth.DDEbWX-S.mjs';\nimport '../shared/better-auth.VTXNLFMT.mjs';\nimport 'jose/errors';\nimport '@better-auth/utils/binary';\n\nconst signUpEmail = () => createAuthEndpoint(\n  \"/sign-up/email\",\n  {\n    method: \"POST\",\n    body: z.record(z.string(), z.any()),\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Sign up a user using email and password\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  email: {\n                    type: \"string\",\n                    description: \"The email of the user\"\n                  },\n                  password: {\n                    type: \"string\",\n                    description: \"The password of the user\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\"\n                  }\n                },\n                required: [\"name\", \"email\", \"password\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Successfully created user\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\",\n                      nullable: true,\n                      description: \"Authentication token for the session\"\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"The unique identifier of the user\"\n                        },\n                        email: {\n                          type: \"string\",\n                          format: \"email\",\n                          description: \"The email address of the user\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"The name of the user\"\n                        },\n                        image: {\n                          type: \"string\",\n                          format: \"uri\",\n                          nullable: true,\n                          description: \"The profile image URL of the user\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Whether the email has been verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was created\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was last updated\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"user\"]\n                  // token is optional\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.enabled || ctx.context.options.emailAndPassword?.disableSignUp) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password sign up is not enabled\"\n      });\n    }\n    const body = ctx.body;\n    const { name, email, password, image, callbackURL, ...additionalFields } = body;\n    const isValidEmail = z.string().email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (password.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (password.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const dbUser = await ctx.context.internalAdapter.findUserByEmail(email);\n    if (dbUser?.user) {\n      ctx.context.logger.info(`Sign-up attempt for existing email: ${email}`);\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.USER_ALREADY_EXISTS\n      });\n    }\n    const additionalData = parseUserInput(\n      ctx.context.options,\n      additionalFields\n    );\n    const hash = await ctx.context.password.hash(password);\n    let createdUser;\n    try {\n      createdUser = await ctx.context.internalAdapter.createUser(\n        {\n          email: email.toLowerCase(),\n          name,\n          image,\n          ...additionalData,\n          emailVerified: false\n        },\n        ctx\n      );\n      if (!createdUser) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n        });\n      }\n    } catch (e) {\n      if (isDevelopment) {\n        ctx.context.logger.error(\"Failed to create user\", e);\n      }\n      if (e instanceof APIError) {\n        throw e;\n      }\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER,\n        details: e\n      });\n    }\n    if (!createdUser) {\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n      });\n    }\n    await ctx.context.internalAdapter.linkAccount(\n      {\n        userId: createdUser.id,\n        providerId: \"credential\",\n        accountId: createdUser.id,\n        password: hash\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.sendOnSignUp || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      const token = await createEmailVerificationToken(\n        ctx.context.secret,\n        createdUser.email,\n        void 0,\n        ctx.context.options.emailVerification?.expiresIn\n      );\n      const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${body.callbackURL || \"/\"}`;\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        {\n          user: createdUser,\n          url,\n          token\n        },\n        ctx.request\n      );\n    }\n    if (ctx.context.options.emailAndPassword.autoSignIn === false || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      return ctx.json({\n        token: null,\n        user: {\n          id: createdUser.id,\n          email: createdUser.email,\n          name: createdUser.name,\n          image: createdUser.image,\n          emailVerified: createdUser.emailVerified,\n          createdAt: createdUser.createdAt,\n          updatedAt: createdUser.updatedAt\n        }\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      createdUser.id,\n      ctx\n    );\n    if (!session) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(ctx, {\n      session,\n      user: createdUser\n    });\n    return ctx.json({\n      token: session.token,\n      user: {\n        id: createdUser.id,\n        email: createdUser.email,\n        name: createdUser.name,\n        image: createdUser.image,\n        emailVerified: createdUser.emailVerified,\n        createdAt: createdUser.createdAt,\n        updatedAt: createdUser.updatedAt\n      }\n    });\n  }\n);\n\nfunction shouldRateLimit(max, window, rateLimitData) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  const timeSinceLastRequest = now - rateLimitData.lastRequest;\n  return timeSinceLastRequest < windowInMs && rateLimitData.count >= max;\n}\nfunction rateLimitResponse(retryAfter) {\n  return new Response(\n    JSON.stringify({\n      message: \"Too many requests. Please try again later.\"\n    }),\n    {\n      status: 429,\n      statusText: \"Too Many Requests\",\n      headers: {\n        \"X-Retry-After\": retryAfter.toString()\n      }\n    }\n  );\n}\nfunction getRetryAfter(lastRequest, window) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  return Math.ceil((lastRequest + windowInMs - now) / 1e3);\n}\nfunction createDBStorage(ctx, modelName) {\n  const model = ctx.options.rateLimit?.modelName || \"rateLimit\";\n  const db = ctx.adapter;\n  return {\n    get: async (key) => {\n      const res = await db.findMany({\n        model,\n        where: [{ field: \"key\", value: key }]\n      });\n      const data = res[0];\n      if (typeof data?.lastRequest === \"bigint\") {\n        data.lastRequest = Number(data.lastRequest);\n      }\n      return data;\n    },\n    set: async (key, value, _update) => {\n      try {\n        if (_update) {\n          await db.updateMany({\n            model: \"rateLimit\",\n            where: [{ field: \"key\", value: key }],\n            update: {\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        } else {\n          await db.create({\n            model: \"rateLimit\",\n            data: {\n              key,\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        }\n      } catch (e) {\n        ctx.logger.error(\"Error setting rate limit\", e);\n      }\n    }\n  };\n}\nconst memory = /* @__PURE__ */ new Map();\nfunction getRateLimitStorage(ctx) {\n  if (ctx.options.rateLimit?.customStorage) {\n    return ctx.options.rateLimit.customStorage;\n  }\n  if (ctx.rateLimit.storage === \"secondary-storage\") {\n    return {\n      get: async (key) => {\n        const stringified = await ctx.options.secondaryStorage?.get(key);\n        return stringified ? JSON.parse(stringified) : void 0;\n      },\n      set: async (key, value) => {\n        await ctx.options.secondaryStorage?.set?.(key, JSON.stringify(value));\n      }\n    };\n  }\n  const storage = ctx.rateLimit.storage;\n  if (storage === \"memory\") {\n    return {\n      async get(key) {\n        return memory.get(key);\n      },\n      async set(key, value, _update) {\n        memory.set(key, value);\n      }\n    };\n  }\n  return createDBStorage(ctx, ctx.rateLimit.modelName);\n}\nasync function onRequestRateLimit(req, ctx) {\n  if (!ctx.rateLimit.enabled) {\n    return;\n  }\n  const path = new URL(req.url).pathname.replace(\n    ctx.options.basePath || \"/api/auth\",\n    \"\"\n  );\n  let window = ctx.rateLimit.window;\n  let max = ctx.rateLimit.max;\n  const ip = getIp(req, ctx.options);\n  if (!ip) {\n    return;\n  }\n  const key = ip + path;\n  const specialRules = getDefaultSpecialRules();\n  const specialRule = specialRules.find((rule) => rule.pathMatcher(path));\n  if (specialRule) {\n    window = specialRule.window;\n    max = specialRule.max;\n  }\n  for (const plugin of ctx.options.plugins || []) {\n    if (plugin.rateLimit) {\n      const matchedRule = plugin.rateLimit.find(\n        (rule) => rule.pathMatcher(path)\n      );\n      if (matchedRule) {\n        window = matchedRule.window;\n        max = matchedRule.max;\n        break;\n      }\n    }\n  }\n  if (ctx.rateLimit.customRules) {\n    const _path = Object.keys(ctx.rateLimit.customRules).find((p) => {\n      if (p.includes(\"*\")) {\n        const isMatch = wildcardMatch(p)(path);\n        return isMatch;\n      }\n      return p === path;\n    });\n    if (_path) {\n      const customRule = ctx.rateLimit.customRules[_path];\n      const resolved = typeof customRule === \"function\" ? await customRule(req) : customRule;\n      if (resolved) {\n        window = resolved.window;\n        max = resolved.max;\n      }\n    }\n  }\n  const storage = getRateLimitStorage(ctx);\n  const data = await storage.get(key);\n  const now = Date.now();\n  if (!data) {\n    await storage.set(key, {\n      key,\n      count: 1,\n      lastRequest: now\n    });\n  } else {\n    const timeSinceLastRequest = now - data.lastRequest;\n    if (shouldRateLimit(max, window, data)) {\n      const retryAfter = getRetryAfter(data.lastRequest, window);\n      return rateLimitResponse(retryAfter);\n    } else if (timeSinceLastRequest > window * 1e3) {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: 1,\n          lastRequest: now\n        },\n        true\n      );\n    } else {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: data.count + 1,\n          lastRequest: now\n        },\n        true\n      );\n    }\n  }\n}\nfunction getDefaultSpecialRules() {\n  const specialRules = [\n    {\n      pathMatcher(path) {\n        return path.startsWith(\"/sign-in\") || path.startsWith(\"/sign-up\") || path.startsWith(\"/change-password\") || path.startsWith(\"/change-email\");\n      },\n      window: 10,\n      max: 3\n    }\n  ];\n  return specialRules;\n}\n\nfunction toAuthEndpoints(endpoints, ctx) {\n  const api = {};\n  for (const [key, endpoint] of Object.entries(endpoints)) {\n    api[key] = async (context) => {\n      const authContext = await ctx;\n      let internalContext = {\n        ...context,\n        context: {\n          ...authContext,\n          returned: void 0,\n          responseHeaders: void 0,\n          session: null\n        },\n        path: endpoint.path,\n        headers: context?.headers ? new Headers(context?.headers) : void 0\n      };\n      const { beforeHooks, afterHooks } = getHooks(authContext);\n      const before = await runBeforeHooks(internalContext, beforeHooks);\n      if (\"context\" in before && before.context && typeof before.context === \"object\") {\n        const { headers, ...rest } = before.context;\n        if (headers) {\n          headers.forEach((value, key2) => {\n            internalContext.headers.set(key2, value);\n          });\n        }\n        internalContext = defu(rest, internalContext);\n      } else if (before) {\n        return before;\n      }\n      internalContext.asResponse = false;\n      internalContext.returnHeaders = true;\n      const result = await endpoint(internalContext).catch((e) => {\n        if (e instanceof APIError) {\n          return {\n            response: e,\n            headers: e.headers ? new Headers(e.headers) : null\n          };\n        }\n        throw e;\n      });\n      internalContext.context.returned = result.response;\n      internalContext.context.responseHeaders = result.headers;\n      const after = await runAfterHooks(internalContext, afterHooks);\n      if (after.response) {\n        result.response = after.response;\n      }\n      if (result.response instanceof APIError && !context?.asResponse) {\n        throw result.response;\n      }\n      const response = context?.asResponse ? toResponse(result.response, {\n        headers: result.headers\n      }) : context?.returnHeaders ? {\n        headers: result.headers,\n        response: result.response\n      } : result.response;\n      return response;\n    };\n    api[key].path = endpoint.path;\n    api[key].options = endpoint.options;\n  }\n  return api;\n}\nasync function runBeforeHooks(context, hooks) {\n  let modifiedContext = {};\n  for (const hook of hooks) {\n    if (hook.matcher(context)) {\n      const result = await hook.handler({\n        ...context,\n        returnHeaders: false\n      });\n      if (result && typeof result === \"object\") {\n        if (\"context\" in result && typeof result.context === \"object\") {\n          const { headers, ...rest } = result.context;\n          if (headers instanceof Headers) {\n            if (modifiedContext.headers) {\n              headers.forEach((value, key) => {\n                modifiedContext.headers?.set(key, value);\n              });\n            } else {\n              modifiedContext.headers = headers;\n            }\n          }\n          modifiedContext = defu(rest, modifiedContext);\n          continue;\n        }\n        return result;\n      }\n    }\n  }\n  return { context: modifiedContext };\n}\nasync function runAfterHooks(context, hooks) {\n  for (const hook of hooks) {\n    if (hook.matcher(context)) {\n      const result = await hook.handler(context).catch((e) => {\n        if (e instanceof APIError) {\n          return {\n            response: e,\n            headers: e.headers ? new Headers(e.headers) : null\n          };\n        }\n        throw e;\n      });\n      if (result.headers) {\n        result.headers.forEach((value, key) => {\n          if (!context.context.responseHeaders) {\n            context.context.responseHeaders = new Headers({\n              [key]: value\n            });\n          } else {\n            if (key.toLowerCase() === \"set-cookie\") {\n              context.context.responseHeaders.append(key, value);\n            } else {\n              context.context.responseHeaders.set(key, value);\n            }\n          }\n        });\n      }\n      if (result.response) {\n        context.context.returned = result.response;\n      }\n    }\n  }\n  return {\n    response: context.context.returned,\n    headers: context.context.responseHeaders\n  };\n}\nfunction getHooks(authContext) {\n  const plugins = authContext.options.plugins || [];\n  const beforeHooks = [];\n  const afterHooks = [];\n  if (authContext.options.hooks?.before) {\n    beforeHooks.push({\n      matcher: () => true,\n      handler: authContext.options.hooks.before\n    });\n  }\n  if (authContext.options.hooks?.after) {\n    afterHooks.push({\n      matcher: () => true,\n      handler: authContext.options.hooks.after\n    });\n  }\n  const pluginBeforeHooks = plugins.map((plugin) => {\n    if (plugin.hooks?.before) {\n      return plugin.hooks.before;\n    }\n  }).filter((plugin) => plugin !== void 0).flat();\n  const pluginAfterHooks = plugins.map((plugin) => {\n    if (plugin.hooks?.after) {\n      return plugin.hooks.after;\n    }\n  }).filter((plugin) => plugin !== void 0).flat();\n  pluginBeforeHooks.length && beforeHooks.push(...pluginBeforeHooks);\n  pluginAfterHooks.length && afterHooks.push(...pluginAfterHooks);\n  return {\n    beforeHooks,\n    afterHooks\n  };\n}\n\nfunction getEndpoints(ctx, options) {\n  const pluginEndpoints = options.plugins?.reduce(\n    (acc, plugin) => {\n      return {\n        ...acc,\n        ...plugin.endpoints\n      };\n    },\n    {}\n  );\n  const middlewares = options.plugins?.map(\n    (plugin) => plugin.middlewares?.map((m) => {\n      const middleware = async (context) => {\n        return m.middleware({\n          ...context,\n          context: {\n            ...ctx,\n            ...context.context\n          }\n        });\n      };\n      middleware.options = m.middleware.options;\n      return {\n        path: m.path,\n        middleware\n      };\n    })\n  ).filter((plugin) => plugin !== void 0).flat() || [];\n  const baseEndpoints = {\n    signInSocial,\n    callbackOAuth,\n    getSession: getSession(),\n    signOut,\n    signUpEmail: signUpEmail(),\n    signInEmail,\n    forgetPassword,\n    resetPassword,\n    verifyEmail,\n    sendVerificationEmail,\n    changeEmail,\n    changePassword,\n    setPassword,\n    updateUser: updateUser(),\n    deleteUser,\n    forgetPasswordCallback,\n    listSessions: listSessions(),\n    revokeSession,\n    revokeSessions,\n    revokeOtherSessions,\n    linkSocialAccount,\n    listUserAccounts,\n    deleteUserCallback,\n    unlinkAccount,\n    refreshToken,\n    getAccessToken\n  };\n  const endpoints = {\n    ...baseEndpoints,\n    ...pluginEndpoints,\n    ok,\n    error\n  };\n  const api = toAuthEndpoints(endpoints, ctx);\n  return {\n    api,\n    middlewares\n  };\n}\nconst router = (ctx, options) => {\n  const { api, middlewares } = getEndpoints(ctx, options);\n  const basePath = new URL(ctx.baseURL).pathname;\n  return createRouter(api, {\n    routerContext: ctx,\n    openapi: {\n      disabled: true\n    },\n    basePath,\n    routerMiddleware: [\n      {\n        path: \"/**\",\n        middleware: originCheckMiddleware\n      },\n      ...middlewares\n    ],\n    async onRequest(req) {\n      const disabledPaths = ctx.options.disabledPaths || [];\n      const path = new URL(req.url).pathname.replace(basePath, \"\");\n      if (disabledPaths.includes(path)) {\n        return new Response(\"Not Found\", { status: 404 });\n      }\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onRequest) {\n          const response = await plugin.onRequest(req, ctx);\n          if (response && \"response\" in response) {\n            return response.response;\n          }\n        }\n      }\n      return onRequestRateLimit(req, ctx);\n    },\n    async onResponse(res) {\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onResponse) {\n          const response = await plugin.onResponse(res, ctx);\n          if (response) {\n            return response.response;\n          }\n        }\n      }\n      return res;\n    },\n    onError(e) {\n      if (e instanceof APIError && e.status === \"FOUND\") {\n        return;\n      }\n      if (options.onAPIError?.throw) {\n        throw e;\n      }\n      if (options.onAPIError?.onError) {\n        options.onAPIError.onError(e, ctx);\n        return;\n      }\n      const optLogLevel = options.logger?.level;\n      const log = optLogLevel === \"error\" || optLogLevel === \"warn\" || optLogLevel === \"debug\" ? logger : void 0;\n      if (options.logger?.disabled !== true) {\n        if (e && typeof e === \"object\" && \"message\" in e && typeof e.message === \"string\") {\n          if (e.message.includes(\"no column\") || e.message.includes(\"column\") || e.message.includes(\"relation\") || e.message.includes(\"table\") || e.message.includes(\"does not exist\")) {\n            ctx.logger?.error(e.message);\n            return;\n          }\n        }\n        if (e instanceof APIError) {\n          if (e.status === \"INTERNAL_SERVER_ERROR\") {\n            ctx.logger.error(e.status, e);\n          }\n          log?.error(e.message);\n        } else {\n          ctx.logger?.error(\n            e && typeof e === \"object\" && \"name\" in e ? e.name : \"\",\n            e\n          );\n        }\n      }\n    }\n  });\n};\n\nexport { callbackOAuth, changeEmail, changePassword, createAuthEndpoint, createEmailVerificationToken, deleteUser, deleteUserCallback, error, forgetPassword, forgetPasswordCallback, getAccessToken, getEndpoints, getSession, linkSocialAccount, listSessions, listUserAccounts, ok, originCheckMiddleware, refreshToken, resetPassword, revokeOtherSessions, revokeSession, revokeSessions, router, sendVerificationEmail, setPassword, signInEmail, signInSocial, signOut, signUpEmail, unlinkAccount, updateUser, verifyEmail };\n", "import { scryptAsync } from '@noble/hashes/scrypt';\nimport { getRandomValues } from '@better-auth/utils';\nimport { hex } from '@better-auth/utils/hex';\nimport { hexToBytes } from '@noble/hashes/utils';\n\nfunction constantTimeEqual(a, b) {\n  const aBuffer = new Uint8Array(a);\n  const bBuffer = new Uint8Array(b);\n  if (aBuffer.length !== bBuffer.length) {\n    return false;\n  }\n  let c = 0;\n  for (let i = 0; i < aBuffer.length; i++) {\n    c |= aBuffer[i] ^ bBuffer[i];\n  }\n  return c === 0;\n}\n\nconst config = {\n  N: 16384,\n  r: 16,\n  p: 1,\n  dkLen: 64\n};\nasync function generateKey(password, salt) {\n  return await scryptAsync(password.normalize(\"NFKC\"), salt, {\n    N: config.N,\n    p: config.p,\n    r: config.r,\n    dkLen: config.dkLen,\n    maxmem: 128 * config.N * config.r * 2\n  });\n}\nconst hashPassword = async (password) => {\n  const salt = hex.encode(getRandomValues(new Uint8Array(16)));\n  const key = await generateKey(password, salt);\n  return `${salt}:${hex.encode(key)}`;\n};\nconst verifyPassword = async ({\n  hash,\n  password\n}) => {\n  const [salt, key] = hash.split(\":\");\n  const targetKey = await generateKey(password, salt);\n  return constantTimeEqual(targetKey, hexToBytes(key));\n};\n\nexport { constantTimeEqual as c, hashPassword as h, verifyPassword as v };\n", "const getAuthTables = (options) => {\n  const pluginSchema = options.plugins?.reduce(\n    (acc, plugin) => {\n      const schema = plugin.schema;\n      if (!schema) return acc;\n      for (const [key, value] of Object.entries(schema)) {\n        acc[key] = {\n          fields: {\n            ...acc[key]?.fields,\n            ...value.fields\n          },\n          modelName: value.modelName || key\n        };\n      }\n      return acc;\n    },\n    {}\n  );\n  const shouldAddRateLimitTable = options.rateLimit?.storage === \"database\";\n  const rateLimitTable = {\n    rateLimit: {\n      modelName: options.rateLimit?.modelName || \"rateLimit\",\n      fields: {\n        key: {\n          type: \"string\",\n          fieldName: options.rateLimit?.fields?.key || \"key\"\n        },\n        count: {\n          type: \"number\",\n          fieldName: options.rateLimit?.fields?.count || \"count\"\n        },\n        lastRequest: {\n          type: \"number\",\n          bigint: true,\n          fieldName: options.rateLimit?.fields?.lastRequest || \"lastRequest\"\n        }\n      }\n    }\n  };\n  const { user, session, account, ...pluginTables } = pluginSchema || {};\n  const sessionTable = {\n    session: {\n      modelName: options.session?.modelName || \"session\",\n      fields: {\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.expiresAt || \"expiresAt\"\n        },\n        token: {\n          type: \"string\",\n          required: true,\n          fieldName: options.session?.fields?.token || \"token\",\n          unique: true\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.updatedAt || \"updatedAt\"\n        },\n        ipAddress: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.ipAddress || \"ipAddress\"\n        },\n        userAgent: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.userAgent || \"userAgent\"\n        },\n        userId: {\n          type: \"string\",\n          fieldName: options.session?.fields?.userId || \"userId\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true\n        },\n        ...session?.fields,\n        ...options.session?.additionalFields\n      },\n      order: 2\n    }\n  };\n  return {\n    user: {\n      modelName: options.user?.modelName || \"user\",\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options.user?.fields?.name || \"name\",\n          sortable: true\n        },\n        email: {\n          type: \"string\",\n          unique: true,\n          required: true,\n          fieldName: options.user?.fields?.email || \"email\",\n          sortable: true\n        },\n        emailVerified: {\n          type: \"boolean\",\n          defaultValue: () => false,\n          required: true,\n          fieldName: options.user?.fields?.emailVerified || \"emailVerified\"\n        },\n        image: {\n          type: \"string\",\n          required: false,\n          fieldName: options.user?.fields?.image || \"image\"\n        },\n        createdAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...user?.fields,\n        ...options.user?.additionalFields\n      },\n      order: 1\n    },\n    //only add session table if it's not stored in secondary storage\n    ...!options.secondaryStorage || options.session?.storeSessionInDatabase ? sessionTable : {},\n    account: {\n      modelName: options.account?.modelName || \"account\",\n      fields: {\n        accountId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.accountId || \"accountId\"\n        },\n        providerId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.providerId || \"providerId\"\n        },\n        userId: {\n          type: \"string\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true,\n          fieldName: options.account?.fields?.userId || \"userId\"\n        },\n        accessToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.accessToken || \"accessToken\"\n        },\n        refreshToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.refreshToken || \"refreshToken\"\n        },\n        idToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.idToken || \"idToken\"\n        },\n        accessTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"accessTokenExpiresAt\"\n        },\n        refreshTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"refreshTokenExpiresAt\"\n        },\n        scope: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.scope || \"scope\"\n        },\n        password: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.password || \"password\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...account?.fields\n      },\n      order: 3\n    },\n    verification: {\n      modelName: options.verification?.modelName || \"verification\",\n      fields: {\n        identifier: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.identifier || \"identifier\"\n        },\n        value: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.value || \"value\"\n        },\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.verification?.fields?.expiresAt || \"expiresAt\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: false,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: false,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.updatedAt || \"updatedAt\"\n        }\n      },\n      order: 4\n    },\n    ...pluginTables,\n    ...shouldAddRateLimitTable ? rateLimitTable : {}\n  };\n};\n\nexport { getAuthTables as g };\n", "function withApplyDefault(value, field, action) {\n  if (action === \"update\") {\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    if (field.defaultValue) {\n      if (typeof field.defaultValue === \"function\") {\n        return field.defaultValue();\n      }\n      return field.defaultValue;\n    }\n  }\n  return value;\n}\n\nexport { withApplyDefault as w };\n", "import { s as safeJSONParse } from './better-auth.tB5eU6EY.mjs';\nimport { w as withApplyDefault } from './better-auth.0TC26uRi.mjs';\nimport { g as getAuthTables } from './better-auth.DORkW_Ge.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { l as logger } from './better-auth.Cqykj82J.mjs';\n\nlet debugLogs = [];\nlet transactionId = -1;\nconst colors = {\n  reset: \"\\x1B[0m\",\n  bright: \"\\x1B[1m\",\n  dim: \"\\x1B[2m\",\n  fg: {\n    yellow: \"\\x1B[33m\",\n    magenta: \"\\x1B[35m\"},\n  bg: {\n    black: \"\\x1B[40m\"}\n};\nconst createAdapter = ({\n  adapter,\n  config: cfg\n}) => (options) => {\n  const config = {\n    ...cfg,\n    supportsBooleans: cfg.supportsBooleans ?? true,\n    supportsDates: cfg.supportsDates ?? true,\n    supportsJSON: cfg.supportsJSON ?? false,\n    adapterName: cfg.adapterName ?? cfg.adapterId,\n    supportsNumericIds: cfg.supportsNumericIds ?? true\n  };\n  if (options.advanced?.database?.useNumberId === true && config.supportsNumericIds === false) {\n    throw new Error(\n      `[${config.adapterName}] Your database or database adapter does not support numeric ids. Please disable \"useNumberId\" in your config.`\n    );\n  }\n  const schema = getAuthTables(options);\n  const getDefaultFieldName = ({\n    field,\n    model: unsafe_model\n  }) => {\n    if (field === \"id\") {\n      return field;\n    }\n    const model = getDefaultModelName(unsafe_model);\n    let f = schema[model]?.fields[field];\n    if (!f) {\n      f = Object.values(schema[model]?.fields).find(\n        (f2) => f2.fieldName === field\n      );\n    }\n    if (!f) {\n      debugLog(`Field ${field} not found in model ${model}`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Field ${field} not found in model ${model}`);\n    }\n    return field;\n  };\n  const getDefaultModelName = (model) => {\n    if (config.usePlural && model.charAt(model.length - 1) === \"s\") {\n      let pluralessModel = model.slice(0, -1);\n      let m2 = schema[pluralessModel] ? pluralessModel : void 0;\n      if (!m2) {\n        m2 = Object.entries(schema).find(\n          ([_, f]) => f.modelName === pluralessModel\n        )?.[0];\n      }\n      if (m2) {\n        return m2;\n      }\n    }\n    let m = schema[model] ? model : void 0;\n    if (!m) {\n      m = Object.entries(schema).find(([_, f]) => f.modelName === model)?.[0];\n    }\n    if (!m) {\n      debugLog(`Model \"${model}\" not found in schema`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Model \"${model}\" not found in schema`);\n    }\n    return m;\n  };\n  const getModelName = (model) => {\n    return schema[getDefaultModelName(model)].modelName !== model ? schema[getDefaultModelName(model)].modelName : config.usePlural ? `${model}s` : model;\n  };\n  function getFieldName({\n    model: model_name,\n    field: field_name\n  }) {\n    const model = getDefaultModelName(model_name);\n    const field = getDefaultFieldName({ model, field: field_name });\n    return schema[model]?.fields[field]?.fieldName || field;\n  }\n  const debugLog = (...args) => {\n    if (config.debugLogs === true || typeof config.debugLogs === \"object\") {\n      if (typeof config.debugLogs === \"object\" && \"isRunningAdapterTests\" in config.debugLogs) {\n        if (config.debugLogs.isRunningAdapterTests) {\n          args.shift();\n          debugLogs.push(args);\n        }\n        return;\n      }\n      if (typeof config.debugLogs === \"object\" && config.debugLogs.logCondition && !config.debugLogs.logCondition?.()) {\n        return;\n      }\n      if (typeof args[0] === \"object\" && \"method\" in args[0]) {\n        const method = args.shift().method;\n        if (typeof config.debugLogs === \"object\") {\n          if (method === \"create\" && !config.debugLogs.create) {\n            return;\n          } else if (method === \"update\" && !config.debugLogs.update) {\n            return;\n          } else if (method === \"updateMany\" && !config.debugLogs.updateMany) {\n            return;\n          } else if (method === \"findOne\" && !config.debugLogs.findOne) {\n            return;\n          } else if (method === \"findMany\" && !config.debugLogs.findMany) {\n            return;\n          } else if (method === \"delete\" && !config.debugLogs.delete) {\n            return;\n          } else if (method === \"deleteMany\" && !config.debugLogs.deleteMany) {\n            return;\n          } else if (method === \"count\" && !config.debugLogs.count) {\n            return;\n          }\n        }\n        logger.info(`[${config.adapterName}]`, ...args);\n      } else {\n        logger.info(`[${config.adapterName}]`, ...args);\n      }\n    }\n  };\n  const idField = ({\n    customModelName,\n    forceAllowId\n  }) => {\n    const shouldGenerateId = !config.disableIdGeneration && !options.advanced?.database?.useNumberId && !forceAllowId;\n    const model = getDefaultModelName(customModelName ?? \"id\");\n    return {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\",\n      required: shouldGenerateId ? true : false,\n      ...shouldGenerateId ? {\n        defaultValue() {\n          if (config.disableIdGeneration) return void 0;\n          const useNumberId = options.advanced?.database?.useNumberId;\n          let generateId$1 = options.advanced?.database?.generateId;\n          if (options.advanced?.generateId !== void 0) {\n            logger.warn(\n              \"Your Better Auth config includes advanced.generateId which is deprecated. Please use advanced.database.generateId instead. This will be removed in future releases.\"\n            );\n            generateId$1 = options.advanced?.generateId;\n          }\n          if (generateId$1 === false || useNumberId) return void 0;\n          if (generateId$1) {\n            return generateId$1({\n              model\n            });\n          }\n          if (config.customIdGenerator) {\n            return config.customIdGenerator({ model });\n          }\n          return generateId();\n        }\n      } : {}\n    };\n  };\n  const getFieldAttributes = ({\n    model,\n    field\n  }) => {\n    const defaultModelName = getDefaultModelName(model);\n    const defaultFieldName = getDefaultFieldName({\n      field,\n      model\n    });\n    const fields = schema[defaultModelName].fields;\n    fields.id = idField({ customModelName: defaultModelName });\n    return fields[defaultFieldName];\n  };\n  const adapterInstance = adapter({\n    options,\n    schema,\n    debugLog,\n    getFieldName,\n    getModelName,\n    getDefaultModelName,\n    getDefaultFieldName,\n    getFieldAttributes\n  });\n  const transformInput = async (data, unsafe_model, action, forceAllowId) => {\n    const transformedData = {};\n    const fields = schema[unsafe_model].fields;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    if (!config.disableIdGeneration && !options.advanced?.database?.useNumberId) {\n      fields.id = idField({ customModelName: unsafe_model, forceAllowId });\n    }\n    for (const field in fields) {\n      const value = data[field];\n      const fieldAttributes = fields[field];\n      let newFieldName = newMappedKeys[field] || fields[field].fieldName || field;\n      if (value === void 0 && (!fieldAttributes.defaultValue && !fieldAttributes.transform?.input || action === \"update\")) {\n        continue;\n      }\n      let newValue = withApplyDefault(value, fieldAttributes, action);\n      if (fieldAttributes.transform?.input) {\n        newValue = await fieldAttributes.transform.input(newValue);\n      }\n      if (fieldAttributes.references?.field === \"id\" && options.advanced?.database?.useNumberId) {\n        if (Array.isArray(newValue)) {\n          newValue = newValue.map(Number);\n        } else {\n          newValue = Number(newValue);\n        }\n      } else if (config.supportsJSON === false && typeof newValue === \"object\" && //@ts-expect-error -Future proofing\n      fieldAttributes.type === \"json\") {\n        newValue = JSON.stringify(newValue);\n      } else if (config.supportsDates === false && newValue instanceof Date && fieldAttributes.type === \"date\") {\n        newValue = newValue.toISOString();\n      } else if (config.supportsBooleans === false && typeof newValue === \"boolean\") {\n        newValue = newValue ? 1 : 0;\n      }\n      if (config.customTransformInput) {\n        newValue = config.customTransformInput({\n          data: newValue,\n          action,\n          field: newFieldName,\n          fieldAttributes,\n          model: unsafe_model,\n          schema,\n          options\n        });\n      }\n      transformedData[newFieldName] = newValue;\n    }\n    return transformedData;\n  };\n  const transformOutput = async (data, unsafe_model, select = []) => {\n    if (!data) return null;\n    const newMappedKeys = config.mapKeysTransformOutput ?? {};\n    const transformedData = {};\n    const tableSchema = schema[unsafe_model].fields;\n    const idKey = Object.entries(newMappedKeys).find(\n      ([_, v]) => v === \"id\"\n    )?.[0];\n    tableSchema[idKey ?? \"id\"] = {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\"\n    };\n    for (const key in tableSchema) {\n      if (select.length && !select.includes(key)) {\n        continue;\n      }\n      const field = tableSchema[key];\n      if (field) {\n        const originalKey = field.fieldName || key;\n        let newValue = data[Object.entries(newMappedKeys).find(\n          ([_, v]) => v === originalKey\n        )?.[0] || originalKey];\n        if (field.transform?.output) {\n          newValue = await field.transform.output(newValue);\n        }\n        let newFieldName = newMappedKeys[key] || key;\n        if (originalKey === \"id\" || field.references?.field === \"id\") {\n          if (typeof newValue !== \"undefined\") newValue = String(newValue);\n        } else if (config.supportsJSON === false && typeof newValue === \"string\" && //@ts-expect-error - Future proofing\n        field.type === \"json\") {\n          newValue = safeJSONParse(newValue);\n        } else if (config.supportsDates === false && typeof newValue === \"string\" && field.type === \"date\") {\n          newValue = new Date(newValue);\n        } else if (config.supportsBooleans === false && typeof newValue === \"number\" && field.type === \"boolean\") {\n          newValue = newValue === 1;\n        }\n        if (config.customTransformOutput) {\n          newValue = config.customTransformOutput({\n            data: newValue,\n            field: newFieldName,\n            fieldAttributes: field,\n            select,\n            model: unsafe_model,\n            schema,\n            options\n          });\n        }\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformWhereClause = ({\n    model,\n    where\n  }) => {\n    if (!where) return void 0;\n    return where.map((w) => {\n      const {\n        field: unsafe_field,\n        value,\n        operator = \"eq\",\n        connector = \"AND\"\n      } = w;\n      if (operator === \"in\") {\n        if (!Array.isArray(value)) {\n          throw new Error(\"Value must be an array\");\n        }\n      }\n      const defaultModelName = getDefaultModelName(model);\n      const defaultFieldName = getDefaultFieldName({\n        field: unsafe_field,\n        model\n      });\n      const fieldName = getFieldName({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      const fieldAttr = getFieldAttributes({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      if (defaultFieldName === \"id\" || fieldAttr.references?.field === \"id\") {\n        if (options.advanced?.database?.useNumberId) {\n          if (Array.isArray(value)) {\n            return {\n              operator,\n              connector,\n              field: fieldName,\n              value: value.map(Number)\n            };\n          }\n          return {\n            operator,\n            connector,\n            field: fieldName,\n            value: Number(value)\n          };\n        }\n      }\n      return {\n        operator,\n        connector,\n        field: fieldName,\n        value\n      };\n    });\n  };\n  return {\n    create: async ({\n      data: unsafeData,\n      model: unsafeModel,\n      select,\n      forceAllowId = false\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      if (\"id\" in unsafeData && !forceAllowId) {\n        logger.warn(\n          `[${config.adapterName}] - You are trying to create a record with an id. This is not allowed as we handle id generation for you, unless you pass in the \\`forceAllowId\\` parameter. The id will be ignored.`\n        );\n        const err = new Error();\n        const stack = err.stack?.split(\"\\n\").filter((_, i) => i !== 1).join(\"\\n\").replace(\"Error:\", \"Create method with `id` being called at:\");\n        console.log(stack);\n        unsafeData.id = void 0;\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      const data = await transformInput(\n        unsafeData,\n        unsafeModel,\n        \"create\",\n        forceAllowId\n      );\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.create({ data, model });\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"DB Result\")}:`,\n        { model, res }\n      );\n      const transformed = await transformOutput(res, unsafeModel, select);\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    update: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      const data = await transformInput(\n        unsafeData,\n        unsafeModel,\n        \"update\"\n      );\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.update({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      const transformed = await transformOutput(res, unsafeModel);\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    updateMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      const data = await transformInput(unsafeData, unsafeModel, \"update\");\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const updatedCount = await adapterInstance.updateMany({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: updatedCount }\n      );\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: updatedCount }\n      );\n      return updatedCount;\n    },\n    findOne: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      select\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findOne\")}:`,\n        { model, where, select }\n      );\n      const res = await adapterInstance.findOne({\n        model,\n        where,\n        select\n      });\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      const transformed = await transformOutput(\n        res,\n        unsafeModel,\n        select\n      );\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    findMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      limit: unsafeLimit,\n      sortBy,\n      offset\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const limit = unsafeLimit ?? options.advanced?.database?.defaultFindManyLimit ?? 100;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findMany\")}:`,\n        { model, where, limit, sortBy, offset }\n      );\n      const res = await adapterInstance.findMany({\n        model,\n        where,\n        limit,\n        sortBy,\n        offset\n      });\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      const transformed = await Promise.all(\n        res.map(async (r) => await transformOutput(r, unsafeModel))\n      );\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    delete: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"delete\")}:`,\n        { model, where }\n      );\n      await adapterInstance.delete({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"delete\")} ${formatAction(\"DB Result\")}:`,\n        { model }\n      );\n    },\n    deleteMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DeleteMany\")}:`,\n        { model, where }\n      );\n      const res = await adapterInstance.deleteMany({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      return res;\n    },\n    count: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          where\n        }\n      );\n      const res = await adapterInstance.count({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          data: res\n        }\n      );\n      return res;\n    },\n    createSchema: adapterInstance.createSchema ? async (_, file) => {\n      const tables = getAuthTables(options);\n      if (options.secondaryStorage && !options.session?.storeSessionInDatabase) {\n        delete tables.session;\n      }\n      if (options.rateLimit && options.rateLimit.storage === \"database\" && // rate-limit will default to enabled in production,\n      // and given storage is database, it will try to use the rate-limit table,\n      // so we should make sure to generate rate-limit table schema\n      (typeof options.rateLimit.enabled === \"undefined\" || // and of course if they forcefully set to true, then they want rate-limit,\n      // thus we should also generate rate-limit table schema\n      options.rateLimit.enabled === true)) {\n        tables.ratelimit = {\n          modelName: options.rateLimit.modelName ?? \"ratelimit\",\n          fields: {\n            key: {\n              type: \"string\",\n              unique: true,\n              required: true,\n              fieldName: options.rateLimit.fields?.key ?? \"key\"\n            },\n            count: {\n              type: \"number\",\n              required: true,\n              fieldName: options.rateLimit.fields?.count ?? \"count\"\n            },\n            lastRequest: {\n              type: \"number\",\n              required: true,\n              bigint: true,\n              defaultValue: () => Date.now(),\n              fieldName: options.rateLimit.fields?.lastRequest ?? \"lastRequest\"\n            }\n          }\n        };\n      }\n      return adapterInstance.createSchema({ file, tables });\n    } : void 0,\n    options: {\n      adapterConfig: config,\n      ...adapterInstance.options ?? {}\n    },\n    id: config.adapterId,\n    // Secretly export values ONLY if this adapter has enabled adapter-test-debug-logs.\n    // This would then be used during our adapter-tests to help print debug logs if a test fails.\n    //@ts-expect-error - ^^\n    ...config.debugLogs?.isRunningAdapterTests ? {\n      adapterTestDebugLogs: {\n        resetDebugLogs() {\n          debugLogs = [];\n        },\n        printDebugLogs() {\n          const separator = `\\u2500`.repeat(80);\n          let log = debugLogs.reverse().map((log2) => {\n            log2[0] = `\n${log2[0]}`;\n            return [...log2, \"\\n\"];\n          }).reduce(\n            (prev, curr) => {\n              return [...curr, ...prev];\n            },\n            [`\n${separator}`]\n          );\n          console.log(...log);\n        }\n      }\n    } : {}\n  };\n};\nfunction formatTransactionId(transactionId2) {\n  return `${colors.fg.magenta}#${transactionId2}${colors.reset}`;\n}\nfunction formatStep(step, total) {\n  return `${colors.bg.black}${colors.fg.yellow}[${step}/${total}]${colors.reset}`;\n}\nfunction formatMethod(method) {\n  return `${colors.bright}${method}${colors.reset}`;\n}\nfunction formatAction(action) {\n  return `${colors.dim}(${action})${colors.reset}`;\n}\n\nexport { createAdapter as c };\n", "import { Kysely, SqliteDialect, MysqlDialect, PostgresDialect, MssqlDialect } from 'kysely';\nimport { c as createAdapter } from './better-auth.Dpv9J4ny.mjs';\n\nfunction getDatabaseType(db) {\n  if (!db) {\n    return null;\n  }\n  if (\"dialect\" in db) {\n    return getDatabaseType(db.dialect);\n  }\n  if (\"createDriver\" in db) {\n    if (db instanceof SqliteDialect) {\n      return \"sqlite\";\n    }\n    if (db instanceof MysqlDialect) {\n      return \"mysql\";\n    }\n    if (db instanceof PostgresDialect) {\n      return \"postgres\";\n    }\n    if (db instanceof MssqlDialect) {\n      return \"mssql\";\n    }\n  }\n  if (\"aggregate\" in db) {\n    return \"sqlite\";\n  }\n  if (\"getConnection\" in db) {\n    return \"mysql\";\n  }\n  if (\"connect\" in db) {\n    return \"postgres\";\n  }\n  return null;\n}\nconst createKyselyAdapter = async (config) => {\n  const db = config.database;\n  if (!db) {\n    return {\n      kysely: null,\n      databaseType: null\n    };\n  }\n  if (\"db\" in db) {\n    return {\n      kysely: db.db,\n      databaseType: db.type\n    };\n  }\n  if (\"dialect\" in db) {\n    return {\n      kysely: new Kysely({ dialect: db.dialect }),\n      databaseType: db.type\n    };\n  }\n  let dialect = void 0;\n  const databaseType = getDatabaseType(db);\n  if (\"createDriver\" in db) {\n    dialect = db;\n  }\n  if (\"aggregate\" in db) {\n    dialect = new SqliteDialect({\n      database: db\n    });\n  }\n  if (\"getConnection\" in db) {\n    dialect = new MysqlDialect(db);\n  }\n  if (\"connect\" in db) {\n    dialect = new PostgresDialect({\n      pool: db\n    });\n  }\n  return {\n    kysely: dialect ? new Kysely({ dialect }) : null,\n    databaseType\n  };\n};\n\nconst kyselyAdapter = (db, config) => createAdapter({\n  config: {\n    adapterId: \"kysely\",\n    adapterName: \"Kysely Adapter\",\n    usePlural: config?.usePlural,\n    debugLogs: config?.debugLogs,\n    supportsBooleans: config?.type === \"sqlite\" || config?.type === \"mssql\" || !config?.type ? false : true,\n    supportsDates: config?.type === \"sqlite\" || config?.type === \"mssql\" || !config?.type ? false : true,\n    supportsJSON: false\n  },\n  adapter: ({ getFieldName, schema }) => {\n    const withReturning = async (values, builder, model, where) => {\n      let res;\n      if (config?.type === \"mysql\") {\n        await builder.execute();\n        const field = values.id ? \"id\" : where.length > 0 && where[0].field ? where[0].field : \"id\";\n        if (!values.id && where.length === 0) {\n          res = await db.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").limit(1).executeTakeFirst();\n          return res;\n        }\n        const value = values[field] || where[0].value;\n        res = await db.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").where(getFieldName({ model, field }), \"=\", value).limit(1).executeTakeFirst();\n        return res;\n      }\n      if (config?.type === \"mssql\") {\n        res = await builder.outputAll(\"inserted\").executeTakeFirst();\n        return res;\n      }\n      res = await builder.returningAll().executeTakeFirst();\n      return res;\n    };\n    function transformValueToDB(value, model, field) {\n      if (field === \"id\") {\n        return value;\n      }\n      const { type = \"sqlite\" } = config || {};\n      let f = schema[model]?.fields[field];\n      if (!f) {\n        f = Object.values(schema).find((f2) => f2.modelName === model);\n      }\n      if (f.type === \"boolean\" && (type === \"sqlite\" || type === \"mssql\") && value !== null && value !== void 0) {\n        return value ? 1 : 0;\n      }\n      if (f.type === \"date\" && value && value instanceof Date) {\n        return type === \"sqlite\" ? value.toISOString() : value;\n      }\n      return value;\n    }\n    function convertWhereClause(model, w) {\n      if (!w)\n        return {\n          and: null,\n          or: null\n        };\n      const conditions = {\n        and: [],\n        or: []\n      };\n      w.forEach((condition) => {\n        let {\n          field: _field,\n          value,\n          operator = \"=\",\n          connector = \"AND\"\n        } = condition;\n        const field = getFieldName({ model, field: _field });\n        value = transformValueToDB(value, model, _field);\n        const expr = (eb) => {\n          if (operator.toLowerCase() === \"in\") {\n            return eb(field, \"in\", Array.isArray(value) ? value : [value]);\n          }\n          if (operator === \"contains\") {\n            return eb(field, \"like\", `%${value}%`);\n          }\n          if (operator === \"starts_with\") {\n            return eb(field, \"like\", `${value}%`);\n          }\n          if (operator === \"ends_with\") {\n            return eb(field, \"like\", `%${value}`);\n          }\n          if (operator === \"eq\") {\n            return eb(field, \"=\", value);\n          }\n          if (operator === \"ne\") {\n            return eb(field, \"<>\", value);\n          }\n          if (operator === \"gt\") {\n            return eb(field, \">\", value);\n          }\n          if (operator === \"gte\") {\n            return eb(field, \">=\", value);\n          }\n          if (operator === \"lt\") {\n            return eb(field, \"<\", value);\n          }\n          if (operator === \"lte\") {\n            return eb(field, \"<=\", value);\n          }\n          return eb(field, operator, value);\n        };\n        if (connector === \"OR\") {\n          conditions.or.push(expr);\n        } else {\n          conditions.and.push(expr);\n        }\n      });\n      return {\n        and: conditions.and.length ? conditions.and : null,\n        or: conditions.or.length ? conditions.or : null\n      };\n    }\n    return {\n      async create({ data, model }) {\n        const builder = db.insertInto(model).values(data);\n        return await withReturning(data, builder, model, []);\n      },\n      async findOne({ model, where, select }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.selectFrom(model).selectAll();\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        const res = await query.executeTakeFirst();\n        if (!res) return null;\n        return res;\n      },\n      async findMany({ model, where, limit, offset, sortBy }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.selectFrom(model);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        if (config?.type === \"mssql\") {\n          if (!offset) {\n            query = query.top(limit || 100);\n          }\n        } else {\n          query = query.limit(limit || 100);\n        }\n        if (sortBy) {\n          query = query.orderBy(\n            getFieldName({ model, field: sortBy.field }),\n            sortBy.direction\n          );\n        }\n        if (offset) {\n          if (config?.type === \"mssql\") {\n            if (!sortBy) {\n              query = query.orderBy(getFieldName({ model, field: \"id\" }));\n            }\n            query = query.offset(offset).fetch(limit || 100);\n          } else {\n            query = query.offset(offset);\n          }\n        }\n        const res = await query.selectAll().execute();\n        if (!res) return [];\n        return res;\n      },\n      async update({ model, where, update: values }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.updateTable(model).set(values);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        return await withReturning(values, query, model, where);\n      },\n      async updateMany({ model, where, update: values }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.updateTable(model).set(values);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        const res = await query.execute();\n        return res.length;\n      },\n      async count({ model, where }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.selectFrom(model).select(db.fn.count(\"id\").as(\"count\"));\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        const res = await query.execute();\n        return res[0].count;\n      },\n      async delete({ model, where }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.deleteFrom(model);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        await query.execute();\n      },\n      async deleteMany({ model, where }) {\n        const { and, or } = convertWhereClause(model, where);\n        let query = db.deleteFrom(model);\n        if (and) {\n          query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n        }\n        if (or) {\n          query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n        }\n        return (await query.execute()).length;\n      },\n      options: config\n    };\n  }\n});\n\nexport { createKyselyAdapter as c, kyselyAdapter as k };\n", "import { c as createAdapter } from './better-auth.Dpv9J4ny.mjs';\n\nconst memoryAdapter = (db, config) => createAdapter({\n  config: {\n    adapterId: \"memory\",\n    adapterName: \"Memory Adapter\",\n    usePlural: false,\n    debugLogs: config?.debugLogs || false,\n    customTransformInput(props) {\n      if (props.options.advanced?.database?.useNumberId && props.field === \"id\" && props.action === \"create\") {\n        return db[props.model].length + 1;\n      }\n      return props.data;\n    }\n  },\n  adapter: ({ getFieldName, options }) => {\n    function convertWhereClause(where, table) {\n      return table.filter((record) => {\n        return where.every((clause) => {\n          let { field, value, operator } = clause;\n          if (operator === \"in\") {\n            if (!Array.isArray(value)) {\n              throw new Error(\"Value must be an array\");\n            }\n            return value.includes(record[field]);\n          } else if (operator === \"contains\") {\n            return record[field].includes(value);\n          } else if (operator === \"starts_with\") {\n            return record[field].startsWith(value);\n          } else if (operator === \"ends_with\") {\n            return record[field].endsWith(value);\n          } else {\n            return record[field] === value;\n          }\n        });\n      });\n    }\n    return {\n      create: async ({ model, data }) => {\n        if (options.advanced?.database?.useNumberId) {\n          data.id = db[model].length + 1;\n        }\n        db[model].push(data);\n        return data;\n      },\n      findOne: async ({ model, where }) => {\n        const table = db[model];\n        const res = convertWhereClause(where, table);\n        const record = res[0] || null;\n        return record;\n      },\n      findMany: async ({ model, where, sortBy, limit, offset }) => {\n        let table = db[model];\n        if (where) {\n          table = convertWhereClause(where, table);\n        }\n        if (sortBy) {\n          table = table.sort((a, b) => {\n            const field = getFieldName({ model, field: sortBy.field });\n            if (sortBy.direction === \"asc\") {\n              return a[field] > b[field] ? 1 : -1;\n            } else {\n              return a[field] < b[field] ? 1 : -1;\n            }\n          });\n        }\n        if (offset !== void 0) {\n          table = table.slice(offset);\n        }\n        if (limit !== void 0) {\n          table = table.slice(0, limit);\n        }\n        return table;\n      },\n      count: async ({ model }) => {\n        return db[model].length;\n      },\n      update: async ({ model, where, update }) => {\n        const table = db[model];\n        const res = convertWhereClause(where, table);\n        res.forEach((record) => {\n          Object.assign(record, update);\n        });\n        return res[0] || null;\n      },\n      delete: async ({ model, where }) => {\n        const table = db[model];\n        const res = convertWhereClause(where, table);\n        db[model] = table.filter((record) => !res.includes(record));\n      },\n      deleteMany: async ({ model, where }) => {\n        const table = db[model];\n        const res = convertWhereClause(where, table);\n        let count = 0;\n        db[model] = table.filter((record) => {\n          if (res.includes(record)) {\n            count++;\n            return false;\n          }\n          return !res.includes(record);\n        });\n        return count;\n      },\n      updateMany({ model, where, update }) {\n        const table = db[model];\n        const res = convertWhereClause(where, table);\n        res.forEach((record) => {\n          Object.assign(record, update);\n        });\n        return res[0] || null;\n      }\n    };\n  }\n});\n\nexport { memoryAdapter as m };\n", "import { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { d as parseSessionOutput, b as parseUserOutput } from './better-auth.Cc72UxUH.mjs';\nimport { g as getIp } from './better-auth.iKoUsdFE.mjs';\nimport { s as safeJSONParse } from './better-auth.tB5eU6EY.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { l as logger, c as createLogger } from './better-auth.Cqykj82J.mjs';\nimport './better-auth.8zoxzg-F.mjs';\nimport '@better-auth/utils/random';\nimport { g as getAuthTables } from './better-auth.DORkW_Ge.mjs';\nimport { B as BetterAuthError } from './better-auth.DdzSJf-n.mjs';\nimport { c as createKyselyAdapter, k as kyselyAdapter } from './better-auth.Ia_Tf4f9.mjs';\nimport { m as memoryAdapter } from './better-auth.Bdaq9Lqn.mjs';\nimport 'kysely';\n\nfunction getWithHooks(adapter, ctx) {\n  const hooks = ctx.hooks;\n  async function createWithHooks(data, model, customCreateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.before;\n      if (toRun) {\n        const result = await toRun(actualData, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\" && \"data\" in result;\n        if (isObject) {\n          actualData = {\n            ...actualData,\n            ...result.data\n          };\n        }\n      }\n    }\n    const customCreated = customCreateFn ? await customCreateFn.fn(actualData) : null;\n    const created = !customCreateFn || customCreateFn.executeMainFn ? await adapter.create({\n      model,\n      data: actualData\n    }) : customCreated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.after;\n      if (toRun) {\n        await toRun(created, context);\n      }\n    }\n    return created;\n  }\n  async function updateWithHooks(data, where, model, customUpdateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await adapter.update({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  async function updateManyWithHooks(data, where, model, customUpdateFn, context) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await adapter.updateMany({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  return {\n    createWithHooks,\n    updateWithHooks,\n    updateManyWithHooks\n  };\n}\n\nconst createInternalAdapter = (adapter, ctx) => {\n  const options = ctx.options;\n  const secondaryStorage = options.secondaryStorage;\n  const sessionExpiration = options.session?.expiresIn || 60 * 60 * 24 * 7;\n  const { createWithHooks, updateWithHooks, updateManyWithHooks } = getWithHooks(adapter, ctx);\n  return {\n    createOAuthUser: async (user, account, context) => {\n      const createdUser = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...user\n        },\n        \"user\",\n        void 0,\n        context\n      );\n      const createdAccount = await createWithHooks(\n        {\n          ...account,\n          userId: createdUser.id || user.id,\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date()\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return {\n        user: createdUser,\n        account: createdAccount\n      };\n    },\n    createUser: async (user, context) => {\n      const createdUser = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          emailVerified: false,\n          ...user,\n          email: user.email?.toLowerCase()\n        },\n        \"user\",\n        void 0,\n        context\n      );\n      return createdUser;\n    },\n    createAccount: async (account, context) => {\n      const createdAccount = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return createdAccount;\n    },\n    listSessions: async (userId) => {\n      if (secondaryStorage) {\n        const currentList = await secondaryStorage.get(\n          `active-sessions-${userId}`\n        );\n        if (!currentList) return [];\n        const list = safeJSONParse(currentList) || [];\n        const now = Date.now();\n        const validSessions = list.filter((s) => s.expiresAt > now);\n        const sessions2 = [];\n        for (const session of validSessions) {\n          const sessionStringified = await secondaryStorage.get(session.token);\n          if (sessionStringified) {\n            const s = JSON.parse(sessionStringified);\n            const parsedSession = parseSessionOutput(ctx.options, {\n              ...s.session,\n              expiresAt: new Date(s.session.expiresAt)\n            });\n            sessions2.push(parsedSession);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await adapter.findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return sessions;\n    },\n    listUsers: async (limit, offset, sortBy, where) => {\n      const users = await adapter.findMany({\n        model: \"user\",\n        limit,\n        offset,\n        sortBy,\n        where\n      });\n      return users;\n    },\n    countTotalUsers: async (where) => {\n      const total = await adapter.count({\n        model: \"user\",\n        where\n      });\n      if (typeof total === \"string\") {\n        return parseInt(total);\n      }\n      return total;\n    },\n    deleteUser: async (userId) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(`active-sessions-${userId}`);\n      }\n      if (!secondaryStorage || options.session?.storeSessionInDatabase) {\n        await adapter.deleteMany({\n          model: \"session\",\n          where: [\n            {\n              field: \"userId\",\n              value: userId\n            }\n          ]\n        });\n      }\n      await adapter.deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n    },\n    createSession: async (userId, ctx2, dontRememberMe, override, overrideAll) => {\n      const headers = ctx2.headers || ctx2.request?.headers;\n      const { id: _, ...rest } = override || {};\n      const data = {\n        ipAddress: ctx2.request || ctx2.headers ? getIp(ctx2.request || ctx2.headers, ctx2.context.options) || \"\" : \"\",\n        userAgent: headers?.get(\"user-agent\") || \"\",\n        ...rest,\n        /**\n         * If the user doesn't want to be remembered\n         * set the session to expire in 1 day.\n         * The cookie will be set to expire at the end of the session\n         */\n        expiresAt: dontRememberMe ? getDate(60 * 60 * 24, \"sec\") : getDate(sessionExpiration, \"sec\"),\n        userId,\n        token: generateId(32),\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        ...overrideAll ? rest : {}\n      };\n      const res = await createWithHooks(\n        data,\n        \"session\",\n        secondaryStorage ? {\n          fn: async (sessionData) => {\n            const currentList = await secondaryStorage.get(\n              `active-sessions-${userId}`\n            );\n            let list = [];\n            const now = Date.now();\n            if (currentList) {\n              list = safeJSONParse(currentList) || [];\n              list = list.filter((session) => session.expiresAt > now);\n            }\n            list.push({\n              token: data.token,\n              expiresAt: now + sessionExpiration * 1e3\n            });\n            await secondaryStorage.set(\n              `active-sessions-${userId}`,\n              JSON.stringify(list),\n              sessionExpiration\n            );\n            return sessionData;\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        ctx2\n      );\n      return res;\n    },\n    findSession: async (token) => {\n      if (secondaryStorage) {\n        const sessionStringified = await secondaryStorage.get(token);\n        if (!sessionStringified && !options.session?.storeSessionInDatabase) {\n          return null;\n        }\n        if (sessionStringified) {\n          const s = JSON.parse(sessionStringified);\n          const parsedSession2 = parseSessionOutput(ctx.options, {\n            ...s.session,\n            expiresAt: new Date(s.session.expiresAt),\n            createdAt: new Date(s.session.createdAt),\n            updatedAt: new Date(s.session.updatedAt)\n          });\n          const parsedUser2 = parseUserOutput(ctx.options, {\n            ...s.user,\n            createdAt: new Date(s.user.createdAt),\n            updatedAt: new Date(s.user.updatedAt)\n          });\n          return {\n            session: parsedSession2,\n            user: parsedUser2\n          };\n        }\n      }\n      const session = await adapter.findOne({\n        model: \"session\",\n        where: [\n          {\n            value: token,\n            field: \"token\"\n          }\n        ]\n      });\n      if (!session) {\n        return null;\n      }\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            value: session.userId,\n            field: \"id\"\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const parsedSession = parseSessionOutput(ctx.options, session);\n      const parsedUser = parseUserOutput(ctx.options, user);\n      return {\n        session: parsedSession,\n        user: parsedUser\n      };\n    },\n    findSessions: async (sessionTokens) => {\n      if (secondaryStorage) {\n        const sessions2 = [];\n        for (const sessionToken of sessionTokens) {\n          const sessionStringified = await secondaryStorage.get(sessionToken);\n          if (sessionStringified) {\n            const s = JSON.parse(sessionStringified);\n            const session = {\n              session: {\n                ...s.session,\n                expiresAt: new Date(s.session.expiresAt)\n              },\n              user: {\n                ...s.user,\n                createdAt: new Date(s.user.createdAt),\n                updatedAt: new Date(s.user.updatedAt)\n              }\n            };\n            sessions2.push(session);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await adapter.findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: sessionTokens,\n            operator: \"in\"\n          }\n        ]\n      });\n      const userIds = sessions.map((session) => {\n        return session.userId;\n      });\n      if (!userIds.length) return [];\n      const users = await adapter.findMany({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return sessions.map((session) => {\n        const user = users.find((u) => u.id === session.userId);\n        if (!user) return null;\n        return {\n          session,\n          user\n        };\n      });\n    },\n    updateSession: async (sessionToken, session, context) => {\n      const updatedSession = await updateWithHooks(\n        session,\n        [{ field: \"token\", value: sessionToken }],\n        \"session\",\n        secondaryStorage ? {\n          async fn(data) {\n            const currentSession = await secondaryStorage.get(sessionToken);\n            let updatedSession2 = null;\n            if (currentSession) {\n              const parsedSession = JSON.parse(currentSession);\n              updatedSession2 = {\n                ...parsedSession.session,\n                ...data\n              };\n              return updatedSession2;\n            } else {\n              return null;\n            }\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        context\n      );\n      return updatedSession;\n    },\n    deleteSession: async (token) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(token);\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await adapter.delete({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: token\n          }\n        ]\n      });\n    },\n    deleteAccounts: async (userId) => {\n      await adapter.deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n    },\n    deleteAccount: async (accountId) => {\n      await adapter.delete({\n        model: \"account\",\n        where: [\n          {\n            field: \"id\",\n            value: accountId\n          }\n        ]\n      });\n    },\n    deleteSessions: async (userIdOrSessionTokens) => {\n      if (secondaryStorage) {\n        if (typeof userIdOrSessionTokens === \"string\") {\n          const activeSession = await secondaryStorage.get(\n            `active-sessions-${userIdOrSessionTokens}`\n          );\n          const sessions = activeSession ? safeJSONParse(activeSession) : [];\n          if (!sessions) return;\n          for (const session of sessions) {\n            await secondaryStorage.delete(session.token);\n          }\n        } else {\n          for (const sessionToken of userIdOrSessionTokens) {\n            const session = await secondaryStorage.get(sessionToken);\n            if (session) {\n              await secondaryStorage.delete(sessionToken);\n            }\n          }\n        }\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await adapter.deleteMany({\n        model: \"session\",\n        where: [\n          {\n            field: Array.isArray(userIdOrSessionTokens) ? \"token\" : \"userId\",\n            value: userIdOrSessionTokens,\n            operator: Array.isArray(userIdOrSessionTokens) ? \"in\" : void 0\n          }\n        ]\n      });\n    },\n    findOAuthUser: async (email, accountId, providerId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            value: accountId,\n            field: \"accountId\"\n          },\n          {\n            value: providerId,\n            field: \"providerId\"\n          }\n        ]\n      });\n      if (account) {\n        const user = await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              value: account.userId,\n              field: \"id\"\n            }\n          ]\n        });\n        if (user) {\n          return {\n            user,\n            accounts: [account]\n          };\n        } else {\n          return null;\n        }\n      } else {\n        const user = await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              value: email.toLowerCase(),\n              field: \"email\"\n            }\n          ]\n        });\n        if (user) {\n          const accounts = await adapter.findMany({\n            model: \"account\",\n            where: [\n              {\n                value: user.id,\n                field: \"userId\"\n              }\n            ]\n          });\n          return {\n            user,\n            accounts: accounts || []\n          };\n        } else {\n          return null;\n        }\n      }\n    },\n    findUserByEmail: async (email, options2) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            value: email.toLowerCase(),\n            field: \"email\"\n          }\n        ]\n      });\n      if (!user) return null;\n      if (options2?.includeAccounts) {\n        const accounts = await adapter.findMany({\n          model: \"account\",\n          where: [\n            {\n              value: user.id,\n              field: \"userId\"\n            }\n          ]\n        });\n        return {\n          user,\n          accounts\n        };\n      }\n      return {\n        user,\n        accounts: []\n      };\n    },\n    findUserById: async (userId) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n      return user;\n    },\n    linkAccount: async (account, context) => {\n      const _account = await createWithHooks(\n        {\n          ...account,\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date()\n        },\n        \"account\",\n        void 0,\n        context\n      );\n      return _account;\n    },\n    updateUser: async (userId, data, context) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ],\n        \"user\",\n        void 0,\n        context\n      );\n      return user;\n    },\n    updateUserByEmail: async (email, data, context) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"email\",\n            value: email.toLowerCase()\n          }\n        ],\n        \"user\",\n        void 0,\n        context\n      );\n      return user;\n    },\n    updatePassword: async (userId, password, context) => {\n      await updateManyWithHooks(\n        {\n          password\n        },\n        [\n          {\n            field: \"userId\",\n            value: userId\n          },\n          {\n            field: \"providerId\",\n            value: \"credential\"\n          }\n        ],\n        \"account\",\n        void 0,\n        context\n      );\n    },\n    findAccounts: async (userId) => {\n      const accounts = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return accounts;\n    },\n    findAccount: async (accountId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByProviderId: async (accountId, providerId) => {\n      const account = await adapter.findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          },\n          {\n            field: \"providerId\",\n            value: providerId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByUserId: async (userId) => {\n      const account = await adapter.findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return account;\n    },\n    updateAccount: async (id, data, context) => {\n      const account = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"account\",\n        void 0,\n        context\n      );\n      return account;\n    },\n    createVerificationValue: async (data, context) => {\n      const verification = await createWithHooks(\n        {\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...data\n        },\n        \"verification\",\n        void 0,\n        context\n      );\n      return verification;\n    },\n    findVerificationValue: async (identifier) => {\n      const verification = await adapter.findMany({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ],\n        sortBy: {\n          field: \"createdAt\",\n          direction: \"desc\"\n        },\n        limit: 1\n      });\n      if (!options.verification?.disableCleanup) {\n        await adapter.deleteMany({\n          model: \"verification\",\n          where: [\n            {\n              field: \"expiresAt\",\n              value: /* @__PURE__ */ new Date(),\n              operator: \"lt\"\n            }\n          ]\n        });\n      }\n      const lastVerification = verification[0];\n      return lastVerification;\n    },\n    deleteVerificationValue: async (id) => {\n      await adapter.delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n    },\n    deleteVerificationByIdentifier: async (identifier) => {\n      await adapter.delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ]\n      });\n    },\n    updateVerificationValue: async (id, data, context) => {\n      const verification = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"verification\",\n        void 0,\n        context\n      );\n      return verification;\n    }\n  };\n};\n\nasync function getAdapter(options) {\n  if (!options.database) {\n    const tables = getAuthTables(options);\n    const memoryDB = Object.keys(tables).reduce((acc, key) => {\n      acc[key] = [];\n      return acc;\n    }, {});\n    logger.warn(\n      \"No database configuration provided. Using memory adapter in development\"\n    );\n    return memoryAdapter(memoryDB)(options);\n  }\n  if (typeof options.database === \"function\") {\n    return options.database(options);\n  }\n  const { kysely, databaseType } = await createKyselyAdapter(options);\n  if (!kysely) {\n    throw new BetterAuthError(\"Failed to initialize database adapter\");\n  }\n  return kyselyAdapter(kysely, {\n    type: databaseType || \"sqlite\"\n  })(options);\n}\nfunction convertToDB(fields, values) {\n  let result = values.id ? {\n    id: values.id\n  } : {};\n  for (const key in fields) {\n    const field = fields[key];\n    const value = values[key];\n    if (value === void 0) {\n      continue;\n    }\n    result[field.fieldName || key] = value;\n  }\n  return result;\n}\nfunction convertFromDB(fields, values) {\n  if (!values) {\n    return null;\n  }\n  let result = {\n    id: values.id\n  };\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = values[value.fieldName || key];\n  }\n  return result;\n}\n\nfunction getSchema(config) {\n  const tables = getAuthTables(config);\n  let schema = {};\n  for (const key in tables) {\n    const table = tables[key];\n    const fields = table.fields;\n    let actualFields = {};\n    Object.entries(fields).forEach(([key2, field]) => {\n      actualFields[field.fieldName || key2] = field;\n      if (field.references) {\n        const refTable = tables[field.references.model];\n        if (refTable) {\n          actualFields[field.fieldName || key2].references = {\n            model: refTable.modelName,\n            field: field.references.field\n          };\n        }\n      }\n    });\n    if (schema[table.modelName]) {\n      schema[table.modelName].fields = {\n        ...schema[table.modelName].fields,\n        ...actualFields\n      };\n      continue;\n    }\n    schema[table.modelName] = {\n      fields: actualFields,\n      order: table.order || Infinity\n    };\n  }\n  return schema;\n}\n\nconst postgresMap = {\n  string: [\"character varying\", \"text\"],\n  number: [\n    \"int4\",\n    \"integer\",\n    \"bigint\",\n    \"smallint\",\n    \"numeric\",\n    \"real\",\n    \"double precision\"\n  ],\n  boolean: [\"bool\", \"boolean\"],\n  date: [\"timestamp\", \"date\"]\n};\nconst mysqlMap = {\n  string: [\"varchar\", \"text\"],\n  number: [\n    \"integer\",\n    \"int\",\n    \"bigint\",\n    \"smallint\",\n    \"decimal\",\n    \"float\",\n    \"double\"\n  ],\n  boolean: [\"boolean\", \"tinyint\"],\n  date: [\"timestamp\", \"datetime\", \"date\"]\n};\nconst sqliteMap = {\n  string: [\"TEXT\"],\n  number: [\"INTEGER\", \"REAL\"],\n  boolean: [\"INTEGER\", \"BOOLEAN\"],\n  // 0 or 1\n  date: [\"DATE\", \"INTEGER\"]\n};\nconst mssqlMap = {\n  string: [\"text\", \"varchar\"],\n  number: [\"int\", \"bigint\", \"smallint\", \"decimal\", \"float\", \"double\"],\n  boolean: [\"bit\", \"smallint\"],\n  date: [\"datetime\", \"date\"]\n};\nconst map = {\n  postgres: postgresMap,\n  mysql: mysqlMap,\n  sqlite: sqliteMap,\n  mssql: mssqlMap\n};\nfunction matchType(columnDataType, fieldType, dbType) {\n  if (fieldType === \"string[]\" || fieldType === \"number[]\") {\n    return columnDataType.toLowerCase().includes(\"json\");\n  }\n  const types = map[dbType];\n  const type = Array.isArray(fieldType) ? types[\"string\"].map((t) => t.toLowerCase()) : types[fieldType].map((t) => t.toLowerCase());\n  const matches = type.includes(columnDataType.toLowerCase());\n  return matches;\n}\nasync function getMigrations(config) {\n  const betterAuthSchema = getSchema(config);\n  const logger = createLogger(config.logger);\n  let { kysely: db, databaseType: dbType } = await createKyselyAdapter(config);\n  if (!dbType) {\n    logger.warn(\n      \"Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this.\"\n    );\n    dbType = \"sqlite\";\n  }\n  if (!db) {\n    logger.error(\n      \"Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter.\"\n    );\n    process.exit(1);\n  }\n  const tableMetadata = await db.introspection.getTables();\n  const toBeCreated = [];\n  const toBeAdded = [];\n  for (const [key, value] of Object.entries(betterAuthSchema)) {\n    const table = tableMetadata.find((t) => t.name === key);\n    if (!table) {\n      const tIndex = toBeCreated.findIndex((t) => t.table === key);\n      const tableData = {\n        table: key,\n        fields: value.fields,\n        order: value.order || Infinity\n      };\n      const insertIndex = toBeCreated.findIndex(\n        (t) => (t.order || Infinity) > tableData.order\n      );\n      if (insertIndex === -1) {\n        if (tIndex === -1) {\n          toBeCreated.push(tableData);\n        } else {\n          toBeCreated[tIndex].fields = {\n            ...toBeCreated[tIndex].fields,\n            ...value.fields\n          };\n        }\n      } else {\n        toBeCreated.splice(insertIndex, 0, tableData);\n      }\n      continue;\n    }\n    let toBeAddedFields = {};\n    for (const [fieldName, field] of Object.entries(value.fields)) {\n      const column = table.columns.find((c) => c.name === fieldName);\n      if (!column) {\n        toBeAddedFields[fieldName] = field;\n        continue;\n      }\n      if (matchType(column.dataType, field.type, dbType)) {\n        continue;\n      } else {\n        logger.warn(\n          `Field ${fieldName} in table ${key} has a different type in the database. Expected ${field.type} but got ${column.dataType}.`\n        );\n      }\n    }\n    if (Object.keys(toBeAddedFields).length > 0) {\n      toBeAdded.push({\n        table: key,\n        fields: toBeAddedFields,\n        order: value.order || Infinity\n      });\n    }\n  }\n  const migrations = [];\n  function getType(field, fieldName) {\n    const type = field.type;\n    const typeMap = {\n      string: {\n        sqlite: \"text\",\n        postgres: \"text\",\n        mysql: field.unique ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\",\n        mssql: field.unique || field.sortable ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\"\n      },\n      boolean: {\n        sqlite: \"integer\",\n        postgres: \"boolean\",\n        mysql: \"boolean\",\n        mssql: \"smallint\"\n      },\n      number: {\n        sqlite: field.bigint ? \"bigint\" : \"integer\",\n        postgres: field.bigint ? \"bigint\" : \"integer\",\n        mysql: field.bigint ? \"bigint\" : \"integer\",\n        mssql: field.bigint ? \"bigint\" : \"integer\"\n      },\n      date: {\n        sqlite: \"date\",\n        postgres: \"timestamp\",\n        mysql: \"datetime\",\n        mssql: \"datetime\"\n      },\n      id: {\n        postgres: config.advanced?.database?.useNumberId ? \"serial\" : \"text\",\n        mysql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        mssql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        sqlite: config.advanced?.database?.useNumberId ? \"integer\" : \"text\"\n      }\n    };\n    if (fieldName === \"id\" || field.references?.field === \"id\") {\n      return typeMap.id[dbType];\n    }\n    if (dbType === \"sqlite\" && (type === \"string[]\" || type === \"number[]\")) {\n      return \"text\";\n    }\n    if (type === \"string[]\" || type === \"number[]\") {\n      return \"jsonb\";\n    }\n    if (Array.isArray(type)) {\n      return \"text\";\n    }\n    return typeMap[type][dbType || \"sqlite\"];\n  }\n  if (toBeAdded.length) {\n    for (const table of toBeAdded) {\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        const exec = db.schema.alterTable(table.table).addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            );\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          return col;\n        });\n        migrations.push(exec);\n      }\n    }\n  }\n  if (toBeCreated.length) {\n    for (const table of toBeCreated) {\n      let dbT = db.schema.createTable(table.table).addColumn(\n        \"id\",\n        config.advanced?.database?.useNumberId ? dbType === \"postgres\" ? \"serial\" : \"integer\" : dbType === \"mysql\" || dbType === \"mssql\" ? \"varchar(36)\" : \"text\",\n        (col) => {\n          if (config.advanced?.database?.useNumberId) {\n            if (dbType === \"postgres\") {\n              return col.primaryKey().notNull();\n            }\n            return col.autoIncrement().primaryKey().notNull();\n          }\n          return col.primaryKey().notNull();\n        }\n      );\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        dbT = dbT.addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            );\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          return col;\n        });\n      }\n      migrations.push(dbT);\n    }\n  }\n  async function runMigrations() {\n    for (const migration of migrations) {\n      await migration.execute();\n    }\n  }\n  async function compileMigrations() {\n    const compiled = migrations.map((m) => m.compile().sql);\n    return compiled.join(\";\\n\\n\") + \";\";\n  }\n  return { toBeCreated, toBeAdded, runMigrations, compileMigrations };\n}\n\nexport { getAdapter as a, convertToDB as b, createInternalAdapter as c, convertFromDB as d, getMigrations as e, getSchema as f, getWithHooks as g, matchType as m };\n", "import { APIError } from 'better-call';\n\nasync function validatePassword(ctx, data) {\n  const accounts = await ctx.context.internalAdapter.findAccounts(data.userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword) {\n    return false;\n  }\n  const compare = await ctx.context.password.verify({\n    hash: currentPassword,\n    password: data.password\n  });\n  return compare;\n}\nasync function checkPassword(userId, c) {\n  const accounts = await c.context.internalAdapter.findAccounts(userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword || !c.body.password) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"No password credential found\"\n    });\n  }\n  const compare = await c.context.password.verify({\n    hash: currentPassword,\n    password: c.body.password\n  });\n  if (!compare) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid password\"\n    });\n  }\n  return true;\n}\n\nexport { checkPassword as c, validatePassword as v };\n", "function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport { capitalizeFirstLetter as c };\n", "import { getEndpoints, router } from './api/index.mjs';\nimport { defu } from 'defu';\nimport { v as verifyPassword, h as hashPassword } from './shared/better-auth.OT3XFeFk.mjs';\nimport { a as getAdapter, c as createInternalAdapter, e as getMigrations } from './shared/better-auth.XjdOGtZf.mjs';\nimport { g as getAuthTables } from './shared/better-auth.DORkW_Ge.mjs';\nimport 'zod';\nimport './shared/better-auth.Cc72UxUH.mjs';\nimport { getCookies, createCookieGetter } from './cookies/index.mjs';\nimport { c as createLogger } from './shared/better-auth.Cqykj82J.mjs';\nexport { a as levels, l as logger, s as shouldPublishLog } from './shared/better-auth.Cqykj82J.mjs';\nimport { socialProviders } from './social-providers/index.mjs';\nimport { g as generateId } from './shared/better-auth.BUPPRXfK.mjs';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha';\nimport '@noble/ciphers/utils';\nimport '@noble/ciphers/webcrypto';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport './shared/better-auth.B4Qoxdgc.mjs';\nimport { e as env, a as isProduction } from './shared/better-auth.8zoxzg-F.mjs';\nimport { c as checkPassword } from './shared/better-auth.YwDQhoPc.mjs';\nimport { a as getBaseURL, g as getOrigin } from './shared/better-auth.VTXNLFMT.mjs';\nimport { B as BetterAuthError } from './shared/better-auth.DdzSJf-n.mjs';\nexport { M as MissingDependencyError } from './shared/better-auth.DdzSJf-n.mjs';\nimport { B as BASE_ERROR_CODES } from './shared/better-auth.Dvh-YFwT.mjs';\nexport { H as HIDE_METADATA } from './shared/better-auth.Dvh-YFwT.mjs';\nexport { c as capitalizeFirstLetter } from './shared/better-auth.D-2CmEwz.mjs';\nexport { g as generateState, p as parseState } from './shared/better-auth.dn8_oqOu.mjs';\nimport './shared/better-auth.iKoUsdFE.mjs';\nimport '@noble/hashes/scrypt';\nimport '@better-auth/utils';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils';\nimport './shared/better-auth.CW6D9eSx.mjs';\nimport './shared/better-auth.tB5eU6EY.mjs';\nimport '@better-auth/utils/random';\nimport './shared/better-auth.Ia_Tf4f9.mjs';\nimport 'kysely';\nimport './shared/better-auth.Dpv9J4ny.mjs';\nimport './shared/better-auth.0TC26uRi.mjs';\nimport './shared/better-auth.Bdaq9Lqn.mjs';\nimport '@better-auth/utils/hmac';\nimport '@better-fetch/fetch';\nimport './shared/better-auth.DufyW0qf.mjs';\nimport './shared/better-auth.DDEbWX-S.mjs';\nimport 'jose/errors';\nimport '@better-auth/utils/binary';\n\nconst DEFAULT_SECRET = \"better-auth-secret-123456789\";\n\nconst init = async (options) => {\n  const adapter = await getAdapter(options);\n  const plugins = options.plugins || [];\n  const internalPlugins = getInternalPlugins(options);\n  const logger = createLogger(options.logger);\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  const secret = options.secret || env.BETTER_AUTH_SECRET || env.AUTH_SECRET || DEFAULT_SECRET;\n  if (secret === DEFAULT_SECRET) {\n    if (isProduction) {\n      logger.error(\n        \"You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config.\"\n      );\n    }\n  }\n  options = {\n    ...options,\n    secret,\n    baseURL: baseURL ? new URL(baseURL).origin : \"\",\n    basePath: options.basePath || \"/api/auth\",\n    plugins: plugins.concat(internalPlugins)\n  };\n  const cookies = getCookies(options);\n  const tables = getAuthTables(options);\n  const providers = Object.keys(options.socialProviders || {}).map((key) => {\n    const value = options.socialProviders?.[key];\n    if (!value || value.enabled === false) {\n      return null;\n    }\n    if (!value.clientId) {\n      logger.warn(\n        `Social provider ${key} is missing clientId or clientSecret`\n      );\n    }\n    const provider = socialProviders[key](\n      value\n      // TODO: fix this\n    );\n    provider.disableImplicitSignUp = value.disableImplicitSignUp;\n    return provider;\n  }).filter((x) => x !== null);\n  const generateIdFunc = ({ model, size }) => {\n    if (typeof options.advanced?.generateId === \"function\") {\n      return options.advanced.generateId({ model, size });\n    }\n    if (typeof options?.advanced?.database?.generateId === \"function\") {\n      return options.advanced.database.generateId({ model, size });\n    }\n    return generateId(size);\n  };\n  const ctx = {\n    appName: options.appName || \"Better Auth\",\n    socialProviders: providers,\n    options,\n    tables,\n    trustedOrigins: getTrustedOrigins(options),\n    baseURL: baseURL || \"\",\n    sessionConfig: {\n      updateAge: options.session?.updateAge !== void 0 ? options.session.updateAge : 24 * 60 * 60,\n      // 24 hours\n      expiresIn: options.session?.expiresIn || 60 * 60 * 24 * 7,\n      // 7 days\n      freshAge: options.session?.freshAge === void 0 ? 60 * 60 * 24 : options.session.freshAge\n    },\n    secret,\n    rateLimit: {\n      ...options.rateLimit,\n      enabled: options.rateLimit?.enabled ?? isProduction,\n      window: options.rateLimit?.window || 10,\n      max: options.rateLimit?.max || 100,\n      storage: options.rateLimit?.storage || (options.secondaryStorage ? \"secondary-storage\" : \"memory\")\n    },\n    authCookies: cookies,\n    logger,\n    generateId: generateIdFunc,\n    session: null,\n    secondaryStorage: options.secondaryStorage,\n    password: {\n      hash: options.emailAndPassword?.password?.hash || hashPassword,\n      verify: options.emailAndPassword?.password?.verify || verifyPassword,\n      config: {\n        minPasswordLength: options.emailAndPassword?.minPasswordLength || 8,\n        maxPasswordLength: options.emailAndPassword?.maxPasswordLength || 128\n      },\n      checkPassword\n    },\n    setNewSession(session) {\n      this.newSession = session;\n    },\n    newSession: null,\n    adapter,\n    internalAdapter: createInternalAdapter(adapter, {\n      options,\n      hooks: options.databaseHooks ? [options.databaseHooks] : []}),\n    createAuthCookie: createCookieGetter(options),\n    async runMigrations() {\n      if (!options.database || \"updateMany\" in options.database) {\n        throw new BetterAuthError(\n          \"Database is not provided or it's an adapter. Migrations are only supported with a database instance.\"\n        );\n      }\n      const { runMigrations } = await getMigrations(options);\n      await runMigrations();\n    }\n  };\n  let { context } = runPluginInit(ctx);\n  return context;\n};\nfunction runPluginInit(ctx) {\n  let options = ctx.options;\n  const plugins = options.plugins || [];\n  let context = ctx;\n  const dbHooks = [];\n  for (const plugin of plugins) {\n    if (plugin.init) {\n      const result = plugin.init(ctx);\n      if (typeof result === \"object\") {\n        if (result.options) {\n          const { databaseHooks, ...restOpts } = result.options;\n          if (databaseHooks) {\n            dbHooks.push(databaseHooks);\n          }\n          options = defu(options, restOpts);\n        }\n        if (result.context) {\n          context = {\n            ...context,\n            ...result.context\n          };\n        }\n      }\n    }\n  }\n  dbHooks.push(options.databaseHooks);\n  context.internalAdapter = createInternalAdapter(ctx.adapter, {\n    options,\n    hooks: dbHooks.filter((u) => u !== void 0),\n    generateId: ctx.generateId\n  });\n  context.options = options;\n  return { context };\n}\nfunction getInternalPlugins(options) {\n  const plugins = [];\n  if (options.advanced?.crossSubDomainCookies?.enabled) ;\n  return plugins;\n}\nfunction getTrustedOrigins(options) {\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  if (!baseURL) {\n    return [];\n  }\n  const trustedOrigins = [new URL(baseURL).origin];\n  if (options.trustedOrigins && Array.isArray(options.trustedOrigins)) {\n    trustedOrigins.push(...options.trustedOrigins);\n  }\n  const envTrustedOrigins = env.BETTER_AUTH_TRUSTED_ORIGINS;\n  if (envTrustedOrigins) {\n    trustedOrigins.push(...envTrustedOrigins.split(\",\"));\n  }\n  return trustedOrigins;\n}\n\nconst betterAuth = (options) => {\n  const authContext = init(options);\n  const { api } = getEndpoints(authContext, options);\n  const errorCodes = options.plugins?.reduce((acc, plugin) => {\n    if (plugin.$ERROR_CODES) {\n      return {\n        ...acc,\n        ...plugin.$ERROR_CODES\n      };\n    }\n    return acc;\n  }, {});\n  return {\n    handler: async (request) => {\n      const ctx = await authContext;\n      const basePath = ctx.options.basePath || \"/api/auth\";\n      if (!ctx.options.baseURL) {\n        const baseURL = getBaseURL(void 0, basePath, request);\n        if (baseURL) {\n          ctx.baseURL = baseURL;\n          ctx.options.baseURL = getOrigin(ctx.baseURL) || void 0;\n        } else {\n          throw new BetterAuthError(\n            \"Could not get base URL from request. Please provide a valid base URL.\"\n          );\n        }\n      }\n      ctx.trustedOrigins = [\n        ...options.trustedOrigins ? Array.isArray(options.trustedOrigins) ? options.trustedOrigins : await options.trustedOrigins(request) : [],\n        ctx.options.baseURL\n      ];\n      const { handler } = router(ctx, options);\n      return handler(request);\n    },\n    api,\n    options,\n    $context: authContext,\n    $Infer: {},\n    $ERROR_CODES: {\n      ...errorCodes,\n      ...BASE_ERROR_CODES\n    }\n  };\n};\n\nexport { BetterAuthError, betterAuth, createLogger, generateId };\n", "/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  const len = lst.length;\n  let Ah = new Uint32Array(len);\n  let Al = new Uint32Array(len);\n  for (let i = 0; i < len; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.ts';\n// prettier-ignore\nimport {\n  abytes, aexists, anumber, aoutput,\n  clean, createHasher, createXOFer, Hash,\n  swap32IfBE,\n  toBytes, u32,\n  type CHash, type CHashXO, type HashXOF, type Input\n} from './utils.ts';\n\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI: number[] = [];\nconst SHA3_ROTL: number[] = [];\nconst _SHA3_IOTA: bigint[] = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s: Uint32Array, rounds: number = 24): void {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta \u03B8\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (\u03C1) and Pi (\u03C0)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (\u03C7)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (\u03B9)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  clean(B);\n}\n\n/** Keccak sponge function. */\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n\n  public blockLen: number;\n  public suffix: number;\n  public outputLen: number;\n  protected enableXOF = false;\n  protected rounds: number;\n\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    blockLen: number,\n    suffix: number,\n    outputLen: number,\n    enableXOF = false,\n    rounds: number = 24\n  ) {\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    // Can be passed from user as dkLen\n    anumber(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    // 0 < blockLen < 200\n    if (!(0 < blockLen && blockLen < 200))\n      throw new Error('only keccak-f1600 function is supported');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  clone(): Keccak {\n    return this._cloneInto();\n  }\n  protected keccak(): void {\n    swap32IfBE(this.state32);\n    keccakP(this.state32, this.rounds);\n    swap32IfBE(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { blockLen, state } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish(): void {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    aexists(this, false);\n    abytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    anumber(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array): Uint8Array {\n    aoutput(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest(): Uint8Array {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy(): void {\n    this.destroyed = true;\n    clean(this.state);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  createHasher(() => new Keccak(blockLen, suffix, outputLen));\n\n/** SHA3-224 hash function. */\nexport const sha3_224: CHash = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256: CHash = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384: CHash = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512: CHash = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n\n/** keccak-224 hash function. */\nexport const keccak_224: CHash = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256: CHash = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384: CHash = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512: CHash = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  createXOFer<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256: CHashXO = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n", "/* global global, window, module */\nconst { sha3_512: sha3 } = require(\"@noble/hashes/sha3\");\n\nconst defaultLength = 24;\nconst bigLength = 32;\n\nconst createEntropy = (length = 4, random = Math.random) => {\n  let entropy = \"\";\n\n  while (entropy.length < length) {\n    entropy = entropy + Math.floor(random() * 36).toString(36);\n  }\n  return entropy;\n};\n\n/*\n * Adapted from https://github.com/juanelas/bigint-conversion\n * MIT License Copyright (c) 2018 Juan Hern\u00E1ndez Serrano\n */\nfunction bufToBigInt(buf) {\n  let bits = 8n;\n\n  let value = 0n;\n  for (const i of buf.values()) {\n    const bi = BigInt(i);\n    value = (value << bits) + bi;\n  }\n  return value;\n}\n\nconst hash = (input = \"\") => {\n  // Drop the first character because it will bias the histogram\n  // to the left.\n  return bufToBigInt(sha3(input)).toString(36).slice(1);\n};\n\nconst alphabet = Array.from({ length: 26 }, (x, i) =>\n  String.fromCharCode(i + 97)\n);\n\nconst randomLetter = (random) =>\n  alphabet[Math.floor(random() * alphabet.length)];\n\n/*\nThis is a fingerprint of the host environment. It is used to help\nprevent collisions when generating ids in a distributed system.\nIf no global object is available, you can pass in your own, or fall back\non a random string.\n*/\nconst createFingerprint = ({\n  globalObj = typeof global !== \"undefined\"\n    ? global\n    : typeof window !== \"undefined\"\n    ? window\n    : {},\n  random = Math.random,\n} = {}) => {\n  const globals = Object.keys(globalObj).toString();\n  const sourceString = globals.length\n    ? globals + createEntropy(bigLength, random)\n    : createEntropy(bigLength, random);\n\n  return hash(sourceString).substring(0, bigLength);\n};\n\nconst createCounter = (count) => () => {\n  return count++;\n};\n\n// ~22k hosts before 50% chance of initial counter collision\n// with a remaining counter range of 9.0e+15 in JavaScript.\nconst initialCountMax = 476782367;\n\nconst init = ({\n  // Fallback if the user does not pass in a CSPRNG. This should be OK\n  // because we don't rely solely on the random number generator for entropy.\n  // We also use the host fingerprint, current time, and a session counter.\n  random = Math.random,\n  counter = createCounter(Math.floor(random() * initialCountMax)),\n  length = defaultLength,\n  fingerprint = createFingerprint({ random }),\n} = {}) => {\n  return function cuid2() {\n    const firstLetter = randomLetter(random);\n\n    // If we're lucky, the `.toString(36)` calls may reduce hashing rounds\n    // by shortening the input to the hash function a little.\n    const time = Date.now().toString(36);\n    const count = counter().toString(36);\n\n    // The salt should be long enough to be globally unique across the full\n    // length of the hash. For simplicity, we use the same length as the\n    // intended id output.\n    const salt = createEntropy(length, random);\n    const hashInput = `${time + salt + count + fingerprint}`;\n\n    return `${firstLetter + hash(hashInput).substring(1, length)}`;\n  };\n};\n\nconst createId = init();\n\nconst isCuid = (id, { minLength = 2, maxLength = bigLength } = {}) => {\n  const length = id.length;\n  const regex = /^[0-9a-z]+$/;\n\n  try {\n    if (\n      typeof id === \"string\" &&\n      length >= minLength &&\n      length <= maxLength &&\n      regex.test(id)\n    )\n      return true;\n  } finally {\n  }\n\n  return false;\n};\n\nmodule.exports.getConstants = () => ({ defaultLength, bigLength });\nmodule.exports.init = init;\nmodule.exports.createId = createId;\nmodule.exports.bufToBigInt = bufToBigInt;\nmodule.exports.createCounter = createCounter;\nmodule.exports.createFingerprint = createFingerprint;\nmodule.exports.isCuid = isCuid;\n", "const { createId, init, getConstants, isCuid } = require(\"./src/index\");\n\nmodule.exports.createId = createId;\nmodule.exports.init = init;\nmodule.exports.getConstants = getConstants;\nmodule.exports.isCuid = isCuid;\n", "// functions/api/utils/db.ts\n// DB\u63A5\u7D9A\u30E6\u30FC\u30C6\u30A3\u30EA\u30C6\u30A3(Web\u5411\u3051\u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\u306E\u307F\u3092\u4F7F\u7528)\nimport { createClient } from '@libsql/client/web';\nimport { LibsqlDialect } from \"@libsql/kysely-libsql\";\nimport { betterAuth } from \"better-auth\";\nimport { createId } from \"@paralleldrive/cuid2\";\nimport type { Env } from '@shared/cloudflare-types';\n\n// \u65E2\u5B58\u306E\u30A4\u30D9\u30F3\u30C8API\u7528\u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\nexport function getDbClient(env: Env | undefined) {\n  if (!env || !env.TURSO_DB_URL || !env.TURSO_DB_AUTH_TOKEN) {\n    throw new Error('Database environment variables are required');\n  }\n\n  return createClient({\n    url: env.TURSO_DB_URL,\n    authToken: env.TURSO_DB_AUTH_TOKEN\n  });\n}\n\n// Better Auth\u7528dialect\nexport function getLibsqlDialect(env: Env) {\n  if (!env.TURSO_DB_URL || !env.TURSO_DB_AUTH_TOKEN) {\n    throw new Error('Database environment variables are required');\n  }\n\n  return new LibsqlDialect({\n    url: env.TURSO_DB_URL,\n    authToken: env.TURSO_DB_AUTH_TOKEN,\n  });\n}\n\n// Better Auth \u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u751F\u6210\uFF08Runtime\u7528\uFF09- \u30C7\u30D5\u30A9\u30EB\u30C8\u30AF\u30C3\u30AD\u30FC\u4F7F\u7528\u7248\nexport function createAuthForRuntime(env: Env) {\n  const dialect = getLibsqlDialect(env);\n  \n  // \u74B0\u5883\u5224\u5B9A\uFF1A\u30ED\u30FC\u30AB\u30EB\u958B\u767A\u74B0\u5883\u304B\u3069\u3046\u304B\n  const isLocalDevelopment = env.ENVIRONMENT === 'development' || \n                            !env.TURSO_DB_URL?.includes('.turso.io');\n  \n  return betterAuth({\n    database: {\n      dialect,\n      type: \"sqlite\",\n    },\n    secret: env.BETTER_AUTH_SECRET || \"dev-secret-min-32-chars\",\n    \n    emailAndPassword: {\n      enabled: true,\n      requireEmailVerification: false,\n      minPasswordLength: 8,\n    },\n    \n    session: {\n      expiresIn: 604800, // 7\u65E5\uFF08\u79D2\uFF09\n      updateAge: 86400,  // 1\u65E5\uFF08\u79D2\uFF09\n      cookieCache: {\n        enabled: true,    // \u30BB\u30C3\u30B7\u30E7\u30F3\u30AF\u30C3\u30AD\u30FC\u30AD\u30E3\u30C3\u30B7\u30E5\u3092\u6709\u52B9\n        maxAge: 300       // 5\u5206\uFF08\u30BB\u30C3\u30B7\u30E7\u30F3\u60C5\u5831\u66F4\u65B0\uFF09\n      },\n      // freshAge: 60 * 60 * 24, // \u30C7\u30D5\u30A9\u30EB\u30C8\u30671\u65E5\n      storeSessionInDatabase: true, // \u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u306B\u30BB\u30C3\u30B7\u30E7\u30F3\u4FDD\u5B58\n    },\n    \n    // \u74B0\u5883\u306B\u5FDC\u3058\u305F\u8A2D\u5B9A\uFF08\u30AF\u30C3\u30AD\u30FC\u8A2D\u5B9A\u306F\u524A\u9664\u3057\u3066\u30C7\u30D5\u30A9\u30EB\u30C8\u4F7F\u7528\uFF09\n    advanced: {\n      crossSubDomainCookies: {\n        enabled: false, // \u5358\u4E00\u30C9\u30E1\u30A4\u30F3\u7528\n      },\n      useSecureCookies: !isLocalDevelopment, // \u672C\u756A\u74B0\u5883\u3067\u306F\u81EA\u52D5\u7684\u306Btrue\n      disableCSRFCheck: false,\n      database: {\n        generateId: () => createId(), // CUID2\u3067ID\u751F\u6210\n      },\n    },\n  });\n}", "// functions/api/utils/auth.ts\nimport { createAuthForRuntime } from './db';\nimport type { Env } from '../../../shared/cloudflare-types';\nimport type { User, Session, Attendee, AttendeeWithUser } from '../../../shared/types';\n\n// User\u578B\u3078\u306E\u5909\u63DB\uFF08\u65E2\u5B58\u306EtransformEventRow\u30D1\u30BF\u30FC\u30F3\u3092\u8E0F\u8972\uFF09\nexport function transformUserRow(row: unknown): User {\n  if (typeof row !== 'object' || row === null) {\n    throw new Error('Invalid user row data');\n  }\n\n  const rowObj = row as Record<string, unknown>;\n\n  return {\n    id: String(rowObj.id ?? ''),\n    email: String(rowObj.email ?? ''),\n    emailVerified: Boolean(rowObj.emailVerified ?? false),\n    name: rowObj.name ? String(rowObj.name) : null,\n    image: rowObj.image ? String(rowObj.image) : null,\n    createdAt: rowObj.createdAt \n      ? new Date(rowObj.createdAt as string) \n      : new Date(),\n    updatedAt: rowObj.updatedAt \n      ? new Date(rowObj.updatedAt as string) \n      : new Date(),\n  };\n}\n\n// Session\u578B\u3078\u306E\u5909\u63DB\nexport function transformSessionRow(row: unknown): Session {\n  if (typeof row !== 'object' || row === null) {\n    throw new Error('Invalid session row data');\n  }\n\n  const rowObj = row as Record<string, unknown>;\n\n  return {\n    id: String(rowObj.id ?? ''),\n    userId: String(rowObj.userId ?? ''),\n    expiresAt: new Date(rowObj.expiresAt as string),\n    user: transformUserRow(rowObj.user || {}), // \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3082\u5909\u63DB\n  };\n}\n\n// Better Auth\u7D50\u679C\u306E\u5B89\u5168\u306A\u62BD\u51FA\nexport function extractUserFromAuthResult(result: unknown): User | null {\n  if (typeof result !== 'object' || result === null) {\n    return null;\n  }\n  \n  const authResult = result as Record<string, unknown>;\n  \n  if (authResult.user) {\n    try {\n      return transformUserRow(authResult.user);\n    } catch {\n      return null;\n    }\n  }\n  \n  return null;\n}\n\nexport function extractSessionFromAuthResult(result: unknown): Session | null {\n  if (typeof result !== 'object' || result === null) {\n    return null;\n  }\n  \n  const authResult = result as Record<string, unknown>;\n  \n  if (authResult.session && authResult.user) {\n    try {\n      // any\u578B\u3092\u56DE\u907F\u3057\u3066\u578B\u5B89\u5168\u306B\u5909\u63DB\n      const sessionObj = authResult.session as Record<string, unknown>;\n      \n      return {\n        id: String(sessionObj.id ?? ''),\n        userId: String(sessionObj.userId ?? ''),\n        expiresAt: new Date(sessionObj.expiresAt as string),\n        user: transformUserRow(authResult.user),\n      };\n    } catch {\n      return null;\n    }\n  }\n  \n  return null;\n}\n\n// Attendee\u578B\u3078\u306E\u5909\u63DB\uFF08\u65E2\u5B58\u306Eattendees\u30C6\u30FC\u30D6\u30EB\u7528\uFF09\nexport function transformAttendeeRow(row: unknown): Attendee {\n  if (typeof row !== 'object' || row === null) {\n    throw new Error('Invalid attendee row data');\n  }\n\n  const rowObj = row as Record<string, unknown>;\n\n  return {\n    id: String(rowObj.id ?? ''),\n    event_id: String(rowObj.event_id ?? ''),\n    email: String(rowObj.email ?? ''),\n    created_at: rowObj.created_at != null ? Number(rowObj.created_at) : Date.now(),\n    user_id: rowObj.user_id ? String(rowObj.user_id) : undefined,\n  };\n}\n\n// \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3068\u7D50\u5408\u3055\u308C\u305FAttendee\u578B\u3078\u306E\u5909\u63DB\nexport function transformAttendeeWithUserRow(row: unknown): AttendeeWithUser {\n  if (typeof row !== 'object' || row === null) {\n    throw new Error('Invalid attendee with user row data');\n  }\n\n  const rowObj = row as Record<string, unknown>;\n  const attendee = transformAttendeeRow(row);\n  \n  // Attendee\u3092AttendeeWithUser\u306B\u62E1\u5F35\n  const attendeeWithUser: AttendeeWithUser = { ...attendee };\n\n  // \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u304C\u3042\u308B\u5834\u5408\u306F\u5909\u63DB\n  if (rowObj.user_name || rowObj.user_email) {\n    attendeeWithUser.user = {\n      id: String(rowObj.user_id ?? ''),\n      email: String(rowObj.user_email ?? ''),\n      emailVerified: Boolean(rowObj.user_emailVerified ?? false),\n      name: rowObj.user_name ? String(rowObj.user_name) : null,\n      image: rowObj.user_image ? String(rowObj.user_image) : null,\n      createdAt: rowObj.user_createdAt \n        ? new Date(rowObj.user_createdAt as string) \n        : new Date(),\n      updatedAt: rowObj.user_updatedAt \n        ? new Date(rowObj.user_updatedAt as string) \n        : new Date(),\n    };\n  }\n\n  return attendeeWithUser;\n}\n\n// \u8A8D\u8A3C\u30A8\u30E9\u30FC\u306E\u51E6\u7406\uFF08\u65E2\u5B58\u306EerrorResponse\u3068\u9023\u643A\uFF09\nexport function createAuthError(message: string, code?: string): Error {\n  const error = new Error(message);\n  error.name = code || 'AuthError';\n  return error;\n}\n\n// \u578B\u30AC\u30FC\u30C9\u95A2\u6570\uFF08\u65E2\u5B58\u30D1\u30BF\u30FC\u30F3\u3092\u8E0F\u8972\uFF09\nexport function isValidUser(user: unknown): user is User {\n  if (typeof user !== 'object' || user === null) {\n    return false;\n  }\n  \n  const obj = user as Record<string, unknown>;\n  return (\n    typeof obj.id === 'string' &&\n    typeof obj.email === 'string' &&\n    typeof obj.emailVerified === 'boolean'\n  );\n}\n\nexport function isValidSession(session: unknown): session is Session {\n  if (typeof session !== 'object' || session === null) {\n    return false;\n  }\n  \n  const obj = session as Record<string, unknown>;\n  return (\n    typeof obj.id === 'string' &&\n    typeof obj.userId === 'string' &&\n    obj.expiresAt instanceof Date &&\n    isValidUser(obj.user)\n  );\n}\n\n// \u30BB\u30C3\u30B7\u30E7\u30F3\u691C\u8A3C\u30D8\u30EB\u30D1\u30FC\nexport function isSessionValid(session: Session): boolean {\n  return session.expiresAt > new Date();\n}\n\n// \u30D1\u30B9\u30EF\u30FC\u30C9\u5F37\u5EA6\u30C1\u30A7\u30C3\u30AF\uFF08\u57FA\u672C\u7248\uFF09\nexport function validatePassword(password: string): {\n  isValid: boolean;\n  errors: string[];\n} {\n  const errors: string[] = [];\n  \n  if (password.length < 8) {\n    errors.push('\u30D1\u30B9\u30EF\u30FC\u30C9\u306F8\u6587\u5B57\u4EE5\u4E0A\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059');\n  }\n  \n  if (password.length > 128) {\n    errors.push('\u30D1\u30B9\u30EF\u30FC\u30C9\u306F128\u6587\u5B57\u4EE5\u4E0B\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n  };\n}\n\n// \u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u691C\u8A3C\nexport function validateEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\n// getCurrentUser\u95A2\u6570\uFF08\u65B0\u898F\u8FFD\u52A0\uFF09\nexport async function getCurrentUser(request: Request, env: Env): Promise<User | null> {\n  try {\n    // \u5B9F\u969B\u306ERuntime\u7528Better Auth\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u4F7F\u7528\n    const auth = createAuthForRuntime(env);\n    \n    // Better Auth\u306E\u30BB\u30C3\u30B7\u30E7\u30F3\u691C\u8A3C\u3092\u4F7F\u7528\n    const sessionResult = await auth.api.getSession({\n      headers: request.headers,\n      asResponse: false, // \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3068\u3057\u3066\u53D6\u5F97\n    });\n\n    if (!sessionResult || !sessionResult.user) {\n      return null;\n    }\n\n    // Better Auth\u306E\u7D50\u679C\u3092\u5B89\u5168\u306BUser\u578B\u306B\u5909\u63DB\n    return extractUserFromAuthResult({ user: sessionResult.user });\n    \n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n}\n", "import type { CreateEventRequest, UpdateEventRequest } from '@shared/types';\n\n// \u65E2\u5B58\u95A2\u6570\uFF08\u4F5C\u6210\u6642\u306E\u5B8C\u5168\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\uFF09\nexport function validateEventData(data: CreateEventRequest): string[] {\n  const errors: string[] = [];\n  \n  if (!data.title?.trim()) {\n    errors.push('\u30BF\u30A4\u30C8\u30EB\u306F\u5FC5\u9808\u3067\u3059');\n  }\n  if (!data.date?.trim()) {\n    errors.push('\u958B\u50AC\u65E5\u6642\u306F\u5FC5\u9808\u3067\u3059');\n  }\n  if (!data.location?.trim()) {\n    errors.push('\u958B\u50AC\u5834\u6240\u306F\u5FC5\u9808\u3067\u3059');\n  }\n  if (data.capacity && data.capacity < 1) {\n    errors.push('\u5B9A\u54E1\u306F1\u4EBA\u4EE5\u4E0A\u306B\u8A2D\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044');\n  }\n  if (data.title && data.title.length > 100) {\n    errors.push('\u30BF\u30A4\u30C8\u30EB\u306F100\u6587\u5B57\u4EE5\u5185\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044');\n  }\n  if (data.description && data.description.length > 1000) {\n    errors.push('\u8AAC\u660E\u306F1000\u6587\u5B57\u4EE5\u5185\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044');\n  }\n  \n  return errors;\n}\n\n// \u65B0\u898F\u8FFD\u52A0\uFF1A\u66F4\u65B0\u6642\u306E\u90E8\u5206\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\nexport function validatePartialEventData(data: UpdateEventRequest): string[] {\n  const errors: string[] = [];\n  \n  // \u7A7A\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u30C1\u30A7\u30C3\u30AF\n  if (Object.keys(data).length === 0) {\n    errors.push('\u66F4\u65B0\u3059\u308B\u9805\u76EE\u304C\u3042\u308A\u307E\u305B\u3093');\n    return errors;\n  }\n  \n  // \u5B9A\u7FA9\u3055\u308C\u3066\u3044\u308B\u30D5\u30A3\u30FC\u30EB\u30C9\u306E\u307F\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\n  if (data.title !== undefined && !data.title.trim()) {\n    errors.push('\u30BF\u30A4\u30C8\u30EB\u306F\u5FC5\u9808\u3067\u3059');\n  }\n  if (data.date !== undefined && !data.date.trim()) {\n    errors.push('\u958B\u50AC\u65E5\u6642\u306F\u5FC5\u9808\u3067\u3059');\n  }\n  if (data.location !== undefined && !data.location.trim()) {\n    errors.push('\u958B\u50AC\u5834\u6240\u306F\u5FC5\u9808\u3067\u3059');\n  }\n  if (data.capacity !== undefined && data.capacity < 1) {\n    errors.push('\u5B9A\u54E1\u306F1\u4EBA\u4EE5\u4E0A\u306B\u8A2D\u5B9A\u3057\u3066\u304F\u3060\u3055\u3044');\n  }\n  if (data.title !== undefined && data.title.length > 100) {\n    errors.push('\u30BF\u30A4\u30C8\u30EB\u306F100\u6587\u5B57\u4EE5\u5185\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044');\n  }\n  if (data.description !== undefined && data.description.length > 1000) {\n    errors.push('\u8AAC\u660E\u306F1000\u6587\u5B57\u4EE5\u5185\u3067\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044');\n  }\n  \n  return errors;\n}", "// functions/api/utils/response.ts (\u62E1\u5F35\u7248)\nimport type { AuthResponse } from '../../../shared/types';\n\n// \u65E2\u5B58\u306E\u30D8\u30EB\u30D1\u30FC\u95A2\u6570\uFF08\u4FDD\u6301\uFF09\nexport function jsonResponse(data: unknown, status = 200) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n\nexport function errorResponse(message: string, status = 500) {\n  return jsonResponse({ error: message }, status);\n}\n\n// \u8A8D\u8A3CAPI\u7528\u306E\u62E1\u5F35\u30D8\u30EB\u30D1\u30FC\u95A2\u6570\uFF08\u65B0\u898F\u8FFD\u52A0\uFF09\nexport function authSuccessResponse(authData: Omit<AuthResponse, 'success'>, status = 200) {\n  const response: AuthResponse = {\n    success: true,\n    ...authData,\n  };\n  return jsonResponse(response, status);\n}\n\nexport function authErrorResponse(message: string, status = 400) {\n  const response: AuthResponse = {\n    success: false,\n    authenticated: false,\n    user: undefined,\n    session: undefined,\n    error: message,\n  };\n  return jsonResponse(response, status);\n}\n\n// \u672A\u8A8D\u8A3C\u30EC\u30B9\u30DD\u30F3\u30B9\u7528\nexport function unauthenticatedResponse(message = '\u8A8D\u8A3C\u3055\u308C\u3066\u3044\u307E\u305B\u3093') {\n  const response: AuthResponse = {\n    success: true,\n    authenticated: false,\n    user: undefined,\n    session: undefined,\n    message,\n  };\n  return jsonResponse(response, 200);\n}", "import { getDbClient } from '../../utils/db';\nimport { getCurrentUser } from '../../utils/auth';\nimport { validatePartialEventData } from '../../utils/event-validation';\nimport { jsonResponse, errorResponse } from '../../utils/response';\nimport type { RequestContext } from '@shared/cloudflare-types';\nimport type { UpdateEventRequest } from '@shared/types';\n\nexport async function onRequest(context: RequestContext) {\n  if (context.request.method !== 'PUT') {\n    return errorResponse('Method not allowed', 405);\n  }\n\n  try {\n    // \u8A8D\u8A3C\u30C1\u30A7\u30C3\u30AF\n    const user = await getCurrentUser(context.request, context.env);\n    if (!user) {\n      return errorResponse('\u8A8D\u8A3C\u304C\u5FC5\u8981\u3067\u3059', 401);\n    }\n\n    // URL\u304B\u3089\u30A4\u30D9\u30F3\u30C8ID\u3092\u53D6\u5F97\n    const url = new URL(context.request.url);\n    const pathParts = url.pathname.split('/');\n    const eventId = pathParts[pathParts.indexOf('events') + 1];\n\n    if (!eventId) {\n      return errorResponse('\u30A4\u30D9\u30F3\u30C8ID\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093', 400);\n    }\n\n    const client = getDbClient(context.env);\n\n    // \u65E2\u5B58\u30A4\u30D9\u30F3\u30C8\u78BA\u8A8D\u3068\u6A29\u9650\u30C1\u30A7\u30C3\u30AF\n    const existingEvent = await client.execute({\n      sql: 'SELECT * FROM events WHERE id = ?',\n      args: [eventId]\n    });\n\n    if (existingEvent.rows.length === 0) {\n      return errorResponse('\u30A4\u30D9\u30F3\u30C8\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093', 404);\n    }\n\n    const event = existingEvent.rows[0];\n    if (event.creator_id !== user.id) {\n      return errorResponse('\u3053\u306E\u30A4\u30D9\u30F3\u30C8\u3092\u7DE8\u96C6\u3059\u308B\u6A29\u9650\u304C\u3042\u308A\u307E\u305B\u3093', 403);\n    }\n\n    const body: UpdateEventRequest = await context.request.json();\n    \n    // \u90E8\u5206\u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\n    const validationErrors = validatePartialEventData(body);\n    if (validationErrors.length > 0) {\n      return errorResponse(validationErrors.join(', '), 400);\n    }\n\n    // \u66F4\u65B0\u5B9F\u884C\uFF08\u56FA\u5B9ASQL - create.ts\u3068\u540C\u3058\u30D1\u30BF\u30FC\u30F3\uFF09\n    await client.execute({\n      sql: `UPDATE events \n            SET title = ?, date = ?, location = ?, description = ?, image_url = ?, capacity = ?\n            WHERE id = ?`,\n      args: [\n        body.title ?? String(event.title),\n        body.date ?? String(event.date),\n        body.location ?? String(event.location),\n        body.description ?? String(event.description || ''),\n        body.image_url ?? (event.image_url ? String(event.image_url) : null),\n        body.capacity ?? (event.capacity ? Number(event.capacity) : null),\n        eventId\n      ]\n    });\n\n    // \u66F4\u65B0\u5F8C\u306E\u30A4\u30D9\u30F3\u30C8\u60C5\u5831\u3092\u53D6\u5F97\n    const updatedEvent = await client.execute({\n      sql: 'SELECT * FROM events WHERE id = ?',\n      args: [eventId]\n    });\n\n    return jsonResponse({ \n      message: '\u30A4\u30D9\u30F3\u30C8\u304C\u66F4\u65B0\u3055\u308C\u307E\u3057\u305F',\n      eventId,\n      event: updatedEvent.rows[0]\n    });\n\n  } catch (error) {\n    console.error('Error updating event:', error);\n    return errorResponse('\u30A4\u30D9\u30F3\u30C8\u306E\u66F4\u65B0\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "// functions/api/auth/session.ts (Better Auth\u5BFE\u5FDC\u7248)\nimport { createAuthForRuntime, getDbClient } from '../utils/db';\nimport { authSuccessResponse, authErrorResponse, unauthenticatedResponse } from '../utils/response';\nimport { APIError } from 'better-auth/api';\nimport type { RequestContext } from '@shared/cloudflare-types';\n\nexport async function onRequest(context: RequestContext) {\n  if (context.request.method !== 'GET') {\n    return authErrorResponse('Method not allowed', 405);\n  }\n\n  try {\n    const auth = createAuthForRuntime(context.env);\n    \n    console.log('=== Better Auth Session Check (Enhanced) ===');\n    \n    // Better Auth \u306EgetSession\u3092\u6539\u5584\u3055\u308C\u305F\u65B9\u6CD5\u3067\u547C\u3073\u51FA\u3057\n    const sessionResult = await auth.api.getSession({\n      headers: context.request.headers,\n      asResponse: false, // \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3068\u3057\u3066\u53D6\u5F97\n    });\n\n    console.log('Better Auth getSession result:', {\n      hasUser: !!sessionResult?.user,\n      hasSession: !!sessionResult?.session,\n      userEmail: sessionResult?.user?.email,\n      sessionId: sessionResult?.session?.id,\n    });\n\n    // Better Auth \u3067\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u53D6\u5F97\u3067\u304D\u305F\u5834\u5408\n    if (sessionResult?.session && sessionResult?.user) {\n      console.log('\u2705 Better Auth session found!');\n      \n      const user = {\n        id: sessionResult.user.id,\n        email: sessionResult.user.email,\n        emailVerified: sessionResult.user.emailVerified,\n        name: sessionResult.user.name || null,\n        image: sessionResult.user.image || null,\n        createdAt: new Date(sessionResult.user.createdAt),\n        updatedAt: new Date(sessionResult.user.updatedAt),\n      };\n\n      const session = {\n        id: sessionResult.session.id,\n        userId: sessionResult.session.userId,\n        expiresAt: new Date(sessionResult.session.expiresAt),\n        user,\n      };\n\n      return authSuccessResponse({\n        authenticated: true,\n        user,\n        session,\n        message: '\u8A8D\u8A3C\u6E08\u307F\u3067\u3059\uFF08Better Auth\uFF09',\n      });\n    }\n\n    // Better Auth \u304C\u5931\u6557\u3057\u305F\u5834\u5408\u306E\u30D5\u30A9\u30FC\u30EB\u30D0\u30C3\u30AF\uFF08\u76F4\u63A5DB\u78BA\u8A8D\uFF09\n    console.log('\u26A0\uFE0F Better Auth session not found, falling back to direct DB check');\n    \n    const cookieHeader = context.request.headers.get('Cookie');\n    \n    let sessionToken = null;\n    if (cookieHeader) {\n      const cookies = cookieHeader.split(';').map(c => c.trim());\n      const sessionCookie = cookies.find(c => c.startsWith('better-auth.session_token='));\n      if (sessionCookie) {\n        sessionToken = sessionCookie.split('=')[1];\n      }\n    }\n    \n    if (!sessionToken) {\n      return unauthenticatedResponse('\u8A8D\u8A3C\u3055\u308C\u3066\u3044\u307E\u305B\u3093');\n    }\n\n    // \u76F4\u63A5\u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u3067\u30BB\u30C3\u30B7\u30E7\u30F3\u78BA\u8A8D\n    console.log('=== Direct DB Session Check (Fallback) ===');\n    const dbClient = getDbClient(context.env);\n    const dbSessionResult = await dbClient.execute({\n      sql: `SELECT \n              s.id as session_id, s.userId, s.token, s.expiresAt,\n              u.id as user_id, u.email, u.emailVerified, u.name, u.image, \n              u.createdAt as user_createdAt, u.updatedAt as user_updatedAt\n            FROM session s \n            JOIN user u ON s.userId = u.id \n            WHERE s.token = ? AND s.expiresAt > datetime(\"now\")`,\n      args: [sessionToken]\n    });\n\n    if (dbSessionResult.rows.length > 0) {\n      const row = dbSessionResult.rows[0];\n      console.log('\u2705 Session found in DB (fallback)');\n      \n      const user = {\n        id: String(row.user_id),\n        email: String(row.email),\n        emailVerified: Boolean(row.emailVerified),\n        name: row.name ? String(row.name) : null,\n        image: row.image ? String(row.image) : null,\n        createdAt: new Date(row.user_createdAt as string),\n        updatedAt: new Date(row.user_updatedAt as string),\n      };\n\n      const session = {\n        id: String(row.session_id),\n        userId: String(row.userId),\n        expiresAt: new Date(row.expiresAt as string),\n        user,\n      };\n\n      return authSuccessResponse({\n        authenticated: true,\n        user,\n        session,\n        message: '\u8A8D\u8A3C\u6E08\u307F\u3067\u3059\uFF08DB\u76F4\u63A5\u78BA\u8A8D\uFF09',\n      });\n    }\n\n    // \u3069\u3061\u3089\u306E\u65B9\u6CD5\u3067\u3082\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u898B\u3064\u304B\u3089\u306A\u3044\u5834\u5408\n    console.log('\u274C No session found');\n    return unauthenticatedResponse('\u30BB\u30C3\u30B7\u30E7\u30F3\u304C\u7121\u52B9\u3067\u3059');\n\n  } catch (error) {\n    console.error('Session check error:', error);\n    \n    // APIError \u306E\u8A73\u7D30\u30ED\u30B0\n    if (error instanceof APIError) {\n      console.log('APIError in getSession:', {\n        status: error.status,\n        statusCode: error.statusCode,\n        message: error.message,\n        body: error.body,\n      });\n    }\n    \n    return authErrorResponse('\u30BB\u30C3\u30B7\u30E7\u30F3\u78BA\u8A8D\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "// functions/api/auth/sign-in.ts (Better Auth\u5BFE\u5FDC\u7248)\nimport { createAuthForRuntime } from '../utils/db';\nimport { authSuccessResponse, authErrorResponse } from '../utils/response';\nimport { validateEmail } from '../utils/auth';\nimport { APIError } from 'better-auth/api';\nimport type { RequestContext } from '@shared/cloudflare-types';\nimport type { LoginCredentials } from '@shared/types';\n\nexport async function onRequest(context: RequestContext) {\n  if (context.request.method !== 'POST') {\n    return authErrorResponse('Method not allowed', 405);\n  }\n\n  try {\n    const auth = createAuthForRuntime(context.env);\n    \n    // \u578B\u5B89\u5168\u306B\u30DC\u30C7\u30A3\u3092\u53D6\u5F97\n    const body = await context.request.json() as LoginCredentials;\n    \n    console.log('Login attempt for:', body.email);\n    \n    // \u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\n    if (!body.email || !body.password) {\n      return authErrorResponse('\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u306F\u5FC5\u9808\u3067\u3059', 400);\n    }\n\n    if (!validateEmail(body.email)) {\n      return authErrorResponse('\u6709\u52B9\u306A\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044', 400);\n    }\n\n    // Better Auth \u306E\u30B5\u30A4\u30F3\u30A4\u30F3\uFF08\u30EC\u30B9\u30DD\u30F3\u30B9\u30D8\u30C3\u30C0\u30FC\u3082\u53D6\u5F97\uFF09\n    console.log('Attempting Better Auth signInEmail with returnHeaders...');\n    \n    const result = await auth.api.signInEmail({\n      body: {\n        email: body.email,\n        password: body.password,\n      },\n      headers: context.request.headers,\n      returnHeaders: true, // \u2190 \u3053\u308C\u304C\u91CD\u8981\uFF01\n    });\n\n    console.log('Better Auth signInEmail result:', {\n      hasResponse: !!result.response,\n      hasUser: !!result.response?.user,\n      userEmail: result.response?.user?.email,\n      hasToken: !!result.response?.token,\n      hasHeaders: !!result.headers,\n    });\n\n    // \u30A8\u30E9\u30FC\u30CF\u30F3\u30C9\u30EA\u30F3\u30B0\n    if (!result?.response || !result.response.user) {\n      return authErrorResponse('\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u307E\u305F\u306F\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u9593\u9055\u3063\u3066\u3044\u307E\u3059', 401);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3092\u5B89\u5168\u306B\u5909\u63DB\n    const user = {\n      id: result.response.user.id,\n      email: result.response.user.email,\n      emailVerified: result.response.user.emailVerified,\n      name: result.response.user.name || null,\n      image: result.response.user.image || null,\n      createdAt: new Date(result.response.user.createdAt),\n      updatedAt: new Date(result.response.user.updatedAt),\n    };\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u60C5\u5831\u306FBetter Auth\u304B\u3089\u76F4\u63A5\u53D6\u5F97\u3067\u304D\u306A\u3044\u305F\u3081\u3001undefined\u306B\u8A2D\u5B9A\n    // \uFF08\u5F8C\u3067\u30BB\u30C3\u30B7\u30E7\u30F3\u78BA\u8A8DAPI\u3067\u53D6\u5F97\u3055\u308C\u308B\uFF09\n    const session = undefined;\n    \n    console.log('Extracted data:', {\n      hasUser: !!user,\n      hasSession: !!session,\n      token: result.response.token?.substring(0, 10) + '...',\n    });\n\n    // \u30EC\u30B9\u30DD\u30F3\u30B9\u4F5C\u6210\n    const response = authSuccessResponse({\n      authenticated: true,\n      user,\n      session,\n      message: '\u30ED\u30B0\u30A4\u30F3\u3057\u307E\u3057\u305F',\n    });\n\n    // Better Auth \u304B\u3089\u306ESet-Cookie\u30D8\u30C3\u30C0\u30FC\u3092\u8EE2\u9001\n    if (result.headers) {\n      const setCookieHeader = result.headers.get('set-cookie');\n      if (setCookieHeader) {\n        console.log('Setting cookies from Better Auth:', setCookieHeader);\n        response.headers.set('Set-Cookie', setCookieHeader);\n      }\n    }\n\n    return response;\n\n  } catch (error) {\n    console.error('Sign in error:', error);\n    \n    // APIError \u306E\u8A73\u7D30\u306A\u30CF\u30F3\u30C9\u30EA\u30F3\u30B0\n    if (error instanceof APIError) {\n      console.log('APIError details:', {\n        status: error.status,\n        statusCode: error.statusCode,\n        message: error.message,\n        body: error.body,\n      });\n      \n      // statusCode\uFF08\u6570\u5024\uFF09\u3067\u5224\u5B9A\n      if (error.statusCode === 401 || \n          error.message.includes('invalid credentials') || \n          error.message.includes('Invalid credentials')) {\n        return authErrorResponse('\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u307E\u305F\u306F\u30D1\u30B9\u30EF\u30FC\u30C9\u304C\u9593\u9055\u3063\u3066\u3044\u307E\u3059', 401);\n      }\n      \n      return authErrorResponse(error.message, error.statusCode || 400);\n    }\n    \n    if (error instanceof Error) {\n      return authErrorResponse(error.message, 400);\n    }\n    \n    return authErrorResponse('\u30ED\u30B0\u30A4\u30F3\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "// functions/api/auth/sign-out.ts (Better Auth\u5BFE\u5FDC\u7248)\nimport { createAuthForRuntime, getDbClient } from '../utils/db';\nimport { authSuccessResponse, authErrorResponse } from '../utils/response';\nimport { APIError } from 'better-auth/api';\nimport type { RequestContext } from '@shared/cloudflare-types';\n\nexport async function onRequest(context: RequestContext) {\n  if (context.request.method !== 'POST') {\n    return authErrorResponse('Method not allowed', 405);\n  }\n\n  try {\n    const auth = createAuthForRuntime(context.env);\n    \n    console.log('=== Better Auth Sign Out (Enhanced) ===');\n    \n    // Better Auth \u306E\u30B5\u30A4\u30F3\u30A2\u30A6\u30C8\uFF08\u30D8\u30C3\u30C0\u30FC\u4ED8\u304D\uFF09\n    const signOutResult = await auth.api.signOut({\n      headers: context.request.headers,\n      returnHeaders: true, // \u2190 \u3053\u308C\u304C\u91CD\u8981\uFF01\n    });\n\n    console.log('Better Auth signOut result:', {\n      success: !!signOutResult,\n      hasHeaders: !!signOutResult?.headers,\n    });\n\n    // \u30EC\u30B9\u30DD\u30F3\u30B9\u4F5C\u6210\n    const response = authSuccessResponse({\n      authenticated: false,\n      user: undefined,\n      session: undefined,\n      message: '\u30ED\u30B0\u30A2\u30A6\u30C8\u3057\u307E\u3057\u305F',\n    });\n\n    // Better Auth \u304B\u3089\u306ESet-Cookie\u30D8\u30C3\u30C0\u30FC\u3092\u8EE2\u9001\uFF08\u30AF\u30C3\u30AD\u30FC\u524A\u9664\u7528\uFF09\n    if (signOutResult?.headers) {\n      const setCookieHeader = signOutResult.headers.get('set-cookie');\n      if (setCookieHeader) {\n        console.log('Setting cookie deletion from Better Auth:', setCookieHeader);\n        response.headers.set('Set-Cookie', setCookieHeader);\n      }\n    } else {\n      // \u30D5\u30A9\u30FC\u30EB\u30D0\u30C3\u30AF: \u624B\u52D5\u3067\u30AF\u30C3\u30AD\u30FC\u3092\u524A\u9664\n      console.log('Fallback: Manual cookie deletion');\n      response.headers.set('Set-Cookie', 'better-auth.session_token=; Path=/; HttpOnly; SameSite=Lax; Max-Age=0');\n    }\n\n    return response;\n\n  } catch (error) {\n    console.error('Sign out error:', error);\n    \n    // APIError \u306E\u5834\u5408\u3067\u3082\u3001\u30D5\u30A9\u30FC\u30EB\u30D0\u30C3\u30AF\u51E6\u7406\u3092\u5B9F\u884C\n    if (error instanceof APIError) {\n      console.log('APIError in signOut, falling back to manual cleanup:', {\n        status: error.status,\n        statusCode: error.statusCode,\n        message: error.message,\n      });\n      \n      // \u30D5\u30A9\u30FC\u30EB\u30D0\u30C3\u30AF: \u76F4\u63A5\u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u304B\u3089\u30BB\u30C3\u30B7\u30E7\u30F3\u524A\u9664\n      try {\n        const cookieHeader = context.request.headers.get('Cookie');\n        let sessionToken = null;\n        \n        if (cookieHeader) {\n          const cookies = cookieHeader.split(';').map(c => c.trim());\n          const sessionCookie = cookies.find(c => c.startsWith('better-auth.session_token='));\n          if (sessionCookie) {\n            sessionToken = sessionCookie.split('=')[1];\n          }\n        }\n\n        if (sessionToken) {\n          const dbClient = getDbClient(context.env);\n          await dbClient.execute({\n            sql: 'DELETE FROM session WHERE token = ?',\n            args: [sessionToken]\n          });\n          console.log('\u2705 Session manually deleted from database');\n        }\n      } catch (dbError) {\n        console.error('Failed to manually delete session:', dbError);\n      }\n    }\n    \n    // \u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u3066\u3082\u30ED\u30B0\u30A2\u30A6\u30C8\u6210\u529F\u3068\u3057\u3066\u6271\u3046\uFF08\u51AA\u7B49\u6027\u306E\u305F\u3081\uFF09\n    const response = authSuccessResponse({\n      authenticated: false,\n      user: undefined,\n      session: undefined,\n      message: '\u30ED\u30B0\u30A2\u30A6\u30C8\u3057\u307E\u3057\u305F',\n    });\n\n    // \u30AF\u30C3\u30AD\u30FC\u524A\u9664\uFF08\u30A8\u30E9\u30FC\u6642\u3082\u5B9F\u884C\uFF09\n    response.headers.set('Set-Cookie', 'better-auth.session_token=; Path=/; HttpOnly; SameSite=Lax; Max-Age=0');\n\n    return response;\n  }\n}", "// functions/api/auth/sign-up.ts (Better Auth\u5BFE\u5FDC\u7248)\nimport { createAuthForRuntime } from '../utils/db';\nimport { authSuccessResponse, authErrorResponse } from '../utils/response';\nimport { validateEmail, validatePassword } from '../utils/auth';\nimport { APIError } from 'better-auth/api';\nimport type { RequestContext } from '@shared/cloudflare-types';\nimport type { RegisterCredentials } from '@shared/types';\n\nexport async function onRequest(context: RequestContext) {\n  if (context.request.method !== 'POST') {\n    return authErrorResponse('Method not allowed', 405);\n  }\n\n  try {\n    const auth = createAuthForRuntime(context.env);\n    \n    // \u578B\u5B89\u5168\u306B\u30DC\u30C7\u30A3\u3092\u53D6\u5F97\n    const body = await context.request.json() as RegisterCredentials;\n    \n    console.log('Registration attempt for:', body.email);\n    \n    // \u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\n    if (!body.email || !body.password || !body.name) {\n      return authErrorResponse('\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3001\u30D1\u30B9\u30EF\u30FC\u30C9\u3001\u540D\u524D\u306F\u5FC5\u9808\u3067\u3059', 400);\n    }\n\n    if (!validateEmail(body.email)) {\n      return authErrorResponse('\u6709\u52B9\u306A\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3092\u5165\u529B\u3057\u3066\u304F\u3060\u3055\u3044', 400);\n    }\n\n    const passwordValidation = validatePassword(body.password);\n    if (!passwordValidation.isValid) {\n      return authErrorResponse(passwordValidation.errors.join(', '), 400);\n    }\n\n    // Better Auth \u306E\u30B5\u30A4\u30F3\u30A2\u30C3\u30D7\uFF08\u30EC\u30B9\u30DD\u30F3\u30B9\u30D8\u30C3\u30C0\u30FC\u3082\u53D6\u5F97\uFF09\n    console.log('Attempting Better Auth signUpEmail with returnHeaders...');\n    \n    const result = await auth.api.signUpEmail({\n      body: {\n        email: body.email,\n        password: body.password,\n        name: body.name,\n      },\n      headers: context.request.headers,\n      returnHeaders: true, // \u2190 \u3053\u308C\u304C\u91CD\u8981\uFF01\n    });\n\n    console.log('Better Auth signUpEmail result:', {\n      hasResponse: !!result.response,\n      hasUser: !!result.response?.user,\n      userEmail: result.response?.user?.email,\n      hasToken: !!result.response?.token,\n      hasHeaders: !!result.headers,\n    });\n\n    // \u30A8\u30E9\u30FC\u30CF\u30F3\u30C9\u30EA\u30F3\u30B0\n    if (!result?.response || !result.response.user) {\n      return authErrorResponse('\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u306B\u5931\u6557\u3057\u307E\u3057\u305F', 400);\n    }\n\n    // \u30E6\u30FC\u30B6\u30FC\u60C5\u5831\u3092\u5B89\u5168\u306B\u5909\u63DB\n    const user = {\n      id: result.response.user.id,\n      email: result.response.user.email,\n      emailVerified: result.response.user.emailVerified,\n      name: result.response.user.name || null,\n      image: result.response.user.image || null,\n      createdAt: new Date(result.response.user.createdAt),\n      updatedAt: new Date(result.response.user.updatedAt),\n    };\n\n    // \u30BB\u30C3\u30B7\u30E7\u30F3\u60C5\u5831\u306FBetter Auth\u304B\u3089\u76F4\u63A5\u53D6\u5F97\u3067\u304D\u306A\u3044\u305F\u3081\u3001undefined\u306B\u8A2D\u5B9A\n    const session = undefined;\n    \n    console.log('Extracted data:', {\n      hasUser: !!user,\n      hasSession: !!session,\n      token: result.response.token?.substring(0, 10) + '...',\n    });\n\n    // \u30EC\u30B9\u30DD\u30F3\u30B9\u4F5C\u6210\n    const response = authSuccessResponse({\n      authenticated: true,\n      user,\n      session,\n      message: '\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F',\n    });\n\n    // Better Auth \u304B\u3089\u306ESet-Cookie\u30D8\u30C3\u30C0\u30FC\u3092\u8EE2\u9001\n    if (result.headers) {\n      const setCookieHeader = result.headers.get('set-cookie');\n      if (setCookieHeader) {\n        console.log('Setting cookies from Better Auth:', setCookieHeader);\n        response.headers.set('Set-Cookie', setCookieHeader);\n      }\n    }\n\n    return response;\n\n  } catch (error) {\n    console.error('Sign up error:', error);\n    \n    // APIError \u306E\u8A73\u7D30\u306A\u30CF\u30F3\u30C9\u30EA\u30F3\u30B0\n    if (error instanceof APIError) {\n      console.log('APIError details:', {\n        status: error.status,\n        statusCode: error.statusCode,\n        message: error.message,\n        body: error.body,\n      });\n      \n      // \u65E2\u5B58\u30E6\u30FC\u30B6\u30FC\u30A8\u30E9\u30FC\u306E\u5224\u5B9A\n      if (error.statusCode === 409 || \n          error.message.includes('already exists') || \n          error.message.includes('duplicate') ||\n          error.message.includes('UNIQUE constraint failed')) {\n        return authErrorResponse('\u3053\u306E\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u306F\u65E2\u306B\u767B\u9332\u3055\u308C\u3066\u3044\u307E\u3059', 409);\n      }\n      \n      return authErrorResponse(error.message, error.statusCode || 400);\n    }\n    \n    if (error instanceof Error) {\n      if (error.message.includes('UNIQUE constraint failed')) {\n        return authErrorResponse('\u3053\u306E\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u306F\u65E2\u306B\u767B\u9332\u3055\u308C\u3066\u3044\u307E\u3059', 409);\n      }\n      return authErrorResponse(error.message, 400);\n    }\n    \n    return authErrorResponse('\u30E6\u30FC\u30B6\u30FC\u767B\u9332\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "import { getDbClient } from '../utils/db';\nimport { getCurrentUser } from '../utils/auth';\nimport { validateEventData } from '../utils/event-validation';\nimport { jsonResponse, errorResponse } from '../utils/response';\nimport type { RequestContext } from '@shared/cloudflare-types';\nimport type { CreateEventRequest } from '@shared/types';\nimport { createId } from '@paralleldrive/cuid2';\n\nexport async function onRequest(context: RequestContext) {\n  if (context.request.method !== 'POST') {\n    return errorResponse('Method not allowed', 405);\n  }\n\n  try {\n    // \u8A8D\u8A3C\u30C1\u30A7\u30C3\u30AF\n    const user = await getCurrentUser(context.request, context.env);\n    if (!user) {\n      return errorResponse('\u8A8D\u8A3C\u304C\u5FC5\u8981\u3067\u3059', 401);\n    }\n\n    const body: CreateEventRequest = await context.request.json();\n    \n    // \u30D0\u30EA\u30C7\u30FC\u30B7\u30E7\u30F3\n    const validationErrors = validateEventData(body);\n    if (validationErrors.length > 0) {\n      return errorResponse(validationErrors.join(', '), 400);\n    }\n\n    const client = getDbClient(context.env);\n    const eventId = createId();\n\n    // \u30A4\u30D9\u30F3\u30C8\u4F5C\u6210\n    await client.execute({\n      sql: `INSERT INTO events (id, title, date, location, description, image_url, capacity, creator_id) \n            VALUES (?, ?, ?, ?, ?, ?, ?, ?)`,\n      args: [\n        eventId,\n        body.title,\n        body.date,\n        body.location,\n        body.description || '',\n        body.image_url || null,\n        body.capacity || null,\n        user.id\n      ]\n    });\n\n    return jsonResponse({ \n      message: '\u30A4\u30D9\u30F3\u30C8\u304C\u4F5C\u6210\u3055\u308C\u307E\u3057\u305F',\n      eventId,\n      event: {\n        id: eventId,\n        ...body,\n        creator_id: user.id,\n        attendees: 0,\n        created_at: Math.floor(Date.now() / 1000)\n      }\n    }, 201);\n\n  } catch (error) {\n    console.error('Error creating event:', error);\n    return errorResponse('\u30A4\u30D9\u30F3\u30C8\u306E\u4F5C\u6210\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "import type { Event } from '@shared/types';\nexport function transformEventRow(row: unknown): Event {\n  // \u578B\u30AC\u30FC\u30C9\u3067\u5B89\u5168\u306B\u5909\u63DB\n  if (typeof row !== 'object' || row === null) {\n    throw new Error('Invalid event row data');\n  }\n  \n  const rowObj = row as Record<string, unknown>;\n\n  // \u30EA\u30C6\u30E9\u30EB\u306E\u6587\u5B57\u5217\"\\n\"\u3092\u5B9F\u969B\u306E\u6539\u884C\u6587\u5B57\u306B\u7F6E\u63DB\n  const description = typeof rowObj?.description === 'string'\n    ? rowObj.description.replace(/\\\\n/g, '\\n')\n    : '';\n  \n  return {\n    id: String(rowObj.id ?? ''),\n    title: String(rowObj.title ?? ''),\n    date: String(rowObj.date ?? ''),\n    location: String(rowObj.location ?? ''),\n    // description: rowObj.description ? String(rowObj.description) : '',\n    description,\n    image_url: rowObj.image_url ? String(rowObj.image_url) : undefined,\n    capacity: rowObj.capacity != null ? Number(rowObj.capacity) : undefined,\n    creator_id: rowObj.creator_id ? String(rowObj.creator_id) : null, //  creator_id \u306E\u51E6\u7406\u3001undefined \u2192 null \u306B\u5909\u66F4\n    created_at: rowObj.created_at != null ? Number(rowObj.created_at) : undefined\n  };\n}", "// \u5358\u4F53\u30A4\u30D9\u30F3\u30C8\u60C5\u5831+\u53C2\u52A0\u8005\u6570\u3092\u53D6\u5F97\nimport { getDbClient } from '../utils/db';\nimport { jsonResponse, errorResponse } from '../utils/response';\nimport { transformEventRow } from '../utils/data';\nimport { RequestContext } from '@shared/cloudflare-types';\n\nexport async function onRequest(context: RequestContext) {\n  try {\n    // URL\u304B\u3089\u30A4\u30D9\u30F3\u30C8ID\u3092\u53D6\u5F97\n    const url = new URL(context.request.url);\n    const id = url.pathname.split('/').pop();\n\n    if (!id) {\n      return errorResponse('\u30A4\u30D9\u30F3\u30C8ID\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093', 400);\n    }\n    \n    const client = getDbClient(context.env);\n    \n    // \u30A4\u30D9\u30F3\u30C8\u60C5\u5831\u3092\u53D6\u5F97\n    const eventResult = await client.execute({\n      sql: 'SELECT * FROM events WHERE id = ?',\n      args: [id]\n    });\n    \n    if (eventResult.rows.length === 0) {\n      return errorResponse('\u30A4\u30D9\u30F3\u30C8\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093', 404);\n    }\n    \n    // \u53C2\u52A0\u8005\u6570\u3092\u53D6\u5F97\n    const attendeesResult = await client.execute({\n      sql: 'SELECT COUNT(*) as count FROM attendees WHERE event_id = ?',\n      args: [id]\n    });\n\n    // \u30A4\u30D9\u30F3\u30C8\u30C7\u30FC\u30BF\u3092\u5B89\u5168\u306B\u5909\u63DB\n    const event = transformEventRow(eventResult.rows[0]);\n\n     // \u53C2\u52A0\u8005\u6570\u3092\u8FFD\u52A0\n    const attendees = Number(attendeesResult.rows[0].count);\n    \n    return jsonResponse({\n      ...event,\n      attendees\n    });\n    \n  } catch (error) {\n    console.error(`Error fetching event:`, error);\n    return errorResponse('\u30A4\u30D9\u30F3\u30C8\u306E\u53D6\u5F97\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "// \u30A4\u30D9\u30F3\u30C8\u60C5\u5831\u4E00\u89A7+\u5404\u53C2\u52A0\u8005\u6570\u3092\u53D6\u5F97\n\nimport { getDbClient } from './utils/db';\nimport { jsonResponse, errorResponse } from './utils/response';\nimport { transformEventRow } from './utils/data';\nimport type { RequestContext } from '@shared/cloudflare-types';\n\nexport async function onRequest(context: RequestContext) {\n  try {\n    const client = getDbClient(context.env);\n    \n    // \u30A4\u30D9\u30F3\u30C8\u30C7\u30FC\u30BF\u306E\u53D6\u5F97\n    const eventsResult = await client.execute('SELECT * FROM events');\n    \n    // \u5404\u30A4\u30D9\u30F3\u30C8\u306E\u53C2\u52A0\u8005\u6570\u3092\u53D6\u5F97\n    const attendeesResult = await client.execute(\n      'SELECT event_id, COUNT(*) as count FROM attendees GROUP BY event_id'\n    );\n\n    // \u53C2\u52A0\u8005\u6570\u3092\u30DE\u30C3\u30D4\u30F3\u30B0 - \u578B\u5B9A\u7FA9\u3092\u8FFD\u52A0\n    const attendeesMap = new Map<string, number>();\n    for (const row of attendeesResult.rows) {\n      // \u6587\u5B57\u5217\u5316\u3057\u3066\u5B89\u5168\u306B\u30A2\u30AF\u30BB\u30B9\u3067\u304D\u308B\u3088\u3046\u306B\u3059\u308B\n      const eventId = String(row.event_id);\n      attendeesMap.set(eventId, Number(row.count));\n    }\n    \n    // \u30A4\u30D9\u30F3\u30C8\u30C7\u30FC\u30BF\u3068\u53C2\u52A0\u8005\u6570\u3092\u7D50\u5408\n    const events = eventsResult.rows.map(row => {\n      const event = transformEventRow(row);\n      const attendees = attendeesMap.get(event.id) || 0;\n      return {\n        ...event,\n        attendees\n      };\n    });\n    \n    return jsonResponse(events);\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    return errorResponse('\u30A4\u30D9\u30F3\u30C8\u306E\u53D6\u5F97\u4E2D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F', 500);\n  }\n}", "import { onRequest as __api_events__id__update_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/events/[id]/update.ts\"\nimport { onRequest as __api_auth_session_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/auth/session.ts\"\nimport { onRequest as __api_auth_sign_in_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/auth/sign-in.ts\"\nimport { onRequest as __api_auth_sign_out_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/auth/sign-out.ts\"\nimport { onRequest as __api_auth_sign_up_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/auth/sign-up.ts\"\nimport { onRequest as __api_events_create_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/events/create.ts\"\nimport { onRequest as __api_events__id__ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/events/[id].ts\"\nimport { onRequest as __api_events_ts_onRequest } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/functions/api/events.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/events/:id/update\",\n      mountPath: \"/api/events/:id\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_events__id__update_ts_onRequest],\n    },\n  {\n      routePath: \"/api/auth/session\",\n      mountPath: \"/api/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_auth_session_ts_onRequest],\n    },\n  {\n      routePath: \"/api/auth/sign-in\",\n      mountPath: \"/api/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_auth_sign_in_ts_onRequest],\n    },\n  {\n      routePath: \"/api/auth/sign-out\",\n      mountPath: \"/api/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_auth_sign_out_ts_onRequest],\n    },\n  {\n      routePath: \"/api/auth/sign-up\",\n      mountPath: \"/api/auth\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_auth_sign_up_ts_onRequest],\n    },\n  {\n      routePath: \"/api/events/create\",\n      mountPath: \"/api/events\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_events_create_ts_onRequest],\n    },\n  {\n      routePath: \"/api/events/:id\",\n      mountPath: \"/api/events\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_events__id__ts_onRequest],\n    },\n  {\n      routePath: \"/api/events\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_events_ts_onRequest],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/.wrangler/tmp/bundle-J26DRA/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/.wrangler/tmp/bundle-J26DRA/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/iwatamini/Desktop/MyPractice/demo-react-event-calendar/.wrangler/tmp/bundle-J26DRA/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/private/tmp/bunx-501-wrangler@latest/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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AA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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",
  "names": ["init", "message", "match", "encodeURI", "u32", "config", "message", "init_util", "tag", "init_decode", "init_util", "array", "init_encode", "init_util", "tag", "init_decode", "init_encode", "freeId", "message", "init_util", "init_util", "error", "sql", "error", "sql", "init_util", "init_cursor", "entry", "error", "init_stream", "init_cursor", "error", "Stmt", "Batch", "BatchStep", "BatchCond", "init_util", "Request", "Stmt", "Batch", "init_json_encode", "init_util", "Stmt", "Value", "NamedArg", "Batch", "BatchStep", "BatchCond", "init_util", "ClientMsg", "Stmt", "Batch", "init_protobuf_encode", "init_util", "Error", "message", "Value", "error", "error", "Error", "Response", "init_json_decode", "Error", "StmtResult", "Col", "BatchResult", "CursorEntry", "DescribeResult", "DescribeParam", "DescribeCol", "Value", "ServerMsg", "init_protobuf_decode", "Error", "StmtResult", "BatchResult", "CursorEntry", "DescribeResult", "init_client", "init_util", "init_stream", "init_json_encode", "init_protobuf_encode", "init_json_decode", "init_protobuf_decode", "ClientMsg", "message", "error", "ServerMsg", "sql", "init_web", "error", "Error", "init_json_decode", "PipelineRespBody", "StreamResult", "StreamResponse", "CursorRespBody", "init_protobuf_decode", "Error", "StmtResult", "BatchResult", "DescribeResult", "init_cursor", "init_decode", "init_util", "init_json_decode", "init_protobuf_decode", "CursorRespBody", "CursorEntry", "error", "Stmt", "Batch", "init_json_encode", "init_util", "PipelineReqBody", "StreamRequest", "CloseStreamReq", "Stmt", "Batch", "CursorReqBody", "init_protobuf_encode", "init_util", "PipelineRespBody", "message", "init_stream", "init_web", "init_util", "init_cursor", "init_json_encode", "init_protobuf_encode", "init_json_decode", "init_protobuf_decode", "sql", "error", "fetch", "PipelineReqBody", "CursorReqBody", "fetch", "init_client", "init_web", "init_stream", "error", "init_client", "init_web", "init_stream", "version", "sql", "error", "map", "config", "WsClient", "promiseLimit", "version", "sql", "_createClient", "config", "HttpClient", "import_promise_limit", "sqlCacheCapacity", "promiseLimit", "version", "sql", "config", "_createClient", "init_web", "LibsqlError", "init_api", "message", "parseUri", "match", "URI_RE", "LibsqlError", "parseAuthority", "percentDecode", "parseQuery", "AUTHORITY_RE", "encodeBaseUrl", "encodeHost", "encodePort", "encodeUserinfo", "init_uri", "init_api", "transactionModeToBegin", "rowToJson", "valueToJson", "supportedUrlLink", "ResultSetImpl", "init_util", "expandConfig", "config", "inMemoryMode", "parseUri", "LibsqlError", "supportedUrlLink", "init_config", "init_api", "init_uri", "init_util", "Client", "init_client", "ClientError", "ProtoError", "ResponseError", "ClosedError", "WebSocketUnsupportedError", "WebSocketError", "HttpServerError", "ProtocolVersionError", "InternalError", "MisuseError", "init_errors", "message", "string", "typeError", "stringOpt", "number", "boolean", "array", "object", "arrayObjectsMap", "ProtoError", "readJsonObject", "init_decode", "init_errors", "writeJsonObject", "ObjectWriter", "init_encode", "VARINT", "FIXED_64", "LENGTH_DELIMITED", "FIXED_32", "init_util", "readProtobufMessage", "MessageReader", "FieldReader", "tag", "init_decode", "init_errors", "init_util", "array", "ProtoError", "LENGTH_DELIMITED", "VARINT", "FIXED_64", "FIXED_32", "writeProtobufMessage", "MessageWriter", "init_encode", "init_util", "tag", "LENGTH_DELIMITED", "VARINT", "FIXED_64", "init_encoding", "init_decode", "init_encode", "IdAlloc", "init_id_alloc", "init_errors", "freeId", "InternalError", "impossible", "message", "InternalError", "init_util", "init_errors", "valueToProto", "minInteger", "maxInteger", "valueFromProto", "MisuseError", "ProtoError", "impossible", "init_value", "init_errors", "init_util", "stmtResultFromProto", "rowsResultFromProto", "rowFromProto", "rowResultFromProto", "valueResultFromProto", "valueFromProto", "errorFromProto", "error", "ResponseError", "init_result", "init_errors", "init_value", "sqlToProto", "sql", "Sql", "init_sql", "init_errors", "MisuseError", "ClosedError", "ClientError", "error", "Queue", "init_queue", "stmtToProto", "Stmt", "valueToProto", "sql", "sqlToProto", "init_stmt", "init_sql", "init_value", "executeRegular", "executeCursor", "ProtoError", "errorFromProto", "impossible", "stepIndex", "MisuseError", "checkCondBatch", "Batch", "BatchStep", "BatchCond", "init_batch", "init_errors", "init_result", "init_stmt", "init_util", "rowsResultFromProto", "rowResultFromProto", "valueResultFromProto", "stmtResultFromProto", "stmtToProto", "describeResultFromProto", "init_describe", "Stream", "init_stream", "init_batch", "init_describe", "init_result", "init_sql", "init_stmt", "rowsResultFromProto", "rowResultFromProto", "valueResultFromProto", "stmtResultFromProto", "stmtToProto", "Batch", "sqlToProto", "describeResultFromProto", "Cursor", "init_cursor", "fetchChunkSize", "fetchQueueSize", "WsCursor", "init_cursor", "init_errors", "init_queue", "Cursor", "Queue", "ClosedError", "entry", "error", "ClientError", "WsStream", "init_stream", "init_errors", "init_queue", "init_cursor", "Stream", "Queue", "InternalError", "ClosedError", "ClientError", "WsCursor", "error", "Stmt", "Value", "NamedArg", "Batch", "BatchStep", "BatchCond", "impossible", "init_json_encode", "init_util", "ClientMsg", "Request", "impossible", "Stmt", "Batch", "init_json_encode", "init_util", "Stmt", "Value", "NamedArg", "Batch", "BatchStep", "BatchCond", "BatchCondList", "Empty", "impossible", "init_protobuf_encode", "init_util", "ClientMsg", "HelloMsg", "RequestMsg", "impossible", "OpenStreamReq", "CloseStreamReq", "ExecuteReq", "BatchReq", "OpenCursorReq", "CloseCursorReq", "FetchCursorReq", "SequenceReq", "DescribeReq", "StoreSqlReq", "CloseSqlReq", "GetAutocommitReq", "Stmt", "Batch", "init_protobuf_encode", "init_util", "Error", "message", "string", "stringOpt", "StmtResult", "arrayObjectsMap", "Col", "array", "Value", "number", "BatchResult", "object", "CursorEntry", "error", "ProtoError", "DescribeResult", "DescribeParam", "DescribeCol", "boolean", "init_json_decode", "init_errors", "init_decode", "ServerMsg", "string", "error", "Error", "object", "number", "Response", "ProtoError", "StmtResult", "BatchResult", "arrayObjectsMap", "CursorEntry", "boolean", "DescribeResult", "init_json_decode", "init_errors", "init_decode", "Error", "StmtResult", "Col", "Row", "BatchResult", "BatchResultStepResult", "BatchResultStepError", "CursorEntry", "StepBeginEntry", "StepEndEntry", "StepErrorEntry", "DescribeResult", "DescribeParam", "DescribeCol", "Value", "init_protobuf_decode", "ServerMsg", "HelloErrorMsg", "ResponseErrorMsg", "ResponseOkMsg", "ExecuteResp", "BatchResp", "FetchCursorResp", "DescribeResp", "GetAutocommitResp", "init_protobuf_decode", "Error", "StmtResult", "BatchResult", "CursorEntry", "DescribeResult", "subprotocolsV2", "subprotocolsV3", "WsClient", "init_client", "init_encoding", "init_errors", "init_id_alloc", "init_result", "init_sql", "init_util", "init_stream", "init_json_encode", "init_protobuf_encode", "init_json_decode", "init_protobuf_decode", "Client", "IdAlloc", "InternalError", "ClientError", "ProtoError", "writeJsonObject", "ClientMsg", "writeProtobufMessage", "impossible", "ProtocolVersionError", "ClosedError", "message", "WebSocketError", "error", "readJsonObject", "ServerMsg", "readProtobufMessage", "errorFromProto", "WsStream", "sql", "Sql", "_fetch", "_Request", "_Headers", "init_web", "_queueMicrotask", "init_queue_microtask", "ByteQueue", "init_byte_queue", "PipelineRespBody", "stringOpt", "arrayObjectsMap", "StreamResult", "string", "StreamResponse", "object", "error", "Error", "ProtoError", "StmtResult", "BatchResult", "DescribeResult", "boolean", "CursorRespBody", "init_json_decode", "init_errors", "init_decode", "PipelineRespBody", "StreamResult", "StreamResponse", "ExecuteStreamResp", "BatchStreamResp", "DescribeStreamResp", "GetAutocommitStreamResp", "CursorRespBody", "init_protobuf_decode", "Error", "StmtResult", "BatchResult", "DescribeResult", "HttpCursor", "init_cursor", "init_byte_queue", "init_decode", "init_errors", "init_util", "init_json_decode", "init_protobuf_decode", "Cursor", "ByteQueue", "ProtoError", "CursorRespBody", "CursorEntry", "ClientError", "error", "ClosedError", "readJsonObject", "readProtobufMessage", "impossible", "InternalError", "PipelineReqBody", "StreamRequest", "Stmt", "Batch", "impossible", "CursorReqBody", "init_json_encode", "init_util", "PipelineReqBody", "StreamRequest", "CloseStreamReq", "ExecuteStreamReq", "BatchStreamReq", "SequenceStreamReq", "DescribeStreamReq", "StoreSqlStreamReq", "CloseSqlStreamReq", "GetAutocommitStreamReq", "impossible", "Stmt", "Batch", "CursorReqBody", "init_protobuf_encode", "init_util", "handlePipelineResponse", "ProtoError", "errorFromProto", "impossible", "decodePipelineResponse", "readJsonObject", "PipelineRespBody", "readProtobufMessage", "errorFromResponse", "message", "HttpServerError", "HttpStream", "init_stream", "init_web", "init_errors", "init_encoding", "init_id_alloc", "init_queue", "init_queue_microtask", "init_result", "init_sql", "init_util", "init_cursor", "init_json_encode", "init_protobuf_encode", "init_json_decode", "init_protobuf_decode", "Stream", "Queue", "IdAlloc", "sql", "error", "Sql", "InternalError", "_queueMicrotask", "ClientError", "ClosedError", "HttpCursor", "fetch", "PipelineReqBody", "ProtocolVersionError", "CursorReqBody", "writeJsonObject", "writeProtobufMessage", "_Headers", "_Request", "findEndpoint", "fetch", "checkEndpoints", "_Request", "fallbackEndpoint", "HttpClient", "init_client", "init_web", "init_errors", "init_stream", "Client", "_fetch", "error", "ProtocolVersionError", "ClosedError", "HttpStream", "ClientError", "init_libsql_url", "init_errors", "openWs", "WebSocketUnsupportedError", "subprotocolsV3", "subprotocolsV2", "WsClient", "openHttp", "HttpClient", "init_lib_esm", "init_client", "init_errors", "init_web", "init_batch", "init_libsql_url", "init_sql", "init_stmt", "init_stream", "executeHranaBatch", "version", "transactionModeToBegin", "BatchCond", "LibsqlError", "resultSetFromHrana", "stmtToHrana", "Stmt", "ResultSetImpl", "mapHranaError", "ClientError", "mapHranaErrorCode", "ResponseError", "ProtoError", "ClosedError", "WebSocketError", "HttpServerError", "ProtocolVersionError", "InternalError", "HranaTransaction", "init_hrana", "init_lib_esm", "init_api", "init_util", "sql", "SqlCache", "Lru", "init_sql_cache", "_createClient", "config", "LibsqlError", "supportedUrlLink", "encodeBaseUrl", "openWs", "WebSocketUnsupportedError", "mapHranaError", "WsClient", "import_promise_limit", "maxConnAgeMillis", "sqlCacheCapacity", "WsTransaction", "init_ws", "init_lib_esm", "init_api", "init_config", "init_hrana", "init_sql_cache", "init_uri", "init_util", "promiseLimit", "stmtToHrana", "resultSetFromHrana", "version", "executeHranaBatch", "sql", "SqlCache", "HranaTransaction", "_createClient", "config", "LibsqlError", "supportedUrlLink", "encodeBaseUrl", "HttpClient", "import_promise_limit", "sqlCacheCapacity", "HttpTransaction", "init_http", "init_lib_esm", "init_api", "init_config", "init_hrana", "init_sql_cache", "init_uri", "init_util", "openHttp", "promiseLimit", "stmtToHrana", "resultSetFromHrana", "mapHranaError", "version", "SqlCache", "executeHranaBatch", "sql", "HranaTransaction", "createClient", "config", "_createClient", "expandConfig", "LibsqlError", "supportedUrlLink", "init_web", "init_api", "init_config", "init_util", "init_ws", "init_http", "schema", "schema", "schema", "schema", "sql", "message", "schema", "fetch", "error", "error", "error", "schema", "schema", "error", "schema", "error", "binary", "schema", "trim", "schema", "createView", "trim", "createView", "schema", "error", "config", "schema", "error", "init_sql", "sql", "array", "sql", "config", "sql", "init_sql", "sql", "config", "ID_WRAP_REGEX", "init_sql", "init_sql", "sql", "ID_WRAP_REGEX", "init_sql", "LOCK_ID", "init_sql", "config", "PRIVATE_RELEASE_METHOD", "config", "sql", "config", "init_sql", "config", "error", "config", "init_sql", "init_lib_esm", "init_web", "config", "createClient", "array", "match", "error", "init", "message", "errorMap", "version", "base64", "schema", "config", "createEndpoint", "isValid", "createRouter", "options", "headers", "util", "object", "array", "objectUtil", "map", "errorUtil", "transform", "ctx", "result", "issues", "types", "elements", "processed", "freeze", "ZodFirstPartyTypeKind", "router", "methods", "util", "objectUtil", "ZodParsedType", "getParsedType", "init_util", "object", "array", "ZodIssueCode", "ZodError", "init_util", "util", "_ZodError", "error", "errorMap", "init_util", "message", "ZodIssueCode", "ZodParsedType", "util", "map", "overrideErrorMap", "getErrorMap", "init_errors", "addIssueToContext", "getErrorMap", "makeIssue", "ParseStatus", "INVALID", "DIRTY", "OK", "isAborted", "isDirty", "isValid", "isAsync", "init_errors", "map", "_ParseStatus", "errorUtil", "message", "processCreateParams", "errorMap", "message", "timeRegexSource", "timeRegex", "datetimeRegex", "dateRegexSource", "isValidIP", "version", "ipv4Regex", "ipv6Regex", "isValidJWT", "jwtRegex", "base64", "isValidCidr", "ipv4CidrRegex", "ipv6CidrRegex", "floatSafeRemainder", "deepPartialify", "schema", "ZodObject", "ZodOptional", "ZodArray", "ZodNullable", "ZodTuple", "mergeValues", "getParsedType", "ZodParsedType", "util", "createZodEnum", "ZodEnum", "ZodFirstPartyTypeKind", "ZodAny", "r", "__classPrivateFieldGet", "__classPrivateFieldSet", "_ZodEnum_cache", "_ZodNativeEnum_cache", "ParseInputLazyPath", "handleResult", "ZodType", "cuidRegex", "cuid2Regex", "ulidRegex", "uuidRegex", "nanoidRegex", "durationRegex", "emailRegex", "_emojiRegex", "emojiRegex", "base64Regex", "base64urlRegex", "dateRegex", "ZodString", "ZodNumber", "ZodBigInt", "ZodBoolean", "ZodDate", "ZodSymbol", "ZodUndefined", "ZodNull", "ZodUnknown", "ZodNever", "ZodVoid", "ZodUnion", "getDiscriminator", "ZodDiscriminatedUnion", "ZodIntersection", "ZodRecord", "ZodMap", "ZodSet", "ZodFunction", "ZodLazy", "ZodLiteral", "ZodNativeEnum", "ZodPromise", "ZodEffects", "ZodDefault", "ZodCatch", "ZodNaN", "BRAND", "ZodBranded", "ZodPipeline", "ZodReadonly", "late", "stringType", "numberType", "nanType", "bigIntType", "booleanType", "dateType", "symbolType", "undefinedType", "nullType", "anyType", "unknownType", "neverType", "voidType", "arrayType", "objectType", "strictObjectType", "unionType", "discriminatedUnionType", "intersectionType", "tupleType", "recordType", "mapType", "setType", "functionType", "lazyType", "literalType", "enumType", "nativeEnumType", "promiseType", "effectsType", "optionalType", "nullableType", "preprocessType", "pipelineType", "init_errors", "init_util", "isValid", "error", "ZodError", "ParseStatus", "isAsync", "ZodIssueCode", "transform", "_ZodString", "ctx", "addIssueToContext", "INVALID", "errorUtil", "_ZodNumber", "_ZodBigInt", "OK", "_ZodDate", "_ZodArray", "result", "_ZodObject", "issues", "types", "_ZodDiscriminatedUnion", "isAborted", "isDirty", "_ZodTuple", "_ZodRecord", "_ZodSet", "elements", "_ZodFunction", "makeIssue", "getErrorMap", "_ZodEnum", "processed", "DIRTY", "_ZodPipeline", "freeze", "BRAND", "DIRTY", "INVALID", "OK", "ParseStatus", "ZodType", "ZodAny", "ZodArray", "ZodBigInt", "ZodBoolean", "ZodBranded", "ZodCatch", "ZodDate", "ZodDefault", "ZodDiscriminatedUnion", "ZodEffects", "ZodEnum", "ZodError", "ZodFirstPartyTypeKind", "ZodFunction", "ZodIntersection", "ZodIssueCode", "ZodLazy", "ZodLiteral", "ZodMap", "ZodNaN", "ZodNativeEnum", "ZodNever", "ZodNull", "ZodNullable", "ZodNumber", "ZodObject", "ZodOptional", "ZodParsedType", "ZodPipeline", "ZodPromise", "ZodReadonly", "ZodRecord", "ZodSet", "ZodString", "ZodSymbol", "ZodTuple", "ZodUndefined", "ZodUnion", "ZodUnknown", "ZodVoid", "addIssueToContext", "anyType", "arrayType", "bigIntType", "booleanType", "dateType", "datetimeRegex", "discriminatedUnionType", "effectsType", "enumType", "functionType", "getErrorMap", "getParsedType", "intersectionType", "isAborted", "isAsync", "isDirty", "isValid", "late", "lazyType", "literalType", "makeIssue", "mapType", "nanType", "nativeEnumType", "neverType", "nullType", "nullableType", "numberType", "objectType", "objectUtil", "optionalType", "pipelineType", "preprocessType", "promiseType", "recordType", "setType", "strictObjectType", "stringType", "symbolType", "tupleType", "undefinedType", "unionType", "unknownType", "util", "voidType", "init_errors", "init_util", "init_esm", "message", "init_base64", "init_base64", "algorithm", "hmac", "error", "init_base64", "match", "error", "isJSONSerializable", "isFunction", "getBody", "schema", "getURL", "message", "fetch", "onRequest", "clearTimeout", "parser", "encode", "decode", "binary", "init_errors", "message", "algorithm", "types", "isObject", "isObject", "algorithm", "init_errors", "decode", "freeze", "isObject", "decode", "init_errors", "init_errors", "algorithm", "init_errors", "getCryptoKey", "getCryptoKey", "algorithm", "isObject", "decode", "init_verify", "init_errors", "init_verify", "init_errors", "init_errors", "isObject", "init_verify", "init_errors", "getCryptoKey", "init_sign", "init_errors", "encode", "init_sign", "isObject", "init_sign", "init_errors", "isObject", "init_errors", "jwk", "error", "init_errors", "isObject", "init_errors", "VERSION", "decode", "init_base64url", "decode", "isObject", "init_base64url", "decode", "isObject", "init_base64url", "init_errors", "init_verify", "init_sign", "init_errors", "init_base64url", "algorithm", "encoder", "init_base64", "error", "refreshToken", "init_base64", "init_dist", "hex", "array", "init_hmac", "message", "init_hmac", "isLE", "init_dist", "message", "init_dist", "init_base64", "init_esm", "refreshToken", "error", "isValid", "init_esm", "init_dist", "init_base64", "schema", "init_esm", "init_dist", "object", "encoder", "decoder", "init_esm", "init_dist", "init_base64", "init_errors", "isValid", "error", "config", "schema", "error2", "revokeOtherSessions", "verify", "isValidIP", "ipv4Regex", "ipv6Regex", "window", "isMatch", "init_api", "init_dist", "init_esm", "init_base64", "createRouter", "init_dist", "schema", "colors", "init_esm", "init_dist", "init_base64", "config", "schema", "config", "schema", "config", "isObject", "config", "schema", "types", "logger", "init_esm", "init_dist", "init_base64", "init_dist", "init_dist", "init_api", "init_esm", "init_base64", "logger", "isBytes", "anumber", "abytes", "ahash", "aexists", "aoutput", "u32", "clean", "createView", "rotr", "rotl", "byteSwap", "byteSwap32", "hexToBytes", "asyncLoop", "utf8ToBytes", "toBytes", "kdfInputToBytes", "checkOpts", "createHasher", "hasHexBuiltin", "hex", "asciis", "asciiToBase16", "array", "nextTick", "Hash", "init", "createId", "createId", "init", "env", "init_web", "init_lib_esm", "init_dist", "emailRegex", "env", "error", "message", "error", "onRequest", "error", "init_api", "onRequest", "error", "init_api", "onRequest", "error", "init_api", "onRequest", "error", "init_api", "onRequest", "error", "import_cuid2", "onRequest", "error", "onRequest", "error", "onRequest", "parse", "value", "_a", "result", "char", "prefix", "decode", "i", "paths", "parse", "encode", "env", "init", "error", "env", "env", "error", "env", "env", "init"]
}
